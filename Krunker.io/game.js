//CHEAT
//Toggles
var module_esp_toggle = false;
var module_triggerbot_toggle = false;

console.log("[!] Key Responder Made with " + String.fromCodePoint(10084) + " by Xploit @Hackedarcadegames.com [!]");
class Responder {
    constructor(e, o, r = !1, t = !1) {
        try {
            if ("number" != typeof e) throw "[Key Responder] parameter (1) is not of type 'number'.";
            if (this.responseKey = e, "function" != typeof o) throw "[Key Responder] parameter (2) is not of type 'function'.";
            if (this.callback = o, "boolean" != typeof r) throw "[Key Responder] parameter (3) is not of type 'Boolean'.";
            if (this.toggler = r, "boolean" != typeof t) throw "[Key Responder] parameter (4) is not of type 'Boolean'.";
            this.active = t, this.response = null, this.interval = 700
        } catch (e) {
            console.error("Error : " + e)
        } finally {
            var n = this;
            null != n.responseKey && "undefined" != n.responseKey && null != n.callback && "undefined" != n.callback && (console.log("A Responder for key code " + n.responseKey + " has been initiated"), $(window).on("keyup", function(e) {
                if (!0 === n.toggler) switch (e.keyCode || e.which) {
                    case n.responseKey:
                        !1 === n.active ? (n.active = !0, n.response = setInterval(n.callback, n.interval)) : (clearInterval(n.response), n.active = !1);
                        break;
                    default:
                        return
                } else switch (e.keyCode || e.which) {
                    case n.responseKey:
                        n.callback();
                        break;
                    default:
                        return
                }
            }))
        }
    }
}

let module_esp_response = new Responder(96, () => {
    module_esp_toggle = !module_esp_toggle;
    console.log("Toggled esp.");
}, false);

let module_triggerbot_response = new Responder(97, () =>{
    module_triggerbot_toggle = !module_triggerbot_toggle;
    console.log("Toggled triggerbot.");
}, false);

///CHEAT
! function(t) {
    var e = {};

    function i(n) {
        if (e[n]) return e[n].exports;
        var r = e[n] = {
            i: n,
            l: !1,
            exports: {}
        };
        return t[n].call(r.exports, r, r.exports, i), r.l = !0, r.exports
    }
    i.m = t, i.c = e, i.d = function(t, e, n) {
        i.o(t, e) || Object.defineProperty(t, e, {
            enumerable: !0,
            get: n
        })
    }, i.r = function(t) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
            value: "Module"
        }), Object.defineProperty(t, "__esModule", {
            value: !0
        })
    }, i.t = function(t, e) {
        if (1 & e && (t = i(t)), 8 & e) return t;
        if (4 & e && "object" == typeof t && t && t.__esModule) return t;
        var n = Object.create(null);
        if (i.r(n), Object.defineProperty(n, "default", {
                enumerable: !0,
                value: t
            }), 2 & e && "string" != typeof t)
            for (var r in t) i.d(n, r, function(e) {
                return t[e]
            }.bind(null, r));
        return n
    }, i.n = function(t) {
        var e = t && t.__esModule ? function() {
            return t.default
        } : function() {
            return t
        };
        return i.d(e, "a", e), e
    }, i.o = function(t, e) {
        return Object.prototype.hasOwnProperty.call(t, e)
    }, i.p = "", i(i.s = 75)
}([function(t, e, i) {
    var n = e.global = i(27),
        r = e.hasBuffer = n && !!n.isBuffer,
        s = e.hasArrayBuffer = "undefined" != typeof ArrayBuffer,
        o = e.isArray = i(4);
    e.isArrayBuffer = s ? function(t) {
        return t instanceof ArrayBuffer || f(t)
    } : g;
    var a = e.isBuffer = r ? n.isBuffer : g,
        c = e.isView = s ? ArrayBuffer.isView || v("ArrayBuffer", "buffer") : g;
    e.alloc = d, e.concat = function(t, i) {
        i || (i = 0, Array.prototype.forEach.call(t, function(t) {
            i += t.length
        }));
        var n = this !== e && this || t[0],
            r = d.call(n, i),
            s = 0;
        return Array.prototype.forEach.call(t, function(t) {
            s += u.copy.call(t, r, s)
        }), r
    }, e.from = function(t) {
        return "string" == typeof t ? function(t) {
            var e = 3 * t.length,
                i = d.call(this, e),
                n = u.write.call(i, t);
            return e !== n && (i = u.slice.call(i, 0, n)), i
        }.call(this, t) : m(this).from(t)
    };
    var l = e.Array = i(29),
        p = e.Buffer = i(30),
        h = e.Uint8Array = i(31),
        u = e.prototype = i(9);

    function d(t) {
        return m(this).alloc(t)
    }
    var f = v("ArrayBuffer");

    function m(t) {
        return a(t) ? p : c(t) ? h : o(t) ? l : r ? p : s ? h : l
    }

    function g() {
        return !1
    }

    function v(t, e) {
        return t = "[object " + t + "]",
            function(i) {
                return null != i && {}.toString.call(e ? i[e] : i) === t
            }
    }
}, function(t, e, i) {
    function n() {}
    i.r(e), i.d(e, "WebGLRenderTargetCube", function() {
        return li
    }), i.d(e, "WebGLRenderTarget", function() {
        return ci
    }), i.d(e, "WebGLRenderer", function() {
        return cs
    }), i.d(e, "ShaderLib", function() {
        return Mi
    }), i.d(e, "UniformsLib", function() {
        return bi
    }), i.d(e, "UniformsUtils", function() {
        return vi
    }), i.d(e, "ShaderChunk", function() {
        return gi
    }), i.d(e, "FogExp2", function() {
        return ls
    }), i.d(e, "Fog", function() {
        return ps
    }), i.d(e, "Scene", function() {
        return hs
    }), i.d(e, "Sprite", function() {
        return ms
    }), i.d(e, "LOD", function() {
        return gs
    }), i.d(e, "SkinnedMesh", function() {
        return xs
    }), i.d(e, "Skeleton", function() {
        return vs
    }), i.d(e, "Bone", function() {
        return ys
    }), i.d(e, "Mesh", function() {
        return Mn
    }), i.d(e, "LineSegments", function() {
        return Ms
    }), i.d(e, "LineLoop", function() {
        return Ss
    }), i.d(e, "Line", function() {
        return bs
    }), i.d(e, "Points", function() {
        return Ts
    }), i.d(e, "Group", function() {
        return ns
    }), i.d(e, "VideoTexture", function() {
        return Es
    }), i.d(e, "DataTexture", function() {
        return pi
    }), i.d(e, "CompressedTexture", function() {
        return As
    }), i.d(e, "CubeTexture", function() {
        return On
    }), i.d(e, "CanvasTexture", function() {
        return Ls
    }), i.d(e, "DepthTexture", function() {
        return ks
    }), i.d(e, "Texture", function() {
        return oi
    }), i.d(e, "CompressedTextureLoader", function() {
        return sa
    }), i.d(e, "DataTextureLoader", function() {
        return oa
    }), i.d(e, "CubeTextureLoader", function() {
        return ca
    }), i.d(e, "TextureLoader", function() {
        return la
    }), i.d(e, "ObjectLoader", function() {
        return fc
    }), i.d(e, "MaterialLoader", function() {
        return rc
    }), i.d(e, "BufferGeometryLoader", function() {
        return sc
    }), i.d(e, "DefaultLoadingManager", function() {
        return ia
    }), i.d(e, "LoadingManager", function() {
        return ea
    }), i.d(e, "JSONLoader", function() {
        return dc
    }), i.d(e, "ImageLoader", function() {
        return aa
    }), i.d(e, "ImageBitmapLoader", function() {
        return xc
    }), i.d(e, "FontLoader", function() {
        return Sc
    }), i.d(e, "FileLoader", function() {
        return ra
    }), i.d(e, "Loader", function() {
        return hc
    }), i.d(e, "LoaderUtils", function() {
        return uc
    }), i.d(e, "Cache", function() {
        return ta
    }), i.d(e, "AudioLoader", function() {
        return Dc
    }), i.d(e, "SpotLightShadow", function() {
        return Ba
    }), i.d(e, "SpotLight", function() {
        return za
    }), i.d(e, "PointLight", function() {
        return Na
    }), i.d(e, "RectAreaLight", function() {
        return ja
    }), i.d(e, "HemisphereLight", function() {
        return Oa
    }), i.d(e, "DirectionalLightShadow", function() {
        return Ua
    }), i.d(e, "DirectionalLight", function() {
        return Fa
    }), i.d(e, "AmbientLight", function() {
        return Ha
    }), i.d(e, "LightShadow", function() {
        return Da
    }), i.d(e, "Light", function() {
        return Ia
    }), i.d(e, "StereoCamera", function() {
        return Bc
    }), i.d(e, "PerspectiveCamera", function() {
        return rs
    }), i.d(e, "OrthographicCamera", function() {
        return Oi
    }), i.d(e, "CubeCamera", function() {
        return zc
    }), i.d(e, "ArrayCamera", function() {
        return ss
    }), i.d(e, "Camera", function() {
        return Ii
    }), i.d(e, "AudioListener", function() {
        return Nc
    }), i.d(e, "PositionalAudio", function() {
        return Fc
    }), i.d(e, "AudioContext", function() {
        return Oc
    }), i.d(e, "AudioAnalyser", function() {
        return Hc
    }), i.d(e, "Audio", function() {
        return Uc
    }), i.d(e, "VectorKeyframeTrack", function() {
        return ec
    }), i.d(e, "StringKeyframeTrack", function() {
        return tc
    }), i.d(e, "QuaternionKeyframeTrack", function() {
        return $a
    }), i.d(e, "NumberKeyframeTrack", function() {
        return Ja
    }), i.d(e, "ColorKeyframeTrack", function() {
        return Ka
    }), i.d(e, "BooleanKeyframeTrack", function() {
        return Za
    }), i.d(e, "PropertyMixer", function() {
        return jc
    }), i.d(e, "PropertyBinding", function() {
        return sl
    }), i.d(e, "KeyframeTrack", function() {
        return qa
    }), i.d(e, "AnimationUtils", function() {
        return Ga
    }), i.d(e, "AnimationObjectGroup", function() {
        return ol
    }), i.d(e, "AnimationMixer", function() {
        return cl
    }), i.d(e, "AnimationClip", function() {
        return ic
    }), i.d(e, "Uniform", function() {
        return ll
    }), i.d(e, "InstancedBufferGeometry", function() {
        return pl
    }), i.d(e, "BufferGeometry", function() {
        return $i
    }), i.d(e, "Geometry", function() {
        return Ui
    }), i.d(e, "InterleavedBufferAttribute", function() {
        return ds
    }), i.d(e, "InstancedInterleavedBuffer", function() {
        return hl
    }), i.d(e, "InterleavedBuffer", function() {
        return us
    }), i.d(e, "InstancedBufferAttribute", function() {
        return ul
    }), i.d(e, "Face3", function() {
        return Di
    }), i.d(e, "Object3D", function() {
        return Ci
    }), i.d(e, "Raycaster", function() {
        return dl
    }), i.d(e, "Layers", function() {
        return Ei
    }), i.d(e, "EventDispatcher", function() {
        return n
    }), i.d(e, "Clock", function() {
        return gl
    }), i.d(e, "QuaternionLinearInterpolant", function() {
        return Qa
    }), i.d(e, "LinearInterpolant", function() {
        return Ya
    }), i.d(e, "DiscreteInterpolant", function() {
        return Xa
    }), i.d(e, "CubicInterpolant", function() {
        return Wa
    }), i.d(e, "Interpolant", function() {
        return Va
    }), i.d(e, "Triangle", function() {
        return bn
    }), i.d(e, "Math", function() {
        return qe
    }), i.d(e, "Spherical", function() {
        return vl
    }), i.d(e, "Cylindrical", function() {
        return yl
    }), i.d(e, "Plane", function() {
        return di
    }), i.d(e, "Frustum", function() {
        return fi
    }), i.d(e, "Sphere", function() {
        return ui
    }), i.d(e, "Ray", function() {
        return wn
    }), i.d(e, "Matrix4", function() {
        return Ke
    }), i.d(e, "Matrix3", function() {
        return $e
    }), i.d(e, "Box3", function() {
        return hi
    }), i.d(e, "Box2", function() {
        return xl
    }), i.d(e, "Line3", function() {
        return wl
    }), i.d(e, "Euler", function() {
        return Ti
    }), i.d(e, "Vector4", function() {
        return ai
    }), i.d(e, "Vector3", function() {
        return Qe
    }), i.d(e, "Vector2", function() {
        return Ze
    }), i.d(e, "Quaternion", function() {
        return Je
    }), i.d(e, "Color", function() {
        return xi
    }), i.d(e, "ImmediateRenderObject", function() {
        return bl
    }), i.d(e, "VertexNormalsHelper", function() {
        return Ml
    }), i.d(e, "SpotLightHelper", function() {
        return Sl
    }), i.d(e, "SkeletonHelper", function() {
        return _l
    }), i.d(e, "PointLightHelper", function() {
        return Tl
    }), i.d(e, "RectAreaLightHelper", function() {
        return El
    }), i.d(e, "HemisphereLightHelper", function() {
        return Al
    }), i.d(e, "GridHelper", function() {
        return Ll
    }), i.d(e, "PolarGridHelper", function() {
        return kl
    }), i.d(e, "FaceNormalsHelper", function() {
        return Rl
    }), i.d(e, "DirectionalLightHelper", function() {
        return Pl
    }), i.d(e, "CameraHelper", function() {
        return Cl
    }), i.d(e, "BoxHelper", function() {
        return Il
    }), i.d(e, "Box3Helper", function() {
        return Ol
    }), i.d(e, "PlaneHelper", function() {
        return Dl
    }), i.d(e, "ArrowHelper", function() {
        return Bl
    }), i.d(e, "AxesHelper", function() {
        return zl
    }), i.d(e, "Shape", function() {
        return Ca
    }), i.d(e, "Path", function() {
        return Pa
    }), i.d(e, "ShapePath", function() {
        return wc
    }), i.d(e, "Font", function() {
        return bc
    }), i.d(e, "CurvePath", function() {
        return Ra
    }), i.d(e, "Curve", function() {
        return pa
    }), i.d(e, "ImageUtils", function() {
        return ri
    }), i.d(e, "ShapeUtils", function() {
        return yo
    }), i.d(e, "WebGLUtils", function() {
        return is
    }), i.d(e, "WireframeGeometry", function() {
        return Rs
    }), i.d(e, "ParametricGeometry", function() {
        return Ps
    }), i.d(e, "ParametricBufferGeometry", function() {
        return Cs
    }), i.d(e, "TetrahedronGeometry", function() {
        return Ds
    }), i.d(e, "TetrahedronBufferGeometry", function() {
        return Bs
    }), i.d(e, "OctahedronGeometry", function() {
        return zs
    }), i.d(e, "OctahedronBufferGeometry", function() {
        return Ns
    }), i.d(e, "IcosahedronGeometry", function() {
        return Us
    }), i.d(e, "IcosahedronBufferGeometry", function() {
        return Fs
    }), i.d(e, "DodecahedronGeometry", function() {
        return Hs
    }), i.d(e, "DodecahedronBufferGeometry", function() {
        return js
    }), i.d(e, "PolyhedronGeometry", function() {
        return Is
    }), i.d(e, "PolyhedronBufferGeometry", function() {
        return Os
    }), i.d(e, "TubeGeometry", function() {
        return Gs
    }), i.d(e, "TubeBufferGeometry", function() {
        return Vs
    }), i.d(e, "TorusKnotGeometry", function() {
        return Ws
    }), i.d(e, "TorusKnotBufferGeometry", function() {
        return Ys
    }), i.d(e, "TorusGeometry", function() {
        return Xs
    }), i.d(e, "TorusBufferGeometry", function() {
        return qs
    }), i.d(e, "TextGeometry", function() {
        return To
    }), i.d(e, "TextBufferGeometry", function() {
        return Eo
    }), i.d(e, "SphereGeometry", function() {
        return Ao
    }), i.d(e, "SphereBufferGeometry", function() {
        return Lo
    }), i.d(e, "RingGeometry", function() {
        return ko
    }), i.d(e, "RingBufferGeometry", function() {
        return Ro
    }), i.d(e, "PlaneGeometry", function() {
        return nn
    }), i.d(e, "PlaneBufferGeometry", function() {
        return rn
    }), i.d(e, "LatheGeometry", function() {
        return Po
    }), i.d(e, "LatheBufferGeometry", function() {
        return Co
    }), i.d(e, "ShapeGeometry", function() {
        return Io
    }), i.d(e, "ShapeBufferGeometry", function() {
        return Oo
    }), i.d(e, "ExtrudeGeometry", function() {
        return bo
    }), i.d(e, "ExtrudeBufferGeometry", function() {
        return Mo
    }), i.d(e, "EdgesGeometry", function() {
        return Bo
    }), i.d(e, "ConeGeometry", function() {
        return Uo
    }), i.d(e, "ConeBufferGeometry", function() {
        return Fo
    }), i.d(e, "CylinderGeometry", function() {
        return zo
    }), i.d(e, "CylinderBufferGeometry", function() {
        return No
    }), i.d(e, "CircleGeometry", function() {
        return Ho
    }), i.d(e, "CircleBufferGeometry", function() {
        return jo
    }), i.d(e, "BoxGeometry", function() {
        return tn
    }), i.d(e, "BoxBufferGeometry", function() {
        return en
    }), i.d(e, "ShadowMaterial", function() {
        return Vo
    }), i.d(e, "SpriteMaterial", function() {
        return fs
    }), i.d(e, "RawShaderMaterial", function() {
        return Wo
    }), i.d(e, "ShaderMaterial", function() {
        return xn
    }), i.d(e, "PointsMaterial", function() {
        return _s
    }), i.d(e, "MeshPhysicalMaterial", function() {
        return Xo
    }), i.d(e, "MeshStandardMaterial", function() {
        return Yo
    }), i.d(e, "MeshPhongMaterial", function() {
        return qo
    }), i.d(e, "MeshToonMaterial", function() {
        return Zo
    }), i.d(e, "MeshNormalMaterial", function() {
        return Ko
    }), i.d(e, "MeshLambertMaterial", function() {
        return Jo
    }), i.d(e, "MeshDepthMaterial", function() {
        return Jr
    }), i.d(e, "MeshDistanceMaterial", function() {
        return Qr
    }), i.d(e, "MeshBasicMaterial", function() {
        return yn
    }), i.d(e, "LineDashedMaterial", function() {
        return Qo
    }), i.d(e, "LineBasicMaterial", function() {
        return ws
    }), i.d(e, "Material", function() {
        return vn
    }), i.d(e, "Float64BufferAttribute", function() {
        return Zi
    }), i.d(e, "Float32BufferAttribute", function() {
        return qi
    }), i.d(e, "Uint32BufferAttribute", function() {
        return Xi
    }), i.d(e, "Int32BufferAttribute", function() {
        return Yi
    }), i.d(e, "Uint16BufferAttribute", function() {
        return Wi
    }), i.d(e, "Int16BufferAttribute", function() {
        return Vi
    }), i.d(e, "Uint8ClampedBufferAttribute", function() {
        return Gi
    }), i.d(e, "Uint8BufferAttribute", function() {
        return ji
    }), i.d(e, "Int8BufferAttribute", function() {
        return Hi
    }), i.d(e, "BufferAttribute", function() {
        return Fi
    }), i.d(e, "ArcCurve", function() {
        return ua
    }), i.d(e, "CatmullRomCurve3", function() {
        return ya
    }), i.d(e, "CubicBezierCurve", function() {
        return Ma
    }), i.d(e, "CubicBezierCurve3", function() {
        return Sa
    }), i.d(e, "EllipseCurve", function() {
        return ha
    }), i.d(e, "LineCurve", function() {
        return _a
    }), i.d(e, "LineCurve3", function() {
        return Ta
    }), i.d(e, "QuadraticBezierCurve", function() {
        return Ea
    }), i.d(e, "QuadraticBezierCurve3", function() {
        return Aa
    }), i.d(e, "SplineCurve", function() {
        return La
    }), i.d(e, "REVISION", function() {
        return m
    }), i.d(e, "MOUSE", function() {
        return g
    }), i.d(e, "CullFaceNone", function() {
        return v
    }), i.d(e, "CullFaceBack", function() {
        return y
    }), i.d(e, "CullFaceFront", function() {
        return x
    }), i.d(e, "CullFaceFrontBack", function() {
        return w
    }), i.d(e, "FrontFaceDirectionCW", function() {
        return b
    }), i.d(e, "FrontFaceDirectionCCW", function() {
        return M
    }), i.d(e, "BasicShadowMap", function() {
        return S
    }), i.d(e, "PCFShadowMap", function() {
        return _
    }), i.d(e, "PCFSoftShadowMap", function() {
        return T
    }), i.d(e, "FrontSide", function() {
        return E
    }), i.d(e, "BackSide", function() {
        return A
    }), i.d(e, "DoubleSide", function() {
        return L
    }), i.d(e, "FlatShading", function() {
        return k
    }), i.d(e, "SmoothShading", function() {
        return R
    }), i.d(e, "NoColors", function() {
        return P
    }), i.d(e, "FaceColors", function() {
        return C
    }), i.d(e, "VertexColors", function() {
        return I
    }), i.d(e, "NoBlending", function() {
        return O
    }), i.d(e, "NormalBlending", function() {
        return D
    }), i.d(e, "AdditiveBlending", function() {
        return B
    }), i.d(e, "SubtractiveBlending", function() {
        return z
    }), i.d(e, "MultiplyBlending", function() {
        return N
    }), i.d(e, "CustomBlending", function() {
        return U
    }), i.d(e, "AddEquation", function() {
        return F
    }), i.d(e, "SubtractEquation", function() {
        return H
    }), i.d(e, "ReverseSubtractEquation", function() {
        return j
    }), i.d(e, "MinEquation", function() {
        return G
    }), i.d(e, "MaxEquation", function() {
        return V
    }), i.d(e, "ZeroFactor", function() {
        return W
    }), i.d(e, "OneFactor", function() {
        return Y
    }), i.d(e, "SrcColorFactor", function() {
        return X
    }), i.d(e, "OneMinusSrcColorFactor", function() {
        return q
    }), i.d(e, "SrcAlphaFactor", function() {
        return Z
    }), i.d(e, "OneMinusSrcAlphaFactor", function() {
        return K
    }), i.d(e, "DstAlphaFactor", function() {
        return J
    }), i.d(e, "OneMinusDstAlphaFactor", function() {
        return Q
    }), i.d(e, "DstColorFactor", function() {
        return $
    }), i.d(e, "OneMinusDstColorFactor", function() {
        return tt
    }), i.d(e, "SrcAlphaSaturateFactor", function() {
        return et
    }), i.d(e, "NeverDepth", function() {
        return it
    }), i.d(e, "AlwaysDepth", function() {
        return nt
    }), i.d(e, "LessDepth", function() {
        return rt
    }), i.d(e, "LessEqualDepth", function() {
        return st
    }), i.d(e, "EqualDepth", function() {
        return ot
    }), i.d(e, "GreaterEqualDepth", function() {
        return at
    }), i.d(e, "GreaterDepth", function() {
        return ct
    }), i.d(e, "NotEqualDepth", function() {
        return lt
    }), i.d(e, "MultiplyOperation", function() {
        return pt
    }), i.d(e, "MixOperation", function() {
        return ht
    }), i.d(e, "AddOperation", function() {
        return ut
    }), i.d(e, "NoToneMapping", function() {
        return dt
    }), i.d(e, "LinearToneMapping", function() {
        return ft
    }), i.d(e, "ReinhardToneMapping", function() {
        return mt
    }), i.d(e, "Uncharted2ToneMapping", function() {
        return gt
    }), i.d(e, "CineonToneMapping", function() {
        return vt
    }), i.d(e, "UVMapping", function() {
        return yt
    }), i.d(e, "CubeReflectionMapping", function() {
        return xt
    }), i.d(e, "CubeRefractionMapping", function() {
        return wt
    }), i.d(e, "EquirectangularReflectionMapping", function() {
        return bt
    }), i.d(e, "EquirectangularRefractionMapping", function() {
        return Mt
    }), i.d(e, "SphericalReflectionMapping", function() {
        return St
    }), i.d(e, "CubeUVReflectionMapping", function() {
        return _t
    }), i.d(e, "CubeUVRefractionMapping", function() {
        return Tt
    }), i.d(e, "RepeatWrapping", function() {
        return Et
    }), i.d(e, "ClampToEdgeWrapping", function() {
        return At
    }), i.d(e, "MirroredRepeatWrapping", function() {
        return Lt
    }), i.d(e, "NearestFilter", function() {
        return kt
    }), i.d(e, "NearestMipMapNearestFilter", function() {
        return Rt
    }), i.d(e, "NearestMipMapLinearFilter", function() {
        return Pt
    }), i.d(e, "LinearFilter", function() {
        return Ct
    }), i.d(e, "LinearMipMapNearestFilter", function() {
        return It
    }), i.d(e, "LinearMipMapLinearFilter", function() {
        return Ot
    }), i.d(e, "UnsignedByteType", function() {
        return Dt
    }), i.d(e, "ByteType", function() {
        return Bt
    }), i.d(e, "ShortType", function() {
        return zt
    }), i.d(e, "UnsignedShortType", function() {
        return Nt
    }), i.d(e, "IntType", function() {
        return Ut
    }), i.d(e, "UnsignedIntType", function() {
        return Ft
    }), i.d(e, "FloatType", function() {
        return Ht
    }), i.d(e, "HalfFloatType", function() {
        return jt
    }), i.d(e, "UnsignedShort4444Type", function() {
        return Gt
    }), i.d(e, "UnsignedShort5551Type", function() {
        return Vt
    }), i.d(e, "UnsignedShort565Type", function() {
        return Wt
    }), i.d(e, "UnsignedInt248Type", function() {
        return Yt
    }), i.d(e, "AlphaFormat", function() {
        return Xt
    }), i.d(e, "RGBFormat", function() {
        return qt
    }), i.d(e, "RGBAFormat", function() {
        return Zt
    }), i.d(e, "LuminanceFormat", function() {
        return Kt
    }), i.d(e, "LuminanceAlphaFormat", function() {
        return Jt
    }), i.d(e, "RGBEFormat", function() {
        return Qt
    }), i.d(e, "DepthFormat", function() {
        return $t
    }), i.d(e, "DepthStencilFormat", function() {
        return te
    }), i.d(e, "RGB_S3TC_DXT1_Format", function() {
        return ee
    }), i.d(e, "RGBA_S3TC_DXT1_Format", function() {
        return ie
    }), i.d(e, "RGBA_S3TC_DXT3_Format", function() {
        return ne
    }), i.d(e, "RGBA_S3TC_DXT5_Format", function() {
        return re
    }), i.d(e, "RGB_PVRTC_4BPPV1_Format", function() {
        return se
    }), i.d(e, "RGB_PVRTC_2BPPV1_Format", function() {
        return oe
    }), i.d(e, "RGBA_PVRTC_4BPPV1_Format", function() {
        return ae
    }), i.d(e, "RGBA_PVRTC_2BPPV1_Format", function() {
        return ce
    }), i.d(e, "RGB_ETC1_Format", function() {
        return le
    }), i.d(e, "RGBA_ASTC_4x4_Format", function() {
        return pe
    }), i.d(e, "RGBA_ASTC_5x4_Format", function() {
        return he
    }), i.d(e, "RGBA_ASTC_5x5_Format", function() {
        return ue
    }), i.d(e, "RGBA_ASTC_6x5_Format", function() {
        return de
    }), i.d(e, "RGBA_ASTC_6x6_Format", function() {
        return fe
    }), i.d(e, "RGBA_ASTC_8x5_Format", function() {
        return me
    }), i.d(e, "RGBA_ASTC_8x6_Format", function() {
        return ge
    }), i.d(e, "RGBA_ASTC_8x8_Format", function() {
        return ve
    }), i.d(e, "RGBA_ASTC_10x5_Format", function() {
        return ye
    }), i.d(e, "RGBA_ASTC_10x6_Format", function() {
        return xe
    }), i.d(e, "RGBA_ASTC_10x8_Format", function() {
        return we
    }), i.d(e, "RGBA_ASTC_10x10_Format", function() {
        return be
    }), i.d(e, "RGBA_ASTC_12x10_Format", function() {
        return Me
    }), i.d(e, "RGBA_ASTC_12x12_Format", function() {
        return Se
    }), i.d(e, "LoopOnce", function() {
        return _e
    }), i.d(e, "LoopRepeat", function() {
        return Te
    }), i.d(e, "LoopPingPong", function() {
        return Ee
    }), i.d(e, "InterpolateDiscrete", function() {
        return Ae
    }), i.d(e, "InterpolateLinear", function() {
        return Le
    }), i.d(e, "InterpolateSmooth", function() {
        return ke
    }), i.d(e, "ZeroCurvatureEnding", function() {
        return Re
    }), i.d(e, "ZeroSlopeEnding", function() {
        return Pe
    }), i.d(e, "WrapAroundEnding", function() {
        return Ce
    }), i.d(e, "TrianglesDrawMode", function() {
        return Ie
    }), i.d(e, "TriangleStripDrawMode", function() {
        return Oe
    }), i.d(e, "TriangleFanDrawMode", function() {
        return De
    }), i.d(e, "LinearEncoding", function() {
        return Be
    }), i.d(e, "sRGBEncoding", function() {
        return ze
    }), i.d(e, "GammaEncoding", function() {
        return Ne
    }), i.d(e, "RGBEEncoding", function() {
        return Ue
    }), i.d(e, "LogLuvEncoding", function() {
        return Fe
    }), i.d(e, "RGBM7Encoding", function() {
        return He
    }), i.d(e, "RGBM16Encoding", function() {
        return je
    }), i.d(e, "RGBDEncoding", function() {
        return Ge
    }), i.d(e, "BasicDepthPacking", function() {
        return Ve
    }), i.d(e, "RGBADepthPacking", function() {
        return We
    }), i.d(e, "TangentSpaceNormalMap", function() {
        return Ye
    }), i.d(e, "ObjectSpaceNormalMap", function() {
        return Xe
    }), i.d(e, "CubeGeometry", function() {
        return tn
    }), i.d(e, "Face4", function() {
        return Nl
    }), i.d(e, "LineStrip", function() {
        return Ul
    }), i.d(e, "LinePieces", function() {
        return Fl
    }), i.d(e, "MeshFaceMaterial", function() {
        return Hl
    }), i.d(e, "MultiMaterial", function() {
        return jl
    }), i.d(e, "PointCloud", function() {
        return Gl
    }), i.d(e, "Particle", function() {
        return Vl
    }), i.d(e, "ParticleSystem", function() {
        return Wl
    }), i.d(e, "PointCloudMaterial", function() {
        return Yl
    }), i.d(e, "ParticleBasicMaterial", function() {
        return Xl
    }), i.d(e, "ParticleSystemMaterial", function() {
        return ql
    }), i.d(e, "Vertex", function() {
        return Zl
    }), i.d(e, "DynamicBufferAttribute", function() {
        return Kl
    }), i.d(e, "Int8Attribute", function() {
        return Jl
    }), i.d(e, "Uint8Attribute", function() {
        return Ql
    }), i.d(e, "Uint8ClampedAttribute", function() {
        return $l
    }), i.d(e, "Int16Attribute", function() {
        return tp
    }), i.d(e, "Uint16Attribute", function() {
        return ep
    }), i.d(e, "Int32Attribute", function() {
        return ip
    }), i.d(e, "Uint32Attribute", function() {
        return np
    }), i.d(e, "Float32Attribute", function() {
        return rp
    }), i.d(e, "Float64Attribute", function() {
        return sp
    }), i.d(e, "ClosedSplineCurve3", function() {
        return op
    }), i.d(e, "SplineCurve3", function() {
        return ap
    }), i.d(e, "Spline", function() {
        return cp
    }), i.d(e, "AxisHelper", function() {
        return lp
    }), i.d(e, "BoundingBoxHelper", function() {
        return pp
    }), i.d(e, "EdgesHelper", function() {
        return hp
    }), i.d(e, "WireframeHelper", function() {
        return up
    }), i.d(e, "XHRLoader", function() {
        return dp
    }), i.d(e, "BinaryTextureLoader", function() {
        return fp
    }), i.d(e, "GeometryUtils", function() {
        return mp
    }), i.d(e, "Projector", function() {
        return gp
    }), i.d(e, "CanvasRenderer", function() {
        return vp
    }), i.d(e, "SceneUtils", function() {
        return yp
    }), i.d(e, "LensFlare", function() {
        return xp
    }), void 0 === Number.EPSILON && (Number.EPSILON = Math.pow(2, -52)), void 0 === Number.isInteger && (Number.isInteger = function(t) {
        return "number" == typeof t && isFinite(t) && Math.floor(t) === t
    }), void 0 === Math.sign && (Math.sign = function(t) {
        return t < 0 ? -1 : t > 0 ? 1 : +t
    }), "name" in Function.prototype == !1 && Object.defineProperty(Function.prototype, "name", {
        get: function() {
            return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]
        }
    }), void 0 === Object.assign && (Object.assign = function(t) {
        if (null == t) throw new TypeError("Cannot convert undefined or null to object");
        for (var e = Object(t), i = 1; i < arguments.length; i++) {
            var n = arguments[i];
            if (null != n)
                for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
        }
        return e
    }), Object.assign(n.prototype, {
        addEventListener: function(t, e) {
            void 0 === this._listeners && (this._listeners = {});
            var i = this._listeners;
            void 0 === i[t] && (i[t] = []), -1 === i[t].indexOf(e) && i[t].push(e)
        },
        hasEventListener: function(t, e) {
            if (void 0 === this._listeners) return !1;
            var i = this._listeners;
            return void 0 !== i[t] && -1 !== i[t].indexOf(e)
        },
        removeEventListener: function(t, e) {
            if (void 0 !== this._listeners) {
                var i = this._listeners[t];
                if (void 0 !== i) {
                    var n = i.indexOf(e); - 1 !== n && i.splice(n, 1)
                }
            }
        },
        dispatchEvent: function(t) {
            if (void 0 !== this._listeners) {
                var e = this._listeners[t.type];
                if (void 0 !== e) {
                    t.target = this;
                    for (var i = e.slice(0), n = 0, r = i.length; n < r; n++) i[n].call(this, t)
                }
            }
        }
    });
    var r, s, o, a, c, l, p, h, u, d, f, m = "95",
        g = {
            LEFT: 0,
            MIDDLE: 1,
            RIGHT: 2
        },
        v = 0,
        y = 1,
        x = 2,
        w = 3,
        b = 0,
        M = 1,
        S = 0,
        _ = 1,
        T = 2,
        E = 0,
        A = 1,
        L = 2,
        k = 1,
        R = 2,
        P = 0,
        C = 1,
        I = 2,
        O = 0,
        D = 1,
        B = 2,
        z = 3,
        N = 4,
        U = 5,
        F = 100,
        H = 101,
        j = 102,
        G = 103,
        V = 104,
        W = 200,
        Y = 201,
        X = 202,
        q = 203,
        Z = 204,
        K = 205,
        J = 206,
        Q = 207,
        $ = 208,
        tt = 209,
        et = 210,
        it = 0,
        nt = 1,
        rt = 2,
        st = 3,
        ot = 4,
        at = 5,
        ct = 6,
        lt = 7,
        pt = 0,
        ht = 1,
        ut = 2,
        dt = 0,
        ft = 1,
        mt = 2,
        gt = 3,
        vt = 4,
        yt = 300,
        xt = 301,
        wt = 302,
        bt = 303,
        Mt = 304,
        St = 305,
        _t = 306,
        Tt = 307,
        Et = 1e3,
        At = 1001,
        Lt = 1002,
        kt = 1003,
        Rt = 1004,
        Pt = 1005,
        Ct = 1006,
        It = 1007,
        Ot = 1008,
        Dt = 1009,
        Bt = 1010,
        zt = 1011,
        Nt = 1012,
        Ut = 1013,
        Ft = 1014,
        Ht = 1015,
        jt = 1016,
        Gt = 1017,
        Vt = 1018,
        Wt = 1019,
        Yt = 1020,
        Xt = 1021,
        qt = 1022,
        Zt = 1023,
        Kt = 1024,
        Jt = 1025,
        Qt = Zt,
        $t = 1026,
        te = 1027,
        ee = 33776,
        ie = 33777,
        ne = 33778,
        re = 33779,
        se = 35840,
        oe = 35841,
        ae = 35842,
        ce = 35843,
        le = 36196,
        pe = 37808,
        he = 37809,
        ue = 37810,
        de = 37811,
        fe = 37812,
        me = 37813,
        ge = 37814,
        ve = 37815,
        ye = 37816,
        xe = 37817,
        we = 37818,
        be = 37819,
        Me = 37820,
        Se = 37821,
        _e = 2200,
        Te = 2201,
        Ee = 2202,
        Ae = 2300,
        Le = 2301,
        ke = 2302,
        Re = 2400,
        Pe = 2401,
        Ce = 2402,
        Ie = 0,
        Oe = 1,
        De = 2,
        Be = 3e3,
        ze = 3001,
        Ne = 3007,
        Ue = 3002,
        Fe = 3003,
        He = 3004,
        je = 3005,
        Ge = 3006,
        Ve = 3200,
        We = 3201,
        Ye = 0,
        Xe = 1,
        qe = {
            DEG2RAD: Math.PI / 180,
            RAD2DEG: 180 / Math.PI,
            generateUUID: function() {
                for (var t = [], e = 0; e < 256; e++) t[e] = (e < 16 ? "0" : "") + e.toString(16);
                return function() {
                    var e = 4294967295 * Math.random() | 0,
                        i = 4294967295 * Math.random() | 0,
                        n = 4294967295 * Math.random() | 0,
                        r = 4294967295 * Math.random() | 0;
                    return (t[255 & e] + t[e >> 8 & 255] + t[e >> 16 & 255] + t[e >> 24 & 255] + "-" + t[255 & i] + t[i >> 8 & 255] + "-" + t[i >> 16 & 15 | 64] + t[i >> 24 & 255] + "-" + t[63 & n | 128] + t[n >> 8 & 255] + "-" + t[n >> 16 & 255] + t[n >> 24 & 255] + t[255 & r] + t[r >> 8 & 255] + t[r >> 16 & 255] + t[r >> 24 & 255]).toUpperCase()
                }
            }(),
            clamp: function(t, e, i) {
                return Math.max(e, Math.min(i, t))
            },
            euclideanModulo: function(t, e) {
                return (t % e + e) % e
            },
            mapLinear: function(t, e, i, n, r) {
                return n + (t - e) * (r - n) / (i - e)
            },
            lerp: function(t, e, i) {
                return (1 - i) * t + i * e
            },
            smoothstep: function(t, e, i) {
                return t <= e ? 0 : t >= i ? 1 : (t = (t - e) / (i - e)) * t * (3 - 2 * t)
            },
            smootherstep: function(t, e, i) {
                return t <= e ? 0 : t >= i ? 1 : (t = (t - e) / (i - e)) * t * t * (t * (6 * t - 15) + 10)
            },
            randInt: function(t, e) {
                return t + Math.floor(Math.random() * (e - t + 1))
            },
            randFloat: function(t, e) {
                return t + Math.random() * (e - t)
            },
            randFloatSpread: function(t) {
                return t * (.5 - Math.random())
            },
            degToRad: function(t) {
                return t * qe.DEG2RAD
            },
            radToDeg: function(t) {
                return t * qe.RAD2DEG
            },
            isPowerOfTwo: function(t) {
                return 0 == (t & t - 1) && 0 !== t
            },
            ceilPowerOfTwo: function(t) {
                return Math.pow(2, Math.ceil(Math.log(t) / Math.LN2))
            },
            floorPowerOfTwo: function(t) {
                return Math.pow(2, Math.floor(Math.log(t) / Math.LN2))
            }
        };

    function Ze(t, e) {
        this.x = t || 0, this.y = e || 0
    }

    function Ke() {
        this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], arguments.length > 0 && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")
    }

    function Je(t, e, i, n) {
        this._x = t || 0, this._y = e || 0, this._z = i || 0, this._w = void 0 !== n ? n : 1
    }

    function Qe(t, e, i) {
        this.x = t || 0, this.y = e || 0, this.z = i || 0
    }

    function $e() {
        this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1], arguments.length > 0 && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")
    }
    Object.defineProperties(Ze.prototype, {
        width: {
            get: function() {
                return this.x
            },
            set: function(t) {
                this.x = t
            }
        },
        height: {
            get: function() {
                return this.y
            },
            set: function(t) {
                this.y = t
            }
        }
    }), Object.assign(Ze.prototype, {
        isVector2: !0,
        set: function(t, e) {
            return this.x = t, this.y = e, this
        },
        setScalar: function(t) {
            return this.x = t, this.y = t, this
        },
        setX: function(t) {
            return this.x = t, this
        },
        setY: function(t) {
            return this.y = t, this
        },
        setComponent: function(t, e) {
            switch (t) {
                case 0:
                    this.x = e;
                    break;
                case 1:
                    this.y = e;
                    break;
                default:
                    throw new Error("index is out of range: " + t)
            }
            return this
        },
        getComponent: function(t) {
            switch (t) {
                case 0:
                    return this.x;
                case 1:
                    return this.y;
                default:
                    throw new Error("index is out of range: " + t)
            }
        },
        clone: function() {
            return new this.constructor(this.x, this.y)
        },
        copy: function(t) {
            return this.x = t.x, this.y = t.y, this
        },
        add: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(t, e)) : (this.x += t.x, this.y += t.y, this)
        },
        addScalar: function(t) {
            return this.x += t, this.y += t, this
        },
        addVectors: function(t, e) {
            return this.x = t.x + e.x, this.y = t.y + e.y, this
        },
        addScaledVector: function(t, e) {
            return this.x += t.x * e, this.y += t.y * e, this
        },
        sub: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(t, e)) : (this.x -= t.x, this.y -= t.y, this)
        },
        subScalar: function(t) {
            return this.x -= t, this.y -= t, this
        },
        subVectors: function(t, e) {
            return this.x = t.x - e.x, this.y = t.y - e.y, this
        },
        multiply: function(t) {
            return this.x *= t.x, this.y *= t.y, this
        },
        multiplyScalar: function(t) {
            return this.x *= t, this.y *= t, this
        },
        divide: function(t) {
            return this.x /= t.x, this.y /= t.y, this
        },
        divideScalar: function(t) {
            return this.multiplyScalar(1 / t)
        },
        applyMatrix3: function(t) {
            var e = this.x,
                i = this.y,
                n = t.elements;
            return this.x = n[0] * e + n[3] * i + n[6], this.y = n[1] * e + n[4] * i + n[7], this
        },
        min: function(t) {
            return this.x = Math.min(this.x, t.x), this.y = Math.min(this.y, t.y), this
        },
        max: function(t) {
            return this.x = Math.max(this.x, t.x), this.y = Math.max(this.y, t.y), this
        },
        clamp: function(t, e) {
            return this.x = Math.max(t.x, Math.min(e.x, this.x)), this.y = Math.max(t.y, Math.min(e.y, this.y)), this
        },
        clampScalar: (r = new Ze, s = new Ze, function(t, e) {
            return r.set(t, t), s.set(e, e), this.clamp(r, s)
        }),
        clampLength: function(t, e) {
            var i = this.length();
            return this.divideScalar(i || 1).multiplyScalar(Math.max(t, Math.min(e, i)))
        },
        floor: function() {
            return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this
        },
        ceil: function() {
            return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this
        },
        round: function() {
            return this.x = Math.round(this.x), this.y = Math.round(this.y), this
        },
        roundToZero: function() {
            return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this
        },
        negate: function() {
            return this.x = -this.x, this.y = -this.y, this
        },
        dot: function(t) {
            return this.x * t.x + this.y * t.y
        },
        cross: function(t) {
            return this.x * t.y - this.y * t.x
        },
        lengthSq: function() {
            return this.x * this.x + this.y * this.y
        },
        length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y)
        },
        manhattanLength: function() {
            return Math.abs(this.x) + Math.abs(this.y)
        },
        normalize: function() {
            return this.divideScalar(this.length() || 1)
        },
        angle: function() {
            var t = Math.atan2(this.y, this.x);
            return t < 0 && (t += 2 * Math.PI), t
        },
        distanceTo: function(t) {
            return Math.sqrt(this.distanceToSquared(t))
        },
        distanceToSquared: function(t) {
            var e = this.x - t.x,
                i = this.y - t.y;
            return e * e + i * i
        },
        manhattanDistanceTo: function(t) {
            return Math.abs(this.x - t.x) + Math.abs(this.y - t.y)
        },
        setLength: function(t) {
            return this.normalize().multiplyScalar(t)
        },
        lerp: function(t, e) {
            return this.x += (t.x - this.x) * e, this.y += (t.y - this.y) * e, this
        },
        lerpVectors: function(t, e, i) {
            return this.subVectors(e, t).multiplyScalar(i).add(t)
        },
        equals: function(t) {
            return t.x === this.x && t.y === this.y
        },
        fromArray: function(t, e) {
            return void 0 === e && (e = 0), this.x = t[e], this.y = t[e + 1], this
        },
        toArray: function(t, e) {
            return void 0 === t && (t = []), void 0 === e && (e = 0), t[e] = this.x, t[e + 1] = this.y, t
        },
        fromBufferAttribute: function(t, e, i) {
            return void 0 !== i && console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."), this.x = t.getX(e), this.y = t.getY(e), this
        },
        rotateAround: function(t, e) {
            var i = Math.cos(e),
                n = Math.sin(e),
                r = this.x - t.x,
                s = this.y - t.y;
            return this.x = r * i - s * n + t.x, this.y = r * n + s * i + t.y, this
        }
    }), Object.assign(Ke.prototype, {
        isMatrix4: !0,
        set: function(t, e, i, n, r, s, o, a, c, l, p, h, u, d, f, m) {
            var g = this.elements;
            return g[0] = t, g[4] = e, g[8] = i, g[12] = n, g[1] = r, g[5] = s, g[9] = o, g[13] = a, g[2] = c, g[6] = l, g[10] = p, g[14] = h, g[3] = u, g[7] = d, g[11] = f, g[15] = m, this
        },
        identity: function() {
            return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this
        },
        clone: function() {
            return (new Ke).fromArray(this.elements)
        },
        copy: function(t) {
            var e = this.elements,
                i = t.elements;
            return e[0] = i[0], e[1] = i[1], e[2] = i[2], e[3] = i[3], e[4] = i[4], e[5] = i[5], e[6] = i[6], e[7] = i[7], e[8] = i[8], e[9] = i[9], e[10] = i[10], e[11] = i[11], e[12] = i[12], e[13] = i[13], e[14] = i[14], e[15] = i[15], this
        },
        copyPosition: function(t) {
            var e = this.elements,
                i = t.elements;
            return e[12] = i[12], e[13] = i[13], e[14] = i[14], this
        },
        extractBasis: function(t, e, i) {
            return t.setFromMatrixColumn(this, 0), e.setFromMatrixColumn(this, 1), i.setFromMatrixColumn(this, 2), this
        },
        makeBasis: function(t, e, i) {
            return this.set(t.x, e.x, i.x, 0, t.y, e.y, i.y, 0, t.z, e.z, i.z, 0, 0, 0, 0, 1), this
        },
        extractRotation: (d = new Qe, function(t) {
            var e = this.elements,
                i = t.elements,
                n = 1 / d.setFromMatrixColumn(t, 0).length(),
                r = 1 / d.setFromMatrixColumn(t, 1).length(),
                s = 1 / d.setFromMatrixColumn(t, 2).length();
            return e[0] = i[0] * n, e[1] = i[1] * n, e[2] = i[2] * n, e[3] = 0, e[4] = i[4] * r, e[5] = i[5] * r, e[6] = i[6] * r, e[7] = 0, e[8] = i[8] * s, e[9] = i[9] * s, e[10] = i[10] * s, e[11] = 0, e[12] = 0, e[13] = 0, e[14] = 0, e[15] = 1, this
        }),
        makeRotationFromEuler: function(t) {
            t && t.isEuler || console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
            var e = this.elements,
                i = t.x,
                n = t.y,
                r = t.z,
                s = Math.cos(i),
                o = Math.sin(i),
                a = Math.cos(n),
                c = Math.sin(n),
                l = Math.cos(r),
                p = Math.sin(r);
            if ("XYZ" === t.order) {
                var h = s * l,
                    u = s * p,
                    d = o * l,
                    f = o * p;
                e[0] = a * l, e[4] = -a * p, e[8] = c, e[1] = u + d * c, e[5] = h - f * c, e[9] = -o * a, e[2] = f - h * c, e[6] = d + u * c, e[10] = s * a
            } else if ("YXZ" === t.order) {
                var m = a * l,
                    g = a * p,
                    v = c * l,
                    y = c * p;
                e[0] = m + y * o, e[4] = v * o - g, e[8] = s * c, e[1] = s * p, e[5] = s * l, e[9] = -o, e[2] = g * o - v, e[6] = y + m * o, e[10] = s * a
            } else if ("ZXY" === t.order) {
                m = a * l, g = a * p, v = c * l, y = c * p;
                e[0] = m - y * o, e[4] = -s * p, e[8] = v + g * o, e[1] = g + v * o, e[5] = s * l, e[9] = y - m * o, e[2] = -s * c, e[6] = o, e[10] = s * a
            } else if ("ZYX" === t.order) {
                h = s * l, u = s * p, d = o * l, f = o * p;
                e[0] = a * l, e[4] = d * c - u, e[8] = h * c + f, e[1] = a * p, e[5] = f * c + h, e[9] = u * c - d, e[2] = -c, e[6] = o * a, e[10] = s * a
            } else if ("YZX" === t.order) {
                var x = s * a,
                    w = s * c,
                    b = o * a,
                    M = o * c;
                e[0] = a * l, e[4] = M - x * p, e[8] = b * p + w, e[1] = p, e[5] = s * l, e[9] = -o * l, e[2] = -c * l, e[6] = w * p + b, e[10] = x - M * p
            } else if ("XZY" === t.order) {
                x = s * a, w = s * c, b = o * a, M = o * c;
                e[0] = a * l, e[4] = -p, e[8] = c * l, e[1] = x * p + M, e[5] = s * l, e[9] = w * p - b, e[2] = b * p - w, e[6] = o * l, e[10] = M * p + x
            }
            return e[3] = 0, e[7] = 0, e[11] = 0, e[12] = 0, e[13] = 0, e[14] = 0, e[15] = 1, this
        },
        makeRotationFromQuaternion: (h = new Qe(0, 0, 0), u = new Qe(1, 1, 1), function(t) {
            return this.compose(h, t, u)
        }),
        lookAt: (c = new Qe, l = new Qe, p = new Qe, function(t, e, i) {
            var n = this.elements;
            return p.subVectors(t, e), 0 === p.lengthSq() && (p.z = 1), p.normalize(), c.crossVectors(i, p), 0 === c.lengthSq() && (1 === Math.abs(i.z) ? p.x += 1e-4 : p.z += 1e-4, p.normalize(), c.crossVectors(i, p)), c.normalize(), l.crossVectors(p, c), n[0] = c.x, n[4] = l.x, n[8] = p.x, n[1] = c.y, n[5] = l.y, n[9] = p.y, n[2] = c.z, n[6] = l.z, n[10] = p.z, this
        }),
        multiply: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."), this.multiplyMatrices(t, e)) : this.multiplyMatrices(this, t)
        },
        premultiply: function(t) {
            return this.multiplyMatrices(t, this)
        },
        multiplyMatrices: function(t, e) {
            var i = t.elements,
                n = e.elements,
                r = this.elements,
                s = i[0],
                o = i[4],
                a = i[8],
                c = i[12],
                l = i[1],
                p = i[5],
                h = i[9],
                u = i[13],
                d = i[2],
                f = i[6],
                m = i[10],
                g = i[14],
                v = i[3],
                y = i[7],
                x = i[11],
                w = i[15],
                b = n[0],
                M = n[4],
                S = n[8],
                _ = n[12],
                T = n[1],
                E = n[5],
                A = n[9],
                L = n[13],
                k = n[2],
                R = n[6],
                P = n[10],
                C = n[14],
                I = n[3],
                O = n[7],
                D = n[11],
                B = n[15];
            return r[0] = s * b + o * T + a * k + c * I, r[4] = s * M + o * E + a * R + c * O, r[8] = s * S + o * A + a * P + c * D, r[12] = s * _ + o * L + a * C + c * B, r[1] = l * b + p * T + h * k + u * I, r[5] = l * M + p * E + h * R + u * O, r[9] = l * S + p * A + h * P + u * D, r[13] = l * _ + p * L + h * C + u * B, r[2] = d * b + f * T + m * k + g * I, r[6] = d * M + f * E + m * R + g * O, r[10] = d * S + f * A + m * P + g * D, r[14] = d * _ + f * L + m * C + g * B, r[3] = v * b + y * T + x * k + w * I, r[7] = v * M + y * E + x * R + w * O, r[11] = v * S + y * A + x * P + w * D, r[15] = v * _ + y * L + x * C + w * B, this
        },
        multiplyScalar: function(t) {
            var e = this.elements;
            return e[0] *= t, e[4] *= t, e[8] *= t, e[12] *= t, e[1] *= t, e[5] *= t, e[9] *= t, e[13] *= t, e[2] *= t, e[6] *= t, e[10] *= t, e[14] *= t, e[3] *= t, e[7] *= t, e[11] *= t, e[15] *= t, this
        },
        applyToBufferAttribute: function() {
            var t = new Qe;
            return function(e) {
                for (var i = 0, n = e.count; i < n; i++) t.x = e.getX(i), t.y = e.getY(i), t.z = e.getZ(i), t.applyMatrix4(this), e.setXYZ(i, t.x, t.y, t.z);
                return e
            }
        }(),
        determinant: function() {
            var t = this.elements,
                e = t[0],
                i = t[4],
                n = t[8],
                r = t[12],
                s = t[1],
                o = t[5],
                a = t[9],
                c = t[13],
                l = t[2],
                p = t[6],
                h = t[10],
                u = t[14];
            return t[3] * (+r * a * p - n * c * p - r * o * h + i * c * h + n * o * u - i * a * u) + t[7] * (+e * a * u - e * c * h + r * s * h - n * s * u + n * c * l - r * a * l) + t[11] * (+e * c * p - e * o * u - r * s * p + i * s * u + r * o * l - i * c * l) + t[15] * (-n * o * l - e * a * p + e * o * h + n * s * p - i * s * h + i * a * l)
        },
        transpose: function() {
            var t, e = this.elements;
            return t = e[1], e[1] = e[4], e[4] = t, t = e[2], e[2] = e[8], e[8] = t, t = e[6], e[6] = e[9], e[9] = t, t = e[3], e[3] = e[12], e[12] = t, t = e[7], e[7] = e[13], e[13] = t, t = e[11], e[11] = e[14], e[14] = t, this
        },
        setPosition: function(t) {
            var e = this.elements;
            return e[12] = t.x, e[13] = t.y, e[14] = t.z, this
        },
        getInverse: function(t, e) {
            var i = this.elements,
                n = t.elements,
                r = n[0],
                s = n[1],
                o = n[2],
                a = n[3],
                c = n[4],
                l = n[5],
                p = n[6],
                h = n[7],
                u = n[8],
                d = n[9],
                f = n[10],
                m = n[11],
                g = n[12],
                v = n[13],
                y = n[14],
                x = n[15],
                w = d * y * h - v * f * h + v * p * m - l * y * m - d * p * x + l * f * x,
                b = g * f * h - u * y * h - g * p * m + c * y * m + u * p * x - c * f * x,
                M = u * v * h - g * d * h + g * l * m - c * v * m - u * l * x + c * d * x,
                S = g * d * p - u * v * p - g * l * f + c * v * f + u * l * y - c * d * y,
                _ = r * w + s * b + o * M + a * S;
            if (0 === _) {
                var T = "THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";
                if (!0 === e) throw new Error(T);
                return console.warn(T), this.identity()
            }
            var E = 1 / _;
            return i[0] = w * E, i[1] = (v * f * a - d * y * a - v * o * m + s * y * m + d * o * x - s * f * x) * E, i[2] = (l * y * a - v * p * a + v * o * h - s * y * h - l * o * x + s * p * x) * E, i[3] = (d * p * a - l * f * a - d * o * h + s * f * h + l * o * m - s * p * m) * E, i[4] = b * E, i[5] = (u * y * a - g * f * a + g * o * m - r * y * m - u * o * x + r * f * x) * E, i[6] = (g * p * a - c * y * a - g * o * h + r * y * h + c * o * x - r * p * x) * E, i[7] = (c * f * a - u * p * a + u * o * h - r * f * h - c * o * m + r * p * m) * E, i[8] = M * E, i[9] = (g * d * a - u * v * a - g * s * m + r * v * m + u * s * x - r * d * x) * E, i[10] = (c * v * a - g * l * a + g * s * h - r * v * h - c * s * x + r * l * x) * E, i[11] = (u * l * a - c * d * a - u * s * h + r * d * h + c * s * m - r * l * m) * E, i[12] = S * E, i[13] = (u * v * o - g * d * o + g * s * f - r * v * f - u * s * y + r * d * y) * E, i[14] = (g * l * o - c * v * o - g * s * p + r * v * p + c * s * y - r * l * y) * E, i[15] = (c * d * o - u * l * o + u * s * p - r * d * p - c * s * f + r * l * f) * E, this
        },
        scale: function(t) {
            var e = this.elements,
                i = t.x,
                n = t.y,
                r = t.z;
            return e[0] *= i, e[4] *= n, e[8] *= r, e[1] *= i, e[5] *= n, e[9] *= r, e[2] *= i, e[6] *= n, e[10] *= r, e[3] *= i, e[7] *= n, e[11] *= r, this
        },
        getMaxScaleOnAxis: function() {
            var t = this.elements,
                e = t[0] * t[0] + t[1] * t[1] + t[2] * t[2],
                i = t[4] * t[4] + t[5] * t[5] + t[6] * t[6],
                n = t[8] * t[8] + t[9] * t[9] + t[10] * t[10];
            return Math.sqrt(Math.max(e, i, n))
        },
        makeTranslation: function(t, e, i) {
            return this.set(1, 0, 0, t, 0, 1, 0, e, 0, 0, 1, i, 0, 0, 0, 1), this
        },
        makeRotationX: function(t) {
            var e = Math.cos(t),
                i = Math.sin(t);
            return this.set(1, 0, 0, 0, 0, e, -i, 0, 0, i, e, 0, 0, 0, 0, 1), this
        },
        makeRotationY: function(t) {
            var e = Math.cos(t),
                i = Math.sin(t);
            return this.set(e, 0, i, 0, 0, 1, 0, 0, -i, 0, e, 0, 0, 0, 0, 1), this
        },
        makeRotationZ: function(t) {
            var e = Math.cos(t),
                i = Math.sin(t);
            return this.set(e, -i, 0, 0, i, e, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this
        },
        makeRotationAxis: function(t, e) {
            var i = Math.cos(e),
                n = Math.sin(e),
                r = 1 - i,
                s = t.x,
                o = t.y,
                a = t.z,
                c = r * s,
                l = r * o;
            return this.set(c * s + i, c * o - n * a, c * a + n * o, 0, c * o + n * a, l * o + i, l * a - n * s, 0, c * a - n * o, l * a + n * s, r * a * a + i, 0, 0, 0, 0, 1), this
        },
        makeScale: function(t, e, i) {
            return this.set(t, 0, 0, 0, 0, e, 0, 0, 0, 0, i, 0, 0, 0, 0, 1), this
        },
        makeShear: function(t, e, i) {
            return this.set(1, e, i, 0, t, 1, i, 0, t, e, 1, 0, 0, 0, 0, 1), this
        },
        compose: function(t, e, i) {
            var n = this.elements,
                r = e._x,
                s = e._y,
                o = e._z,
                a = e._w,
                c = r + r,
                l = s + s,
                p = o + o,
                h = r * c,
                u = r * l,
                d = r * p,
                f = s * l,
                m = s * p,
                g = o * p,
                v = a * c,
                y = a * l,
                x = a * p,
                w = i.x,
                b = i.y,
                M = i.z;
            return n[0] = (1 - (f + g)) * w, n[1] = (u + x) * w, n[2] = (d - y) * w, n[3] = 0, n[4] = (u - x) * b, n[5] = (1 - (h + g)) * b, n[6] = (m + v) * b, n[7] = 0, n[8] = (d + y) * M, n[9] = (m - v) * M, n[10] = (1 - (h + f)) * M, n[11] = 0, n[12] = t.x, n[13] = t.y, n[14] = t.z, n[15] = 1, this
        },
        decompose: (o = new Qe, a = new Ke, function(t, e, i) {
            var n = this.elements,
                r = o.set(n[0], n[1], n[2]).length(),
                s = o.set(n[4], n[5], n[6]).length(),
                c = o.set(n[8], n[9], n[10]).length();
            this.determinant() < 0 && (r = -r), t.x = n[12], t.y = n[13], t.z = n[14], a.copy(this);
            var l = 1 / r,
                p = 1 / s,
                h = 1 / c;
            return a.elements[0] *= l, a.elements[1] *= l, a.elements[2] *= l, a.elements[4] *= p, a.elements[5] *= p, a.elements[6] *= p, a.elements[8] *= h, a.elements[9] *= h, a.elements[10] *= h, e.setFromRotationMatrix(a), i.x = r, i.y = s, i.z = c, this
        }),
        makePerspective: function(t, e, i, n, r, s) {
            void 0 === s && console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");
            var o = this.elements,
                a = 2 * r / (e - t),
                c = 2 * r / (i - n),
                l = (e + t) / (e - t),
                p = (i + n) / (i - n),
                h = -(s + r) / (s - r),
                u = -2 * s * r / (s - r);
            return o[0] = a, o[4] = 0, o[8] = l, o[12] = 0, o[1] = 0, o[5] = c, o[9] = p, o[13] = 0, o[2] = 0, o[6] = 0, o[10] = h, o[14] = u, o[3] = 0, o[7] = 0, o[11] = -1, o[15] = 0, this
        },
        makeOrthographic: function(t, e, i, n, r, s) {
            var o = this.elements,
                a = 1 / (e - t),
                c = 1 / (i - n),
                l = 1 / (s - r),
                p = (e + t) * a,
                h = (i + n) * c,
                u = (s + r) * l;
            return o[0] = 2 * a, o[4] = 0, o[8] = 0, o[12] = -p, o[1] = 0, o[5] = 2 * c, o[9] = 0, o[13] = -h, o[2] = 0, o[6] = 0, o[10] = -2 * l, o[14] = -u, o[3] = 0, o[7] = 0, o[11] = 0, o[15] = 1, this
        },
        equals: function(t) {
            for (var e = this.elements, i = t.elements, n = 0; n < 16; n++)
                if (e[n] !== i[n]) return !1;
            return !0
        },
        fromArray: function(t, e) {
            void 0 === e && (e = 0);
            for (var i = 0; i < 16; i++) this.elements[i] = t[i + e];
            return this
        },
        toArray: function(t, e) {
            void 0 === t && (t = []), void 0 === e && (e = 0);
            var i = this.elements;
            return t[e] = i[0], t[e + 1] = i[1], t[e + 2] = i[2], t[e + 3] = i[3], t[e + 4] = i[4], t[e + 5] = i[5], t[e + 6] = i[6], t[e + 7] = i[7], t[e + 8] = i[8], t[e + 9] = i[9], t[e + 10] = i[10], t[e + 11] = i[11], t[e + 12] = i[12], t[e + 13] = i[13], t[e + 14] = i[14], t[e + 15] = i[15], t
        }
    }), Object.assign(Je, {
        slerp: function(t, e, i, n) {
            return i.copy(t).slerp(e, n)
        },
        slerpFlat: function(t, e, i, n, r, s, o) {
            var a = i[n + 0],
                c = i[n + 1],
                l = i[n + 2],
                p = i[n + 3],
                h = r[s + 0],
                u = r[s + 1],
                d = r[s + 2],
                f = r[s + 3];
            if (p !== f || a !== h || c !== u || l !== d) {
                var m = 1 - o,
                    g = a * h + c * u + l * d + p * f,
                    v = g >= 0 ? 1 : -1,
                    y = 1 - g * g;
                if (y > Number.EPSILON) {
                    var x = Math.sqrt(y),
                        w = Math.atan2(x, g * v);
                    m = Math.sin(m * w) / x, o = Math.sin(o * w) / x
                }
                var b = o * v;
                if (a = a * m + h * b, c = c * m + u * b, l = l * m + d * b, p = p * m + f * b, m === 1 - o) {
                    var M = 1 / Math.sqrt(a * a + c * c + l * l + p * p);
                    a *= M, c *= M, l *= M, p *= M
                }
            }
            t[e] = a, t[e + 1] = c, t[e + 2] = l, t[e + 3] = p
        }
    }), Object.defineProperties(Je.prototype, {
        x: {
            get: function() {
                return this._x
            },
            set: function(t) {
                this._x = t, this.onChangeCallback()
            }
        },
        y: {
            get: function() {
                return this._y
            },
            set: function(t) {
                this._y = t, this.onChangeCallback()
            }
        },
        z: {
            get: function() {
                return this._z
            },
            set: function(t) {
                this._z = t, this.onChangeCallback()
            }
        },
        w: {
            get: function() {
                return this._w
            },
            set: function(t) {
                this._w = t, this.onChangeCallback()
            }
        }
    }), Object.assign(Je.prototype, {
        set: function(t, e, i, n) {
            return this._x = t, this._y = e, this._z = i, this._w = n, this.onChangeCallback(), this
        },
        clone: function() {
            return new this.constructor(this._x, this._y, this._z, this._w)
        },
        copy: function(t) {
            return this._x = t.x, this._y = t.y, this._z = t.z, this._w = t.w, this.onChangeCallback(), this
        },
        setFromEuler: function(t, e) {
            if (!t || !t.isEuler) throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
            var i = t._x,
                n = t._y,
                r = t._z,
                s = t.order,
                o = Math.cos,
                a = Math.sin,
                c = o(i / 2),
                l = o(n / 2),
                p = o(r / 2),
                h = a(i / 2),
                u = a(n / 2),
                d = a(r / 2);
            return "XYZ" === s ? (this._x = h * l * p + c * u * d, this._y = c * u * p - h * l * d, this._z = c * l * d + h * u * p, this._w = c * l * p - h * u * d) : "YXZ" === s ? (this._x = h * l * p + c * u * d, this._y = c * u * p - h * l * d, this._z = c * l * d - h * u * p, this._w = c * l * p + h * u * d) : "ZXY" === s ? (this._x = h * l * p - c * u * d, this._y = c * u * p + h * l * d, this._z = c * l * d + h * u * p, this._w = c * l * p - h * u * d) : "ZYX" === s ? (this._x = h * l * p - c * u * d, this._y = c * u * p + h * l * d, this._z = c * l * d - h * u * p, this._w = c * l * p + h * u * d) : "YZX" === s ? (this._x = h * l * p + c * u * d, this._y = c * u * p + h * l * d, this._z = c * l * d - h * u * p, this._w = c * l * p - h * u * d) : "XZY" === s && (this._x = h * l * p - c * u * d, this._y = c * u * p - h * l * d, this._z = c * l * d + h * u * p, this._w = c * l * p + h * u * d), !1 !== e && this.onChangeCallback(), this
        },
        setFromAxisAngle: function(t, e) {
            var i = e / 2,
                n = Math.sin(i);
            return this._x = t.x * n, this._y = t.y * n, this._z = t.z * n, this._w = Math.cos(i), this.onChangeCallback(), this
        },
        setFromRotationMatrix: function(t) {
            var e, i = t.elements,
                n = i[0],
                r = i[4],
                s = i[8],
                o = i[1],
                a = i[5],
                c = i[9],
                l = i[2],
                p = i[6],
                h = i[10],
                u = n + a + h;
            return u > 0 ? (e = .5 / Math.sqrt(u + 1), this._w = .25 / e, this._x = (p - c) * e, this._y = (s - l) * e, this._z = (o - r) * e) : n > a && n > h ? (e = 2 * Math.sqrt(1 + n - a - h), this._w = (p - c) / e, this._x = .25 * e, this._y = (r + o) / e, this._z = (s + l) / e) : a > h ? (e = 2 * Math.sqrt(1 + a - n - h), this._w = (s - l) / e, this._x = (r + o) / e, this._y = .25 * e, this._z = (c + p) / e) : (e = 2 * Math.sqrt(1 + h - n - a), this._w = (o - r) / e, this._x = (s + l) / e, this._y = (c + p) / e, this._z = .25 * e), this.onChangeCallback(), this
        },
        setFromUnitVectors: function() {
            var t, e = new Qe;
            return function(i, n) {
                return void 0 === e && (e = new Qe), (t = i.dot(n) + 1) < 1e-6 ? (t = 0, Math.abs(i.x) > Math.abs(i.z) ? e.set(-i.y, i.x, 0) : e.set(0, -i.z, i.y)) : e.crossVectors(i, n), this._x = e.x, this._y = e.y, this._z = e.z, this._w = t, this.normalize()
            }
        }(),
        angleTo: function(t) {
            return 2 * Math.acos(Math.abs(qe.clamp(this.dot(t), -1, 1)))
        },
        rotateTowards: function(t, e) {
            var i = this.angleTo(t);
            if (0 === i) return this;
            var n = Math.min(1, e / i);
            return this.slerp(t, n), this
        },
        inverse: function() {
            return this.conjugate()
        },
        conjugate: function() {
            return this._x *= -1, this._y *= -1, this._z *= -1, this.onChangeCallback(), this
        },
        dot: function(t) {
            return this._x * t._x + this._y * t._y + this._z * t._z + this._w * t._w
        },
        lengthSq: function() {
            return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w
        },
        length: function() {
            return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w)
        },
        normalize: function() {
            var t = this.length();
            return 0 === t ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (t = 1 / t, this._x = this._x * t, this._y = this._y * t, this._z = this._z * t, this._w = this._w * t), this.onChangeCallback(), this
        },
        multiply: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."), this.multiplyQuaternions(t, e)) : this.multiplyQuaternions(this, t)
        },
        premultiply: function(t) {
            return this.multiplyQuaternions(t, this)
        },
        multiplyQuaternions: function(t, e) {
            var i = t._x,
                n = t._y,
                r = t._z,
                s = t._w,
                o = e._x,
                a = e._y,
                c = e._z,
                l = e._w;
            return this._x = i * l + s * o + n * c - r * a, this._y = n * l + s * a + r * o - i * c, this._z = r * l + s * c + i * a - n * o, this._w = s * l - i * o - n * a - r * c, this.onChangeCallback(), this
        },
        slerp: function(t, e) {
            if (0 === e) return this;
            if (1 === e) return this.copy(t);
            var i = this._x,
                n = this._y,
                r = this._z,
                s = this._w,
                o = s * t._w + i * t._x + n * t._y + r * t._z;
            if (o < 0 ? (this._w = -t._w, this._x = -t._x, this._y = -t._y, this._z = -t._z, o = -o) : this.copy(t), o >= 1) return this._w = s, this._x = i, this._y = n, this._z = r, this;
            var a = 1 - o * o;
            if (a <= Number.EPSILON) {
                var c = 1 - e;
                return this._w = c * s + e * this._w, this._x = c * i + e * this._x, this._y = c * n + e * this._y, this._z = c * r + e * this._z, this.normalize()
            }
            var l = Math.sqrt(a),
                p = Math.atan2(l, o),
                h = Math.sin((1 - e) * p) / l,
                u = Math.sin(e * p) / l;
            return this._w = s * h + this._w * u, this._x = i * h + this._x * u, this._y = n * h + this._y * u, this._z = r * h + this._z * u, this.onChangeCallback(), this
        },
        equals: function(t) {
            return t._x === this._x && t._y === this._y && t._z === this._z && t._w === this._w
        },
        fromArray: function(t, e) {
            return void 0 === e && (e = 0), this._x = t[e], this._y = t[e + 1], this._z = t[e + 2], this._w = t[e + 3], this.onChangeCallback(), this
        },
        toArray: function(t, e) {
            return void 0 === t && (t = []), void 0 === e && (e = 0), t[e] = this._x, t[e + 1] = this._y, t[e + 2] = this._z, t[e + 3] = this._w, t
        },
        onChange: function(t) {
            return this.onChangeCallback = t, this
        },
        onChangeCallback: function() {}
    }), Object.assign(Qe.prototype, {
        isVector3: !0,
        set: function(t, e, i) {
            return this.x = t, this.y = e, this.z = i, this
        },
        setScalar: function(t) {
            return this.x = t, this.y = t, this.z = t, this
        },
        setX: function(t) {
            return this.x = t, this
        },
        setY: function(t) {
            return this.y = t, this
        },
        setZ: function(t) {
            return this.z = t, this
        },
        setComponent: function(t, e) {
            switch (t) {
                case 0:
                    this.x = e;
                    break;
                case 1:
                    this.y = e;
                    break;
                case 2:
                    this.z = e;
                    break;
                default:
                    throw new Error("index is out of range: " + t)
            }
            return this
        },
        getComponent: function(t) {
            switch (t) {
                case 0:
                    return this.x;
                case 1:
                    return this.y;
                case 2:
                    return this.z;
                default:
                    throw new Error("index is out of range: " + t)
            }
        },
        clone: function() {
            return new this.constructor(this.x, this.y, this.z)
        },
        copy: function(t) {
            return this.x = t.x, this.y = t.y, this.z = t.z, this
        },
        add: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(t, e)) : (this.x += t.x, this.y += t.y, this.z += t.z, this)
        },
        addScalar: function(t) {
            return this.x += t, this.y += t, this.z += t, this
        },
        addVectors: function(t, e) {
            return this.x = t.x + e.x, this.y = t.y + e.y, this.z = t.z + e.z, this
        },
        addScaledVector: function(t, e) {
            return this.x += t.x * e, this.y += t.y * e, this.z += t.z * e, this
        },
        sub: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(t, e)) : (this.x -= t.x, this.y -= t.y, this.z -= t.z, this)
        },
        subScalar: function(t) {
            return this.x -= t, this.y -= t, this.z -= t, this
        },
        subVectors: function(t, e) {
            return this.x = t.x - e.x, this.y = t.y - e.y, this.z = t.z - e.z, this
        },
        multiply: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."), this.multiplyVectors(t, e)) : (this.x *= t.x, this.y *= t.y, this.z *= t.z, this)
        },
        multiplyScalar: function(t) {
            return this.x *= t, this.y *= t, this.z *= t, this
        },
        multiplyVectors: function(t, e) {
            return this.x = t.x * e.x, this.y = t.y * e.y, this.z = t.z * e.z, this
        },
        applyEuler: (f = new Je, function(t) {
            return t && t.isEuler || console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."), this.applyQuaternion(f.setFromEuler(t))
        }),
        applyAxisAngle: function() {
            var t = new Je;
            return function(e, i) {
                return this.applyQuaternion(t.setFromAxisAngle(e, i))
            }
        }(),
        applyMatrix3: function(t) {
            var e = this.x,
                i = this.y,
                n = this.z,
                r = t.elements;
            return this.x = r[0] * e + r[3] * i + r[6] * n, this.y = r[1] * e + r[4] * i + r[7] * n, this.z = r[2] * e + r[5] * i + r[8] * n, this
        },
        applyMatrix4: function(t) {
            var e = this.x,
                i = this.y,
                n = this.z,
                r = t.elements,
                s = 1 / (r[3] * e + r[7] * i + r[11] * n + r[15]);
            return this.x = (r[0] * e + r[4] * i + r[8] * n + r[12]) * s, this.y = (r[1] * e + r[5] * i + r[9] * n + r[13]) * s, this.z = (r[2] * e + r[6] * i + r[10] * n + r[14]) * s, this
        },
        applyQuaternion: function(t) {
            var e = this.x,
                i = this.y,
                n = this.z,
                r = t.x,
                s = t.y,
                o = t.z,
                a = t.w,
                c = a * e + s * n - o * i,
                l = a * i + o * e - r * n,
                p = a * n + r * i - s * e,
                h = -r * e - s * i - o * n;
            return this.x = c * a + h * -r + l * -o - p * -s, this.y = l * a + h * -s + p * -r - c * -o, this.z = p * a + h * -o + c * -s - l * -r, this
        },
        project: function() {
            var t = new Ke;
            return function(e) {
                return t.multiplyMatrices(e.projectionMatrix, t.getInverse(e.matrixWorld)), this.applyMatrix4(t)
            }
        }(),
        unproject: function() {
            var t = new Ke;
            return function(e) {
                return t.multiplyMatrices(e.matrixWorld, t.getInverse(e.projectionMatrix)), this.applyMatrix4(t)
            }
        }(),
        transformDirection: function(t) {
            var e = this.x,
                i = this.y,
                n = this.z,
                r = t.elements;
            return this.x = r[0] * e + r[4] * i + r[8] * n, this.y = r[1] * e + r[5] * i + r[9] * n, this.z = r[2] * e + r[6] * i + r[10] * n, this.normalize()
        },
        divide: function(t) {
            return this.x /= t.x, this.y /= t.y, this.z /= t.z, this
        },
        divideScalar: function(t) {
            return this.multiplyScalar(1 / t)
        },
        min: function(t) {
            return this.x = Math.min(this.x, t.x), this.y = Math.min(this.y, t.y), this.z = Math.min(this.z, t.z), this
        },
        max: function(t) {
            return this.x = Math.max(this.x, t.x), this.y = Math.max(this.y, t.y), this.z = Math.max(this.z, t.z), this
        },
        clamp: function(t, e) {
            return this.x = Math.max(t.x, Math.min(e.x, this.x)), this.y = Math.max(t.y, Math.min(e.y, this.y)), this.z = Math.max(t.z, Math.min(e.z, this.z)), this
        },
        clampScalar: function() {
            var t = new Qe,
                e = new Qe;
            return function(i, n) {
                return t.set(i, i, i), e.set(n, n, n), this.clamp(t, e)
            }
        }(),
        clampLength: function(t, e) {
            var i = this.length();
            return this.divideScalar(i || 1).multiplyScalar(Math.max(t, Math.min(e, i)))
        },
        floor: function() {
            return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this
        },
        ceil: function() {
            return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this
        },
        round: function() {
            return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this
        },
        roundToZero: function() {
            return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this
        },
        negate: function() {
            return this.x = -this.x, this.y = -this.y, this.z = -this.z, this
        },
        dot: function(t) {
            return this.x * t.x + this.y * t.y + this.z * t.z
        },
        lengthSq: function() {
            return this.x * this.x + this.y * this.y + this.z * this.z
        },
        length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
        },
        manhattanLength: function() {
            return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)
        },
        normalize: function() {
            return this.divideScalar(this.length() || 1)
        },
        setLength: function(t) {
            return this.normalize().multiplyScalar(t)
        },
        lerp: function(t, e) {
            return this.x += (t.x - this.x) * e, this.y += (t.y - this.y) * e, this.z += (t.z - this.z) * e, this
        },
        lerpVectors: function(t, e, i) {
            return this.subVectors(e, t).multiplyScalar(i).add(t)
        },
        cross: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."), this.crossVectors(t, e)) : this.crossVectors(this, t)
        },
        crossVectors: function(t, e) {
            var i = t.x,
                n = t.y,
                r = t.z,
                s = e.x,
                o = e.y,
                a = e.z;
            return this.x = n * a - r * o, this.y = r * s - i * a, this.z = i * o - n * s, this
        },
        projectOnVector: function(t) {
            var e = t.dot(this) / t.lengthSq();
            return this.copy(t).multiplyScalar(e)
        },
        projectOnPlane: function() {
            var t = new Qe;
            return function(e) {
                return t.copy(this).projectOnVector(e), this.sub(t)
            }
        }(),
        reflect: function() {
            var t = new Qe;
            return function(e) {
                return this.sub(t.copy(e).multiplyScalar(2 * this.dot(e)))
            }
        }(),
        angleTo: function(t) {
            var e = this.dot(t) / Math.sqrt(this.lengthSq() * t.lengthSq());
            return Math.acos(qe.clamp(e, -1, 1))
        },
        distanceTo: function(t) {
            return Math.sqrt(this.distanceToSquared(t))
        },
        distanceToSquared: function(t) {
            var e = this.x - t.x,
                i = this.y - t.y,
                n = this.z - t.z;
            return e * e + i * i + n * n
        },
        manhattanDistanceTo: function(t) {
            return Math.abs(this.x - t.x) + Math.abs(this.y - t.y) + Math.abs(this.z - t.z)
        },
        setFromSpherical: function(t) {
            var e = Math.sin(t.phi) * t.radius;
            return this.x = e * Math.sin(t.theta), this.y = Math.cos(t.phi) * t.radius, this.z = e * Math.cos(t.theta), this
        },
        setFromCylindrical: function(t) {
            return this.x = t.radius * Math.sin(t.theta), this.y = t.y, this.z = t.radius * Math.cos(t.theta), this
        },
        setFromMatrixPosition: function(t) {
            var e = t.elements;
            return this.x = e[12], this.y = e[13], this.z = e[14], this
        },
        setFromMatrixScale: function(t) {
            var e = this.setFromMatrixColumn(t, 0).length(),
                i = this.setFromMatrixColumn(t, 1).length(),
                n = this.setFromMatrixColumn(t, 2).length();
            return this.x = e, this.y = i, this.z = n, this
        },
        setFromMatrixColumn: function(t, e) {
            return this.fromArray(t.elements, 4 * e)
        },
        equals: function(t) {
            return t.x === this.x && t.y === this.y && t.z === this.z
        },
        fromArray: function(t, e) {
            return void 0 === e && (e = 0), this.x = t[e], this.y = t[e + 1], this.z = t[e + 2], this
        },
        toArray: function(t, e) {
            return void 0 === t && (t = []), void 0 === e && (e = 0), t[e] = this.x, t[e + 1] = this.y, t[e + 2] = this.z, t
        },
        fromBufferAttribute: function(t, e, i) {
            return void 0 !== i && console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."), this.x = t.getX(e), this.y = t.getY(e), this.z = t.getZ(e), this
        }
    }), Object.assign($e.prototype, {
        isMatrix3: !0,
        set: function(t, e, i, n, r, s, o, a, c) {
            var l = this.elements;
            return l[0] = t, l[1] = n, l[2] = o, l[3] = e, l[4] = r, l[5] = a, l[6] = i, l[7] = s, l[8] = c, this
        },
        identity: function() {
            return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this
        },
        clone: function() {
            return (new this.constructor).fromArray(this.elements)
        },
        copy: function(t) {
            var e = this.elements,
                i = t.elements;
            return e[0] = i[0], e[1] = i[1], e[2] = i[2], e[3] = i[3], e[4] = i[4], e[5] = i[5], e[6] = i[6], e[7] = i[7], e[8] = i[8], this
        },
        setFromMatrix4: function(t) {
            var e = t.elements;
            return this.set(e[0], e[4], e[8], e[1], e[5], e[9], e[2], e[6], e[10]), this
        },
        applyToBufferAttribute: function() {
            var t = new Qe;
            return function(e) {
                for (var i = 0, n = e.count; i < n; i++) t.x = e.getX(i), t.y = e.getY(i), t.z = e.getZ(i), t.applyMatrix3(this), e.setXYZ(i, t.x, t.y, t.z);
                return e
            }
        }(),
        multiply: function(t) {
            return this.multiplyMatrices(this, t)
        },
        premultiply: function(t) {
            return this.multiplyMatrices(t, this)
        },
        multiplyMatrices: function(t, e) {
            var i = t.elements,
                n = e.elements,
                r = this.elements,
                s = i[0],
                o = i[3],
                a = i[6],
                c = i[1],
                l = i[4],
                p = i[7],
                h = i[2],
                u = i[5],
                d = i[8],
                f = n[0],
                m = n[3],
                g = n[6],
                v = n[1],
                y = n[4],
                x = n[7],
                w = n[2],
                b = n[5],
                M = n[8];
            return r[0] = s * f + o * v + a * w, r[3] = s * m + o * y + a * b, r[6] = s * g + o * x + a * M, r[1] = c * f + l * v + p * w, r[4] = c * m + l * y + p * b, r[7] = c * g + l * x + p * M, r[2] = h * f + u * v + d * w, r[5] = h * m + u * y + d * b, r[8] = h * g + u * x + d * M, this
        },
        multiplyScalar: function(t) {
            var e = this.elements;
            return e[0] *= t, e[3] *= t, e[6] *= t, e[1] *= t, e[4] *= t, e[7] *= t, e[2] *= t, e[5] *= t, e[8] *= t, this
        },
        determinant: function() {
            var t = this.elements,
                e = t[0],
                i = t[1],
                n = t[2],
                r = t[3],
                s = t[4],
                o = t[5],
                a = t[6],
                c = t[7],
                l = t[8];
            return e * s * l - e * o * c - i * r * l + i * o * a + n * r * c - n * s * a
        },
        getInverse: function(t, e) {
            t && t.isMatrix4 && console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");
            var i = t.elements,
                n = this.elements,
                r = i[0],
                s = i[1],
                o = i[2],
                a = i[3],
                c = i[4],
                l = i[5],
                p = i[6],
                h = i[7],
                u = i[8],
                d = u * c - l * h,
                f = l * p - u * a,
                m = h * a - c * p,
                g = r * d + s * f + o * m;
            if (0 === g) {
                var v = "THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";
                if (!0 === e) throw new Error(v);
                return console.warn(v), this.identity()
            }
            var y = 1 / g;
            return n[0] = d * y, n[1] = (o * h - u * s) * y, n[2] = (l * s - o * c) * y, n[3] = f * y, n[4] = (u * r - o * p) * y, n[5] = (o * a - l * r) * y, n[6] = m * y, n[7] = (s * p - h * r) * y, n[8] = (c * r - s * a) * y, this
        },
        transpose: function() {
            var t, e = this.elements;
            return t = e[1], e[1] = e[3], e[3] = t, t = e[2], e[2] = e[6], e[6] = t, t = e[5], e[5] = e[7], e[7] = t, this
        },
        getNormalMatrix: function(t) {
            return this.setFromMatrix4(t).getInverse(this).transpose()
        },
        transposeIntoArray: function(t) {
            var e = this.elements;
            return t[0] = e[0], t[1] = e[3], t[2] = e[6], t[3] = e[1], t[4] = e[4], t[5] = e[7], t[6] = e[2], t[7] = e[5], t[8] = e[8], this
        },
        setUvTransform: function(t, e, i, n, r, s, o) {
            var a = Math.cos(r),
                c = Math.sin(r);
            this.set(i * a, i * c, -i * (a * s + c * o) + s + t, -n * c, n * a, -n * (-c * s + a * o) + o + e, 0, 0, 1)
        },
        scale: function(t, e) {
            var i = this.elements;
            return i[0] *= t, i[3] *= t, i[6] *= t, i[1] *= e, i[4] *= e, i[7] *= e, this
        },
        rotate: function(t) {
            var e = Math.cos(t),
                i = Math.sin(t),
                n = this.elements,
                r = n[0],
                s = n[3],
                o = n[6],
                a = n[1],
                c = n[4],
                l = n[7];
            return n[0] = e * r + i * a, n[3] = e * s + i * c, n[6] = e * o + i * l, n[1] = -i * r + e * a, n[4] = -i * s + e * c, n[7] = -i * o + e * l, this
        },
        translate: function(t, e) {
            var i = this.elements;
            return i[0] += t * i[2], i[3] += t * i[5], i[6] += t * i[8], i[1] += e * i[2], i[4] += e * i[5], i[7] += e * i[8], this
        },
        equals: function(t) {
            for (var e = this.elements, i = t.elements, n = 0; n < 9; n++)
                if (e[n] !== i[n]) return !1;
            return !0
        },
        fromArray: function(t, e) {
            void 0 === e && (e = 0);
            for (var i = 0; i < 9; i++) this.elements[i] = t[i + e];
            return this
        },
        toArray: function(t, e) {
            void 0 === t && (t = []), void 0 === e && (e = 0);
            var i = this.elements;
            return t[e] = i[0], t[e + 1] = i[1], t[e + 2] = i[2], t[e + 3] = i[3], t[e + 4] = i[4], t[e + 5] = i[5], t[e + 6] = i[6], t[e + 7] = i[7], t[e + 8] = i[8], t
        }
    });
    var ti, ei, ii, ni, ri = {
            getDataURL: function(t) {
                var e;
                if (t instanceof HTMLCanvasElement) e = t;
                else {
                    "undefined" != typeof OffscreenCanvas ? e = new OffscreenCanvas(t.width, t.height) : ((e = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")).width = t.width, e.height = t.height);
                    var i = e.getContext("2d");
                    t instanceof ImageData ? i.putImageData(t, 0, 0) : i.drawImage(t, 0, 0, t.width, t.height)
                }
                return e.width > 2048 || e.height > 2048 ? e.toDataURL("image/jpeg", .6) : e.toDataURL("image/png")
            }
        },
        si = 0;

    function oi(t, e, i, n, r, s, o, a, c, l) {
        Object.defineProperty(this, "id", {
            value: si++
        }), this.uuid = qe.generateUUID(), this.name = "", this.image = void 0 !== t ? t : oi.DEFAULT_IMAGE, this.mipmaps = [], this.mapping = void 0 !== e ? e : oi.DEFAULT_MAPPING, this.wrapS = void 0 !== i ? i : At, this.wrapT = void 0 !== n ? n : At, this.magFilter = void 0 !== r ? r : Ct, this.minFilter = void 0 !== s ? s : Ot, this.anisotropy = void 0 !== c ? c : 1, this.format = void 0 !== o ? o : Zt, this.type = void 0 !== a ? a : Dt, this.offset = new Ze(0, 0), this.repeat = new Ze(1, 1), this.center = new Ze(0, 0), this.rotation = 0, this.matrixAutoUpdate = !0, this.matrix = new $e, this.generateMipmaps = !0, this.premultiplyAlpha = !1, this.flipY = !0, this.unpackAlignment = 4, this.encoding = void 0 !== l ? l : Be, this.version = 0, this.onUpdate = null
    }

    function ai(t, e, i, n) {
        this.x = t || 0, this.y = e || 0, this.z = i || 0, this.w = void 0 !== n ? n : 1
    }

    function ci(t, e, i) {
        this.width = t, this.height = e, this.scissor = new ai(0, 0, t, e), this.scissorTest = !1, this.viewport = new ai(0, 0, t, e), void 0 === (i = i || {}).minFilter && (i.minFilter = Ct), this.texture = new oi(void 0, void 0, i.wrapS, i.wrapT, i.magFilter, i.minFilter, i.format, i.type, i.anisotropy, i.encoding), this.texture.generateMipmaps = void 0 === i.generateMipmaps || i.generateMipmaps, this.depthBuffer = void 0 === i.depthBuffer || i.depthBuffer, this.stencilBuffer = void 0 === i.stencilBuffer || i.stencilBuffer, this.depthTexture = void 0 !== i.depthTexture ? i.depthTexture : null
    }

    function li(t, e, i) {
        ci.call(this, t, e, i), this.activeCubeFace = 0, this.activeMipMapLevel = 0
    }

    function pi(t, e, i, n, r, s, o, a, c, l, p, h) {
        oi.call(this, null, s, o, a, c, l, n, r, p, h), this.image = {
            data: t,
            width: e,
            height: i
        }, this.magFilter = void 0 !== c ? c : kt, this.minFilter = void 0 !== l ? l : kt, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1
    }

    function hi(t, e) {
        this.min = void 0 !== t ? t : new Qe(1 / 0, 1 / 0, 1 / 0), this.max = void 0 !== e ? e : new Qe(-1 / 0, -1 / 0, -1 / 0)
    }

    function ui(t, e) {
        this.center = void 0 !== t ? t : new Qe, this.radius = void 0 !== e ? e : 0
    }

    function di(t, e) {
        this.normal = void 0 !== t ? t : new Qe(1, 0, 0), this.constant = void 0 !== e ? e : 0
    }

    function fi(t, e, i, n, r, s) {
        this.planes = [void 0 !== t ? t : new di, void 0 !== e ? e : new di, void 0 !== i ? i : new di, void 0 !== n ? n : new di, void 0 !== r ? r : new di, void 0 !== s ? s : new di]
    }
    oi.DEFAULT_IMAGE = void 0, oi.DEFAULT_MAPPING = yt, oi.prototype = Object.assign(Object.create(n.prototype), {
        constructor: oi,
        isTexture: !0,
        updateMatrix: function() {
            this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y)
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.name = t.name, this.image = t.image, this.mipmaps = t.mipmaps.slice(0), this.mapping = t.mapping, this.wrapS = t.wrapS, this.wrapT = t.wrapT, this.magFilter = t.magFilter, this.minFilter = t.minFilter, this.anisotropy = t.anisotropy, this.format = t.format, this.type = t.type, this.offset.copy(t.offset), this.repeat.copy(t.repeat), this.center.copy(t.center), this.rotation = t.rotation, this.matrixAutoUpdate = t.matrixAutoUpdate, this.matrix.copy(t.matrix), this.generateMipmaps = t.generateMipmaps, this.premultiplyAlpha = t.premultiplyAlpha, this.flipY = t.flipY, this.unpackAlignment = t.unpackAlignment, this.encoding = t.encoding, this
        },
        toJSON: function(t) {
            var e = void 0 === t || "string" == typeof t;
            if (!e && void 0 !== t.textures[this.uuid]) return t.textures[this.uuid];
            var i = {
                metadata: {
                    version: 4.5,
                    type: "Texture",
                    generator: "Texture.toJSON"
                },
                uuid: this.uuid,
                name: this.name,
                mapping: this.mapping,
                repeat: [this.repeat.x, this.repeat.y],
                offset: [this.offset.x, this.offset.y],
                center: [this.center.x, this.center.y],
                rotation: this.rotation,
                wrap: [this.wrapS, this.wrapT],
                format: this.format,
                minFilter: this.minFilter,
                magFilter: this.magFilter,
                anisotropy: this.anisotropy,
                flipY: this.flipY
            };
            if (void 0 !== this.image) {
                var n = this.image;
                if (void 0 === n.uuid && (n.uuid = qe.generateUUID()), !e && void 0 === t.images[n.uuid]) {
                    var r;
                    if (Array.isArray(n)) {
                        r = [];
                        for (var s = 0, o = n.length; s < o; s++) r.push(ri.getDataURL(n[s]))
                    } else r = ri.getDataURL(n);
                    t.images[n.uuid] = {
                        uuid: n.uuid,
                        url: r
                    }
                }
                i.image = n.uuid
            }
            return e || (t.textures[this.uuid] = i), i
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        },
        transformUv: function(t) {
            if (this.mapping === yt) {
                if (t.applyMatrix3(this.matrix), t.x < 0 || t.x > 1) switch (this.wrapS) {
                    case Et:
                        t.x = t.x - Math.floor(t.x);
                        break;
                    case At:
                        t.x = t.x < 0 ? 0 : 1;
                        break;
                    case Lt:
                        1 === Math.abs(Math.floor(t.x) % 2) ? t.x = Math.ceil(t.x) - t.x : t.x = t.x - Math.floor(t.x)
                }
                if (t.y < 0 || t.y > 1) switch (this.wrapT) {
                    case Et:
                        t.y = t.y - Math.floor(t.y);
                        break;
                    case At:
                        t.y = t.y < 0 ? 0 : 1;
                        break;
                    case Lt:
                        1 === Math.abs(Math.floor(t.y) % 2) ? t.y = Math.ceil(t.y) - t.y : t.y = t.y - Math.floor(t.y)
                }
                this.flipY && (t.y = 1 - t.y)
            }
        }
    }), Object.defineProperty(oi.prototype, "needsUpdate", {
        set: function(t) {
            !0 === t && this.version++
        }
    }), Object.assign(ai.prototype, {
        isVector4: !0,
        set: function(t, e, i, n) {
            return this.x = t, this.y = e, this.z = i, this.w = n, this
        },
        setScalar: function(t) {
            return this.x = t, this.y = t, this.z = t, this.w = t, this
        },
        setX: function(t) {
            return this.x = t, this
        },
        setY: function(t) {
            return this.y = t, this
        },
        setZ: function(t) {
            return this.z = t, this
        },
        setW: function(t) {
            return this.w = t, this
        },
        setComponent: function(t, e) {
            switch (t) {
                case 0:
                    this.x = e;
                    break;
                case 1:
                    this.y = e;
                    break;
                case 2:
                    this.z = e;
                    break;
                case 3:
                    this.w = e;
                    break;
                default:
                    throw new Error("index is out of range: " + t)
            }
            return this
        },
        getComponent: function(t) {
            switch (t) {
                case 0:
                    return this.x;
                case 1:
                    return this.y;
                case 2:
                    return this.z;
                case 3:
                    return this.w;
                default:
                    throw new Error("index is out of range: " + t)
            }
        },
        clone: function() {
            return new this.constructor(this.x, this.y, this.z, this.w)
        },
        copy: function(t) {
            return this.x = t.x, this.y = t.y, this.z = t.z, this.w = void 0 !== t.w ? t.w : 1, this
        },
        add: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(t, e)) : (this.x += t.x, this.y += t.y, this.z += t.z, this.w += t.w, this)
        },
        addScalar: function(t) {
            return this.x += t, this.y += t, this.z += t, this.w += t, this
        },
        addVectors: function(t, e) {
            return this.x = t.x + e.x, this.y = t.y + e.y, this.z = t.z + e.z, this.w = t.w + e.w, this
        },
        addScaledVector: function(t, e) {
            return this.x += t.x * e, this.y += t.y * e, this.z += t.z * e, this.w += t.w * e, this
        },
        sub: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(t, e)) : (this.x -= t.x, this.y -= t.y, this.z -= t.z, this.w -= t.w, this)
        },
        subScalar: function(t) {
            return this.x -= t, this.y -= t, this.z -= t, this.w -= t, this
        },
        subVectors: function(t, e) {
            return this.x = t.x - e.x, this.y = t.y - e.y, this.z = t.z - e.z, this.w = t.w - e.w, this
        },
        multiplyScalar: function(t) {
            return this.x *= t, this.y *= t, this.z *= t, this.w *= t, this
        },
        applyMatrix4: function(t) {
            var e = this.x,
                i = this.y,
                n = this.z,
                r = this.w,
                s = t.elements;
            return this.x = s[0] * e + s[4] * i + s[8] * n + s[12] * r, this.y = s[1] * e + s[5] * i + s[9] * n + s[13] * r, this.z = s[2] * e + s[6] * i + s[10] * n + s[14] * r, this.w = s[3] * e + s[7] * i + s[11] * n + s[15] * r, this
        },
        divideScalar: function(t) {
            return this.multiplyScalar(1 / t)
        },
        setAxisAngleFromQuaternion: function(t) {
            this.w = 2 * Math.acos(t.w);
            var e = Math.sqrt(1 - t.w * t.w);
            return e < 1e-4 ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = t.x / e, this.y = t.y / e, this.z = t.z / e), this
        },
        setAxisAngleFromRotationMatrix: function(t) {
            var e, i, n, r, s = t.elements,
                o = s[0],
                a = s[4],
                c = s[8],
                l = s[1],
                p = s[5],
                h = s[9],
                u = s[2],
                d = s[6],
                f = s[10];
            if (Math.abs(a - l) < .01 && Math.abs(c - u) < .01 && Math.abs(h - d) < .01) {
                if (Math.abs(a + l) < .1 && Math.abs(c + u) < .1 && Math.abs(h + d) < .1 && Math.abs(o + p + f - 3) < .1) return this.set(1, 0, 0, 0), this;
                e = Math.PI;
                var m = (o + 1) / 2,
                    g = (p + 1) / 2,
                    v = (f + 1) / 2,
                    y = (a + l) / 4,
                    x = (c + u) / 4,
                    w = (h + d) / 4;
                return m > g && m > v ? m < .01 ? (i = 0, n = .707106781, r = .707106781) : (n = y / (i = Math.sqrt(m)), r = x / i) : g > v ? g < .01 ? (i = .707106781, n = 0, r = .707106781) : (i = y / (n = Math.sqrt(g)), r = w / n) : v < .01 ? (i = .707106781, n = .707106781, r = 0) : (i = x / (r = Math.sqrt(v)), n = w / r), this.set(i, n, r, e), this
            }
            var b = Math.sqrt((d - h) * (d - h) + (c - u) * (c - u) + (l - a) * (l - a));
            return Math.abs(b) < .001 && (b = 1), this.x = (d - h) / b, this.y = (c - u) / b, this.z = (l - a) / b, this.w = Math.acos((o + p + f - 1) / 2), this
        },
        min: function(t) {
            return this.x = Math.min(this.x, t.x), this.y = Math.min(this.y, t.y), this.z = Math.min(this.z, t.z), this.w = Math.min(this.w, t.w), this
        },
        max: function(t) {
            return this.x = Math.max(this.x, t.x), this.y = Math.max(this.y, t.y), this.z = Math.max(this.z, t.z), this.w = Math.max(this.w, t.w), this
        },
        clamp: function(t, e) {
            return this.x = Math.max(t.x, Math.min(e.x, this.x)), this.y = Math.max(t.y, Math.min(e.y, this.y)), this.z = Math.max(t.z, Math.min(e.z, this.z)), this.w = Math.max(t.w, Math.min(e.w, this.w)), this
        },
        clampScalar: function() {
            var t, e;
            return function(i, n) {
                return void 0 === t && (t = new ai, e = new ai), t.set(i, i, i, i), e.set(n, n, n, n), this.clamp(t, e)
            }
        }(),
        clampLength: function(t, e) {
            var i = this.length();
            return this.divideScalar(i || 1).multiplyScalar(Math.max(t, Math.min(e, i)))
        },
        floor: function() {
            return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this
        },
        ceil: function() {
            return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this
        },
        round: function() {
            return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this
        },
        roundToZero: function() {
            return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w), this
        },
        negate: function() {
            return this.x = -this.x, this.y = -this.y, this.z = -this.z, this.w = -this.w, this
        },
        dot: function(t) {
            return this.x * t.x + this.y * t.y + this.z * t.z + this.w * t.w
        },
        lengthSq: function() {
            return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
        },
        length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)
        },
        manhattanLength: function() {
            return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
        },
        normalize: function() {
            return this.divideScalar(this.length() || 1)
        },
        setLength: function(t) {
            return this.normalize().multiplyScalar(t)
        },
        lerp: function(t, e) {
            return this.x += (t.x - this.x) * e, this.y += (t.y - this.y) * e, this.z += (t.z - this.z) * e, this.w += (t.w - this.w) * e, this
        },
        lerpVectors: function(t, e, i) {
            return this.subVectors(e, t).multiplyScalar(i).add(t)
        },
        equals: function(t) {
            return t.x === this.x && t.y === this.y && t.z === this.z && t.w === this.w
        },
        fromArray: function(t, e) {
            return void 0 === e && (e = 0), this.x = t[e], this.y = t[e + 1], this.z = t[e + 2], this.w = t[e + 3], this
        },
        toArray: function(t, e) {
            return void 0 === t && (t = []), void 0 === e && (e = 0), t[e] = this.x, t[e + 1] = this.y, t[e + 2] = this.z, t[e + 3] = this.w, t
        },
        fromBufferAttribute: function(t, e, i) {
            return void 0 !== i && console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."), this.x = t.getX(e), this.y = t.getY(e), this.z = t.getZ(e), this.w = t.getW(e), this
        }
    }), ci.prototype = Object.assign(Object.create(n.prototype), {
        constructor: ci,
        isWebGLRenderTarget: !0,
        setSize: function(t, e) {
            this.width === t && this.height === e || (this.width = t, this.height = e, this.dispose()), this.viewport.set(0, 0, t, e), this.scissor.set(0, 0, t, e)
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.width = t.width, this.height = t.height, this.viewport.copy(t.viewport), this.texture = t.texture.clone(), this.depthBuffer = t.depthBuffer, this.stencilBuffer = t.stencilBuffer, this.depthTexture = t.depthTexture, this
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }), li.prototype = Object.create(ci.prototype), li.prototype.constructor = li, li.prototype.isWebGLRenderTargetCube = !0, pi.prototype = Object.create(oi.prototype), pi.prototype.constructor = pi, pi.prototype.isDataTexture = !0, Object.assign(hi.prototype, {
        isBox3: !0,
        set: function(t, e) {
            return this.min.copy(t), this.max.copy(e), this
        },
        setFromArray: function(t) {
            for (var e = 1 / 0, i = 1 / 0, n = 1 / 0, r = -1 / 0, s = -1 / 0, o = -1 / 0, a = 0, c = t.length; a < c; a += 3) {
                var l = t[a],
                    p = t[a + 1],
                    h = t[a + 2];
                l < e && (e = l), p < i && (i = p), h < n && (n = h), l > r && (r = l), p > s && (s = p), h > o && (o = h)
            }
            return this.min.set(e, i, n), this.max.set(r, s, o), this
        },
        setFromBufferAttribute: function(t) {
            for (var e = 1 / 0, i = 1 / 0, n = 1 / 0, r = -1 / 0, s = -1 / 0, o = -1 / 0, a = 0, c = t.count; a < c; a++) {
                var l = t.getX(a),
                    p = t.getY(a),
                    h = t.getZ(a);
                l < e && (e = l), p < i && (i = p), h < n && (n = h), l > r && (r = l), p > s && (s = p), h > o && (o = h)
            }
            return this.min.set(e, i, n), this.max.set(r, s, o), this
        },
        setFromPoints: function(t) {
            this.makeEmpty();
            for (var e = 0, i = t.length; e < i; e++) this.expandByPoint(t[e]);
            return this
        },
        setFromCenterAndSize: function() {
            var t = new Qe;
            return function(e, i) {
                var n = t.copy(i).multiplyScalar(.5);
                return this.min.copy(e).sub(n), this.max.copy(e).add(n), this
            }
        }(),
        setFromObject: function(t) {
            return this.makeEmpty(), this.expandByObject(t)
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.min.copy(t.min), this.max.copy(t.max), this
        },
        makeEmpty: function() {
            return this.min.x = this.min.y = this.min.z = 1 / 0, this.max.x = this.max.y = this.max.z = -1 / 0, this
        },
        isEmpty: function() {
            return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z
        },
        getCenter: function(t) {
            return void 0 === t && (console.warn("THREE.Box3: .getCenter() target is now required"), t = new Qe), this.isEmpty() ? t.set(0, 0, 0) : t.addVectors(this.min, this.max).multiplyScalar(.5)
        },
        getSize: function(t) {
            return void 0 === t && (console.warn("THREE.Box3: .getSize() target is now required"), t = new Qe), this.isEmpty() ? t.set(0, 0, 0) : t.subVectors(this.max, this.min)
        },
        expandByPoint: function(t) {
            return this.min.min(t), this.max.max(t), this
        },
        expandByVector: function(t) {
            return this.min.sub(t), this.max.add(t), this
        },
        expandByScalar: function(t) {
            return this.min.addScalar(-t), this.max.addScalar(t), this
        },
        expandByObject: function() {
            var t, e, i, n = new Qe;

            function r(r) {
                var s = r.geometry;
                if (void 0 !== s)
                    if (s.isGeometry) {
                        var o = s.vertices;
                        for (e = 0, i = o.length; e < i; e++) n.copy(o[e]), n.applyMatrix4(r.matrixWorld), t.expandByPoint(n)
                    } else if (s.isBufferGeometry) {
                    var a = s.attributes.position;
                    if (void 0 !== a)
                        for (e = 0, i = a.count; e < i; e++) n.fromBufferAttribute(a, e).applyMatrix4(r.matrixWorld), t.expandByPoint(n)
                }
            }
            return function(e) {
                return t = this, e.updateMatrixWorld(!0), e.traverse(r), this
            }
        }(),
        containsPoint: function(t) {
            return !(t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y || t.z < this.min.z || t.z > this.max.z)
        },
        containsBox: function(t) {
            return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y && this.min.z <= t.min.z && t.max.z <= this.max.z
        },
        getParameter: function(t, e) {
            return void 0 === e && (console.warn("THREE.Box3: .getParameter() target is now required"), e = new Qe), e.set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y), (t.z - this.min.z) / (this.max.z - this.min.z))
        },
        intersectsBox: function(t) {
            return !(t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y || t.max.z < this.min.z || t.min.z > this.max.z)
        },
        intersectsSphere: (ti = new Qe, function(t) {
            return this.clampPoint(t.center, ti), ti.distanceToSquared(t.center) <= t.radius * t.radius
        }),
        intersectsPlane: function(t) {
            var e, i;
            return t.normal.x > 0 ? (e = t.normal.x * this.min.x, i = t.normal.x * this.max.x) : (e = t.normal.x * this.max.x, i = t.normal.x * this.min.x), t.normal.y > 0 ? (e += t.normal.y * this.min.y, i += t.normal.y * this.max.y) : (e += t.normal.y * this.max.y, i += t.normal.y * this.min.y), t.normal.z > 0 ? (e += t.normal.z * this.min.z, i += t.normal.z * this.max.z) : (e += t.normal.z * this.max.z, i += t.normal.z * this.min.z), e <= t.constant && i >= t.constant
        },
        intersectsTriangle: function() {
            var t = new Qe,
                e = new Qe,
                i = new Qe,
                n = new Qe,
                r = new Qe,
                s = new Qe,
                o = new Qe,
                a = new Qe,
                c = new Qe,
                l = new Qe;

            function p(n) {
                var r, s;
                for (r = 0, s = n.length - 3; r <= s; r += 3) {
                    o.fromArray(n, r);
                    var a = c.x * Math.abs(o.x) + c.y * Math.abs(o.y) + c.z * Math.abs(o.z),
                        l = t.dot(o),
                        p = e.dot(o),
                        h = i.dot(o);
                    if (Math.max(-Math.max(l, p, h), Math.min(l, p, h)) > a) return !1
                }
                return !0
            }
            return function(o) {
                if (this.isEmpty()) return !1;
                this.getCenter(a), c.subVectors(this.max, a), t.subVectors(o.a, a), e.subVectors(o.b, a), i.subVectors(o.c, a), n.subVectors(e, t), r.subVectors(i, e), s.subVectors(t, i);
                var h = [0, -n.z, n.y, 0, -r.z, r.y, 0, -s.z, s.y, n.z, 0, -n.x, r.z, 0, -r.x, s.z, 0, -s.x, -n.y, n.x, 0, -r.y, r.x, 0, -s.y, s.x, 0];
                return !!p(h) && (!!p(h = [1, 0, 0, 0, 1, 0, 0, 0, 1]) && (l.crossVectors(n, r), p(h = [l.x, l.y, l.z])))
            }
        }(),
        clampPoint: function(t, e) {
            return void 0 === e && (console.warn("THREE.Box3: .clampPoint() target is now required"), e = new Qe), e.copy(t).clamp(this.min, this.max)
        },
        distanceToPoint: function() {
            var t = new Qe;
            return function(e) {
                return t.copy(e).clamp(this.min, this.max).sub(e).length()
            }
        }(),
        getBoundingSphere: function() {
            var t = new Qe;
            return function(e) {
                return void 0 === e && (console.warn("THREE.Box3: .getBoundingSphere() target is now required"), e = new ui), this.getCenter(e.center), e.radius = .5 * this.getSize(t).length(), e
            }
        }(),
        intersect: function(t) {
            return this.min.max(t.min), this.max.min(t.max), this.isEmpty() && this.makeEmpty(), this
        },
        union: function(t) {
            return this.min.min(t.min), this.max.max(t.max), this
        },
        applyMatrix4: function(t) {
            if (this.isEmpty()) return this;
            var e = t.elements,
                i = e[0] * this.min.x,
                n = e[1] * this.min.x,
                r = e[2] * this.min.x,
                s = e[0] * this.max.x,
                o = e[1] * this.max.x,
                a = e[2] * this.max.x,
                c = e[4] * this.min.y,
                l = e[5] * this.min.y,
                p = e[6] * this.min.y,
                h = e[4] * this.max.y,
                u = e[5] * this.max.y,
                d = e[6] * this.max.y,
                f = e[8] * this.min.z,
                m = e[9] * this.min.z,
                g = e[10] * this.min.z,
                v = e[8] * this.max.z,
                y = e[9] * this.max.z,
                x = e[10] * this.max.z;
            return this.min.x = Math.min(i, s) + Math.min(c, h) + Math.min(f, v) + e[12], this.min.y = Math.min(n, o) + Math.min(l, u) + Math.min(m, y) + e[13], this.min.z = Math.min(r, a) + Math.min(p, d) + Math.min(g, x) + e[14], this.max.x = Math.max(i, s) + Math.max(c, h) + Math.max(f, v) + e[12], this.max.y = Math.max(n, o) + Math.max(l, u) + Math.max(m, y) + e[13], this.max.z = Math.max(r, a) + Math.max(p, d) + Math.max(g, x) + e[14], this
        },
        translate: function(t) {
            return this.min.add(t), this.max.add(t), this
        },
        equals: function(t) {
            return t.min.equals(this.min) && t.max.equals(this.max)
        }
    }), Object.assign(ui.prototype, {
        set: function(t, e) {
            return this.center.copy(t), this.radius = e, this
        },
        setFromPoints: (ei = new hi, function(t, e) {
            var i = this.center;
            void 0 !== e ? i.copy(e) : ei.setFromPoints(t).getCenter(i);
            for (var n = 0, r = 0, s = t.length; r < s; r++) n = Math.max(n, i.distanceToSquared(t[r]));
            return this.radius = Math.sqrt(n), this
        }),
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.center.copy(t.center), this.radius = t.radius, this
        },
        empty: function() {
            return this.radius <= 0
        },
        containsPoint: function(t) {
            return t.distanceToSquared(this.center) <= this.radius * this.radius
        },
        distanceToPoint: function(t) {
            return t.distanceTo(this.center) - this.radius
        },
        intersectsSphere: function(t) {
            var e = this.radius + t.radius;
            return t.center.distanceToSquared(this.center) <= e * e
        },
        intersectsBox: function(t) {
            return t.intersectsSphere(this)
        },
        intersectsPlane: function(t) {
            return Math.abs(t.distanceToPoint(this.center)) <= this.radius
        },
        clampPoint: function(t, e) {
            var i = this.center.distanceToSquared(t);
            return void 0 === e && (console.warn("THREE.Sphere: .clampPoint() target is now required"), e = new Qe), e.copy(t), i > this.radius * this.radius && (e.sub(this.center).normalize(), e.multiplyScalar(this.radius).add(this.center)), e
        },
        getBoundingBox: function(t) {
            return void 0 === t && (console.warn("THREE.Sphere: .getBoundingBox() target is now required"), t = new hi), t.set(this.center, this.center), t.expandByScalar(this.radius), t
        },
        applyMatrix4: function(t) {
            return this.center.applyMatrix4(t), this.radius = this.radius * t.getMaxScaleOnAxis(), this
        },
        translate: function(t) {
            return this.center.add(t), this
        },
        equals: function(t) {
            return t.center.equals(this.center) && t.radius === this.radius
        }
    }), Object.assign(di.prototype, {
        set: function(t, e) {
            return this.normal.copy(t), this.constant = e, this
        },
        setComponents: function(t, e, i, n) {
            return this.normal.set(t, e, i), this.constant = n, this
        },
        setFromNormalAndCoplanarPoint: function(t, e) {
            return this.normal.copy(t), this.constant = -e.dot(this.normal), this
        },
        setFromCoplanarPoints: function() {
            var t = new Qe,
                e = new Qe;
            return function(i, n, r) {
                var s = t.subVectors(r, n).cross(e.subVectors(i, n)).normalize();
                return this.setFromNormalAndCoplanarPoint(s, i), this
            }
        }(),
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.normal.copy(t.normal), this.constant = t.constant, this
        },
        normalize: function() {
            var t = 1 / this.normal.length();
            return this.normal.multiplyScalar(t), this.constant *= t, this
        },
        negate: function() {
            return this.constant *= -1, this.normal.negate(), this
        },
        distanceToPoint: function(t) {
            return this.normal.dot(t) + this.constant
        },
        distanceToSphere: function(t) {
            return this.distanceToPoint(t.center) - t.radius
        },
        projectPoint: function(t, e) {
            return void 0 === e && (console.warn("THREE.Plane: .projectPoint() target is now required"), e = new Qe), e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)
        },
        intersectLine: function() {
            var t = new Qe;
            return function(e, i) {
                void 0 === i && (console.warn("THREE.Plane: .intersectLine() target is now required"), i = new Qe);
                var n = e.delta(t),
                    r = this.normal.dot(n);
                if (0 === r) return 0 === this.distanceToPoint(e.start) ? i.copy(e.start) : void 0;
                var s = -(e.start.dot(this.normal) + this.constant) / r;
                return s < 0 || s > 1 ? void 0 : i.copy(n).multiplyScalar(s).add(e.start)
            }
        }(),
        intersectsLine: function(t) {
            var e = this.distanceToPoint(t.start),
                i = this.distanceToPoint(t.end);
            return e < 0 && i > 0 || i < 0 && e > 0
        },
        intersectsBox: function(t) {
            return t.intersectsPlane(this)
        },
        intersectsSphere: function(t) {
            return t.intersectsPlane(this)
        },
        coplanarPoint: function(t) {
            return void 0 === t && (console.warn("THREE.Plane: .coplanarPoint() target is now required"), t = new Qe), t.copy(this.normal).multiplyScalar(-this.constant)
        },
        applyMatrix4: function() {
            var t = new Qe,
                e = new $e;
            return function(i, n) {
                var r = n || e.getNormalMatrix(i),
                    s = this.coplanarPoint(t).applyMatrix4(i),
                    o = this.normal.applyMatrix3(r).normalize();
                return this.constant = -s.dot(o), this
            }
        }(),
        translate: function(t) {
            return this.constant -= t.dot(this.normal), this
        },
        equals: function(t) {
            return t.normal.equals(this.normal) && t.constant === this.constant
        }
    }), Object.assign(fi.prototype, {
        set: function(t, e, i, n, r, s) {
            var o = this.planes;
            return o[0].copy(t), o[1].copy(e), o[2].copy(i), o[3].copy(n), o[4].copy(r), o[5].copy(s), this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            for (var e = this.planes, i = 0; i < 6; i++) e[i].copy(t.planes[i]);
            return this
        },
        setFromMatrix: function(t) {
            var e = this.planes,
                i = t.elements,
                n = i[0],
                r = i[1],
                s = i[2],
                o = i[3],
                a = i[4],
                c = i[5],
                l = i[6],
                p = i[7],
                h = i[8],
                u = i[9],
                d = i[10],
                f = i[11],
                m = i[12],
                g = i[13],
                v = i[14],
                y = i[15];
            return e[0].setComponents(o - n, p - a, f - h, y - m).normalize(), e[1].setComponents(o + n, p + a, f + h, y + m).normalize(), e[2].setComponents(o + r, p + c, f + u, y + g).normalize(), e[3].setComponents(o - r, p - c, f - u, y - g).normalize(), e[4].setComponents(o - s, p - l, f - d, y - v).normalize(), e[5].setComponents(o + s, p + l, f + d, y + v).normalize(), this
        },
        intersectsObject: (ni = new ui, function(t) {
            var e = t.geometry;
            return null === e.boundingSphere && e.computeBoundingSphere(), ni.copy(e.boundingSphere).applyMatrix4(t.matrixWorld), this.intersectsSphere(ni)
        }),
        intersectsSprite: function() {
            var t = new ui;
            return function(e) {
                return t.center.set(0, 0, 0), t.radius = .7071067811865476, t.applyMatrix4(e.matrixWorld), this.intersectsSphere(t)
            }
        }(),
        intersectsSphere: function(t) {
            for (var e = this.planes, i = t.center, n = -t.radius, r = 0; r < 6; r++) {
                if (e[r].distanceToPoint(i) < n) return !1
            }
            return !0
        },
        intersectsBox: (ii = new Qe, function(t) {
            for (var e = this.planes, i = 0; i < 6; i++) {
                var n = e[i];
                if (ii.x = n.normal.x > 0 ? t.max.x : t.min.x, ii.y = n.normal.y > 0 ? t.max.y : t.min.y, ii.z = n.normal.z > 0 ? t.max.z : t.min.z, n.distanceToPoint(ii) < 0) return !1
            }
            return !0
        }),
        containsPoint: function(t) {
            for (var e = this.planes, i = 0; i < 6; i++)
                if (e[i].distanceToPoint(t) < 0) return !1;
            return !0
        }
    });
    var mi, gi = {
            alphamap_fragment: "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n",
            alphamap_pars_fragment: "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif\n",
            alphatest_fragment: "#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n",
            aomap_fragment: "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif\n",
            aomap_pars_fragment: "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",
            begin_vertex: "\nvec3 transformed = vec3( position );\n",
            beginnormal_vertex: "\nvec3 objectNormal = vec3( normal );\n",
            bsdfs: "float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tif( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\treturn distanceFalloff * maxDistanceCutoffFactor;\n#else\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n\t}\n\treturn 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n",
            bumpmap_pars_fragment: "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n",
            clipping_planes_fragment: "#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t#endif\n#endif\n",
            clipping_planes_pars_fragment: "#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n",
            clipping_planes_pars_vertex: "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvarying vec3 vViewPosition;\n#endif\n",
            clipping_planes_vertex: "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n",
            color_fragment: "#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",
            color_pars_fragment: "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n",
            color_pars_vertex: "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",
            color_vertex: "#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",
            common: "#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\n",
            cube_uv_reflection_fragment: "#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif\n",
            defaultnormal_vertex: "vec3 transformedNormal = normalMatrix * objectNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n",
            displacementmap_pars_vertex: "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif\n",
            displacementmap_vertex: "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n",
            emissivemap_fragment: "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n",
            emissivemap_pars_fragment: "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif\n",
            encodings_fragment: "  gl_FragColor = linearToOutputTexel( gl_FragColor );\n",
            encodings_pars_fragment: "\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM            = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat D      = max( maxRange / maxRGB, 1.0 );\n\tD            = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract(Le);\n\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n\treturn vec4( max(vRGB, 0.0), 1.0 );\n}\n",
            envmap_fragment: "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec = normalize( reflectVec );\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif\n",
            envmap_pars_fragment: "#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntensity;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif\n",
            envmap_pars_vertex: "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif\n",
            envmap_physical_pars_fragment: "#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif\n",
            envmap_vertex: "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif\n",
            fog_vertex: "\n#ifdef USE_FOG\nfogDepth = -mvPosition.z;\n#endif",
            fog_pars_vertex: "#ifdef USE_FOG\n  varying float fogDepth;\n#endif\n",
            fog_fragment: "#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n",
            fog_pars_fragment: "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif\n",
            gradientmap_pars_fragment: "#ifdef TOON\n\tuniform sampler2D gradientMap;\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t\t#ifdef USE_GRADIENTMAP\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\t\t#else\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t\t#endif\n\t}\n#endif\n",
            lightmap_fragment: "#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n",
            lightmap_pars_fragment: "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",
            lights_lambert_vertex: "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif\n",
            lights_pars_begin: "uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t\tfloat shadowCameraNear;\n\t\tfloat shadowCameraFar;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif\n",
            lights_phong_fragment: "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",
            lights_phong_pars_fragment: "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)\n",
            lights_physical_fragment: "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n",
            lights_physical_pars_fragment: "struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n",
            lights_fragment_begin: "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearCoatRadiance = vec3( 0.0 );\n#endif\n",
            lights_fragment_maps: "#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\n\t#ifndef STANDARD\n\t\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\n\t#endif\n#endif\n",
            lights_fragment_end: "#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif\n",
            logdepthbuf_fragment: "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",
            logdepthbuf_pars_fragment: "#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n#endif\n",
            logdepthbuf_pars_vertex: "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif",
            logdepthbuf_vertex: "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\tgl_Position.z *= gl_Position.w;\n\t#endif\n#endif\n",
            map_fragment: "#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif\n",
            map_pars_fragment: "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n",
            map_particle_fragment: "#ifdef USE_MAP\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n",
            map_particle_pars_fragment: "#ifdef USE_MAP\n\tuniform mat3 uvTransform;\n\tuniform sampler2D map;\n#endif\n",
            metalnessmap_fragment: "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif\n",
            metalnessmap_pars_fragment: "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",
            morphnormal_vertex: "#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n",
            morphtarget_pars_vertex: "#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",
            morphtarget_vertex: "#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif\n",
            normal_fragment_begin: "#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n#endif\n",
            normal_fragment_maps: "#ifdef USE_NORMALMAP\n\t#ifdef OBJECTSPACE_NORMALMAP\n\t\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\t#ifdef FLIP_SIDED\n\t\t\tnormal = - normal;\n\t\t#endif\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\tnormal = normalize( normalMatrix * normal );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n",
            normalmap_pars_fragment: "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\t#ifdef OBJECTSPACE_NORMALMAP\n\t\tuniform mat3 normalMatrix;\n\t#else\n\t\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\t\tvec2 st0 = dFdx( vUv.st );\n\t\t\tvec2 st1 = dFdy( vUv.st );\n\t\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\t\tvec3 N = normalize( surf_norm );\n\t\t\tmat3 tsn = mat3( S, T, N );\n\t\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\t\tmapN.xy *= normalScale;\n\t\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\treturn normalize( tsn * mapN );\n\t\t}\n\t#endif\n#endif\n",
            packing: "vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n",
            premultiplied_alpha_fragment: "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif\n",
            project_vertex: "vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n",
            dithering_fragment: "#if defined( DITHERING )\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif\n",
            dithering_pars_fragment: "#if defined( DITHERING )\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif\n",
            roughnessmap_fragment: "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif\n",
            roughnessmap_pars_fragment: "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",
            shadowmap_pars_fragment: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif\n",
            shadowmap_pars_vertex: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif\n",
            shadowmap_vertex: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif\n",
            shadowmask_pars_fragment: "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}\n",
            skinbase_vertex: "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",
            skinning_pars_vertex: "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n",
            skinning_vertex: "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif\n",
            skinnormal_vertex: "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n",
            specularmap_fragment: "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",
            specularmap_pars_fragment: "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",
            tonemapping_fragment: "#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n",
            tonemapping_pars_fragment: "#ifndef saturate\n\t#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n",
            uv_pars_fragment: "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif",
            uv_pars_vertex: "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\n",
            uv_vertex: "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",
            uv2_pars_fragment: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",
            uv2_pars_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif",
            uv2_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif",
            worldpos_vertex: "#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n#endif\n",
            cube_frag: "uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldPosition;\nvoid main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n\tgl_FragColor.a *= opacity;\n}\n",
            cube_vert: "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}\n",
            depth_frag: "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}\n",
            depth_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n",
            distanceRGBA_frag: "#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}\n",
            distanceRGBA_vert: "#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}\n",
            equirect_frag: "uniform sampler2D tEquirect;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldPosition );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n}\n",
            equirect_vert: "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n",
            linedashed_frag: "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
            linedashed_vert: "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}\n",
            meshbasic_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
            meshbasic_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}\n",
            meshlambert_frag: "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",
            meshlambert_vert: "#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
            meshphong_frag: "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",
            meshphong_vert: "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
            meshphysical_frag: "#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",
            meshphysical_vert: "#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
            normal_frag: "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}\n",
            normal_vert: "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}\n",
            points_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
            points_vert: "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}\n",
            shadow_frag: "uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <fog_fragment>\n}\n",
            shadow_vert: "#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
            sprite_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
            sprite_vert: "uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tvec4 mvPosition;\n\tmvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}\n"
        },
        vi = {
            merge: function(t) {
                for (var e = {}, i = 0; i < t.length; i++) {
                    var n = this.clone(t[i]);
                    for (var r in n) e[r] = n[r]
                }
                return e
            },
            clone: function(t) {
                var e = {};
                for (var i in t)
                    for (var n in e[i] = {}, t[i]) {
                        var r = t[i][n];
                        r && (r.isColor || r.isMatrix3 || r.isMatrix4 || r.isVector2 || r.isVector3 || r.isVector4 || r.isTexture) ? e[i][n] = r.clone() : Array.isArray(r) ? e[i][n] = r.slice() : e[i][n] = r
                    }
                return e
            }
        },
        yi = {
            aliceblue: 15792383,
            antiquewhite: 16444375,
            aqua: 65535,
            aquamarine: 8388564,
            azure: 15794175,
            beige: 16119260,
            bisque: 16770244,
            black: 0,
            blanchedalmond: 16772045,
            blue: 255,
            blueviolet: 9055202,
            brown: 10824234,
            burlywood: 14596231,
            cadetblue: 6266528,
            chartreuse: 8388352,
            chocolate: 13789470,
            coral: 16744272,
            cornflowerblue: 6591981,
            cornsilk: 16775388,
            crimson: 14423100,
            cyan: 65535,
            darkblue: 139,
            darkcyan: 35723,
            darkgoldenrod: 12092939,
            darkgray: 11119017,
            darkgreen: 25600,
            darkgrey: 11119017,
            darkkhaki: 12433259,
            darkmagenta: 9109643,
            darkolivegreen: 5597999,
            darkorange: 16747520,
            darkorchid: 10040012,
            darkred: 9109504,
            darksalmon: 15308410,
            darkseagreen: 9419919,
            darkslateblue: 4734347,
            darkslategray: 3100495,
            darkslategrey: 3100495,
            darkturquoise: 52945,
            darkviolet: 9699539,
            deeppink: 16716947,
            deepskyblue: 49151,
            dimgray: 6908265,
            dimgrey: 6908265,
            dodgerblue: 2003199,
            firebrick: 11674146,
            floralwhite: 16775920,
            forestgreen: 2263842,
            fuchsia: 16711935,
            gainsboro: 14474460,
            ghostwhite: 16316671,
            gold: 16766720,
            goldenrod: 14329120,
            gray: 8421504,
            green: 32768,
            greenyellow: 11403055,
            grey: 8421504,
            honeydew: 15794160,
            hotpink: 16738740,
            indianred: 13458524,
            indigo: 4915330,
            ivory: 16777200,
            khaki: 15787660,
            lavender: 15132410,
            lavenderblush: 16773365,
            lawngreen: 8190976,
            lemonchiffon: 16775885,
            lightblue: 11393254,
            lightcoral: 15761536,
            lightcyan: 14745599,
            lightgoldenrodyellow: 16448210,
            lightgray: 13882323,
            lightgreen: 9498256,
            lightgrey: 13882323,
            lightpink: 16758465,
            lightsalmon: 16752762,
            lightseagreen: 2142890,
            lightskyblue: 8900346,
            lightslategray: 7833753,
            lightslategrey: 7833753,
            lightsteelblue: 11584734,
            lightyellow: 16777184,
            lime: 65280,
            limegreen: 3329330,
            linen: 16445670,
            magenta: 16711935,
            maroon: 8388608,
            mediumaquamarine: 6737322,
            mediumblue: 205,
            mediumorchid: 12211667,
            mediumpurple: 9662683,
            mediumseagreen: 3978097,
            mediumslateblue: 8087790,
            mediumspringgreen: 64154,
            mediumturquoise: 4772300,
            mediumvioletred: 13047173,
            midnightblue: 1644912,
            mintcream: 16121850,
            mistyrose: 16770273,
            moccasin: 16770229,
            navajowhite: 16768685,
            navy: 128,
            oldlace: 16643558,
            olive: 8421376,
            olivedrab: 7048739,
            orange: 16753920,
            orangered: 16729344,
            orchid: 14315734,
            palegoldenrod: 15657130,
            palegreen: 10025880,
            paleturquoise: 11529966,
            palevioletred: 14381203,
            papayawhip: 16773077,
            peachpuff: 16767673,
            peru: 13468991,
            pink: 16761035,
            plum: 14524637,
            powderblue: 11591910,
            purple: 8388736,
            rebeccapurple: 6697881,
            red: 16711680,
            rosybrown: 12357519,
            royalblue: 4286945,
            saddlebrown: 9127187,
            salmon: 16416882,
            sandybrown: 16032864,
            seagreen: 3050327,
            seashell: 16774638,
            sienna: 10506797,
            silver: 12632256,
            skyblue: 8900331,
            slateblue: 6970061,
            slategray: 7372944,
            slategrey: 7372944,
            snow: 16775930,
            springgreen: 65407,
            steelblue: 4620980,
            tan: 13808780,
            teal: 32896,
            thistle: 14204888,
            tomato: 16737095,
            turquoise: 4251856,
            violet: 15631086,
            wheat: 16113331,
            white: 16777215,
            whitesmoke: 16119285,
            yellow: 16776960,
            yellowgreen: 10145074
        };

    function xi(t, e, i) {
        return void 0 === e && void 0 === i ? this.set(t) : this.setRGB(t, e, i)
    }
    Object.assign(xi.prototype, {
        isColor: !0,
        r: 1,
        g: 1,
        b: 1,
        set: function(t) {
            return t && t.isColor ? this.copy(t) : "number" == typeof t ? this.setHex(t) : "string" == typeof t && this.setStyle(t), this
        },
        setScalar: function(t) {
            return this.r = t, this.g = t, this.b = t, this
        },
        setHex: function(t) {
            return t = Math.floor(t), this.r = (t >> 16 & 255) / 255, this.g = (t >> 8 & 255) / 255, this.b = (255 & t) / 255, this
        },
        setRGB: function(t, e, i) {
            return this.r = t, this.g = e, this.b = i, this
        },
        setHSL: function() {
            function t(t, e, i) {
                return i < 0 && (i += 1), i > 1 && (i -= 1), i < 1 / 6 ? t + 6 * (e - t) * i : i < .5 ? e : i < 2 / 3 ? t + 6 * (e - t) * (2 / 3 - i) : t
            }
            return function(e, i, n) {
                if (e = qe.euclideanModulo(e, 1), i = qe.clamp(i, 0, 1), n = qe.clamp(n, 0, 1), 0 === i) this.r = this.g = this.b = n;
                else {
                    var r = n <= .5 ? n * (1 + i) : n + i - n * i,
                        s = 2 * n - r;
                    this.r = t(s, r, e + 1 / 3), this.g = t(s, r, e), this.b = t(s, r, e - 1 / 3)
                }
                return this
            }
        }(),
        setStyle: function(t) {
            function e(e) {
                void 0 !== e && parseFloat(e) < 1 && console.warn("THREE.Color: Alpha component of " + t + " will be ignored.")
            }
            var i;
            if (i = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)) {
                var n, r = i[1],
                    s = i[2];
                switch (r) {
                    case "rgb":
                    case "rgba":
                        if (n = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(s)) return this.r = Math.min(255, parseInt(n[1], 10)) / 255, this.g = Math.min(255, parseInt(n[2], 10)) / 255, this.b = Math.min(255, parseInt(n[3], 10)) / 255, e(n[5]), this;
                        if (n = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(s)) return this.r = Math.min(100, parseInt(n[1], 10)) / 100, this.g = Math.min(100, parseInt(n[2], 10)) / 100, this.b = Math.min(100, parseInt(n[3], 10)) / 100, e(n[5]), this;
                        break;
                    case "hsl":
                    case "hsla":
                        if (n = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(s)) {
                            var o = parseFloat(n[1]) / 360,
                                a = parseInt(n[2], 10) / 100,
                                c = parseInt(n[3], 10) / 100;
                            return e(n[5]), this.setHSL(o, a, c)
                        }
                }
            } else if (i = /^\#([A-Fa-f0-9]+)$/.exec(t)) {
                var l, p = (l = i[1]).length;
                if (3 === p) return this.r = parseInt(l.charAt(0) + l.charAt(0), 16) / 255, this.g = parseInt(l.charAt(1) + l.charAt(1), 16) / 255, this.b = parseInt(l.charAt(2) + l.charAt(2), 16) / 255, this;
                if (6 === p) return this.r = parseInt(l.charAt(0) + l.charAt(1), 16) / 255, this.g = parseInt(l.charAt(2) + l.charAt(3), 16) / 255, this.b = parseInt(l.charAt(4) + l.charAt(5), 16) / 255, this
            }
            t && t.length > 0 && (void 0 !== (l = yi[t]) ? this.setHex(l) : console.warn("THREE.Color: Unknown color " + t));
            return this
        },
        clone: function() {
            return new this.constructor(this.r, this.g, this.b)
        },
        copy: function(t) {
            return this.r = t.r, this.g = t.g, this.b = t.b, this
        },
        copyGammaToLinear: function(t, e) {
            return void 0 === e && (e = 2), this.r = Math.pow(t.r, e), this.g = Math.pow(t.g, e), this.b = Math.pow(t.b, e), this
        },
        copyLinearToGamma: function(t, e) {
            void 0 === e && (e = 2);
            var i = e > 0 ? 1 / e : 1;
            return this.r = Math.pow(t.r, i), this.g = Math.pow(t.g, i), this.b = Math.pow(t.b, i), this
        },
        convertGammaToLinear: function(t) {
            return this.copyGammaToLinear(this, t), this
        },
        convertLinearToGamma: function(t) {
            return this.copyLinearToGamma(this, t), this
        },
        copySRGBToLinear: function() {
            function t(t) {
                return t < .04045 ? .0773993808 * t : Math.pow(.9478672986 * t + .0521327014, 2.4)
            }
            return function(e) {
                return this.r = t(e.r), this.g = t(e.g), this.b = t(e.b), this
            }
        }(),
        copyLinearToSRGB: function() {
            function t(t) {
                return t < .0031308 ? 12.92 * t : 1.055 * Math.pow(t, .41666) - .055
            }
            return function(e) {
                return this.r = t(e.r), this.g = t(e.g), this.b = t(e.b), this
            }
        }(),
        convertSRGBToLinear: function() {
            return this.copySRGBToLinear(this), this
        },
        convertLinearToSRGB: function() {
            return this.copyLinearToSRGB(this), this
        },
        getHex: function() {
            return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0
        },
        getHexString: function() {
            return ("000000" + this.getHex().toString(16)).slice(-6)
        },
        getHSL: function(t) {
            void 0 === t && (console.warn("THREE.Color: .getHSL() target is now required"), t = {
                h: 0,
                s: 0,
                l: 0
            });
            var e, i, n = this.r,
                r = this.g,
                s = this.b,
                o = Math.max(n, r, s),
                a = Math.min(n, r, s),
                c = (a + o) / 2;
            if (a === o) e = 0, i = 0;
            else {
                var l = o - a;
                switch (i = c <= .5 ? l / (o + a) : l / (2 - o - a), o) {
                    case n:
                        e = (r - s) / l + (r < s ? 6 : 0);
                        break;
                    case r:
                        e = (s - n) / l + 2;
                        break;
                    case s:
                        e = (n - r) / l + 4
                }
                e /= 6
            }
            return t.h = e, t.s = i, t.l = c, t
        },
        getStyle: function() {
            return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")"
        },
        offsetHSL: (mi = {}, function(t, e, i) {
            return this.getHSL(mi), mi.h += t, mi.s += e, mi.l += i, this.setHSL(mi.h, mi.s, mi.l), this
        }),
        add: function(t) {
            return this.r += t.r, this.g += t.g, this.b += t.b, this
        },
        addColors: function(t, e) {
            return this.r = t.r + e.r, this.g = t.g + e.g, this.b = t.b + e.b, this
        },
        addScalar: function(t) {
            return this.r += t, this.g += t, this.b += t, this
        },
        sub: function(t) {
            return this.r = Math.max(0, this.r - t.r), this.g = Math.max(0, this.g - t.g), this.b = Math.max(0, this.b - t.b), this
        },
        multiply: function(t) {
            return this.r *= t.r, this.g *= t.g, this.b *= t.b, this
        },
        multiplyScalar: function(t) {
            return this.r *= t, this.g *= t, this.b *= t, this
        },
        lerp: function(t, e) {
            return this.r += (t.r - this.r) * e, this.g += (t.g - this.g) * e, this.b += (t.b - this.b) * e, this
        },
        equals: function(t) {
            return t.r === this.r && t.g === this.g && t.b === this.b
        },
        fromArray: function(t, e) {
            return void 0 === e && (e = 0), this.r = t[e], this.g = t[e + 1], this.b = t[e + 2], this
        },
        toArray: function(t, e) {
            return void 0 === t && (t = []), void 0 === e && (e = 0), t[e] = this.r, t[e + 1] = this.g, t[e + 2] = this.b, t
        },
        toJSON: function() {
            return this.getHex()
        }
    });
    var wi, bi = {
            common: {
                diffuse: {
                    value: new xi(15658734)
                },
                opacity: {
                    value: 1
                },
                map: {
                    value: null
                },
                uvTransform: {
                    value: new $e
                },
                alphaMap: {
                    value: null
                }
            },
            specularmap: {
                specularMap: {
                    value: null
                }
            },
            envmap: {
                envMap: {
                    value: null
                },
                flipEnvMap: {
                    value: -1
                },
                reflectivity: {
                    value: 1
                },
                refractionRatio: {
                    value: .98
                },
                maxMipLevel: {
                    value: 0
                }
            },
            aomap: {
                aoMap: {
                    value: null
                },
                aoMapIntensity: {
                    value: 1
                }
            },
            lightmap: {
                lightMap: {
                    value: null
                },
                lightMapIntensity: {
                    value: 1
                }
            },
            emissivemap: {
                emissiveMap: {
                    value: null
                }
            },
            bumpmap: {
                bumpMap: {
                    value: null
                },
                bumpScale: {
                    value: 1
                }
            },
            normalmap: {
                normalMap: {
                    value: null
                },
                normalScale: {
                    value: new Ze(1, 1)
                }
            },
            displacementmap: {
                displacementMap: {
                    value: null
                },
                displacementScale: {
                    value: 1
                },
                displacementBias: {
                    value: 0
                }
            },
            roughnessmap: {
                roughnessMap: {
                    value: null
                }
            },
            metalnessmap: {
                metalnessMap: {
                    value: null
                }
            },
            gradientmap: {
                gradientMap: {
                    value: null
                }
            },
            fog: {
                fogDensity: {
                    value: 25e-5
                },
                fogNear: {
                    value: 1
                },
                fogFar: {
                    value: 2e3
                },
                fogColor: {
                    value: new xi(16777215)
                }
            },
            lights: {
                ambientLightColor: {
                    value: []
                },
                directionalLights: {
                    value: [],
                    properties: {
                        direction: {},
                        color: {},
                        shadow: {},
                        shadowBias: {},
                        shadowRadius: {},
                        shadowMapSize: {}
                    }
                },
                directionalShadowMap: {
                    value: []
                },
                directionalShadowMatrix: {
                    value: []
                },
                spotLights: {
                    value: [],
                    properties: {
                        color: {},
                        position: {},
                        direction: {},
                        distance: {},
                        coneCos: {},
                        penumbraCos: {},
                        decay: {},
                        shadow: {},
                        shadowBias: {},
                        shadowRadius: {},
                        shadowMapSize: {}
                    }
                },
                spotShadowMap: {
                    value: []
                },
                spotShadowMatrix: {
                    value: []
                },
                pointLights: {
                    value: [],
                    properties: {
                        color: {},
                        position: {},
                        decay: {},
                        distance: {},
                        shadow: {},
                        shadowBias: {},
                        shadowRadius: {},
                        shadowMapSize: {},
                        shadowCameraNear: {},
                        shadowCameraFar: {}
                    }
                },
                pointShadowMap: {
                    value: []
                },
                pointShadowMatrix: {
                    value: []
                },
                hemisphereLights: {
                    value: [],
                    properties: {
                        direction: {},
                        skyColor: {},
                        groundColor: {}
                    }
                },
                rectAreaLights: {
                    value: [],
                    properties: {
                        color: {},
                        position: {},
                        width: {},
                        height: {}
                    }
                }
            },
            points: {
                diffuse: {
                    value: new xi(15658734)
                },
                opacity: {
                    value: 1
                },
                size: {
                    value: 1
                },
                scale: {
                    value: 1
                },
                map: {
                    value: null
                },
                uvTransform: {
                    value: new $e
                }
            },
            sprite: {
                diffuse: {
                    value: new xi(15658734)
                },
                opacity: {
                    value: 1
                },
                center: {
                    value: new Ze(.5, .5)
                },
                rotation: {
                    value: 0
                },
                map: {
                    value: null
                },
                uvTransform: {
                    value: new $e
                }
            }
        },
        Mi = {
            basic: {
                uniforms: vi.merge([bi.common, bi.specularmap, bi.envmap, bi.aomap, bi.lightmap, bi.fog]),
                vertexShader: gi.meshbasic_vert,
                fragmentShader: gi.meshbasic_frag
            },
            lambert: {
                uniforms: vi.merge([bi.common, bi.specularmap, bi.envmap, bi.aomap, bi.lightmap, bi.emissivemap, bi.fog, bi.lights, {
                    emissive: {
                        value: new xi(0)
                    }
                }]),
                vertexShader: gi.meshlambert_vert,
                fragmentShader: gi.meshlambert_frag
            },
            phong: {
                uniforms: vi.merge([bi.common, bi.specularmap, bi.envmap, bi.aomap, bi.lightmap, bi.emissivemap, bi.bumpmap, bi.normalmap, bi.displacementmap, bi.gradientmap, bi.fog, bi.lights, {
                    emissive: {
                        value: new xi(0)
                    },
                    specular: {
                        value: new xi(1118481)
                    },
                    shininess: {
                        value: 30
                    }
                }]),
                vertexShader: gi.meshphong_vert,
                fragmentShader: gi.meshphong_frag
            },
            standard: {
                uniforms: vi.merge([bi.common, bi.envmap, bi.aomap, bi.lightmap, bi.emissivemap, bi.bumpmap, bi.normalmap, bi.displacementmap, bi.roughnessmap, bi.metalnessmap, bi.fog, bi.lights, {
                    emissive: {
                        value: new xi(0)
                    },
                    roughness: {
                        value: .5
                    },
                    metalness: {
                        value: .5
                    },
                    envMapIntensity: {
                        value: 1
                    }
                }]),
                vertexShader: gi.meshphysical_vert,
                fragmentShader: gi.meshphysical_frag
            },
            points: {
                uniforms: vi.merge([bi.points, bi.fog]),
                vertexShader: gi.points_vert,
                fragmentShader: gi.points_frag
            },
            dashed: {
                uniforms: vi.merge([bi.common, bi.fog, {
                    scale: {
                        value: 1
                    },
                    dashSize: {
                        value: 1
                    },
                    totalSize: {
                        value: 2
                    }
                }]),
                vertexShader: gi.linedashed_vert,
                fragmentShader: gi.linedashed_frag
            },
            depth: {
                uniforms: vi.merge([bi.common, bi.displacementmap]),
                vertexShader: gi.depth_vert,
                fragmentShader: gi.depth_frag
            },
            normal: {
                uniforms: vi.merge([bi.common, bi.bumpmap, bi.normalmap, bi.displacementmap, {
                    opacity: {
                        value: 1
                    }
                }]),
                vertexShader: gi.normal_vert,
                fragmentShader: gi.normal_frag
            },
            sprite: {
                uniforms: vi.merge([bi.sprite, bi.fog]),
                vertexShader: gi.sprite_vert,
                fragmentShader: gi.sprite_frag
            },
            cube: {
                uniforms: {
                    tCube: {
                        value: null
                    },
                    tFlip: {
                        value: -1
                    },
                    opacity: {
                        value: 1
                    }
                },
                vertexShader: gi.cube_vert,
                fragmentShader: gi.cube_frag
            },
            equirect: {
                uniforms: {
                    tEquirect: {
                        value: null
                    }
                },
                vertexShader: gi.equirect_vert,
                fragmentShader: gi.equirect_frag
            },
            distanceRGBA: {
                uniforms: vi.merge([bi.common, bi.displacementmap, {
                    referencePosition: {
                        value: new Qe
                    },
                    nearDistance: {
                        value: 1
                    },
                    farDistance: {
                        value: 1e3
                    }
                }]),
                vertexShader: gi.distanceRGBA_vert,
                fragmentShader: gi.distanceRGBA_frag
            },
            shadow: {
                uniforms: vi.merge([bi.lights, bi.fog, {
                    color: {
                        value: new xi(0)
                    },
                    opacity: {
                        value: 1
                    }
                }]),
                vertexShader: gi.shadow_vert,
                fragmentShader: gi.shadow_frag
            }
        };

    function Si() {
        var t = null,
            e = !1,
            i = null;

        function n(r, s) {
            !1 !== e && (i(r, s), t.requestAnimationFrame(n))
        }
        return {
            start: function() {
                !0 !== e && null !== i && (t.requestAnimationFrame(n), e = !0)
            },
            stop: function() {
                e = !1
            },
            setAnimationLoop: function(t) {
                i = t
            },
            setContext: function(e) {
                t = e
            }
        }
    }

    function _i(t) {
        var e = new WeakMap;
        return {
            get: function(t) {
                return t.isInterleavedBufferAttribute && (t = t.data), e.get(t)
            },
            remove: function(i) {
                i.isInterleavedBufferAttribute && (i = i.data);
                var n = e.get(i);
                n && (t.deleteBuffer(n.buffer), e.delete(i))
            },
            update: function(i, n) {
                i.isInterleavedBufferAttribute && (i = i.data);
                var r = e.get(i);
                void 0 === r ? e.set(i, function(e, i) {
                    var n = e.array,
                        r = e.dynamic ? t.DYNAMIC_DRAW : t.STATIC_DRAW,
                        s = t.createBuffer();
                    t.bindBuffer(i, s), t.bufferData(i, n, r), e.onUploadCallback();
                    var o = t.FLOAT;
                    return n instanceof Float32Array ? o = t.FLOAT : n instanceof Float64Array ? console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.") : n instanceof Uint16Array ? o = t.UNSIGNED_SHORT : n instanceof Int16Array ? o = t.SHORT : n instanceof Uint32Array ? o = t.UNSIGNED_INT : n instanceof Int32Array ? o = t.INT : n instanceof Int8Array ? o = t.BYTE : n instanceof Uint8Array && (o = t.UNSIGNED_BYTE), {
                        buffer: s,
                        type: o,
                        bytesPerElement: n.BYTES_PER_ELEMENT,
                        version: e.version
                    }
                }(i, n)) : r.version < i.version && (function(e, i, n) {
                    var r = i.array,
                        s = i.updateRange;
                    t.bindBuffer(n, e), !1 === i.dynamic ? t.bufferData(n, r, t.STATIC_DRAW) : -1 === s.count ? t.bufferSubData(n, 0, r) : 0 === s.count ? console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.") : (t.bufferSubData(n, s.offset * r.BYTES_PER_ELEMENT, r.subarray(s.offset, s.offset + s.count)), s.count = -1)
                }(r.buffer, i, n), r.version = i.version)
            }
        }
    }

    function Ti(t, e, i, n) {
        this._x = t || 0, this._y = e || 0, this._z = i || 0, this._order = n || Ti.DefaultOrder
    }

    function Ei() {
        this.mask = 1
    }
    Mi.physical = {
        uniforms: vi.merge([Mi.standard.uniforms, {
            clearCoat: {
                value: 0
            },
            clearCoatRoughness: {
                value: 0
            }
        }]),
        vertexShader: gi.meshphysical_vert,
        fragmentShader: gi.meshphysical_frag
    }, Ti.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"], Ti.DefaultOrder = "XYZ", Object.defineProperties(Ti.prototype, {
        x: {
            get: function() {
                return this._x
            },
            set: function(t) {
                this._x = t, this.onChangeCallback()
            }
        },
        y: {
            get: function() {
                return this._y
            },
            set: function(t) {
                this._y = t, this.onChangeCallback()
            }
        },
        z: {
            get: function() {
                return this._z
            },
            set: function(t) {
                this._z = t, this.onChangeCallback()
            }
        },
        order: {
            get: function() {
                return this._order
            },
            set: function(t) {
                this._order = t, this.onChangeCallback()
            }
        }
    }), Object.assign(Ti.prototype, {
        isEuler: !0,
        set: function(t, e, i, n) {
            return this._x = t, this._y = e, this._z = i, this._order = n || this._order, this.onChangeCallback(), this
        },
        clone: function() {
            return new this.constructor(this._x, this._y, this._z, this._order)
        },
        copy: function(t) {
            return this._x = t._x, this._y = t._y, this._z = t._z, this._order = t._order, this.onChangeCallback(), this
        },
        setFromRotationMatrix: function(t, e, i) {
            var n = qe.clamp,
                r = t.elements,
                s = r[0],
                o = r[4],
                a = r[8],
                c = r[1],
                l = r[5],
                p = r[9],
                h = r[2],
                u = r[6],
                d = r[10];
            return "XYZ" === (e = e || this._order) ? (this._y = Math.asin(n(a, -1, 1)), Math.abs(a) < .99999 ? (this._x = Math.atan2(-p, d), this._z = Math.atan2(-o, s)) : (this._x = Math.atan2(u, l), this._z = 0)) : "YXZ" === e ? (this._x = Math.asin(-n(p, -1, 1)), Math.abs(p) < .99999 ? (this._y = Math.atan2(a, d), this._z = Math.atan2(c, l)) : (this._y = Math.atan2(-h, s), this._z = 0)) : "ZXY" === e ? (this._x = Math.asin(n(u, -1, 1)), Math.abs(u) < .99999 ? (this._y = Math.atan2(-h, d), this._z = Math.atan2(-o, l)) : (this._y = 0, this._z = Math.atan2(c, s))) : "ZYX" === e ? (this._y = Math.asin(-n(h, -1, 1)), Math.abs(h) < .99999 ? (this._x = Math.atan2(u, d), this._z = Math.atan2(c, s)) : (this._x = 0, this._z = Math.atan2(-o, l))) : "YZX" === e ? (this._z = Math.asin(n(c, -1, 1)), Math.abs(c) < .99999 ? (this._x = Math.atan2(-p, l), this._y = Math.atan2(-h, s)) : (this._x = 0, this._y = Math.atan2(a, d))) : "XZY" === e ? (this._z = Math.asin(-n(o, -1, 1)), Math.abs(o) < .99999 ? (this._x = Math.atan2(u, l), this._y = Math.atan2(a, s)) : (this._x = Math.atan2(-p, d), this._y = 0)) : console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: " + e), this._order = e, !1 !== i && this.onChangeCallback(), this
        },
        setFromQuaternion: function() {
            var t = new Ke;
            return function(e, i, n) {
                return t.makeRotationFromQuaternion(e), this.setFromRotationMatrix(t, i, n)
            }
        }(),
        setFromVector3: function(t, e) {
            return this.set(t.x, t.y, t.z, e || this._order)
        },
        reorder: (wi = new Je, function(t) {
            return wi.setFromEuler(this), this.setFromQuaternion(wi, t)
        }),
        equals: function(t) {
            return t._x === this._x && t._y === this._y && t._z === this._z && t._order === this._order
        },
        fromArray: function(t) {
            return this._x = t[0], this._y = t[1], this._z = t[2], void 0 !== t[3] && (this._order = t[3]), this.onChangeCallback(), this
        },
        toArray: function(t, e) {
            return void 0 === t && (t = []), void 0 === e && (e = 0), t[e] = this._x, t[e + 1] = this._y, t[e + 2] = this._z, t[e + 3] = this._order, t
        },
        toVector3: function(t) {
            return t ? t.set(this._x, this._y, this._z) : new Qe(this._x, this._y, this._z)
        },
        onChange: function(t) {
            return this.onChangeCallback = t, this
        },
        onChangeCallback: function() {}
    }), Object.assign(Ei.prototype, {
        set: function(t) {
            this.mask = 1 << t | 0
        },
        enable: function(t) {
            this.mask |= 1 << t | 0
        },
        toggle: function(t) {
            this.mask ^= 1 << t | 0
        },
        disable: function(t) {
            this.mask &= ~(1 << t | 0)
        },
        test: function(t) {
            return 0 != (this.mask & t.mask)
        }
    });
    var Ai, Li, ki, Ri, Pi = 0;

    function Ci() {
        Object.defineProperty(this, "id", {
            value: Pi++
        }), this.uuid = qe.generateUUID(), this.name = "", this.type = "Object3D", this.parent = null, this.children = [], this.up = Ci.DefaultUp.clone();
        var t = new Qe,
            e = new Ti,
            i = new Je,
            n = new Qe(1, 1, 1);
        e.onChange(function() {
            i.setFromEuler(e, !1)
        }), i.onChange(function() {
            e.setFromQuaternion(i, void 0, !1)
        }), Object.defineProperties(this, {
            position: {
                enumerable: !0,
                value: t
            },
            rotation: {
                enumerable: !0,
                value: e
            },
            quaternion: {
                enumerable: !0,
                value: i
            },
            scale: {
                enumerable: !0,
                value: n
            },
            modelViewMatrix: {
                value: new Ke
            },
            normalMatrix: {
                value: new $e
            }
        }), this.matrix = new Ke, this.matrixWorld = new Ke, this.matrixAutoUpdate = Ci.DefaultMatrixAutoUpdate, this.matrixWorldNeedsUpdate = !1, this.layers = new Ei, this.visible = !0, this.castShadow = !1, this.receiveShadow = !1, this.frustumCulled = !0, this.renderOrder = 0, this.userData = {}
    }

    function Ii() {
        Ci.call(this), this.type = "Camera", this.matrixWorldInverse = new Ke, this.projectionMatrix = new Ke
    }

    function Oi(t, e, i, n, r, s) {
        Ii.call(this), this.type = "OrthographicCamera", this.zoom = 1, this.view = null, this.left = t, this.right = e, this.top = i, this.bottom = n, this.near = void 0 !== r ? r : .1, this.far = void 0 !== s ? s : 2e3, this.updateProjectionMatrix()
    }

    function Di(t, e, i, n, r, s) {
        this.a = t, this.b = e, this.c = i, this.normal = n && n.isVector3 ? n : new Qe, this.vertexNormals = Array.isArray(n) ? n : [], this.color = r && r.isColor ? r : new xi, this.vertexColors = Array.isArray(r) ? r : [], this.materialIndex = void 0 !== s ? s : 0
    }
    Ci.DefaultUp = new Qe(0, 1, 0), Ci.DefaultMatrixAutoUpdate = !0, Ci.prototype = Object.assign(Object.create(n.prototype), {
        constructor: Ci,
        isObject3D: !0,
        onBeforeRender: function() {},
        onAfterRender: function() {},
        applyMatrix: function(t) {
            this.matrix.multiplyMatrices(t, this.matrix), this.matrix.decompose(this.position, this.quaternion, this.scale)
        },
        applyQuaternion: function(t) {
            return this.quaternion.premultiply(t), this
        },
        setRotationFromAxisAngle: function(t, e) {
            this.quaternion.setFromAxisAngle(t, e)
        },
        setRotationFromEuler: function(t) {
            this.quaternion.setFromEuler(t, !0)
        },
        setRotationFromMatrix: function(t) {
            this.quaternion.setFromRotationMatrix(t)
        },
        setRotationFromQuaternion: function(t) {
            this.quaternion.copy(t)
        },
        rotateOnAxis: (Ri = new Je, function(t, e) {
            return Ri.setFromAxisAngle(t, e), this.quaternion.multiply(Ri), this
        }),
        rotateOnWorldAxis: function() {
            var t = new Je;
            return function(e, i) {
                return t.setFromAxisAngle(e, i), this.quaternion.premultiply(t), this
            }
        }(),
        rotateX: function() {
            var t = new Qe(1, 0, 0);
            return function(e) {
                return this.rotateOnAxis(t, e)
            }
        }(),
        rotateY: function() {
            var t = new Qe(0, 1, 0);
            return function(e) {
                return this.rotateOnAxis(t, e)
            }
        }(),
        rotateZ: function() {
            var t = new Qe(0, 0, 1);
            return function(e) {
                return this.rotateOnAxis(t, e)
            }
        }(),
        translateOnAxis: function() {
            var t = new Qe;
            return function(e, i) {
                return t.copy(e).applyQuaternion(this.quaternion), this.position.add(t.multiplyScalar(i)), this
            }
        }(),
        translateX: function() {
            var t = new Qe(1, 0, 0);
            return function(e) {
                return this.translateOnAxis(t, e)
            }
        }(),
        translateY: function() {
            var t = new Qe(0, 1, 0);
            return function(e) {
                return this.translateOnAxis(t, e)
            }
        }(),
        translateZ: function() {
            var t = new Qe(0, 0, 1);
            return function(e) {
                return this.translateOnAxis(t, e)
            }
        }(),
        localToWorld: function(t) {
            return t.applyMatrix4(this.matrixWorld)
        },
        worldToLocal: (ki = new Ke, function(t) {
            return t.applyMatrix4(ki.getInverse(this.matrixWorld))
        }),
        lookAt: function() {
            var t = new Ke,
                e = new Qe;
            return function(i, n, r) {
                i.isVector3 ? e.copy(i) : e.set(i, n, r), this.isCamera ? t.lookAt(this.position, e, this.up) : t.lookAt(e, this.position, this.up), this.quaternion.setFromRotationMatrix(t)
            }
        }(),
        add: function(t) {
            if (arguments.length > 1) {
                for (var e = 0; e < arguments.length; e++) this.add(arguments[e]);
                return this
            }
            return t === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", t), this) : (t && t.isObject3D ? (null !== t.parent && t.parent.remove(t), t.parent = this, t.dispatchEvent({
                type: "added"
            }), this.children.push(t)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", t), this)
        },
        remove: function(t) {
            if (arguments.length > 1) {
                for (var e = 0; e < arguments.length; e++) this.remove(arguments[e]);
                return this
            }
            var i = this.children.indexOf(t);
            return -1 !== i && (t.parent = null, t.dispatchEvent({
                type: "removed"
            }), this.children.splice(i, 1)), this
        },
        getObjectById: function(t) {
            return this.getObjectByProperty("id", t)
        },
        getObjectByName: function(t) {
            return this.getObjectByProperty("name", t)
        },
        getObjectByProperty: function(t, e) {
            if (this[t] === e) return this;
            for (var i = 0, n = this.children.length; i < n; i++) {
                var r = this.children[i].getObjectByProperty(t, e);
                if (void 0 !== r) return r
            }
        },
        getWorldPosition: function(t) {
            return void 0 === t && (console.warn("THREE.Object3D: .getWorldPosition() target is now required"), t = new Qe), this.updateMatrixWorld(!0), t.setFromMatrixPosition(this.matrixWorld)
        },
        getWorldQuaternion: (Ai = new Qe, Li = new Qe, function(t) {
            return void 0 === t && (console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"), t = new Je), this.updateMatrixWorld(!0), this.matrixWorld.decompose(Ai, t, Li), t
        }),
        getWorldScale: function() {
            var t = new Qe,
                e = new Je;
            return function(i) {
                return void 0 === i && (console.warn("THREE.Object3D: .getWorldScale() target is now required"), i = new Qe), this.updateMatrixWorld(!0), this.matrixWorld.decompose(t, e, i), i
            }
        }(),
        getWorldDirection: function() {
            var t = new Je;
            return function(e) {
                return void 0 === e && (console.warn("THREE.Object3D: .getWorldDirection() target is now required"), e = new Qe), this.getWorldQuaternion(t), e.set(0, 0, 1).applyQuaternion(t)
            }
        }(),
        raycast: function() {},
        traverse: function(t) {
            t(this);
            for (var e = this.children, i = 0, n = e.length; i < n; i++) e[i].traverse(t)
        },
        traverseVisible: function(t) {
            if (!1 !== this.visible) {
                t(this);
                for (var e = this.children, i = 0, n = e.length; i < n; i++) e[i].traverseVisible(t)
            }
        },
        traverseAncestors: function(t) {
            var e = this.parent;
            null !== e && (t(e), e.traverseAncestors(t))
        },
        updateMatrix: function() {
            this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = !0
        },
        updateMatrixWorld: function(t) {
            this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || t) && (null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = !1, t = !0);
            for (var e = this.children, i = 0, n = e.length; i < n; i++) e[i].updateMatrixWorld(t)
        },
        toJSON: function(t) {
            var e = void 0 === t || "string" == typeof t,
                i = {};
            e && (t = {
                geometries: {},
                materials: {},
                textures: {},
                images: {},
                shapes: {}
            }, i.metadata = {
                version: 4.5,
                type: "Object",
                generator: "Object3D.toJSON"
            });
            var n = {};

            function r(e, i) {
                return void 0 === e[i.uuid] && (e[i.uuid] = i.toJSON(t)), i.uuid
            }
            if (n.uuid = this.uuid, n.type = this.type, "" !== this.name && (n.name = this.name), !0 === this.castShadow && (n.castShadow = !0), !0 === this.receiveShadow && (n.receiveShadow = !0), !1 === this.visible && (n.visible = !1), !1 === this.frustumCulled && (n.frustumCulled = !1), 0 !== this.renderOrder && (n.renderOrder = this.renderOrder), "{}" !== JSON.stringify(this.userData) && (n.userData = this.userData), n.layers = this.layers.mask, n.matrix = this.matrix.toArray(), !1 === this.matrixAutoUpdate && (n.matrixAutoUpdate = !1), this.isMesh || this.isLine || this.isPoints) {
                n.geometry = r(t.geometries, this.geometry);
                var s = this.geometry.parameters;
                if (void 0 !== s && void 0 !== s.shapes) {
                    var o = s.shapes;
                    if (Array.isArray(o))
                        for (var a = 0, c = o.length; a < c; a++) {
                            var l = o[a];
                            r(t.shapes, l)
                        } else r(t.shapes, o)
                }
            }
            if (void 0 !== this.material)
                if (Array.isArray(this.material)) {
                    var p = [];
                    for (a = 0, c = this.material.length; a < c; a++) p.push(r(t.materials, this.material[a]));
                    n.material = p
                } else n.material = r(t.materials, this.material);
            if (this.children.length > 0) {
                n.children = [];
                for (a = 0; a < this.children.length; a++) n.children.push(this.children[a].toJSON(t).object)
            }
            if (e) {
                var h = m(t.geometries),
                    u = m(t.materials),
                    d = m(t.textures),
                    f = m(t.images);
                o = m(t.shapes);
                h.length > 0 && (i.geometries = h), u.length > 0 && (i.materials = u), d.length > 0 && (i.textures = d), f.length > 0 && (i.images = f), o.length > 0 && (i.shapes = o)
            }
            return i.object = n, i;

            function m(t) {
                var e = [];
                for (var i in t) {
                    var n = t[i];
                    delete n.metadata, e.push(n)
                }
                return e
            }
        },
        clone: function(t) {
            return (new this.constructor).copy(this, t)
        },
        copy: function(t, e) {
            if (void 0 === e && (e = !0), this.name = t.name, this.up.copy(t.up), this.position.copy(t.position), this.quaternion.copy(t.quaternion), this.scale.copy(t.scale), this.matrix.copy(t.matrix), this.matrixWorld.copy(t.matrixWorld), this.matrixAutoUpdate = t.matrixAutoUpdate, this.matrixWorldNeedsUpdate = t.matrixWorldNeedsUpdate, this.layers.mask = t.layers.mask, this.visible = t.visible, this.castShadow = t.castShadow, this.receiveShadow = t.receiveShadow, this.frustumCulled = t.frustumCulled, this.renderOrder = t.renderOrder, this.userData = JSON.parse(JSON.stringify(t.userData)), !0 === e)
                for (var i = 0; i < t.children.length; i++) {
                    var n = t.children[i];
                    this.add(n.clone())
                }
            return this
        }
    }), Ii.prototype = Object.assign(Object.create(Ci.prototype), {
        constructor: Ii,
        isCamera: !0,
        copy: function(t, e) {
            return Ci.prototype.copy.call(this, t, e), this.matrixWorldInverse.copy(t.matrixWorldInverse), this.projectionMatrix.copy(t.projectionMatrix), this
        },
        getWorldDirection: function() {
            var t = new Je;
            return function(e) {
                return void 0 === e && (console.warn("THREE.Camera: .getWorldDirection() target is now required"), e = new Qe), this.getWorldQuaternion(t), e.set(0, 0, -1).applyQuaternion(t)
            }
        }(),
        updateMatrixWorld: function(t) {
            Ci.prototype.updateMatrixWorld.call(this, t), this.matrixWorldInverse.getInverse(this.matrixWorld)
        },
        clone: function() {
            return (new this.constructor).copy(this)
        }
    }), Oi.prototype = Object.assign(Object.create(Ii.prototype), {
        constructor: Oi,
        isOrthographicCamera: !0,
        copy: function(t, e) {
            return Ii.prototype.copy.call(this, t, e), this.left = t.left, this.right = t.right, this.top = t.top, this.bottom = t.bottom, this.near = t.near, this.far = t.far, this.zoom = t.zoom, this.view = null === t.view ? null : Object.assign({}, t.view), this
        },
        setViewOffset: function(t, e, i, n, r, s) {
            null === this.view && (this.view = {
                enabled: !0,
                fullWidth: 1,
                fullHeight: 1,
                offsetX: 0,
                offsetY: 0,
                width: 1,
                height: 1
            }), this.view.enabled = !0, this.view.fullWidth = t, this.view.fullHeight = e, this.view.offsetX = i, this.view.offsetY = n, this.view.width = r, this.view.height = s, this.updateProjectionMatrix()
        },
        clearViewOffset: function() {
            null !== this.view && (this.view.enabled = !1), this.updateProjectionMatrix()
        },
        updateProjectionMatrix: function() {
            var t = (this.right - this.left) / (2 * this.zoom),
                e = (this.top - this.bottom) / (2 * this.zoom),
                i = (this.right + this.left) / 2,
                n = (this.top + this.bottom) / 2,
                r = i - t,
                s = i + t,
                o = n + e,
                a = n - e;
            if (null !== this.view && this.view.enabled) {
                var c = this.zoom / (this.view.width / this.view.fullWidth),
                    l = this.zoom / (this.view.height / this.view.fullHeight),
                    p = (this.right - this.left) / this.view.width,
                    h = (this.top - this.bottom) / this.view.height;
                s = (r += p * (this.view.offsetX / c)) + p * (this.view.width / c), a = (o -= h * (this.view.offsetY / l)) - h * (this.view.height / l)
            }
            this.projectionMatrix.makeOrthographic(r, s, o, a, this.near, this.far)
        },
        toJSON: function(t) {
            var e = Ci.prototype.toJSON.call(this, t);
            return e.object.zoom = this.zoom, e.object.left = this.left, e.object.right = this.right, e.object.top = this.top, e.object.bottom = this.bottom, e.object.near = this.near, e.object.far = this.far, null !== this.view && (e.object.view = Object.assign({}, this.view)), e
        }
    }), Object.assign(Di.prototype, {
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            this.a = t.a, this.b = t.b, this.c = t.c, this.normal.copy(t.normal), this.color.copy(t.color), this.materialIndex = t.materialIndex;
            for (var e = 0, i = t.vertexNormals.length; e < i; e++) this.vertexNormals[e] = t.vertexNormals[e].clone();
            for (e = 0, i = t.vertexColors.length; e < i; e++) this.vertexColors[e] = t.vertexColors[e].clone();
            return this
        }
    });
    var Bi, zi, Ni = 0;

    function Ui() {
        Object.defineProperty(this, "id", {
            value: Ni += 2
        }), this.uuid = qe.generateUUID(), this.name = "", this.type = "Geometry", this.vertices = [], this.colors = [], this.faces = [], this.faceVertexUvs = [
            []
        ], this.morphTargets = [], this.morphNormals = [], this.skinWeights = [], this.skinIndices = [], this.lineDistances = [], this.boundingBox = null, this.boundingSphere = null, this.elementsNeedUpdate = !1, this.verticesNeedUpdate = !1, this.uvsNeedUpdate = !1, this.normalsNeedUpdate = !1, this.colorsNeedUpdate = !1, this.lineDistancesNeedUpdate = !1, this.groupsNeedUpdate = !1
    }

    function Fi(t, e, i) {
        if (Array.isArray(t)) throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
        this.name = "", this.array = t, this.itemSize = e, this.count = void 0 !== t ? t.length / e : 0, this.normalized = !0 === i, this.dynamic = !1, this.updateRange = {
            offset: 0,
            count: -1
        }, this.version = 0
    }

    function Hi(t, e, i) {
        Fi.call(this, new Int8Array(t), e, i)
    }

    function ji(t, e, i) {
        Fi.call(this, new Uint8Array(t), e, i)
    }

    function Gi(t, e, i) {
        Fi.call(this, new Uint8ClampedArray(t), e, i)
    }

    function Vi(t, e, i) {
        Fi.call(this, new Int16Array(t), e, i)
    }

    function Wi(t, e, i) {
        Fi.call(this, new Uint16Array(t), e, i)
    }

    function Yi(t, e, i) {
        Fi.call(this, new Int32Array(t), e, i)
    }

    function Xi(t, e, i) {
        Fi.call(this, new Uint32Array(t), e, i)
    }

    function qi(t, e, i) {
        Fi.call(this, new Float32Array(t), e, i)
    }

    function Zi(t, e, i) {
        Fi.call(this, new Float64Array(t), e, i)
    }

    function Ki() {
        this.vertices = [], this.normals = [], this.colors = [], this.uvs = [], this.uvs2 = [], this.groups = [], this.morphTargets = {}, this.skinWeights = [], this.skinIndices = [], this.boundingBox = null, this.boundingSphere = null, this.verticesNeedUpdate = !1, this.normalsNeedUpdate = !1, this.colorsNeedUpdate = !1, this.uvsNeedUpdate = !1, this.groupsNeedUpdate = !1
    }

    function Ji(t) {
        if (0 === t.length) return -1 / 0;
        for (var e = t[0], i = 1, n = t.length; i < n; ++i) t[i] > e && (e = t[i]);
        return e
    }
    Ui.prototype = Object.assign(Object.create(n.prototype), {
        constructor: Ui,
        isGeometry: !0,
        applyMatrix: function(t) {
            for (var e = (new $e).getNormalMatrix(t), i = 0, n = this.vertices.length; i < n; i++) {
                this.vertices[i].applyMatrix4(t)
            }
            for (i = 0, n = this.faces.length; i < n; i++) {
                var r = this.faces[i];
                r.normal.applyMatrix3(e).normalize();
                for (var s = 0, o = r.vertexNormals.length; s < o; s++) r.vertexNormals[s].applyMatrix3(e).normalize()
            }
            return null !== this.boundingBox && this.computeBoundingBox(), null !== this.boundingSphere && this.computeBoundingSphere(), this.verticesNeedUpdate = !0, this.normalsNeedUpdate = !0, this
        },
        rotateX: function() {
            var t = new Ke;
            return function(e) {
                return t.makeRotationX(e), this.applyMatrix(t), this
            }
        }(),
        rotateY: function() {
            var t = new Ke;
            return function(e) {
                return t.makeRotationY(e), this.applyMatrix(t), this
            }
        }(),
        rotateZ: function() {
            var t = new Ke;
            return function(e) {
                return t.makeRotationZ(e), this.applyMatrix(t), this
            }
        }(),
        translate: function() {
            var t = new Ke;
            return function(e, i, n) {
                return t.makeTranslation(e, i, n), this.applyMatrix(t), this
            }
        }(),
        scale: function() {
            var t = new Ke;
            return function(e, i, n) {
                return t.makeScale(e, i, n), this.applyMatrix(t), this
            }
        }(),
        lookAt: (zi = new Ci, function(t) {
            zi.lookAt(t), zi.updateMatrix(), this.applyMatrix(zi.matrix)
        }),
        fromBufferGeometry: function(t) {
            var e = this,
                i = null !== t.index ? t.index.array : void 0,
                n = t.attributes,
                r = n.position.array,
                s = void 0 !== n.normal ? n.normal.array : void 0,
                o = void 0 !== n.color ? n.color.array : void 0,
                a = void 0 !== n.uv ? n.uv.array : void 0,
                c = void 0 !== n.uv2 ? n.uv2.array : void 0;
            void 0 !== c && (this.faceVertexUvs[1] = []);
            for (var l = [], p = [], h = [], u = 0, d = 0; u < r.length; u += 3, d += 2) e.vertices.push(new Qe(r[u], r[u + 1], r[u + 2])), void 0 !== s && l.push(new Qe(s[u], s[u + 1], s[u + 2])), void 0 !== o && e.colors.push(new xi(o[u], o[u + 1], o[u + 2])), void 0 !== a && p.push(new Ze(a[d], a[d + 1])), void 0 !== c && h.push(new Ze(c[d], c[d + 1]));

            function f(t, i, n, r) {
                var u = new Di(t, i, n, void 0 !== s ? [l[t].clone(), l[i].clone(), l[n].clone()] : [], void 0 !== o ? [e.colors[t].clone(), e.colors[i].clone(), e.colors[n].clone()] : [], r);
                e.faces.push(u), void 0 !== a && e.faceVertexUvs[0].push([p[t].clone(), p[i].clone(), p[n].clone()]), void 0 !== c && e.faceVertexUvs[1].push([h[t].clone(), h[i].clone(), h[n].clone()])
            }
            var m = t.groups;
            if (m.length > 0)
                for (u = 0; u < m.length; u++)
                    for (var g = m[u], v = g.start, y = (d = v, v + g.count); d < y; d += 3) void 0 !== i ? f(i[d], i[d + 1], i[d + 2], g.materialIndex) : f(d, d + 1, d + 2, g.materialIndex);
            else if (void 0 !== i)
                for (u = 0; u < i.length; u += 3) f(i[u], i[u + 1], i[u + 2]);
            else
                for (u = 0; u < r.length / 3; u += 3) f(u, u + 1, u + 2);
            return this.computeFaceNormals(), null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone()), null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()), this
        },
        center: (Bi = new Qe, function() {
            return this.computeBoundingBox(), this.boundingBox.getCenter(Bi).negate(), this.translate(Bi.x, Bi.y, Bi.z), this
        }),
        normalize: function() {
            this.computeBoundingSphere();
            var t = this.boundingSphere.center,
                e = this.boundingSphere.radius,
                i = 0 === e ? 1 : 1 / e,
                n = new Ke;
            return n.set(i, 0, 0, -i * t.x, 0, i, 0, -i * t.y, 0, 0, i, -i * t.z, 0, 0, 0, 1), this.applyMatrix(n), this
        },
        computeFaceNormals: function() {
            for (var t = new Qe, e = new Qe, i = 0, n = this.faces.length; i < n; i++) {
                var r = this.faces[i],
                    s = this.vertices[r.a],
                    o = this.vertices[r.b],
                    a = this.vertices[r.c];
                t.subVectors(a, o), e.subVectors(s, o), t.cross(e), t.normalize(), r.normal.copy(t)
            }
        },
        computeVertexNormals: function(t) {
            var e, i, n, r, s, o;
            for (void 0 === t && (t = !0), o = new Array(this.vertices.length), e = 0, i = this.vertices.length; e < i; e++) o[e] = new Qe;
            if (t) {
                var a, c, l, p = new Qe,
                    h = new Qe;
                for (n = 0, r = this.faces.length; n < r; n++) s = this.faces[n], a = this.vertices[s.a], c = this.vertices[s.b], l = this.vertices[s.c], p.subVectors(l, c), h.subVectors(a, c), p.cross(h), o[s.a].add(p), o[s.b].add(p), o[s.c].add(p)
            } else
                for (this.computeFaceNormals(), n = 0, r = this.faces.length; n < r; n++) o[(s = this.faces[n]).a].add(s.normal), o[s.b].add(s.normal), o[s.c].add(s.normal);
            for (e = 0, i = this.vertices.length; e < i; e++) o[e].normalize();
            for (n = 0, r = this.faces.length; n < r; n++) {
                var u = (s = this.faces[n]).vertexNormals;
                3 === u.length ? (u[0].copy(o[s.a]), u[1].copy(o[s.b]), u[2].copy(o[s.c])) : (u[0] = o[s.a].clone(), u[1] = o[s.b].clone(), u[2] = o[s.c].clone())
            }
            this.faces.length > 0 && (this.normalsNeedUpdate = !0)
        },
        computeFlatVertexNormals: function() {
            var t, e, i;
            for (this.computeFaceNormals(), t = 0, e = this.faces.length; t < e; t++) {
                var n = (i = this.faces[t]).vertexNormals;
                3 === n.length ? (n[0].copy(i.normal), n[1].copy(i.normal), n[2].copy(i.normal)) : (n[0] = i.normal.clone(), n[1] = i.normal.clone(), n[2] = i.normal.clone())
            }
            this.faces.length > 0 && (this.normalsNeedUpdate = !0)
        },
        computeMorphNormals: function() {
            var t, e, i, n, r;
            for (i = 0, n = this.faces.length; i < n; i++)
                for ((r = this.faces[i]).__originalFaceNormal ? r.__originalFaceNormal.copy(r.normal) : r.__originalFaceNormal = r.normal.clone(), r.__originalVertexNormals || (r.__originalVertexNormals = []), t = 0, e = r.vertexNormals.length; t < e; t++) r.__originalVertexNormals[t] ? r.__originalVertexNormals[t].copy(r.vertexNormals[t]) : r.__originalVertexNormals[t] = r.vertexNormals[t].clone();
            var s = new Ui;
            for (s.faces = this.faces, t = 0, e = this.morphTargets.length; t < e; t++) {
                if (!this.morphNormals[t]) {
                    this.morphNormals[t] = {}, this.morphNormals[t].faceNormals = [], this.morphNormals[t].vertexNormals = [];
                    var o = this.morphNormals[t].faceNormals,
                        a = this.morphNormals[t].vertexNormals;
                    for (i = 0, n = this.faces.length; i < n; i++) c = new Qe, l = {
                        a: new Qe,
                        b: new Qe,
                        c: new Qe
                    }, o.push(c), a.push(l)
                }
                var c, l, p = this.morphNormals[t];
                for (s.vertices = this.morphTargets[t].vertices, s.computeFaceNormals(), s.computeVertexNormals(), i = 0, n = this.faces.length; i < n; i++) r = this.faces[i], c = p.faceNormals[i], l = p.vertexNormals[i], c.copy(r.normal), l.a.copy(r.vertexNormals[0]), l.b.copy(r.vertexNormals[1]), l.c.copy(r.vertexNormals[2])
            }
            for (i = 0, n = this.faces.length; i < n; i++)(r = this.faces[i]).normal = r.__originalFaceNormal, r.vertexNormals = r.__originalVertexNormals
        },
        computeBoundingBox: function() {
            null === this.boundingBox && (this.boundingBox = new hi), this.boundingBox.setFromPoints(this.vertices)
        },
        computeBoundingSphere: function() {
            null === this.boundingSphere && (this.boundingSphere = new ui), this.boundingSphere.setFromPoints(this.vertices)
        },
        merge: function(t, e, i) {
            if (t && t.isGeometry) {
                var n, r = this.vertices.length,
                    s = this.vertices,
                    o = t.vertices,
                    a = this.faces,
                    c = t.faces,
                    l = this.faceVertexUvs[0],
                    p = t.faceVertexUvs[0],
                    h = this.colors,
                    u = t.colors;
                void 0 === i && (i = 0), void 0 !== e && (n = (new $e).getNormalMatrix(e));
                for (var d = 0, f = o.length; d < f; d++) {
                    var m = o[d].clone();
                    void 0 !== e && m.applyMatrix4(e), s.push(m)
                }
                for (d = 0, f = u.length; d < f; d++) h.push(u[d].clone());
                for (d = 0, f = c.length; d < f; d++) {
                    var g, v, y, x = c[d],
                        w = x.vertexNormals,
                        b = x.vertexColors;
                    (g = new Di(x.a + r, x.b + r, x.c + r)).normal.copy(x.normal), void 0 !== n && g.normal.applyMatrix3(n).normalize();
                    for (var M = 0, S = w.length; M < S; M++) v = w[M].clone(), void 0 !== n && v.applyMatrix3(n).normalize(), g.vertexNormals.push(v);
                    g.color.copy(x.color);
                    for (M = 0, S = b.length; M < S; M++) y = b[M], g.vertexColors.push(y.clone());
                    g.materialIndex = x.materialIndex + i, a.push(g)
                }
                for (d = 0, f = p.length; d < f; d++) {
                    var _ = p[d],
                        T = [];
                    if (void 0 !== _) {
                        for (M = 0, S = _.length; M < S; M++) T.push(_[M].clone());
                        l.push(T)
                    }
                }
            } else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.", t)
        },
        mergeMesh: function(t) {
            t && t.isMesh ? (t.matrixAutoUpdate && t.updateMatrix(), this.merge(t.geometry, t.matrix)) : console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.", t)
        },
        mergeVertices: function() {
            var t, e, i, n, r, s, o, a, c = {},
                l = [],
                p = [],
                h = Math.pow(10, 4);
            for (i = 0, n = this.vertices.length; i < n; i++) t = this.vertices[i], void 0 === c[e = Math.round(t.x * h) + "_" + Math.round(t.y * h) + "_" + Math.round(t.z * h)] ? (c[e] = i, l.push(this.vertices[i]), p[i] = l.length - 1) : p[i] = p[c[e]];
            var u = [];
            for (i = 0, n = this.faces.length; i < n; i++) {
                (r = this.faces[i]).a = p[r.a], r.b = p[r.b], r.c = p[r.c], s = [r.a, r.b, r.c];
                for (var d = 0; d < 3; d++)
                    if (s[d] === s[(d + 1) % 3]) {
                        u.push(i);
                        break
                    }
            }
            for (i = u.length - 1; i >= 0; i--) {
                var f = u[i];
                for (this.faces.splice(f, 1), o = 0, a = this.faceVertexUvs.length; o < a; o++) this.faceVertexUvs[o].splice(f, 1)
            }
            var m = this.vertices.length - l.length;
            return this.vertices = l, m
        },
        setFromPoints: function(t) {
            this.vertices = [];
            for (var e = 0, i = t.length; e < i; e++) {
                var n = t[e];
                this.vertices.push(new Qe(n.x, n.y, n.z || 0))
            }
            return this
        },
        sortFacesByMaterialIndex: function() {
            for (var t = this.faces, e = t.length, i = 0; i < e; i++) t[i]._id = i;
            t.sort(function(t, e) {
                return t.materialIndex - e.materialIndex
            });
            var n, r, s = this.faceVertexUvs[0],
                o = this.faceVertexUvs[1];
            s && s.length === e && (n = []), o && o.length === e && (r = []);
            for (i = 0; i < e; i++) {
                var a = t[i]._id;
                n && n.push(s[a]), r && r.push(o[a])
            }
            n && (this.faceVertexUvs[0] = n), r && (this.faceVertexUvs[1] = r)
        },
        toJSON: function() {
            var t = {
                metadata: {
                    version: 4.5,
                    type: "Geometry",
                    generator: "Geometry.toJSON"
                }
            };
            if (t.uuid = this.uuid, t.type = this.type, "" !== this.name && (t.name = this.name), void 0 !== this.parameters) {
                var e = this.parameters;
                for (var i in e) void 0 !== e[i] && (t[i] = e[i]);
                return t
            }
            for (var n = [], r = 0; r < this.vertices.length; r++) {
                var s = this.vertices[r];
                n.push(s.x, s.y, s.z)
            }
            var o = [],
                a = [],
                c = {},
                l = [],
                p = {},
                h = [],
                u = {};
            for (r = 0; r < this.faces.length; r++) {
                var d = this.faces[r],
                    f = void 0 !== this.faceVertexUvs[0][r],
                    m = d.normal.length() > 0,
                    g = d.vertexNormals.length > 0,
                    v = 1 !== d.color.r || 1 !== d.color.g || 1 !== d.color.b,
                    y = d.vertexColors.length > 0,
                    x = 0;
                if (x = S(x, 0, 0), x = S(x, 1, !0), x = S(x, 2, !1), x = S(x, 3, f), x = S(x, 4, m), x = S(x, 5, g), x = S(x, 6, v), x = S(x, 7, y), o.push(x), o.push(d.a, d.b, d.c), o.push(d.materialIndex), f) {
                    var w = this.faceVertexUvs[0][r];
                    o.push(E(w[0]), E(w[1]), E(w[2]))
                }
                if (m && o.push(_(d.normal)), g) {
                    var b = d.vertexNormals;
                    o.push(_(b[0]), _(b[1]), _(b[2]))
                }
                if (v && o.push(T(d.color)), y) {
                    var M = d.vertexColors;
                    o.push(T(M[0]), T(M[1]), T(M[2]))
                }
            }

            function S(t, e, i) {
                return i ? t | 1 << e : t & ~(1 << e)
            }

            function _(t) {
                var e = t.x.toString() + t.y.toString() + t.z.toString();
                return void 0 !== c[e] ? c[e] : (c[e] = a.length / 3, a.push(t.x, t.y, t.z), c[e])
            }

            function T(t) {
                var e = t.r.toString() + t.g.toString() + t.b.toString();
                return void 0 !== p[e] ? p[e] : (p[e] = l.length, l.push(t.getHex()), p[e])
            }

            function E(t) {
                var e = t.x.toString() + t.y.toString();
                return void 0 !== u[e] ? u[e] : (u[e] = h.length / 2, h.push(t.x, t.y), u[e])
            }
            return t.data = {}, t.data.vertices = n, t.data.normals = a, l.length > 0 && (t.data.colors = l), h.length > 0 && (t.data.uvs = [h]), t.data.faces = o, t
        },
        clone: function() {
            return (new Ui).copy(this)
        },
        copy: function(t) {
            var e, i, n, r, s, o;
            this.vertices = [], this.colors = [], this.faces = [], this.faceVertexUvs = [
                []
            ], this.morphTargets = [], this.morphNormals = [], this.skinWeights = [], this.skinIndices = [], this.lineDistances = [], this.boundingBox = null, this.boundingSphere = null, this.name = t.name;
            var a = t.vertices;
            for (e = 0, i = a.length; e < i; e++) this.vertices.push(a[e].clone());
            var c = t.colors;
            for (e = 0, i = c.length; e < i; e++) this.colors.push(c[e].clone());
            var l = t.faces;
            for (e = 0, i = l.length; e < i; e++) this.faces.push(l[e].clone());
            for (e = 0, i = t.faceVertexUvs.length; e < i; e++) {
                var p = t.faceVertexUvs[e];
                for (void 0 === this.faceVertexUvs[e] && (this.faceVertexUvs[e] = []), n = 0, r = p.length; n < r; n++) {
                    var h = p[n],
                        u = [];
                    for (s = 0, o = h.length; s < o; s++) {
                        var d = h[s];
                        u.push(d.clone())
                    }
                    this.faceVertexUvs[e].push(u)
                }
            }
            var f = t.morphTargets;
            for (e = 0, i = f.length; e < i; e++) {
                var m = {};
                if (m.name = f[e].name, void 0 !== f[e].vertices)
                    for (m.vertices = [], n = 0, r = f[e].vertices.length; n < r; n++) m.vertices.push(f[e].vertices[n].clone());
                if (void 0 !== f[e].normals)
                    for (m.normals = [], n = 0, r = f[e].normals.length; n < r; n++) m.normals.push(f[e].normals[n].clone());
                this.morphTargets.push(m)
            }
            var g = t.morphNormals;
            for (e = 0, i = g.length; e < i; e++) {
                var v = {};
                if (void 0 !== g[e].vertexNormals)
                    for (v.vertexNormals = [], n = 0, r = g[e].vertexNormals.length; n < r; n++) {
                        var y = g[e].vertexNormals[n],
                            x = {};
                        x.a = y.a.clone(), x.b = y.b.clone(), x.c = y.c.clone(), v.vertexNormals.push(x)
                    }
                if (void 0 !== g[e].faceNormals)
                    for (v.faceNormals = [], n = 0, r = g[e].faceNormals.length; n < r; n++) v.faceNormals.push(g[e].faceNormals[n].clone());
                this.morphNormals.push(v)
            }
            var w = t.skinWeights;
            for (e = 0, i = w.length; e < i; e++) this.skinWeights.push(w[e].clone());
            var b = t.skinIndices;
            for (e = 0, i = b.length; e < i; e++) this.skinIndices.push(b[e].clone());
            var M = t.lineDistances;
            for (e = 0, i = M.length; e < i; e++) this.lineDistances.push(M[e]);
            var S = t.boundingBox;
            null !== S && (this.boundingBox = S.clone());
            var _ = t.boundingSphere;
            return null !== _ && (this.boundingSphere = _.clone()), this.elementsNeedUpdate = t.elementsNeedUpdate, this.verticesNeedUpdate = t.verticesNeedUpdate, this.uvsNeedUpdate = t.uvsNeedUpdate, this.normalsNeedUpdate = t.normalsNeedUpdate, this.colorsNeedUpdate = t.colorsNeedUpdate, this.lineDistancesNeedUpdate = t.lineDistancesNeedUpdate, this.groupsNeedUpdate = t.groupsNeedUpdate, this
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }), Object.defineProperty(Fi.prototype, "needsUpdate", {
        set: function(t) {
            !0 === t && this.version++
        }
    }), Object.assign(Fi.prototype, {
        isBufferAttribute: !0,
        onUploadCallback: function() {},
        setArray: function(t) {
            if (Array.isArray(t)) throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
            return this.count = void 0 !== t ? t.length / this.itemSize : 0, this.array = t, this
        },
        setDynamic: function(t) {
            return this.dynamic = t, this
        },
        copy: function(t) {
            return this.name = t.name, this.array = new t.array.constructor(t.array), this.itemSize = t.itemSize, this.count = t.count, this.normalized = t.normalized, this.dynamic = t.dynamic, this
        },
        copyAt: function(t, e, i) {
            t *= this.itemSize, i *= e.itemSize;
            for (var n = 0, r = this.itemSize; n < r; n++) this.array[t + n] = e.array[i + n];
            return this
        },
        copyArray: function(t) {
            return this.array.set(t), this
        },
        copyColorsArray: function(t) {
            for (var e = this.array, i = 0, n = 0, r = t.length; n < r; n++) {
                var s = t[n];
                void 0 === s && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", n), s = new xi), e[i++] = s.r, e[i++] = s.g, e[i++] = s.b
            }
            return this
        },
        copyVector2sArray: function(t) {
            for (var e = this.array, i = 0, n = 0, r = t.length; n < r; n++) {
                var s = t[n];
                void 0 === s && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", n), s = new Ze), e[i++] = s.x, e[i++] = s.y
            }
            return this
        },
        copyVector3sArray: function(t) {
            for (var e = this.array, i = 0, n = 0, r = t.length; n < r; n++) {
                var s = t[n];
                void 0 === s && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", n), s = new Qe), e[i++] = s.x, e[i++] = s.y, e[i++] = s.z
            }
            return this
        },
        copyVector4sArray: function(t) {
            for (var e = this.array, i = 0, n = 0, r = t.length; n < r; n++) {
                var s = t[n];
                void 0 === s && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", n), s = new ai), e[i++] = s.x, e[i++] = s.y, e[i++] = s.z, e[i++] = s.w
            }
            return this
        },
        set: function(t, e) {
            return void 0 === e && (e = 0), this.array.set(t, e), this
        },
        getX: function(t) {
            return this.array[t * this.itemSize]
        },
        setX: function(t, e) {
            return this.array[t * this.itemSize] = e, this
        },
        getY: function(t) {
            return this.array[t * this.itemSize + 1]
        },
        setY: function(t, e) {
            return this.array[t * this.itemSize + 1] = e, this
        },
        getZ: function(t) {
            return this.array[t * this.itemSize + 2]
        },
        setZ: function(t, e) {
            return this.array[t * this.itemSize + 2] = e, this
        },
        getW: function(t) {
            return this.array[t * this.itemSize + 3]
        },
        setW: function(t, e) {
            return this.array[t * this.itemSize + 3] = e, this
        },
        setXY: function(t, e, i) {
            return t *= this.itemSize, this.array[t + 0] = e, this.array[t + 1] = i, this
        },
        setXYZ: function(t, e, i, n) {
            return t *= this.itemSize, this.array[t + 0] = e, this.array[t + 1] = i, this.array[t + 2] = n, this
        },
        setXYZW: function(t, e, i, n, r) {
            return t *= this.itemSize, this.array[t + 0] = e, this.array[t + 1] = i, this.array[t + 2] = n, this.array[t + 3] = r, this
        },
        onUpload: function(t) {
            return this.onUploadCallback = t, this
        },
        clone: function() {
            return new this.constructor(this.array, this.itemSize).copy(this)
        }
    }), Hi.prototype = Object.create(Fi.prototype), Hi.prototype.constructor = Hi, ji.prototype = Object.create(Fi.prototype), ji.prototype.constructor = ji, Gi.prototype = Object.create(Fi.prototype), Gi.prototype.constructor = Gi, Vi.prototype = Object.create(Fi.prototype), Vi.prototype.constructor = Vi, Wi.prototype = Object.create(Fi.prototype), Wi.prototype.constructor = Wi, Yi.prototype = Object.create(Fi.prototype), Yi.prototype.constructor = Yi, Xi.prototype = Object.create(Fi.prototype), Xi.prototype.constructor = Xi, qi.prototype = Object.create(Fi.prototype), qi.prototype.constructor = qi, Zi.prototype = Object.create(Fi.prototype), Zi.prototype.constructor = Zi, Object.assign(Ki.prototype, {
        computeGroups: function(t) {
            for (var e, i = [], n = void 0, r = t.faces, s = 0; s < r.length; s++) {
                var o = r[s];
                o.materialIndex !== n && (n = o.materialIndex, void 0 !== e && (e.count = 3 * s - e.start, i.push(e)), e = {
                    start: 3 * s,
                    materialIndex: n
                })
            }
            void 0 !== e && (e.count = 3 * s - e.start, i.push(e)), this.groups = i
        },
        fromGeometry: function(t) {
            var e, i = t.faces,
                n = t.vertices,
                r = t.faceVertexUvs,
                s = r[0] && r[0].length > 0,
                o = r[1] && r[1].length > 0,
                a = t.morphTargets,
                c = a.length;
            if (c > 0) {
                e = [];
                for (var l = 0; l < c; l++) e[l] = [];
                this.morphTargets.position = e
            }
            var p, h = t.morphNormals,
                u = h.length;
            if (u > 0) {
                p = [];
                for (l = 0; l < u; l++) p[l] = [];
                this.morphTargets.normal = p
            }
            var d = t.skinIndices,
                f = t.skinWeights,
                m = d.length === n.length,
                g = f.length === n.length;
            n.length > 0 && 0 === i.length && console.error("THREE.DirectGeometry: Faceless geometries are not supported.");
            for (l = 0; l < i.length; l++) {
                var v = i[l];
                this.vertices.push(n[v.a], n[v.b], n[v.c]);
                var y = v.vertexNormals;
                if (3 === y.length) this.normals.push(y[0], y[1], y[2]);
                else {
                    var x = v.normal;
                    this.normals.push(x, x, x)
                }
                var w, b = v.vertexColors;
                if (3 === b.length) this.colors.push(b[0], b[1], b[2]);
                else {
                    var M = v.color;
                    this.colors.push(M, M, M)
                }
                if (!0 === s) void 0 !== (w = r[0][l]) ? this.uvs.push(w[0], w[1], w[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ", l), this.uvs.push(new Ze, new Ze, new Ze));
                if (!0 === o) void 0 !== (w = r[1][l]) ? this.uvs2.push(w[0], w[1], w[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ", l), this.uvs2.push(new Ze, new Ze, new Ze));
                for (var S = 0; S < c; S++) {
                    var _ = a[S].vertices;
                    e[S].push(_[v.a], _[v.b], _[v.c])
                }
                for (S = 0; S < u; S++) {
                    var T = h[S].vertexNormals[l];
                    p[S].push(T.a, T.b, T.c)
                }
                m && this.skinIndices.push(d[v.a], d[v.b], d[v.c]), g && this.skinWeights.push(f[v.a], f[v.b], f[v.c])
            }
            return this.computeGroups(t), this.verticesNeedUpdate = t.verticesNeedUpdate, this.normalsNeedUpdate = t.normalsNeedUpdate, this.colorsNeedUpdate = t.colorsNeedUpdate, this.uvsNeedUpdate = t.uvsNeedUpdate, this.groupsNeedUpdate = t.groupsNeedUpdate, this
        }
    });
    var Qi = 1;

    function $i() {
        Object.defineProperty(this, "id", {
            value: Qi += 2
        }), this.uuid = qe.generateUUID(), this.name = "", this.type = "BufferGeometry", this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.drawRange = {
            start: 0,
            count: 1 / 0
        }, this.userData = {}
    }

    function tn(t, e, i, n, r, s) {
        Ui.call(this), this.type = "BoxGeometry", this.parameters = {
            width: t,
            height: e,
            depth: i,
            widthSegments: n,
            heightSegments: r,
            depthSegments: s
        }, this.fromBufferGeometry(new en(t, e, i, n, r, s)), this.mergeVertices()
    }

    function en(t, e, i, n, r, s) {
        $i.call(this), this.type = "BoxBufferGeometry", this.parameters = {
            width: t,
            height: e,
            depth: i,
            widthSegments: n,
            heightSegments: r,
            depthSegments: s
        };
        var o = this;
        t = t || 1, e = e || 1, i = i || 1, n = Math.floor(n) || 1, r = Math.floor(r) || 1, s = Math.floor(s) || 1;
        var a = [],
            c = [],
            l = [],
            p = [],
            h = 0,
            u = 0;

        function d(t, e, i, n, r, s, d, f, m, g, v) {
            var y, x, w = s / m,
                b = d / g,
                M = s / 2,
                S = d / 2,
                _ = f / 2,
                T = m + 1,
                E = g + 1,
                A = 0,
                L = 0,
                k = new Qe;
            for (x = 0; x < E; x++) {
                var R = x * b - S;
                for (y = 0; y < T; y++) {
                    var P = y * w - M;
                    k[t] = P * n, k[e] = R * r, k[i] = _, c.push(k.x, k.y, k.z), k[t] = 0, k[e] = 0, k[i] = f > 0 ? 1 : -1, l.push(k.x, k.y, k.z), p.push(y / m), p.push(1 - x / g), A += 1
                }
            }
            for (x = 0; x < g; x++)
                for (y = 0; y < m; y++) {
                    var C = h + y + T * x,
                        I = h + y + T * (x + 1),
                        O = h + (y + 1) + T * (x + 1),
                        D = h + (y + 1) + T * x;
                    a.push(C, I, D), a.push(I, O, D), L += 6
                }
            o.addGroup(u, L, v), u += L, h += A
        }
        d("z", "y", "x", -1, -1, i, e, t, s, r, 0), d("z", "y", "x", 1, -1, i, e, -t, s, r, 1), d("x", "z", "y", 1, 1, t, i, e, n, s, 2), d("x", "z", "y", 1, -1, t, i, -e, n, s, 3), d("x", "y", "z", 1, -1, t, e, i, n, r, 4), d("x", "y", "z", -1, -1, t, e, -i, n, r, 5), this.setIndex(a), this.addAttribute("position", new qi(c, 3)), this.addAttribute("normal", new qi(l, 3)), this.addAttribute("uv", new qi(p, 2))
    }

    function nn(t, e, i, n) {
        Ui.call(this), this.type = "PlaneGeometry", this.parameters = {
            width: t,
            height: e,
            widthSegments: i,
            heightSegments: n
        }, this.fromBufferGeometry(new rn(t, e, i, n)), this.mergeVertices()
    }

    function rn(t, e, i, n) {
        $i.call(this), this.type = "PlaneBufferGeometry", this.parameters = {
            width: t,
            height: e,
            widthSegments: i,
            heightSegments: n
        };
        var r, s, o = (t = t || 1) / 2,
            a = (e = e || 1) / 2,
            c = Math.floor(i) || 1,
            l = Math.floor(n) || 1,
            p = c + 1,
            h = l + 1,
            u = t / c,
            d = e / l,
            f = [],
            m = [],
            g = [],
            v = [];
        for (s = 0; s < h; s++) {
            var y = s * d - a;
            for (r = 0; r < p; r++) {
                var x = r * u - o;
                m.push(x, -y, 0), g.push(0, 0, 1), v.push(r / c), v.push(1 - s / l)
            }
        }
        for (s = 0; s < l; s++)
            for (r = 0; r < c; r++) {
                var w = r + p * s,
                    b = r + p * (s + 1),
                    M = r + 1 + p * (s + 1),
                    S = r + 1 + p * s;
                f.push(w, b, S), f.push(b, M, S)
            }
        this.setIndex(f), this.addAttribute("position", new qi(m, 3)), this.addAttribute("normal", new qi(g, 3)), this.addAttribute("uv", new qi(v, 2))
    }
    $i.prototype = Object.assign(Object.create(n.prototype), {
        constructor: $i,
        isBufferGeometry: !0,
        getIndex: function() {
            return this.index
        },
        setIndex: function(t) {
            Array.isArray(t) ? this.index = new(Ji(t) > 65535 ? Xi : Wi)(t, 1) : this.index = t
        },
        addAttribute: function(t, e) {
            return e && e.isBufferAttribute || e && e.isInterleavedBufferAttribute ? "index" === t ? (console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."), this.setIndex(e), this) : (this.attributes[t] = e, this) : (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."), this.addAttribute(t, new Fi(arguments[1], arguments[2])))
        },
        getAttribute: function(t) {
            return this.attributes[t]
        },
        removeAttribute: function(t) {
            return delete this.attributes[t], this
        },
        addGroup: function(t, e, i) {
            this.groups.push({
                start: t,
                count: e,
                materialIndex: void 0 !== i ? i : 0
            })
        },
        clearGroups: function() {
            this.groups = []
        },
        setDrawRange: function(t, e) {
            this.drawRange.start = t, this.drawRange.count = e
        },
        applyMatrix: function(t) {
            var e = this.attributes.position;
            void 0 !== e && (t.applyToBufferAttribute(e), e.needsUpdate = !0);
            var i = this.attributes.normal;
            void 0 !== i && ((new $e).getNormalMatrix(t).applyToBufferAttribute(i), i.needsUpdate = !0);
            return null !== this.boundingBox && this.computeBoundingBox(), null !== this.boundingSphere && this.computeBoundingSphere(), this
        },
        rotateX: function() {
            var t = new Ke;
            return function(e) {
                return t.makeRotationX(e), this.applyMatrix(t), this
            }
        }(),
        rotateY: function() {
            var t = new Ke;
            return function(e) {
                return t.makeRotationY(e), this.applyMatrix(t), this
            }
        }(),
        rotateZ: function() {
            var t = new Ke;
            return function(e) {
                return t.makeRotationZ(e), this.applyMatrix(t), this
            }
        }(),
        translate: function() {
            var t = new Ke;
            return function(e, i, n) {
                return t.makeTranslation(e, i, n), this.applyMatrix(t), this
            }
        }(),
        scale: function() {
            var t = new Ke;
            return function(e, i, n) {
                return t.makeScale(e, i, n), this.applyMatrix(t), this
            }
        }(),
        lookAt: function() {
            var t = new Ci;
            return function(e) {
                t.lookAt(e), t.updateMatrix(), this.applyMatrix(t.matrix)
            }
        }(),
        center: function() {
            var t = new Qe;
            return function() {
                return this.computeBoundingBox(), this.boundingBox.getCenter(t).negate(), this.translate(t.x, t.y, t.z), this
            }
        }(),
        setFromObject: function(t) {
            var e = t.geometry;
            if (t.isPoints || t.isLine) {
                var i = new qi(3 * e.vertices.length, 3),
                    n = new qi(3 * e.colors.length, 3);
                if (this.addAttribute("position", i.copyVector3sArray(e.vertices)), this.addAttribute("color", n.copyColorsArray(e.colors)), e.lineDistances && e.lineDistances.length === e.vertices.length) {
                    var r = new qi(e.lineDistances.length, 1);
                    this.addAttribute("lineDistance", r.copyArray(e.lineDistances))
                }
                null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()), null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone())
            } else t.isMesh && e && e.isGeometry && this.fromGeometry(e);
            return this
        },
        setFromPoints: function(t) {
            for (var e = [], i = 0, n = t.length; i < n; i++) {
                var r = t[i];
                e.push(r.x, r.y, r.z || 0)
            }
            return this.addAttribute("position", new qi(e, 3)), this
        },
        updateFromObject: function(t) {
            var e, i = t.geometry;
            if (t.isMesh) {
                var n = i.__directGeometry;
                if (!0 === i.elementsNeedUpdate && (n = void 0, i.elementsNeedUpdate = !1), void 0 === n) return this.fromGeometry(i);
                n.verticesNeedUpdate = i.verticesNeedUpdate, n.normalsNeedUpdate = i.normalsNeedUpdate, n.colorsNeedUpdate = i.colorsNeedUpdate, n.uvsNeedUpdate = i.uvsNeedUpdate, n.groupsNeedUpdate = i.groupsNeedUpdate, i.verticesNeedUpdate = !1, i.normalsNeedUpdate = !1, i.colorsNeedUpdate = !1, i.uvsNeedUpdate = !1, i.groupsNeedUpdate = !1, i = n
            }
            return !0 === i.verticesNeedUpdate && (void 0 !== (e = this.attributes.position) && (e.copyVector3sArray(i.vertices), e.needsUpdate = !0), i.verticesNeedUpdate = !1), !0 === i.normalsNeedUpdate && (void 0 !== (e = this.attributes.normal) && (e.copyVector3sArray(i.normals), e.needsUpdate = !0), i.normalsNeedUpdate = !1), !0 === i.colorsNeedUpdate && (void 0 !== (e = this.attributes.color) && (e.copyColorsArray(i.colors), e.needsUpdate = !0), i.colorsNeedUpdate = !1), i.uvsNeedUpdate && (void 0 !== (e = this.attributes.uv) && (e.copyVector2sArray(i.uvs), e.needsUpdate = !0), i.uvsNeedUpdate = !1), i.lineDistancesNeedUpdate && (void 0 !== (e = this.attributes.lineDistance) && (e.copyArray(i.lineDistances), e.needsUpdate = !0), i.lineDistancesNeedUpdate = !1), i.groupsNeedUpdate && (i.computeGroups(t.geometry), this.groups = i.groups, i.groupsNeedUpdate = !1), this
        },
        fromGeometry: function(t) {
            return t.__directGeometry = (new Ki).fromGeometry(t), this.fromDirectGeometry(t.__directGeometry)
        },
        fromDirectGeometry: function(t) {
            var e = new Float32Array(3 * t.vertices.length);
            if (this.addAttribute("position", new Fi(e, 3).copyVector3sArray(t.vertices)), t.normals.length > 0) {
                var i = new Float32Array(3 * t.normals.length);
                this.addAttribute("normal", new Fi(i, 3).copyVector3sArray(t.normals))
            }
            if (t.colors.length > 0) {
                var n = new Float32Array(3 * t.colors.length);
                this.addAttribute("color", new Fi(n, 3).copyColorsArray(t.colors))
            }
            if (t.uvs.length > 0) {
                var r = new Float32Array(2 * t.uvs.length);
                this.addAttribute("uv", new Fi(r, 2).copyVector2sArray(t.uvs))
            }
            if (t.uvs2.length > 0) {
                var s = new Float32Array(2 * t.uvs2.length);
                this.addAttribute("uv2", new Fi(s, 2).copyVector2sArray(t.uvs2))
            }
            for (var o in this.groups = t.groups, t.morphTargets) {
                for (var a = [], c = t.morphTargets[o], l = 0, p = c.length; l < p; l++) {
                    var h = c[l],
                        u = new qi(3 * h.length, 3);
                    a.push(u.copyVector3sArray(h))
                }
                this.morphAttributes[o] = a
            }
            if (t.skinIndices.length > 0) {
                var d = new qi(4 * t.skinIndices.length, 4);
                this.addAttribute("skinIndex", d.copyVector4sArray(t.skinIndices))
            }
            if (t.skinWeights.length > 0) {
                var f = new qi(4 * t.skinWeights.length, 4);
                this.addAttribute("skinWeight", f.copyVector4sArray(t.skinWeights))
            }
            return null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()), null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone()), this
        },
        computeBoundingBox: function() {
            null === this.boundingBox && (this.boundingBox = new hi);
            var t = this.attributes.position;
            void 0 !== t ? this.boundingBox.setFromBufferAttribute(t) : this.boundingBox.makeEmpty(), (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this)
        },
        computeBoundingSphere: function() {
            var t = new hi,
                e = new Qe;
            return function() {
                null === this.boundingSphere && (this.boundingSphere = new ui);
                var i = this.attributes.position;
                if (i) {
                    var n = this.boundingSphere.center;
                    t.setFromBufferAttribute(i), t.getCenter(n);
                    for (var r = 0, s = 0, o = i.count; s < o; s++) e.x = i.getX(s), e.y = i.getY(s), e.z = i.getZ(s), r = Math.max(r, n.distanceToSquared(e));
                    this.boundingSphere.radius = Math.sqrt(r), isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this)
                }
            }
        }(),
        computeFaceNormals: function() {},
        computeVertexNormals: function() {
            var t = this.index,
                e = this.attributes,
                i = this.groups;
            if (e.position) {
                var n = e.position.array;
                if (void 0 === e.normal) this.addAttribute("normal", new Fi(new Float32Array(n.length), 3));
                else
                    for (var r = e.normal.array, s = 0, o = r.length; s < o; s++) r[s] = 0;
                var a, c, l, p = e.normal.array,
                    h = new Qe,
                    u = new Qe,
                    d = new Qe,
                    f = new Qe,
                    m = new Qe;
                if (t) {
                    var g = t.array;
                    0 === i.length && this.addGroup(0, g.length);
                    for (var v = 0, y = i.length; v < y; ++v) {
                        var x = i[v],
                            w = x.start;
                        for (s = w, o = w + x.count; s < o; s += 3) a = 3 * g[s + 0], c = 3 * g[s + 1], l = 3 * g[s + 2], h.fromArray(n, a), u.fromArray(n, c), d.fromArray(n, l), f.subVectors(d, u), m.subVectors(h, u), f.cross(m), p[a] += f.x, p[a + 1] += f.y, p[a + 2] += f.z, p[c] += f.x, p[c + 1] += f.y, p[c + 2] += f.z, p[l] += f.x, p[l + 1] += f.y, p[l + 2] += f.z
                    }
                } else
                    for (s = 0, o = n.length; s < o; s += 9) h.fromArray(n, s), u.fromArray(n, s + 3), d.fromArray(n, s + 6), f.subVectors(d, u), m.subVectors(h, u), f.cross(m), p[s] = f.x, p[s + 1] = f.y, p[s + 2] = f.z, p[s + 3] = f.x, p[s + 4] = f.y, p[s + 5] = f.z, p[s + 6] = f.x, p[s + 7] = f.y, p[s + 8] = f.z;
                this.normalizeNormals(), e.normal.needsUpdate = !0
            }
        },
        merge: function(t, e) {
            if (t && t.isBufferGeometry) {
                void 0 === e && (e = 0, console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));
                var i = this.attributes;
                for (var n in i)
                    if (void 0 !== t.attributes[n])
                        for (var r = i[n].array, s = t.attributes[n], o = s.array, a = 0, c = s.itemSize * e; a < o.length; a++, c++) r[c] = o[a];
                return this
            }
            console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", t)
        },
        normalizeNormals: function() {
            var t = new Qe;
            return function() {
                for (var e = this.attributes.normal, i = 0, n = e.count; i < n; i++) t.x = e.getX(i), t.y = e.getY(i), t.z = e.getZ(i), t.normalize(), e.setXYZ(i, t.x, t.y, t.z)
            }
        }(),
        toNonIndexed: function() {
            if (null === this.index) return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."), this;
            var t = new $i,
                e = this.index.array,
                i = this.attributes;
            for (var n in i) {
                for (var r = i[n], s = r.array, o = r.itemSize, a = new s.constructor(e.length * o), c = 0, l = 0, p = 0, h = e.length; p < h; p++) {
                    c = e[p] * o;
                    for (var u = 0; u < o; u++) a[l++] = s[c++]
                }
                t.addAttribute(n, new Fi(a, o))
            }
            var d = this.groups;
            for (p = 0, h = d.length; p < h; p++) {
                var f = d[p];
                t.addGroup(f.start, f.count, f.materialIndex)
            }
            return t
        },
        toJSON: function() {
            var t = {
                metadata: {
                    version: 4.5,
                    type: "BufferGeometry",
                    generator: "BufferGeometry.toJSON"
                }
            };
            if (t.uuid = this.uuid, t.type = this.type, "" !== this.name && (t.name = this.name), Object.keys(this.userData).length > 0 && (t.userData = this.userData), void 0 !== this.parameters) {
                var e = this.parameters;
                for (var i in e) void 0 !== e[i] && (t[i] = e[i]);
                return t
            }
            t.data = {
                attributes: {}
            };
            var n = this.index;
            if (null !== n) {
                var r = Array.prototype.slice.call(n.array);
                t.data.index = {
                    type: n.array.constructor.name,
                    array: r
                }
            }
            var s = this.attributes;
            for (var i in s) {
                var o = s[i];
                r = Array.prototype.slice.call(o.array);
                t.data.attributes[i] = {
                    itemSize: o.itemSize,
                    type: o.array.constructor.name,
                    array: r,
                    normalized: o.normalized
                }
            }
            var a = this.groups;
            a.length > 0 && (t.data.groups = JSON.parse(JSON.stringify(a)));
            var c = this.boundingSphere;
            return null !== c && (t.data.boundingSphere = {
                center: c.center.toArray(),
                radius: c.radius
            }), t
        },
        clone: function() {
            return (new $i).copy(this)
        },
        copy: function(t) {
            var e, i, n;
            this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.name = t.name;
            var r = t.index;
            null !== r && this.setIndex(r.clone());
            var s = t.attributes;
            for (e in s) {
                var o = s[e];
                this.addAttribute(e, o.clone())
            }
            var a = t.morphAttributes;
            for (e in a) {
                var c = [],
                    l = a[e];
                for (i = 0, n = l.length; i < n; i++) c.push(l[i].clone());
                this.morphAttributes[e] = c
            }
            var p = t.groups;
            for (i = 0, n = p.length; i < n; i++) {
                var h = p[i];
                this.addGroup(h.start, h.count, h.materialIndex)
            }
            var u = t.boundingBox;
            null !== u && (this.boundingBox = u.clone());
            var d = t.boundingSphere;
            return null !== d && (this.boundingSphere = d.clone()), this.drawRange.start = t.drawRange.start, this.drawRange.count = t.drawRange.count, this.userData = t.userData, this
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }), tn.prototype = Object.create(Ui.prototype), tn.prototype.constructor = tn, en.prototype = Object.create($i.prototype), en.prototype.constructor = en, nn.prototype = Object.create(Ui.prototype), nn.prototype.constructor = nn, rn.prototype = Object.create($i.prototype), rn.prototype.constructor = rn;
    var sn, on, an, cn, ln, pn, hn, un, dn, fn, mn, gn = 0;

    function vn() {
        Object.defineProperty(this, "id", {
            value: gn++
        }), this.uuid = qe.generateUUID(), this.name = "", this.type = "Material", this.fog = !0, this.lights = !0, this.blending = D, this.side = E, this.flatShading = !1, this.vertexColors = P, this.opacity = 1, this.transparent = !1, this.blendSrc = Z, this.blendDst = K, this.blendEquation = F, this.blendSrcAlpha = null, this.blendDstAlpha = null, this.blendEquationAlpha = null, this.depthFunc = st, this.depthTest = !0, this.depthWrite = !0, this.clippingPlanes = null, this.clipIntersection = !1, this.clipShadows = !1, this.shadowSide = null, this.colorWrite = !0, this.precision = null, this.polygonOffset = !1, this.polygonOffsetFactor = 0, this.polygonOffsetUnits = 0, this.dithering = !1, this.alphaTest = 0, this.premultipliedAlpha = !1, this.overdraw = 0, this.visible = !0, this.userData = {}, this.needsUpdate = !0
    }

    function yn(t) {
        vn.call(this), this.type = "MeshBasicMaterial", this.color = new xi(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = pt, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.lights = !1, this.setValues(t)
    }

    function xn(t) {
        vn.call(this), this.type = "ShaderMaterial", this.defines = {}, this.uniforms = {}, this.vertexShader = "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}", this.fragmentShader = "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}", this.linewidth = 1, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.clipping = !1, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.extensions = {
            derivatives: !1,
            fragDepth: !1,
            drawBuffers: !1,
            shaderTextureLOD: !1
        }, this.defaultAttributeValues = {
            color: [1, 1, 1],
            uv: [0, 0],
            uv2: [0, 0]
        }, this.index0AttributeName = void 0, this.uniformsNeedUpdate = !1, void 0 !== t && (void 0 !== t.attributes && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."), this.setValues(t))
    }

    function wn(t, e) {
        this.origin = void 0 !== t ? t : new Qe, this.direction = void 0 !== e ? e : new Qe
    }

    function bn(t, e, i) {
        this.a = void 0 !== t ? t : new Qe, this.b = void 0 !== e ? e : new Qe, this.c = void 0 !== i ? i : new Qe
    }

    function Mn(t, e) {
        Ci.call(this), this.type = "Mesh", this.geometry = void 0 !== t ? t : new $i, this.material = void 0 !== e ? e : new yn({
            color: 16777215 * Math.random()
        }), this.drawMode = Ie, this.updateMorphTargets()
    }

    function Sn(t, e, i, n) {
        var r, s, o, a = new xi(0),
            c = 0;

        function l(t, i) {
            e.buffers.color.setClear(t.r, t.g, t.b, i, n)
        }
        return {
            getClearColor: function() {
                return a
            },
            setClearColor: function(t, e) {
                a.set(t), l(a, c = void 0 !== e ? e : 1)
            },
            getClearAlpha: function() {
                return c
            },
            setClearAlpha: function(t) {
                l(a, c = t)
            },
            render: function(e, n, p, h) {
                var u = n.background;
                null === u ? l(a, c) : u && u.isColor && (l(u, 1), h = !0), (t.autoClear || h) && t.clear(t.autoClearColor, t.autoClearDepth, t.autoClearStencil), u && u.isCubeTexture ? (void 0 === o && ((o = new Mn(new en(1, 1, 1), new xn({
                    uniforms: Mi.cube.uniforms,
                    vertexShader: Mi.cube.vertexShader,
                    fragmentShader: Mi.cube.fragmentShader,
                    side: A,
                    depthTest: !0,
                    depthWrite: !1,
                    fog: !1
                }))).geometry.removeAttribute("normal"), o.geometry.removeAttribute("uv"), o.onBeforeRender = function(t, e, i) {
                    this.matrixWorld.copyPosition(i.matrixWorld)
                }, i.update(o)), o.material.uniforms.tCube.value = u, e.push(o, o.geometry, o.material, 0, null)) : u && u.isTexture && (void 0 === r && (r = new Oi(-1, 1, 1, -1, 0, 1), s = new Mn(new rn(2, 2), new yn({
                    depthTest: !1,
                    depthWrite: !1,
                    fog: !1
                })), i.update(s)), s.material.map = u, t.renderBufferDirect(r, null, s.geometry, s.material, s, null))
            }
        }
    }

    function _n(t, e, i, n) {
        var r;
        this.setMode = function(t) {
            r = t
        }, this.render = function(e, n) {
            t.drawArrays(r, e, n), i.update(n, r)
        }, this.renderInstances = function(s, o, a) {
            var c;
            if (n.isWebGL2) c = t;
            else if (null === (c = e.get("ANGLE_instanced_arrays"))) return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            c[n.isWebGL2 ? "drawArraysInstanced" : "drawArraysInstancedANGLE"](r, o, a, s.maxInstancedCount), i.update(a, r, s.maxInstancedCount)
        }
    }

    function Tn(t, e, i) {
        var n;

        function r(e) {
            if ("highp" === e) {
                if (t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.HIGH_FLOAT).precision > 0 && t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.HIGH_FLOAT).precision > 0) return "highp";
                e = "mediump"
            }
            return "mediump" === e && t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.MEDIUM_FLOAT).precision > 0 && t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.MEDIUM_FLOAT).precision > 0 ? "mediump" : "lowp"
        }
        var s = "undefined" != typeof WebGL2RenderingContext && t instanceof WebGL2RenderingContext,
            o = void 0 !== i.precision ? i.precision : "highp",
            a = r(o);
        a !== o && (console.warn("THREE.WebGLRenderer:", o, "not supported, using", a, "instead."), o = a);
        var c = !0 === i.logarithmicDepthBuffer,
            l = t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),
            p = t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),
            h = t.getParameter(t.MAX_TEXTURE_SIZE),
            u = t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),
            d = t.getParameter(t.MAX_VERTEX_ATTRIBS),
            f = t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),
            m = t.getParameter(t.MAX_VARYING_VECTORS),
            g = t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),
            v = p > 0,
            y = s || !!e.get("OES_texture_float");
        return {
            isWebGL2: s,
            getMaxAnisotropy: function() {
                if (void 0 !== n) return n;
                var i = e.get("EXT_texture_filter_anisotropic");
                return n = null !== i ? t.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0
            },
            getMaxPrecision: r,
            precision: o,
            logarithmicDepthBuffer: c,
            maxTextures: l,
            maxVertexTextures: p,
            maxTextureSize: h,
            maxCubemapSize: u,
            maxAttributes: d,
            maxVertexUniforms: f,
            maxVaryings: m,
            maxFragmentUniforms: g,
            vertexTextures: v,
            floatFragmentTextures: y,
            floatVertexTextures: v && y
        }
    }

    function En() {
        var t = this,
            e = null,
            i = 0,
            n = !1,
            r = !1,
            s = new di,
            o = new $e,
            a = {
                value: null,
                needsUpdate: !1
            };

        function c() {
            a.value !== e && (a.value = e, a.needsUpdate = i > 0), t.numPlanes = i, t.numIntersection = 0
        }

        function l(e, i, n, r) {
            var c = null !== e ? e.length : 0,
                l = null;
            if (0 !== c) {
                if (l = a.value, !0 !== r || null === l) {
                    var p = n + 4 * c,
                        h = i.matrixWorldInverse;
                    o.getNormalMatrix(h), (null === l || l.length < p) && (l = new Float32Array(p));
                    for (var u = 0, d = n; u !== c; ++u, d += 4) s.copy(e[u]).applyMatrix4(h, o), s.normal.toArray(l, d), l[d + 3] = s.constant
                }
                a.value = l, a.needsUpdate = !0
            }
            return t.numPlanes = c, l
        }
        this.uniform = a, this.numPlanes = 0, this.numIntersection = 0, this.init = function(t, r, s) {
            var o = 0 !== t.length || r || 0 !== i || n;
            return n = r, e = l(t, s, 0), i = t.length, o
        }, this.beginShadows = function() {
            r = !0, l(null)
        }, this.endShadows = function() {
            r = !1, c()
        }, this.setState = function(t, s, o, p, h, u) {
            if (!n || null === t || 0 === t.length || r && !o) r ? l(null) : c();
            else {
                var d = r ? 0 : i,
                    f = 4 * d,
                    m = h.clippingState || null;
                a.value = m, m = l(t, p, f, u);
                for (var g = 0; g !== f; ++g) m[g] = e[g];
                h.clippingState = m, this.numIntersection = s ? this.numPlanes : 0, this.numPlanes += d
            }
        }
    }

    function An(t) {
        var e = {};
        return {
            get: function(i) {
                if (void 0 !== e[i]) return e[i];
                var n;
                switch (i) {
                    case "WEBGL_depth_texture":
                        n = t.getExtension("WEBGL_depth_texture") || t.getExtension("MOZ_WEBGL_depth_texture") || t.getExtension("WEBKIT_WEBGL_depth_texture");
                        break;
                    case "EXT_texture_filter_anisotropic":
                        n = t.getExtension("EXT_texture_filter_anisotropic") || t.getExtension("MOZ_EXT_texture_filter_anisotropic") || t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                        break;
                    case "WEBGL_compressed_texture_s3tc":
                        n = t.getExtension("WEBGL_compressed_texture_s3tc") || t.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                        break;
                    case "WEBGL_compressed_texture_pvrtc":
                        n = t.getExtension("WEBGL_compressed_texture_pvrtc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                        break;
                    default:
                        n = t.getExtension(i)
                }
                return null === n && console.warn("THREE.WebGLRenderer: " + i + " extension not supported."), e[i] = n, n
            }
        }
    }

    function Ln(t, e, i) {
        var n = {},
            r = {};

        function s(t) {
            var o = t.target,
                a = n[o.id];
            for (var c in null !== a.index && e.remove(a.index), a.attributes) e.remove(a.attributes[c]);
            o.removeEventListener("dispose", s), delete n[o.id];
            var l = r[a.id];
            l && (e.remove(l), delete r[a.id]), i.memory.geometries--
        }
        return {
            get: function(t, e) {
                var r = n[e.id];
                return r || (e.addEventListener("dispose", s), e.isBufferGeometry ? r = e : e.isGeometry && (void 0 === e._bufferGeometry && (e._bufferGeometry = (new $i).setFromObject(t)), r = e._bufferGeometry), n[e.id] = r, i.memory.geometries++, r)
            },
            update: function(i) {
                var n = i.index,
                    r = i.attributes;
                for (var s in null !== n && e.update(n, t.ELEMENT_ARRAY_BUFFER), r) e.update(r[s], t.ARRAY_BUFFER);
                var o = i.morphAttributes;
                for (var s in o)
                    for (var a = o[s], c = 0, l = a.length; c < l; c++) e.update(a[c], t.ARRAY_BUFFER)
            },
            getWireframeAttribute: function(i) {
                var n = r[i.id];
                if (n) return n;
                var s, o = [],
                    a = i.index,
                    c = i.attributes;
                if (null !== a)
                    for (var l = 0, p = (s = a.array).length; l < p; l += 3) {
                        var h = s[l + 0],
                            u = s[l + 1],
                            d = s[l + 2];
                        o.push(h, u, u, d, d, h)
                    } else
                        for (l = 0, p = (s = c.position.array).length / 3 - 1; l < p; l += 3) h = l + 0, u = l + 1, d = l + 2, o.push(h, u, u, d, d, h);
                return n = new(Ji(o) > 65535 ? Xi : Wi)(o, 1), e.update(n, t.ELEMENT_ARRAY_BUFFER), r[i.id] = n, n
            }
        }
    }

    function kn(t, e, i, n) {
        var r, s, o;
        this.setMode = function(t) {
            r = t
        }, this.setIndex = function(t) {
            s = t.type, o = t.bytesPerElement
        }, this.render = function(e, n) {
            t.drawElements(r, n, s, e * o), i.update(n, r)
        }, this.renderInstances = function(a, c, l) {
            var p;
            if (n.isWebGL2) p = t;
            else if (null === (p = e.get("ANGLE_instanced_arrays"))) return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            p[n.isWebGL2 ? "drawElementsInstanced" : "drawElementsInstancedANGLE"](r, l, s, c * o, a.maxInstancedCount), i.update(l, r, a.maxInstancedCount)
        }
    }

    function Rn(t) {
        var e = {
            frame: 0,
            calls: 0,
            triangles: 0,
            points: 0,
            lines: 0
        };
        return {
            memory: {
                geometries: 0,
                textures: 0
            },
            render: e,
            programs: null,
            autoReset: !0,
            reset: function() {
                e.frame++, e.calls = 0, e.triangles = 0, e.points = 0, e.lines = 0
            },
            update: function(i, n, r) {
                switch (r = r || 1, e.calls++, n) {
                    case t.TRIANGLES:
                        e.triangles += r * (i / 3);
                        break;
                    case t.TRIANGLE_STRIP:
                    case t.TRIANGLE_FAN:
                        e.triangles += r * (i - 2);
                        break;
                    case t.LINES:
                        e.lines += r * (i / 2);
                        break;
                    case t.LINE_STRIP:
                        e.lines += r * (i - 1);
                        break;
                    case t.LINE_LOOP:
                        e.lines += r * i;
                        break;
                    case t.POINTS:
                        e.points += r * i;
                        break;
                    default:
                        console.error("THREE.WebGLInfo: Unknown draw mode:", n)
                }
            }
        }
    }

    function Pn(t, e) {
        return Math.abs(e[1]) - Math.abs(t[1])
    }

    function Cn(t) {
        var e = {},
            i = new Float32Array(8);
        return {
            update: function(n, r, s, o) {
                var a = n.morphTargetInfluences,
                    c = a.length,
                    l = e[r.id];
                if (void 0 === l) {
                    l = [];
                    for (var p = 0; p < c; p++) l[p] = [p, 0];
                    e[r.id] = l
                }
                var h = s.morphTargets && r.morphAttributes.position,
                    u = s.morphNormals && r.morphAttributes.normal;
                for (p = 0; p < c; p++) 0 !== (d = l[p])[1] && (h && r.removeAttribute("morphTarget" + p), u && r.removeAttribute("morphNormal" + p));
                for (p = 0; p < c; p++)(d = l[p])[0] = p, d[1] = a[p];
                for (l.sort(Pn), p = 0; p < 8; p++) {
                    var d;
                    if (d = l[p]) {
                        var f = d[0],
                            m = d[1];
                        if (m) {
                            h && r.addAttribute("morphTarget" + p, h[f]), u && r.addAttribute("morphNormal" + p, u[f]), i[p] = m;
                            continue
                        }
                    }
                    i[p] = 0
                }
                o.getUniforms().setValue(t, "morphTargetInfluences", i)
            }
        }
    }

    function In(t, e) {
        var i = {};
        return {
            update: function(n) {
                var r = e.render.frame,
                    s = n.geometry,
                    o = t.get(n, s);
                return i[o.id] !== r && (s.isGeometry && o.updateFromObject(n), t.update(o), i[o.id] = r), o
            },
            dispose: function() {
                i = {}
            }
        }
    }

    function On(t, e, i, n, r, s, o, a, c, l) {
        t = void 0 !== t ? t : [], e = void 0 !== e ? e : xt, oi.call(this, t, e, i, n, r, s, o, a, c, l), this.flipY = !1
    }
    vn.prototype = Object.assign(Object.create(n.prototype), {
        constructor: vn,
        isMaterial: !0,
        onBeforeCompile: function() {},
        setValues: function(t) {
            if (void 0 !== t)
                for (var e in t) {
                    var i = t[e];
                    if (void 0 !== i)
                        if ("shading" !== e) {
                            var n = this[e];
                            void 0 !== n ? n && n.isColor ? n.set(i) : n && n.isVector3 && i && i.isVector3 ? n.copy(i) : this[e] = "overdraw" === e ? Number(i) : i : console.warn("THREE." + this.type + ": '" + e + "' is not a property of this material.")
                        } else console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = i === k;
                    else console.warn("THREE.Material: '" + e + "' parameter is undefined.")
                }
        },
        toJSON: function(t) {
            var e = void 0 === t || "string" == typeof t;
            e && (t = {
                textures: {},
                images: {}
            });
            var i = {
                metadata: {
                    version: 4.5,
                    type: "Material",
                    generator: "Material.toJSON"
                }
            };

            function n(t) {
                var e = [];
                for (var i in t) {
                    var n = t[i];
                    delete n.metadata, e.push(n)
                }
                return e
            }
            if (i.uuid = this.uuid, i.type = this.type, "" !== this.name && (i.name = this.name), this.color && this.color.isColor && (i.color = this.color.getHex()), void 0 !== this.roughness && (i.roughness = this.roughness), void 0 !== this.metalness && (i.metalness = this.metalness), this.emissive && this.emissive.isColor && (i.emissive = this.emissive.getHex()), 1 !== this.emissiveIntensity && (i.emissiveIntensity = this.emissiveIntensity), this.specular && this.specular.isColor && (i.specular = this.specular.getHex()), void 0 !== this.shininess && (i.shininess = this.shininess), void 0 !== this.clearCoat && (i.clearCoat = this.clearCoat), void 0 !== this.clearCoatRoughness && (i.clearCoatRoughness = this.clearCoatRoughness), this.map && this.map.isTexture && (i.map = this.map.toJSON(t).uuid), this.alphaMap && this.alphaMap.isTexture && (i.alphaMap = this.alphaMap.toJSON(t).uuid), this.lightMap && this.lightMap.isTexture && (i.lightMap = this.lightMap.toJSON(t).uuid), this.aoMap && this.aoMap.isTexture && (i.aoMap = this.aoMap.toJSON(t).uuid, i.aoMapIntensity = this.aoMapIntensity), this.bumpMap && this.bumpMap.isTexture && (i.bumpMap = this.bumpMap.toJSON(t).uuid, i.bumpScale = this.bumpScale), this.normalMap && this.normalMap.isTexture && (i.normalMap = this.normalMap.toJSON(t).uuid, i.normalMapType = this.normalMapType, i.normalScale = this.normalScale.toArray()), this.displacementMap && this.displacementMap.isTexture && (i.displacementMap = this.displacementMap.toJSON(t).uuid, i.displacementScale = this.displacementScale, i.displacementBias = this.displacementBias), this.roughnessMap && this.roughnessMap.isTexture && (i.roughnessMap = this.roughnessMap.toJSON(t).uuid), this.metalnessMap && this.metalnessMap.isTexture && (i.metalnessMap = this.metalnessMap.toJSON(t).uuid), this.emissiveMap && this.emissiveMap.isTexture && (i.emissiveMap = this.emissiveMap.toJSON(t).uuid), this.specularMap && this.specularMap.isTexture && (i.specularMap = this.specularMap.toJSON(t).uuid), this.envMap && this.envMap.isTexture && (i.envMap = this.envMap.toJSON(t).uuid, i.reflectivity = this.reflectivity), this.gradientMap && this.gradientMap.isTexture && (i.gradientMap = this.gradientMap.toJSON(t).uuid), void 0 !== this.size && (i.size = this.size), void 0 !== this.sizeAttenuation && (i.sizeAttenuation = this.sizeAttenuation), this.blending !== D && (i.blending = this.blending), !0 === this.flatShading && (i.flatShading = this.flatShading), this.side !== E && (i.side = this.side), this.vertexColors !== P && (i.vertexColors = this.vertexColors), this.opacity < 1 && (i.opacity = this.opacity), !0 === this.transparent && (i.transparent = this.transparent), i.depthFunc = this.depthFunc, i.depthTest = this.depthTest, i.depthWrite = this.depthWrite, 0 !== this.rotation && (i.rotation = this.rotation), 1 !== this.linewidth && (i.linewidth = this.linewidth), void 0 !== this.dashSize && (i.dashSize = this.dashSize), void 0 !== this.gapSize && (i.gapSize = this.gapSize), void 0 !== this.scale && (i.scale = this.scale), !0 === this.dithering && (i.dithering = !0), this.alphaTest > 0 && (i.alphaTest = this.alphaTest), !0 === this.premultipliedAlpha && (i.premultipliedAlpha = this.premultipliedAlpha), !0 === this.wireframe && (i.wireframe = this.wireframe), this.wireframeLinewidth > 1 && (i.wireframeLinewidth = this.wireframeLinewidth), "round" !== this.wireframeLinecap && (i.wireframeLinecap = this.wireframeLinecap), "round" !== this.wireframeLinejoin && (i.wireframeLinejoin = this.wireframeLinejoin), !0 === this.morphTargets && (i.morphTargets = !0), !0 === this.skinning && (i.skinning = !0), !1 === this.visible && (i.visible = !1), "{}" !== JSON.stringify(this.userData) && (i.userData = this.userData), e) {
                var r = n(t.textures),
                    s = n(t.images);
                r.length > 0 && (i.textures = r), s.length > 0 && (i.images = s)
            }
            return i
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            this.name = t.name, this.fog = t.fog, this.lights = t.lights, this.blending = t.blending, this.side = t.side, this.flatShading = t.flatShading, this.vertexColors = t.vertexColors, this.opacity = t.opacity, this.transparent = t.transparent, this.blendSrc = t.blendSrc, this.blendDst = t.blendDst, this.blendEquation = t.blendEquation, this.blendSrcAlpha = t.blendSrcAlpha, this.blendDstAlpha = t.blendDstAlpha, this.blendEquationAlpha = t.blendEquationAlpha, this.depthFunc = t.depthFunc, this.depthTest = t.depthTest, this.depthWrite = t.depthWrite, this.colorWrite = t.colorWrite, this.precision = t.precision, this.polygonOffset = t.polygonOffset, this.polygonOffsetFactor = t.polygonOffsetFactor, this.polygonOffsetUnits = t.polygonOffsetUnits, this.dithering = t.dithering, this.alphaTest = t.alphaTest, this.premultipliedAlpha = t.premultipliedAlpha, this.overdraw = t.overdraw, this.visible = t.visible, this.userData = JSON.parse(JSON.stringify(t.userData)), this.clipShadows = t.clipShadows, this.clipIntersection = t.clipIntersection;
            var e = t.clippingPlanes,
                i = null;
            if (null !== e) {
                var n = e.length;
                i = new Array(n);
                for (var r = 0; r !== n; ++r) i[r] = e[r].clone()
            }
            return this.clippingPlanes = i, this.shadowSide = t.shadowSide, this
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }), yn.prototype = Object.create(vn.prototype), yn.prototype.constructor = yn, yn.prototype.isMeshBasicMaterial = !0, yn.prototype.copy = function(t) {
        return vn.prototype.copy.call(this, t), this.color.copy(t.color), this.map = t.map, this.lightMap = t.lightMap, this.lightMapIntensity = t.lightMapIntensity, this.aoMap = t.aoMap, this.aoMapIntensity = t.aoMapIntensity, this.specularMap = t.specularMap, this.alphaMap = t.alphaMap, this.envMap = t.envMap, this.combine = t.combine, this.reflectivity = t.reflectivity, this.refractionRatio = t.refractionRatio, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.wireframeLinecap = t.wireframeLinecap, this.wireframeLinejoin = t.wireframeLinejoin, this.skinning = t.skinning, this.morphTargets = t.morphTargets, this
    }, xn.prototype = Object.create(vn.prototype), xn.prototype.constructor = xn, xn.prototype.isShaderMaterial = !0, xn.prototype.copy = function(t) {
        return vn.prototype.copy.call(this, t), this.fragmentShader = t.fragmentShader, this.vertexShader = t.vertexShader, this.uniforms = vi.clone(t.uniforms), this.defines = Object.assign({}, t.defines), this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.lights = t.lights, this.clipping = t.clipping, this.skinning = t.skinning, this.morphTargets = t.morphTargets, this.morphNormals = t.morphNormals, this.extensions = t.extensions, this
    }, xn.prototype.toJSON = function(t) {
        var e = vn.prototype.toJSON.call(this, t);
        return e.uniforms = this.uniforms, e.vertexShader = this.vertexShader, e.fragmentShader = this.fragmentShader, e
    }, Object.assign(wn.prototype, {
        set: function(t, e) {
            return this.origin.copy(t), this.direction.copy(e), this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.origin.copy(t.origin), this.direction.copy(t.direction), this
        },
        at: function(t, e) {
            return void 0 === e && (console.warn("THREE.Ray: .at() target is now required"), e = new Qe), e.copy(this.direction).multiplyScalar(t).add(this.origin)
        },
        lookAt: function(t) {
            return this.direction.copy(t).sub(this.origin).normalize(), this
        },
        recast: function() {
            var t = new Qe;
            return function(e) {
                return this.origin.copy(this.at(e, t)), this
            }
        }(),
        closestPointToPoint: function(t, e) {
            void 0 === e && (console.warn("THREE.Ray: .closestPointToPoint() target is now required"), e = new Qe), e.subVectors(t, this.origin);
            var i = e.dot(this.direction);
            return i < 0 ? e.copy(this.origin) : e.copy(this.direction).multiplyScalar(i).add(this.origin)
        },
        distanceToPoint: function(t) {
            return Math.sqrt(this.distanceSqToPoint(t))
        },
        distanceSqToPoint: function() {
            var t = new Qe;
            return function(e) {
                var i = t.subVectors(e, this.origin).dot(this.direction);
                return i < 0 ? this.origin.distanceToSquared(e) : (t.copy(this.direction).multiplyScalar(i).add(this.origin), t.distanceToSquared(e))
            }
        }(),
        distanceSqToSegment: (on = new Qe, an = new Qe, cn = new Qe, function(t, e, i, n) {
            on.copy(t).add(e).multiplyScalar(.5), an.copy(e).sub(t).normalize(), cn.copy(this.origin).sub(on);
            var r, s, o, a, c = .5 * t.distanceTo(e),
                l = -this.direction.dot(an),
                p = cn.dot(this.direction),
                h = -cn.dot(an),
                u = cn.lengthSq(),
                d = Math.abs(1 - l * l);
            if (d > 0)
                if (s = l * p - h, a = c * d, (r = l * h - p) >= 0)
                    if (s >= -a)
                        if (s <= a) {
                            var f = 1 / d;
                            o = (r *= f) * (r + l * (s *= f) + 2 * p) + s * (l * r + s + 2 * h) + u
                        } else s = c, o = -(r = Math.max(0, -(l * s + p))) * r + s * (s + 2 * h) + u;
            else s = -c, o = -(r = Math.max(0, -(l * s + p))) * r + s * (s + 2 * h) + u;
            else s <= -a ? o = -(r = Math.max(0, -(-l * c + p))) * r + (s = r > 0 ? -c : Math.min(Math.max(-c, -h), c)) * (s + 2 * h) + u : s <= a ? (r = 0, o = (s = Math.min(Math.max(-c, -h), c)) * (s + 2 * h) + u) : o = -(r = Math.max(0, -(l * c + p))) * r + (s = r > 0 ? c : Math.min(Math.max(-c, -h), c)) * (s + 2 * h) + u;
            else s = l > 0 ? -c : c, o = -(r = Math.max(0, -(l * s + p))) * r + s * (s + 2 * h) + u;
            return i && i.copy(this.direction).multiplyScalar(r).add(this.origin), n && n.copy(an).multiplyScalar(s).add(on), o
        }),
        intersectSphere: function() {
            var t = new Qe;
            return function(e, i) {
                t.subVectors(e.center, this.origin);
                var n = t.dot(this.direction),
                    r = t.dot(t) - n * n,
                    s = e.radius * e.radius;
                if (r > s) return null;
                var o = Math.sqrt(s - r),
                    a = n - o,
                    c = n + o;
                return a < 0 && c < 0 ? null : a < 0 ? this.at(c, i) : this.at(a, i)
            }
        }(),
        intersectsSphere: function(t) {
            return this.distanceToPoint(t.center) <= t.radius
        },
        distanceToPlane: function(t) {
            var e = t.normal.dot(this.direction);
            if (0 === e) return 0 === t.distanceToPoint(this.origin) ? 0 : null;
            var i = -(this.origin.dot(t.normal) + t.constant) / e;
            return i >= 0 ? i : null
        },
        intersectPlane: function(t, e) {
            var i = this.distanceToPlane(t);
            return null === i ? null : this.at(i, e)
        },
        intersectsPlane: function(t) {
            var e = t.distanceToPoint(this.origin);
            return 0 === e || t.normal.dot(this.direction) * e < 0
        },
        intersectBox: function(t, e) {
            var i, n, r, s, o, a, c = 1 / this.direction.x,
                l = 1 / this.direction.y,
                p = 1 / this.direction.z,
                h = this.origin;
            return c >= 0 ? (i = (t.min.x - h.x) * c, n = (t.max.x - h.x) * c) : (i = (t.max.x - h.x) * c, n = (t.min.x - h.x) * c), l >= 0 ? (r = (t.min.y - h.y) * l, s = (t.max.y - h.y) * l) : (r = (t.max.y - h.y) * l, s = (t.min.y - h.y) * l), i > s || r > n ? null : ((r > i || i != i) && (i = r), (s < n || n != n) && (n = s), p >= 0 ? (o = (t.min.z - h.z) * p, a = (t.max.z - h.z) * p) : (o = (t.max.z - h.z) * p, a = (t.min.z - h.z) * p), i > a || o > n ? null : ((o > i || i != i) && (i = o), (a < n || n != n) && (n = a), n < 0 ? null : this.at(i >= 0 ? i : n, e)))
        },
        intersectsBox: (sn = new Qe, function(t) {
            return null !== this.intersectBox(t, sn)
        }),
        intersectTriangle: function() {
            var t = new Qe,
                e = new Qe,
                i = new Qe,
                n = new Qe;
            return function(r, s, o, a, c) {
                e.subVectors(s, r), i.subVectors(o, r), n.crossVectors(e, i);
                var l, p = this.direction.dot(n);
                if (p > 0) {
                    if (a) return null;
                    l = 1
                } else {
                    if (!(p < 0)) return null;
                    l = -1, p = -p
                }
                t.subVectors(this.origin, r);
                var h = l * this.direction.dot(i.crossVectors(t, i));
                if (h < 0) return null;
                var u = l * this.direction.dot(e.cross(t));
                if (u < 0) return null;
                if (h + u > p) return null;
                var d = -l * t.dot(n);
                return d < 0 ? null : this.at(d / p, c)
            }
        }(),
        applyMatrix4: function(t) {
            return this.origin.applyMatrix4(t), this.direction.transformDirection(t), this
        },
        equals: function(t) {
            return t.origin.equals(this.origin) && t.direction.equals(this.direction)
        }
    }), Object.assign(bn, {
        getNormal: (ln = new Qe, function(t, e, i, n) {
            void 0 === n && (console.warn("THREE.Triangle: .getNormal() target is now required"), n = new Qe), n.subVectors(i, e), ln.subVectors(t, e), n.cross(ln);
            var r = n.lengthSq();
            return r > 0 ? n.multiplyScalar(1 / Math.sqrt(r)) : n.set(0, 0, 0)
        }),
        getBarycoord: function() {
            var t = new Qe,
                e = new Qe,
                i = new Qe;
            return function(n, r, s, o, a) {
                t.subVectors(o, r), e.subVectors(s, r), i.subVectors(n, r);
                var c = t.dot(t),
                    l = t.dot(e),
                    p = t.dot(i),
                    h = e.dot(e),
                    u = e.dot(i),
                    d = c * h - l * l;
                if (void 0 === a && (console.warn("THREE.Triangle: .getBarycoord() target is now required"), a = new Qe), 0 === d) return a.set(-2, -1, -1);
                var f = 1 / d,
                    m = (h * p - l * u) * f,
                    g = (c * u - l * p) * f;
                return a.set(1 - m - g, g, m)
            }
        }(),
        containsPoint: function() {
            var t = new Qe;
            return function(e, i, n, r) {
                return bn.getBarycoord(e, i, n, r, t), t.x >= 0 && t.y >= 0 && t.x + t.y <= 1
            }
        }()
    }), Object.assign(bn.prototype, {
        set: function(t, e, i) {
            return this.a.copy(t), this.b.copy(e), this.c.copy(i), this
        },
        setFromPointsAndIndices: function(t, e, i, n) {
            return this.a.copy(t[e]), this.b.copy(t[i]), this.c.copy(t[n]), this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.a.copy(t.a), this.b.copy(t.b), this.c.copy(t.c), this
        },
        getArea: function() {
            var t = new Qe,
                e = new Qe;
            return function() {
                return t.subVectors(this.c, this.b), e.subVectors(this.a, this.b), .5 * t.cross(e).length()
            }
        }(),
        getMidpoint: function(t) {
            return void 0 === t && (console.warn("THREE.Triangle: .getMidpoint() target is now required"), t = new Qe), t.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3)
        },
        getNormal: function(t) {
            return bn.getNormal(this.a, this.b, this.c, t)
        },
        getPlane: function(t) {
            return void 0 === t && (console.warn("THREE.Triangle: .getPlane() target is now required"), t = new Qe), t.setFromCoplanarPoints(this.a, this.b, this.c)
        },
        getBarycoord: function(t, e) {
            return bn.getBarycoord(t, this.a, this.b, this.c, e)
        },
        containsPoint: function(t) {
            return bn.containsPoint(t, this.a, this.b, this.c)
        },
        intersectsBox: function(t) {
            return t.intersectsTriangle(this)
        },
        closestPointToPoint: (pn = new Qe, hn = new Qe, un = new Qe, dn = new Qe, fn = new Qe, mn = new Qe, function(t, e) {
            void 0 === e && (console.warn("THREE.Triangle: .closestPointToPoint() target is now required"), e = new Qe);
            var i, n, r = this.a,
                s = this.b,
                o = this.c;
            pn.subVectors(s, r), hn.subVectors(o, r), dn.subVectors(t, r);
            var a = pn.dot(dn),
                c = hn.dot(dn);
            if (a <= 0 && c <= 0) return e.copy(r);
            fn.subVectors(t, s);
            var l = pn.dot(fn),
                p = hn.dot(fn);
            if (l >= 0 && p <= l) return e.copy(s);
            var h = a * p - l * c;
            if (h <= 0 && a >= 0 && l <= 0) return i = a / (a - l), e.copy(r).addScaledVector(pn, i);
            mn.subVectors(t, o);
            var u = pn.dot(mn),
                d = hn.dot(mn);
            if (d >= 0 && u <= d) return e.copy(o);
            var f = u * c - a * d;
            if (f <= 0 && c >= 0 && d <= 0) return n = c / (c - d), e.copy(r).addScaledVector(hn, n);
            var m = l * d - u * p;
            if (m <= 0 && p - l >= 0 && u - d >= 0) return un.subVectors(o, s), n = (p - l) / (p - l + (u - d)), e.copy(s).addScaledVector(un, n);
            var g = 1 / (m + f + h);
            return i = f * g, n = h * g, e.copy(r).addScaledVector(pn, i).addScaledVector(hn, n)
        }),
        equals: function(t) {
            return t.a.equals(this.a) && t.b.equals(this.b) && t.c.equals(this.c)
        }
    }), Mn.prototype = Object.assign(Object.create(Ci.prototype), {
        constructor: Mn,
        isMesh: !0,
        setDrawMode: function(t) {
            this.drawMode = t
        },
        copy: function(t) {
            return Ci.prototype.copy.call(this, t), this.drawMode = t.drawMode, void 0 !== t.morphTargetInfluences && (this.morphTargetInfluences = t.morphTargetInfluences.slice()), void 0 !== t.morphTargetDictionary && (this.morphTargetDictionary = Object.assign({}, t.morphTargetDictionary)), this
        },
        updateMorphTargets: function() {
            var t, e, i, n = this.geometry;
            if (n.isBufferGeometry) {
                var r = n.morphAttributes,
                    s = Object.keys(r);
                if (s.length > 0) {
                    var o = r[s[0]];
                    if (void 0 !== o)
                        for (this.morphTargetInfluences = [], this.morphTargetDictionary = {}, t = 0, e = o.length; t < e; t++) i = o[t].name || String(t), this.morphTargetInfluences.push(0), this.morphTargetDictionary[i] = t
                }
            } else {
                var a = n.morphTargets;
                if (void 0 !== a && a.length > 0)
                    for (this.morphTargetInfluences = [], this.morphTargetDictionary = {}, t = 0, e = a.length; t < e; t++) i = a[t].name || String(t), this.morphTargetInfluences.push(0), this.morphTargetDictionary[i] = t
            }
        },
        raycast: function() {
            var t = new Ke,
                e = new wn,
                i = new ui,
                n = new Qe,
                r = new Qe,
                s = new Qe,
                o = new Qe,
                a = new Qe,
                c = new Qe,
                l = new Ze,
                p = new Ze,
                h = new Ze,
                u = new Qe,
                d = new Qe,
                f = new Qe;

            function m(t, e, i, n, r, s, o) {
                return bn.getBarycoord(t, e, i, n, u), r.multiplyScalar(u.x), s.multiplyScalar(u.y), o.multiplyScalar(u.z), r.add(s).add(o), r.clone()
            }

            function g(t, e, i, n, r, s, o, a) {
                if (null === (e.side === A ? n.intersectTriangle(o, s, r, !0, a) : n.intersectTriangle(r, s, o, e.side !== L, a))) return null;
                f.copy(a), f.applyMatrix4(t.matrixWorld);
                var c = i.ray.origin.distanceTo(f);
                return c < i.near || c > i.far ? null : {
                    distance: c,
                    point: f.clone(),
                    object: t
                }
            }

            function v(t, e, i, o, a, c, u, f, v) {
                n.fromBufferAttribute(a, u), r.fromBufferAttribute(a, f), s.fromBufferAttribute(a, v);
                var y = g(t, e, i, o, n, r, s, d);
                if (y) {
                    c && (l.fromBufferAttribute(c, u), p.fromBufferAttribute(c, f), h.fromBufferAttribute(c, v), y.uv = m(d, n, r, s, l, p, h));
                    var x = new Di(u, f, v);
                    bn.getNormal(n, r, s, x.normal), y.face = x
                }
                return y
            }
            return function(u, f) {
                var y, x = this.geometry,
                    w = this.material,
                    b = this.matrixWorld;
                if (void 0 !== w && (null === x.boundingSphere && x.computeBoundingSphere(), i.copy(x.boundingSphere), i.applyMatrix4(b), !1 !== u.ray.intersectsSphere(i) && (t.getInverse(b), e.copy(u.ray).applyMatrix4(t), null === x.boundingBox || !1 !== e.intersectsBox(x.boundingBox))))
                    if (x.isBufferGeometry) {
                        var M, S, _, T, E, A, L, k, R, P = x.index,
                            C = x.attributes.position,
                            I = x.attributes.uv,
                            O = x.groups,
                            D = x.drawRange;
                        if (null !== P)
                            if (Array.isArray(w))
                                for (T = 0, A = O.length; T < A; T++)
                                    for (R = w[(k = O[T]).materialIndex], E = Math.max(k.start, D.start), L = Math.min(k.start + k.count, D.start + D.count); E < L; E += 3) M = P.getX(E), S = P.getX(E + 1), _ = P.getX(E + 2), (y = v(this, R, u, e, C, I, M, S, _)) && (y.faceIndex = Math.floor(E / 3), f.push(y));
                            else
                                for (T = Math.max(0, D.start), A = Math.min(P.count, D.start + D.count); T < A; T += 3) M = P.getX(T), S = P.getX(T + 1), _ = P.getX(T + 2), (y = v(this, w, u, e, C, I, M, S, _)) && (y.faceIndex = Math.floor(T / 3), f.push(y));
                        else if (void 0 !== C)
                            if (Array.isArray(w))
                                for (T = 0, A = O.length; T < A; T++)
                                    for (R = w[(k = O[T]).materialIndex], E = Math.max(k.start, D.start), L = Math.min(k.start + k.count, D.start + D.count); E < L; E += 3)(y = v(this, R, u, e, C, I, M = E, S = E + 1, _ = E + 2)) && (y.faceIndex = Math.floor(E / 3), f.push(y));
                            else
                                for (T = Math.max(0, D.start), A = Math.min(C.count, D.start + D.count); T < A; T += 3)(y = v(this, w, u, e, C, I, M = T, S = T + 1, _ = T + 2)) && (y.faceIndex = Math.floor(T / 3), f.push(y))
                    } else if (x.isGeometry) {
                    var B, z, N, U, F = Array.isArray(w),
                        H = x.vertices,
                        j = x.faces,
                        G = x.faceVertexUvs[0];
                    G.length > 0 && (U = G);
                    for (var V = 0, W = j.length; V < W; V++) {
                        var Y = j[V],
                            X = F ? w[Y.materialIndex] : w;
                        if (void 0 !== X) {
                            if (B = H[Y.a], z = H[Y.b], N = H[Y.c], !0 === X.morphTargets) {
                                var q = x.morphTargets,
                                    Z = this.morphTargetInfluences;
                                n.set(0, 0, 0), r.set(0, 0, 0), s.set(0, 0, 0);
                                for (var K = 0, J = q.length; K < J; K++) {
                                    var Q = Z[K];
                                    if (0 !== Q) {
                                        var $ = q[K].vertices;
                                        n.addScaledVector(o.subVectors($[Y.a], B), Q), r.addScaledVector(a.subVectors($[Y.b], z), Q), s.addScaledVector(c.subVectors($[Y.c], N), Q)
                                    }
                                }
                                n.add(B), r.add(z), s.add(N), B = n, z = r, N = s
                            }
                            if (y = g(this, X, u, e, B, z, N, d)) {
                                if (U && U[V]) {
                                    var tt = U[V];
                                    l.copy(tt[0]), p.copy(tt[1]), h.copy(tt[2]), y.uv = m(d, B, z, N, l, p, h)
                                }
                                y.face = Y, y.faceIndex = V, f.push(y)
                            }
                        }
                    }
                }
            }
        }(),
        clone: function() {
            return new this.constructor(this.geometry, this.material).copy(this)
        }
    }), On.prototype = Object.create(oi.prototype), On.prototype.constructor = On, On.prototype.isCubeTexture = !0, Object.defineProperty(On.prototype, "images", {
        get: function() {
            return this.image
        },
        set: function(t) {
            this.image = t
        }
    });
    var Dn = new oi,
        Bn = new On;

    function zn() {
        this.seq = [], this.map = {}
    }
    var Nn = [],
        Un = [],
        Fn = new Float32Array(16),
        Hn = new Float32Array(9),
        jn = new Float32Array(4);

    function Gn(t, e, i) {
        var n = t[0];
        if (n <= 0 || n > 0) return t;
        var r = e * i,
            s = Nn[r];
        if (void 0 === s && (s = new Float32Array(r), Nn[r] = s), 0 !== e) {
            n.toArray(s, 0);
            for (var o = 1, a = 0; o !== e; ++o) a += i, t[o].toArray(s, a)
        }
        return s
    }

    function Vn(t, e) {
        if (t.length !== e.length) return !1;
        for (var i = 0, n = t.length; i < n; i++)
            if (t[i] !== e[i]) return !1;
        return !0
    }

    function Wn(t, e) {
        for (var i = 0, n = e.length; i < n; i++) t[i] = e[i]
    }

    function Yn(t, e) {
        var i = Un[e];
        void 0 === i && (i = new Int32Array(e), Un[e] = i);
        for (var n = 0; n !== e; ++n) i[n] = t.allocTextureUnit();
        return i
    }

    function Xn(t, e) {
        var i = this.cache;
        i[0] !== e && (t.uniform1f(this.addr, e), i[0] = e)
    }

    function qn(t, e) {
        var i = this.cache;
        i[0] !== e && (t.uniform1i(this.addr, e), i[0] = e)
    }

    function Zn(t, e) {
        var i = this.cache;
        if (void 0 !== e.x) i[0] === e.x && i[1] === e.y || (t.uniform2f(this.addr, e.x, e.y), i[0] = e.x, i[1] = e.y);
        else {
            if (Vn(i, e)) return;
            t.uniform2fv(this.addr, e), Wn(i, e)
        }
    }

    function Kn(t, e) {
        var i = this.cache;
        if (void 0 !== e.x) i[0] === e.x && i[1] === e.y && i[2] === e.z || (t.uniform3f(this.addr, e.x, e.y, e.z), i[0] = e.x, i[1] = e.y, i[2] = e.z);
        else if (void 0 !== e.r) i[0] === e.r && i[1] === e.g && i[2] === e.b || (t.uniform3f(this.addr, e.r, e.g, e.b), i[0] = e.r, i[1] = e.g, i[2] = e.b);
        else {
            if (Vn(i, e)) return;
            t.uniform3fv(this.addr, e), Wn(i, e)
        }
    }

    function Jn(t, e) {
        var i = this.cache;
        if (void 0 !== e.x) i[0] === e.x && i[1] === e.y && i[2] === e.z && i[3] === e.w || (t.uniform4f(this.addr, e.x, e.y, e.z, e.w), i[0] = e.x, i[1] = e.y, i[2] = e.z, i[3] = e.w);
        else {
            if (Vn(i, e)) return;
            t.uniform4fv(this.addr, e), Wn(i, e)
        }
    }

    function Qn(t, e) {
        var i = this.cache,
            n = e.elements;
        if (void 0 === n) {
            if (Vn(i, e)) return;
            t.uniformMatrix2fv(this.addr, !1, e), Wn(i, e)
        } else {
            if (Vn(i, n)) return;
            jn.set(n), t.uniformMatrix2fv(this.addr, !1, jn), Wn(i, n)
        }
    }

    function $n(t, e) {
        var i = this.cache,
            n = e.elements;
        if (void 0 === n) {
            if (Vn(i, e)) return;
            t.uniformMatrix3fv(this.addr, !1, e), Wn(i, e)
        } else {
            if (Vn(i, n)) return;
            Hn.set(n), t.uniformMatrix3fv(this.addr, !1, Hn), Wn(i, n)
        }
    }

    function tr(t, e) {
        var i = this.cache,
            n = e.elements;
        if (void 0 === n) {
            if (Vn(i, e)) return;
            t.uniformMatrix4fv(this.addr, !1, e), Wn(i, e)
        } else {
            if (Vn(i, n)) return;
            Fn.set(n), t.uniformMatrix4fv(this.addr, !1, Fn), Wn(i, n)
        }
    }

    function er(t, e, i) {
        var n = this.cache,
            r = i.allocTextureUnit();
        n[0] !== r && (t.uniform1i(this.addr, r), n[0] = r), i.setTexture2D(e || Dn, r)
    }

    function ir(t, e, i) {
        var n = this.cache,
            r = i.allocTextureUnit();
        n[0] !== r && (t.uniform1i(this.addr, r), n[0] = r), i.setTextureCube(e || Bn, r)
    }

    function nr(t, e) {
        var i = this.cache;
        Vn(i, e) || (t.uniform2iv(this.addr, e), Wn(i, e))
    }

    function rr(t, e) {
        var i = this.cache;
        Vn(i, e) || (t.uniform3iv(this.addr, e), Wn(i, e))
    }

    function sr(t, e) {
        var i = this.cache;
        Vn(i, e) || (t.uniform4iv(this.addr, e), Wn(i, e))
    }

    function or(t, e) {
        var i = this.cache;
        Vn(i, e) || (t.uniform1fv(this.addr, e), Wn(i, e))
    }

    function ar(t, e) {
        var i = this.cache;
        Vn(i, e) || (t.uniform1iv(this.addr, e), Wn(i, e))
    }

    function cr(t, e) {
        var i = this.cache,
            n = Gn(e, this.size, 2);
        Vn(i, n) || (t.uniform2fv(this.addr, n), this.updateCache(n))
    }

    function lr(t, e) {
        var i = this.cache,
            n = Gn(e, this.size, 3);
        Vn(i, n) || (t.uniform3fv(this.addr, n), this.updateCache(n))
    }

    function pr(t, e) {
        var i = this.cache,
            n = Gn(e, this.size, 4);
        Vn(i, n) || (t.uniform4fv(this.addr, n), this.updateCache(n))
    }

    function hr(t, e) {
        var i = this.cache,
            n = Gn(e, this.size, 4);
        Vn(i, n) || (t.uniformMatrix2fv(this.addr, !1, n), this.updateCache(n))
    }

    function ur(t, e) {
        var i = this.cache,
            n = Gn(e, this.size, 9);
        Vn(i, n) || (t.uniformMatrix3fv(this.addr, !1, n), this.updateCache(n))
    }

    function dr(t, e) {
        var i = this.cache,
            n = Gn(e, this.size, 16);
        Vn(i, n) || (t.uniformMatrix4fv(this.addr, !1, n), this.updateCache(n))
    }

    function fr(t, e, i) {
        var n = this.cache,
            r = e.length,
            s = Yn(i, r);
        !1 === Vn(n, s) && (t.uniform1iv(this.addr, s), Wn(n, s));
        for (var o = 0; o !== r; ++o) i.setTexture2D(e[o] || Dn, s[o])
    }

    function mr(t, e, i) {
        var n = this.cache,
            r = e.length,
            s = Yn(i, r);
        !1 === Vn(n, s) && (t.uniform1iv(this.addr, s), Wn(n, s));
        for (var o = 0; o !== r; ++o) i.setTextureCube(e[o] || Bn, s[o])
    }

    function gr(t, e, i) {
        this.id = t, this.addr = i, this.cache = [], this.setValue = function(t) {
            switch (t) {
                case 5126:
                    return Xn;
                case 35664:
                    return Zn;
                case 35665:
                    return Kn;
                case 35666:
                    return Jn;
                case 35674:
                    return Qn;
                case 35675:
                    return $n;
                case 35676:
                    return tr;
                case 35678:
                case 36198:
                    return er;
                case 35680:
                    return ir;
                case 5124:
                case 35670:
                    return qn;
                case 35667:
                case 35671:
                    return nr;
                case 35668:
                case 35672:
                    return rr;
                case 35669:
                case 35673:
                    return sr
            }
        }(e.type)
    }

    function vr(t, e, i) {
        this.id = t, this.addr = i, this.cache = [], this.size = e.size, this.setValue = function(t) {
            switch (t) {
                case 5126:
                    return or;
                case 35664:
                    return cr;
                case 35665:
                    return lr;
                case 35666:
                    return pr;
                case 35674:
                    return hr;
                case 35675:
                    return ur;
                case 35676:
                    return dr;
                case 35678:
                    return fr;
                case 35680:
                    return mr;
                case 5124:
                case 35670:
                    return ar;
                case 35667:
                case 35671:
                    return nr;
                case 35668:
                case 35672:
                    return rr;
                case 35669:
                case 35673:
                    return sr
            }
        }(e.type)
    }

    function yr(t) {
        this.id = t, zn.call(this)
    }
    vr.prototype.updateCache = function(t) {
        var e = this.cache;
        t instanceof Float32Array && e.length !== t.length && (this.cache = new Float32Array(t.length)), Wn(e, t)
    }, yr.prototype.setValue = function(t, e, i) {
        for (var n = this.seq, r = 0, s = n.length; r !== s; ++r) {
            var o = n[r];
            o.setValue(t, e[o.id], i)
        }
    };
    var xr = /([\w\d_]+)(\])?(\[|\.)?/g;

    function wr(t, e) {
        t.seq.push(e), t.map[e.id] = e
    }

    function br(t, e, i) {
        var n = t.name,
            r = n.length;
        for (xr.lastIndex = 0;;) {
            var s = xr.exec(n),
                o = xr.lastIndex,
                a = s[1],
                c = "]" === s[2],
                l = s[3];
            if (c && (a |= 0), void 0 === l || "[" === l && o + 2 === r) {
                wr(i, void 0 === l ? new gr(a, t, e) : new vr(a, t, e));
                break
            }
            var p = i.map[a];
            void 0 === p && wr(i, p = new yr(a)), i = p
        }
    }

    function Mr(t, e, i) {
        zn.call(this), this.renderer = i;
        for (var n = t.getProgramParameter(e, t.ACTIVE_UNIFORMS), r = 0; r < n; ++r) {
            var s = t.getActiveUniform(e, r);
            br(s, t.getUniformLocation(e, s.name), this)
        }
    }

    function Sr(t, e, i) {
        var n = t.createShader(e);
        return t.shaderSource(n, i), t.compileShader(n), !1 === t.getShaderParameter(n, t.COMPILE_STATUS) && console.error("THREE.WebGLShader: Shader couldn't compile."), "" !== t.getShaderInfoLog(n) && console.warn("THREE.WebGLShader: gl.getShaderInfoLog()", e === t.VERTEX_SHADER ? "vertex" : "fragment", t.getShaderInfoLog(n), function(t) {
            for (var e = t.split("\n"), i = 0; i < e.length; i++) e[i] = i + 1 + ": " + e[i];
            return e.join("\n")
        }(i)), n
    }
    Mr.prototype.setValue = function(t, e, i) {
        var n = this.map[e];
        void 0 !== n && n.setValue(t, i, this.renderer)
    }, Mr.prototype.setOptional = function(t, e, i) {
        var n = e[i];
        void 0 !== n && this.setValue(t, i, n)
    }, Mr.upload = function(t, e, i, n) {
        for (var r = 0, s = e.length; r !== s; ++r) {
            var o = e[r],
                a = i[o.id];
            !1 !== a.needsUpdate && o.setValue(t, a.value, n)
        }
    }, Mr.seqWithValue = function(t, e) {
        for (var i = [], n = 0, r = t.length; n !== r; ++n) {
            var s = t[n];
            s.id in e && i.push(s)
        }
        return i
    };
    var _r = 0;

    function Tr(t) {
        switch (t) {
            case Be:
                return ["Linear", "( value )"];
            case ze:
                return ["sRGB", "( value )"];
            case Ue:
                return ["RGBE", "( value )"];
            case He:
                return ["RGBM", "( value, 7.0 )"];
            case je:
                return ["RGBM", "( value, 16.0 )"];
            case Ge:
                return ["RGBD", "( value, 256.0 )"];
            case Ne:
                return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
            default:
                throw new Error("unsupported encoding: " + t)
        }
    }

    function Er(t, e) {
        var i = Tr(e);
        return "vec4 " + t + "( vec4 value ) { return " + i[0] + "ToLinear" + i[1] + "; }"
    }

    function Ar(t, e) {
        var i;
        switch (e) {
            case ft:
                i = "Linear";
                break;
            case mt:
                i = "Reinhard";
                break;
            case gt:
                i = "Uncharted2";
                break;
            case vt:
                i = "OptimizedCineon";
                break;
            default:
                throw new Error("unsupported toneMapping: " + e)
        }
        return "vec3 " + t + "( vec3 color ) { return " + i + "ToneMapping( color ); }"
    }

    function Lr(t) {
        return "" !== t
    }

    function kr(t, e) {
        return t.replace(/NUM_DIR_LIGHTS/g, e.numDirLights).replace(/NUM_SPOT_LIGHTS/g, e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, e.numPointLights).replace(/NUM_HEMI_LIGHTS/g, e.numHemiLights)
    }

    function Rr(t, e) {
        return t.replace(/NUM_CLIPPING_PLANES/g, e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, e.numClippingPlanes - e.numClipIntersection)
    }

    function Pr(t) {
        return t.replace(/^[ \t]*#include +<([\w\d.\/]+)>/gm, function(t, e) {
            var i = gi[e];
            if (void 0 === i) throw new Error("Can not resolve #include <" + e + ">");
            return Pr(i)
        })
    }

    function Cr(t) {
        return t.replace(/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g, function(t, e, i, n) {
            for (var r = "", s = parseInt(e); s < parseInt(i); s++) r += n.replace(/\[ i \]/g, "[ " + s + " ]");
            return r
        })
    }

    function Ir(t, e, i, n, r, s, o) {
        var a = t.context,
            c = n.defines,
            l = r.vertexShader,
            p = r.fragmentShader,
            h = "SHADOWMAP_TYPE_BASIC";
        s.shadowMapType === _ ? h = "SHADOWMAP_TYPE_PCF" : s.shadowMapType === T && (h = "SHADOWMAP_TYPE_PCF_SOFT");
        var u = "ENVMAP_TYPE_CUBE",
            d = "ENVMAP_MODE_REFLECTION",
            f = "ENVMAP_BLENDING_MULTIPLY";
        if (s.envMap) {
            switch (n.envMap.mapping) {
                case xt:
                case wt:
                    u = "ENVMAP_TYPE_CUBE";
                    break;
                case _t:
                case Tt:
                    u = "ENVMAP_TYPE_CUBE_UV";
                    break;
                case bt:
                case Mt:
                    u = "ENVMAP_TYPE_EQUIREC";
                    break;
                case St:
                    u = "ENVMAP_TYPE_SPHERE"
            }
            switch (n.envMap.mapping) {
                case wt:
                case Mt:
                    d = "ENVMAP_MODE_REFRACTION"
            }
            switch (n.combine) {
                case pt:
                    f = "ENVMAP_BLENDING_MULTIPLY";
                    break;
                case ht:
                    f = "ENVMAP_BLENDING_MIX";
                    break;
                case ut:
                    f = "ENVMAP_BLENDING_ADD"
            }
        }
        var m, g, v, y, x, w = t.gammaFactor > 0 ? t.gammaFactor : 1,
            b = o.isWebGL2 ? "" : function(t, e, i) {
                return [(t = t || {}).derivatives || e.envMapCubeUV || e.bumpMap || e.normalMap && !e.objectSpaceNormalMap || e.flatShading ? "#extension GL_OES_standard_derivatives : enable" : "", (t.fragDepth || e.logarithmicDepthBuffer) && i.get("EXT_frag_depth") ? "#extension GL_EXT_frag_depth : enable" : "", t.drawBuffers && i.get("WEBGL_draw_buffers") ? "#extension GL_EXT_draw_buffers : require" : "", (t.shaderTextureLOD || e.envMap) && i.get("EXT_shader_texture_lod") ? "#extension GL_EXT_shader_texture_lod : enable" : ""].filter(Lr).join("\n")
            }(n.extensions, s, e),
            M = function(t) {
                var e = [];
                for (var i in t) {
                    var n = t[i];
                    !1 !== n && e.push("#define " + i + " " + n)
                }
                return e.join("\n")
            }(c),
            S = a.createProgram();
        if (n.isRawShaderMaterial ? ((m = [M].filter(Lr).join("\n")).length > 0 && (m += "\n"), (g = [b, M].filter(Lr).join("\n")).length > 0 && (g += "\n")) : (m = ["precision " + s.precision + " float;", "precision " + s.precision + " int;", "#define SHADER_NAME " + r.name, M, s.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", "#define GAMMA_FACTOR " + w, "#define MAX_BONES " + s.maxBones, s.useFog && s.fog ? "#define USE_FOG" : "", s.useFog && s.fogExp ? "#define FOG_EXP2" : "", s.map ? "#define USE_MAP" : "", s.envMap ? "#define USE_ENVMAP" : "", s.envMap ? "#define " + d : "", s.lightMap ? "#define USE_LIGHTMAP" : "", s.aoMap ? "#define USE_AOMAP" : "", s.emissiveMap ? "#define USE_EMISSIVEMAP" : "", s.bumpMap ? "#define USE_BUMPMAP" : "", s.normalMap ? "#define USE_NORMALMAP" : "", s.normalMap && s.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", s.displacementMap && s.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", s.specularMap ? "#define USE_SPECULARMAP" : "", s.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", s.metalnessMap ? "#define USE_METALNESSMAP" : "", s.alphaMap ? "#define USE_ALPHAMAP" : "", s.vertexColors ? "#define USE_COLOR" : "", s.flatShading ? "#define FLAT_SHADED" : "", s.skinning ? "#define USE_SKINNING" : "", s.useVertexTexture ? "#define BONE_TEXTURE" : "", s.morphTargets ? "#define USE_MORPHTARGETS" : "", s.morphNormals && !1 === s.flatShading ? "#define USE_MORPHNORMALS" : "", s.doubleSided ? "#define DOUBLE_SIDED" : "", s.flipSided ? "#define FLIP_SIDED" : "", s.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", s.shadowMapEnabled ? "#define " + h : "", s.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", s.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", s.logarithmicDepthBuffer && (o.isWebGL2 || e.get("EXT_frag_depth")) ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_COLOR", "\tattribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "\tattribute vec3 morphTarget0;", "\tattribute vec3 morphTarget1;", "\tattribute vec3 morphTarget2;", "\tattribute vec3 morphTarget3;", "\t#ifdef USE_MORPHNORMALS", "\t\tattribute vec3 morphNormal0;", "\t\tattribute vec3 morphNormal1;", "\t\tattribute vec3 morphNormal2;", "\t\tattribute vec3 morphNormal3;", "\t#else", "\t\tattribute vec3 morphTarget4;", "\t\tattribute vec3 morphTarget5;", "\t\tattribute vec3 morphTarget6;", "\t\tattribute vec3 morphTarget7;", "\t#endif", "#endif", "#ifdef USE_SKINNING", "\tattribute vec4 skinIndex;", "\tattribute vec4 skinWeight;", "#endif", "\n"].filter(Lr).join("\n"), g = [b, "precision " + s.precision + " float;", "precision " + s.precision + " int;", "#define SHADER_NAME " + r.name, M, s.alphaTest ? "#define ALPHATEST " + s.alphaTest + (s.alphaTest % 1 ? "" : ".0") : "", "#define GAMMA_FACTOR " + w, s.useFog && s.fog ? "#define USE_FOG" : "", s.useFog && s.fogExp ? "#define FOG_EXP2" : "", s.map ? "#define USE_MAP" : "", s.envMap ? "#define USE_ENVMAP" : "", s.envMap ? "#define " + u : "", s.envMap ? "#define " + d : "", s.envMap ? "#define " + f : "", s.lightMap ? "#define USE_LIGHTMAP" : "", s.aoMap ? "#define USE_AOMAP" : "", s.emissiveMap ? "#define USE_EMISSIVEMAP" : "", s.bumpMap ? "#define USE_BUMPMAP" : "", s.normalMap ? "#define USE_NORMALMAP" : "", s.normalMap && s.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", s.specularMap ? "#define USE_SPECULARMAP" : "", s.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", s.metalnessMap ? "#define USE_METALNESSMAP" : "", s.alphaMap ? "#define USE_ALPHAMAP" : "", s.vertexColors ? "#define USE_COLOR" : "", s.gradientMap ? "#define USE_GRADIENTMAP" : "", s.flatShading ? "#define FLAT_SHADED" : "", s.doubleSided ? "#define DOUBLE_SIDED" : "", s.flipSided ? "#define FLIP_SIDED" : "", s.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", s.shadowMapEnabled ? "#define " + h : "", s.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "", s.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "", s.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", s.logarithmicDepthBuffer && (o.isWebGL2 || e.get("EXT_frag_depth")) ? "#define USE_LOGDEPTHBUF_EXT" : "", s.envMap && (o.isWebGL2 || e.get("EXT_shader_texture_lod")) ? "#define TEXTURE_LOD_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", s.toneMapping !== dt ? "#define TONE_MAPPING" : "", s.toneMapping !== dt ? gi.tonemapping_pars_fragment : "", s.toneMapping !== dt ? Ar("toneMapping", s.toneMapping) : "", s.dithering ? "#define DITHERING" : "", s.outputEncoding || s.mapEncoding || s.envMapEncoding || s.emissiveMapEncoding ? gi.encodings_pars_fragment : "", s.mapEncoding ? Er("mapTexelToLinear", s.mapEncoding) : "", s.envMapEncoding ? Er("envMapTexelToLinear", s.envMapEncoding) : "", s.emissiveMapEncoding ? Er("emissiveMapTexelToLinear", s.emissiveMapEncoding) : "", s.outputEncoding ? (v = "linearToOutputTexel", y = s.outputEncoding, x = Tr(y), "vec4 " + v + "( vec4 value ) { return LinearTo" + x[0] + x[1] + "; }") : "", s.depthPacking ? "#define DEPTH_PACKING " + n.depthPacking : "", "\n"].filter(Lr).join("\n")), l = Rr(l = kr(l = Pr(l), s), s), p = Rr(p = kr(p = Pr(p), s), s), l = Cr(l), p = Cr(p), o.isWebGL2 && !n.isRawShaderMaterial) {
            var E = !1,
                A = /^\s*#version\s+300\s+es\s*\n/;
            n.isShaderMaterial && null !== l.match(A) && null !== p.match(A) && (E = !0, l = l.replace(A, ""), p = p.replace(A, "")), m = ["#version 300 es\n", "#define attribute in", "#define varying out", "#define texture2D texture"].join("\n") + "\n" + m, g = ["#version 300 es\n", "#define varying in", E ? "" : "out highp vec4 pc_fragColor;", E ? "" : "#define gl_FragColor pc_fragColor", "#define gl_FragDepthEXT gl_FragDepth", "#define texture2D texture", "#define textureCube texture", "#define texture2DProj textureProj", "#define texture2DLodEXT textureLod", "#define texture2DProjLodEXT textureProjLod", "#define textureCubeLodEXT textureLod", "#define texture2DGradEXT textureGrad", "#define texture2DProjGradEXT textureProjGrad", "#define textureCubeGradEXT textureGrad"].join("\n") + "\n" + g
        }
        var L = m + l,
            k = g + p,
            R = Sr(a, a.VERTEX_SHADER, L),
            P = Sr(a, a.FRAGMENT_SHADER, k);
        a.attachShader(S, R), a.attachShader(S, P), void 0 !== n.index0AttributeName ? a.bindAttribLocation(S, 0, n.index0AttributeName) : !0 === s.morphTargets && a.bindAttribLocation(S, 0, "position"), a.linkProgram(S);
        var C, I, O = a.getProgramInfoLog(S).trim(),
            D = a.getShaderInfoLog(R).trim(),
            B = a.getShaderInfoLog(P).trim(),
            z = !0,
            N = !0;
        return !1 === a.getProgramParameter(S, a.LINK_STATUS) ? (z = !1, console.error("THREE.WebGLProgram: shader error: ", a.getError(), "gl.VALIDATE_STATUS", a.getProgramParameter(S, a.VALIDATE_STATUS), "gl.getProgramInfoLog", O, D, B)) : "" !== O ? console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", O) : "" !== D && "" !== B || (N = !1), N && (this.diagnostics = {
            runnable: z,
            material: n,
            programLog: O,
            vertexShader: {
                log: D,
                prefix: m
            },
            fragmentShader: {
                log: B,
                prefix: g
            }
        }), a.deleteShader(R), a.deleteShader(P), this.getUniforms = function() {
            return void 0 === C && (C = new Mr(a, S, t)), C
        }, this.getAttributes = function() {
            return void 0 === I && (I = function(t, e) {
                for (var i = {}, n = t.getProgramParameter(e, t.ACTIVE_ATTRIBUTES), r = 0; r < n; r++) {
                    var s = t.getActiveAttrib(e, r).name;
                    i[s] = t.getAttribLocation(e, s)
                }
                return i
            }(a, S)), I
        }, this.destroy = function() {
            a.deleteProgram(S), this.program = void 0
        }, Object.defineProperties(this, {
            uniforms: {
                get: function() {
                    return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."), this.getUniforms()
                }
            },
            attributes: {
                get: function() {
                    return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."), this.getAttributes()
                }
            }
        }), this.name = r.name, this.id = _r++, this.code = i, this.usedTimes = 1, this.program = S, this.vertexShader = R, this.fragmentShader = P, this
    }

    function Or(t, e, i) {
        var n = [],
            r = {
                MeshDepthMaterial: "depth",
                MeshDistanceMaterial: "distanceRGBA",
                MeshNormalMaterial: "normal",
                MeshBasicMaterial: "basic",
                MeshLambertMaterial: "lambert",
                MeshPhongMaterial: "phong",
                MeshToonMaterial: "phong",
                MeshStandardMaterial: "physical",
                MeshPhysicalMaterial: "physical",
                LineBasicMaterial: "basic",
                LineDashedMaterial: "dashed",
                PointsMaterial: "points",
                ShadowMaterial: "shadow",
                SpriteMaterial: "sprite"
            },
            s = ["precision", "supportsVertexTextures", "map", "mapEncoding", "envMap", "envMapMode", "envMapEncoding", "lightMap", "aoMap", "emissiveMap", "emissiveMapEncoding", "bumpMap", "normalMap", "objectSpaceNormalMap", "displacementMap", "specularMap", "roughnessMap", "metalnessMap", "gradientMap", "alphaMap", "combine", "vertexColors", "fog", "useFog", "fogExp", "flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning", "maxBones", "useVertexTexture", "morphTargets", "morphNormals", "maxMorphTargets", "maxMorphNormals", "premultipliedAlpha", "numDirLights", "numPointLights", "numSpotLights", "numHemiLights", "numRectAreaLights", "shadowMapEnabled", "shadowMapType", "toneMapping", "physicallyCorrectLights", "alphaTest", "doubleSided", "flipSided", "numClippingPlanes", "numClipIntersection", "depthPacking", "dithering"];

        function o(t, e) {
            var i;
            return t ? t.isTexture ? i = t.encoding : t.isWebGLRenderTarget && (console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."), i = t.texture.encoding) : i = Be, i === Be && e && (i = Ne), i
        }
        this.getParameters = function(e, n, s, a, c, l, p) {
            var h = r[e.type],
                u = p.isSkinnedMesh ? function(t) {
                    var e = t.skeleton.bones;
                    if (i.floatVertexTextures) return 1024;
                    var n = i.maxVertexUniforms,
                        r = Math.floor((n - 20) / 4),
                        s = Math.min(r, e.length);
                    return s < e.length ? (console.warn("THREE.WebGLRenderer: Skeleton has " + e.length + " bones. This GPU supports " + s + "."), 0) : s
                }(p) : 0,
                d = i.precision;
            null !== e.precision && (d = i.getMaxPrecision(e.precision)) !== e.precision && console.warn("THREE.WebGLProgram.getParameters:", e.precision, "not supported, using", d, "instead.");
            var f = t.getRenderTarget();
            return {
                shaderID: h,
                precision: d,
                supportsVertexTextures: i.vertexTextures,
                outputEncoding: o(f ? f.texture : null, t.gammaOutput),
                map: !!e.map,
                mapEncoding: o(e.map, t.gammaInput),
                envMap: !!e.envMap,
                envMapMode: e.envMap && e.envMap.mapping,
                envMapEncoding: o(e.envMap, t.gammaInput),
                envMapCubeUV: !!e.envMap && (e.envMap.mapping === _t || e.envMap.mapping === Tt),
                lightMap: !!e.lightMap,
                aoMap: !!e.aoMap,
                emissiveMap: !!e.emissiveMap,
                emissiveMapEncoding: o(e.emissiveMap, t.gammaInput),
                bumpMap: !!e.bumpMap,
                normalMap: !!e.normalMap,
                objectSpaceNormalMap: e.normalMapType === Xe,
                displacementMap: !!e.displacementMap,
                roughnessMap: !!e.roughnessMap,
                metalnessMap: !!e.metalnessMap,
                specularMap: !!e.specularMap,
                alphaMap: !!e.alphaMap,
                gradientMap: !!e.gradientMap,
                combine: e.combine,
                vertexColors: e.vertexColors,
                fog: !!a,
                useFog: e.fog,
                fogExp: a && a.isFogExp2,
                flatShading: e.flatShading,
                sizeAttenuation: e.sizeAttenuation,
                logarithmicDepthBuffer: i.logarithmicDepthBuffer,
                skinning: e.skinning && u > 0,
                maxBones: u,
                useVertexTexture: i.floatVertexTextures,
                morphTargets: e.morphTargets,
                morphNormals: e.morphNormals,
                maxMorphTargets: t.maxMorphTargets,
                maxMorphNormals: t.maxMorphNormals,
                numDirLights: n.directional.length,
                numPointLights: n.point.length,
                numSpotLights: n.spot.length,
                numRectAreaLights: n.rectArea.length,
                numHemiLights: n.hemi.length,
                numClippingPlanes: c,
                numClipIntersection: l,
                dithering: e.dithering,
                shadowMapEnabled: t.shadowMap.enabled && p.receiveShadow && s.length > 0,
                shadowMapType: t.shadowMap.type,
                toneMapping: t.toneMapping,
                physicallyCorrectLights: t.physicallyCorrectLights,
                premultipliedAlpha: e.premultipliedAlpha,
                alphaTest: e.alphaTest,
                doubleSided: e.side === L,
                flipSided: e.side === A,
                depthPacking: void 0 !== e.depthPacking && e.depthPacking
            }
        }, this.getProgramCode = function(e, i) {
            var n = [];
            if (i.shaderID ? n.push(i.shaderID) : (n.push(e.fragmentShader), n.push(e.vertexShader)), void 0 !== e.defines)
                for (var r in e.defines) n.push(r), n.push(e.defines[r]);
            for (var o = 0; o < s.length; o++) n.push(i[s[o]]);
            return n.push(e.onBeforeCompile.toString()), n.push(t.gammaOutput), n.join()
        }, this.acquireProgram = function(r, s, o, a) {
            for (var c, l = 0, p = n.length; l < p; l++) {
                var h = n[l];
                if (h.code === a) {
                    ++(c = h).usedTimes;
                    break
                }
            }
            return void 0 === c && (c = new Ir(t, e, a, r, s, o, i), n.push(c)), c
        }, this.releaseProgram = function(t) {
            if (0 == --t.usedTimes) {
                var e = n.indexOf(t);
                n[e] = n[n.length - 1], n.pop(), t.destroy()
            }
        }, this.programs = n
    }

    function Dr() {
        var t = new WeakMap;
        return {
            get: function(e) {
                var i = t.get(e);
                return void 0 === i && (i = {}, t.set(e, i)), i
            },
            remove: function(e) {
                t.delete(e)
            },
            update: function(e, i, n) {
                t.get(e)[i] = n
            },
            dispose: function() {
                t = new WeakMap
            }
        }
    }

    function Br(t, e) {
        return t.renderOrder !== e.renderOrder ? t.renderOrder - e.renderOrder : t.program && e.program && t.program !== e.program ? t.program.id - e.program.id : t.material.id !== e.material.id ? t.material.id - e.material.id : t.z !== e.z ? t.z - e.z : t.id - e.id
    }

    function zr(t, e) {
        return t.renderOrder !== e.renderOrder ? t.renderOrder - e.renderOrder : t.z !== e.z ? e.z - t.z : t.id - e.id
    }

    function Nr() {
        var t = [],
            e = 0,
            i = [],
            n = [];
        return {
            opaque: i,
            transparent: n,
            init: function() {
                e = 0, i.length = 0, n.length = 0
            },
            push: function(r, s, o, a, c) {
                var l = t[e];
                void 0 === l ? (l = {
                    id: r.id,
                    object: r,
                    geometry: s,
                    material: o,
                    program: o.program,
                    renderOrder: r.renderOrder,
                    z: a,
                    group: c
                }, t[e] = l) : (l.id = r.id, l.object = r, l.geometry = s, l.material = o, l.program = o.program, l.renderOrder = r.renderOrder, l.z = a, l.group = c), (!0 === o.transparent ? n : i).push(l), e++
            },
            sort: function() {
                i.length > 1 && i.sort(Br), n.length > 1 && n.sort(zr)
            }
        }
    }

    function Ur() {
        var t = {};
        return {
            get: function(e, i) {
                var n = e.id + "," + i.id,
                    r = t[n];
                return void 0 === r && (r = new Nr, t[n] = r), r
            },
            dispose: function() {
                t = {}
            }
        }
    }

    function Fr() {
        var t = {};
        return {
            get: function(e) {
                if (void 0 !== t[e.id]) return t[e.id];
                var i;
                switch (e.type) {
                    case "DirectionalLight":
                        i = {
                            direction: new Qe,
                            color: new xi,
                            shadow: !1,
                            shadowBias: 0,
                            shadowRadius: 1,
                            shadowMapSize: new Ze
                        };
                        break;
                    case "SpotLight":
                        i = {
                            position: new Qe,
                            direction: new Qe,
                            color: new xi,
                            distance: 0,
                            coneCos: 0,
                            penumbraCos: 0,
                            decay: 0,
                            shadow: !1,
                            shadowBias: 0,
                            shadowRadius: 1,
                            shadowMapSize: new Ze
                        };
                        break;
                    case "PointLight":
                        i = {
                            position: new Qe,
                            color: new xi,
                            distance: 0,
                            decay: 0,
                            shadow: !1,
                            shadowBias: 0,
                            shadowRadius: 1,
                            shadowMapSize: new Ze,
                            shadowCameraNear: 1,
                            shadowCameraFar: 1e3
                        };
                        break;
                    case "HemisphereLight":
                        i = {
                            direction: new Qe,
                            skyColor: new xi,
                            groundColor: new xi
                        };
                        break;
                    case "RectAreaLight":
                        i = {
                            color: new xi,
                            position: new Qe,
                            halfWidth: new Qe,
                            halfHeight: new Qe
                        }
                }
                return t[e.id] = i, i
            }
        }
    }
    var Hr, jr, Gr, Vr, Wr, Yr, Xr = 0;

    function qr() {
        var t = new Fr,
            e = {
                id: Xr++,
                hash: {
                    stateID: -1,
                    directionalLength: -1,
                    pointLength: -1,
                    spotLength: -1,
                    rectAreaLength: -1,
                    hemiLength: -1,
                    shadowsLength: -1
                },
                ambient: [0, 0, 0],
                directional: [],
                directionalShadowMap: [],
                directionalShadowMatrix: [],
                spot: [],
                spotShadowMap: [],
                spotShadowMatrix: [],
                rectArea: [],
                point: [],
                pointShadowMap: [],
                pointShadowMatrix: [],
                hemi: []
            },
            i = new Qe,
            n = new Ke,
            r = new Ke;
        return {
            setup: function(s, o, a) {
                for (var c = 0, l = 0, p = 0, h = 0, u = 0, d = 0, f = 0, m = 0, g = a.matrixWorldInverse, v = 0, y = s.length; v < y; v++) {
                    var x = s[v],
                        w = x.color,
                        b = x.intensity,
                        M = x.distance,
                        S = x.shadow && x.shadow.map ? x.shadow.map.texture : null;
                    if (x.isAmbientLight) c += w.r * b, l += w.g * b, p += w.b * b;
                    else if (x.isDirectionalLight) {
                        if ((T = t.get(x)).color.copy(x.color).multiplyScalar(x.intensity), T.direction.setFromMatrixPosition(x.matrixWorld), i.setFromMatrixPosition(x.target.matrixWorld), T.direction.sub(i), T.direction.transformDirection(g), T.shadow = x.castShadow, x.castShadow) {
                            var _ = x.shadow;
                            T.shadowBias = _.bias, T.shadowRadius = _.radius, T.shadowMapSize = _.mapSize
                        }
                        e.directionalShadowMap[h] = S, e.directionalShadowMatrix[h] = x.shadow.matrix, e.directional[h] = T, h++
                    } else if (x.isSpotLight)(T = t.get(x)).position.setFromMatrixPosition(x.matrixWorld), T.position.applyMatrix4(g), T.color.copy(w).multiplyScalar(b), T.distance = M, T.direction.setFromMatrixPosition(x.matrixWorld), i.setFromMatrixPosition(x.target.matrixWorld), T.direction.sub(i), T.direction.transformDirection(g), T.coneCos = Math.cos(x.angle), T.penumbraCos = Math.cos(x.angle * (1 - x.penumbra)), T.decay = 0 === x.distance ? 0 : x.decay, T.shadow = x.castShadow, x.castShadow && (_ = x.shadow, T.shadowBias = _.bias, T.shadowRadius = _.radius, T.shadowMapSize = _.mapSize), e.spotShadowMap[d] = S, e.spotShadowMatrix[d] = x.shadow.matrix, e.spot[d] = T, d++;
                    else if (x.isRectAreaLight)(T = t.get(x)).color.copy(w).multiplyScalar(b), T.position.setFromMatrixPosition(x.matrixWorld), T.position.applyMatrix4(g), r.identity(), n.copy(x.matrixWorld), n.premultiply(g), r.extractRotation(n), T.halfWidth.set(.5 * x.width, 0, 0), T.halfHeight.set(0, .5 * x.height, 0), T.halfWidth.applyMatrix4(r), T.halfHeight.applyMatrix4(r), e.rectArea[f] = T, f++;
                    else if (x.isPointLight)(T = t.get(x)).position.setFromMatrixPosition(x.matrixWorld), T.position.applyMatrix4(g), T.color.copy(x.color).multiplyScalar(x.intensity), T.distance = x.distance, T.decay = 0 === x.distance ? 0 : x.decay, T.shadow = x.castShadow, x.castShadow && (_ = x.shadow, T.shadowBias = _.bias, T.shadowRadius = _.radius, T.shadowMapSize = _.mapSize, T.shadowCameraNear = _.camera.near, T.shadowCameraFar = _.camera.far), e.pointShadowMap[u] = S, e.pointShadowMatrix[u] = x.shadow.matrix, e.point[u] = T, u++;
                    else if (x.isHemisphereLight) {
                        var T;
                        (T = t.get(x)).direction.setFromMatrixPosition(x.matrixWorld), T.direction.transformDirection(g), T.direction.normalize(), T.skyColor.copy(x.color).multiplyScalar(b), T.groundColor.copy(x.groundColor).multiplyScalar(b), e.hemi[m] = T, m++
                    }
                }
                e.ambient[0] = c, e.ambient[1] = l, e.ambient[2] = p, e.directional.length = h, e.spot.length = d, e.rectArea.length = f, e.point.length = u, e.hemi.length = m, e.hash.stateID = e.id, e.hash.directionalLength = h, e.hash.pointLength = u, e.hash.spotLength = d, e.hash.rectAreaLength = f, e.hash.hemiLength = m, e.hash.shadowsLength = o.length
            },
            state: e
        }
    }

    function Zr() {
        var t = new qr,
            e = [],
            i = [];
        return {
            init: function() {
                e.length = 0, i.length = 0
            },
            state: {
                lightsArray: e,
                shadowsArray: i,
                lights: t
            },
            setupLights: function(n) {
                t.setup(e, i, n)
            },
            pushLight: function(t) {
                e.push(t)
            },
            pushShadow: function(t) {
                i.push(t)
            }
        }
    }

    function Kr() {
        var t = {};
        return {
            get: function(e, i) {
                var n;
                return void 0 === t[e.id] ? (n = new Zr, t[e.id] = {}, t[e.id][i.id] = n) : void 0 === t[e.id][i.id] ? (n = new Zr, t[e.id][i.id] = n) : n = t[e.id][i.id], n
            },
            dispose: function() {
                t = {}
            }
        }
    }

    function Jr(t) {
        vn.call(this), this.type = "MeshDepthMaterial", this.depthPacking = Ve, this.skinning = !1, this.morphTargets = !1, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.setValues(t)
    }

    function Qr(t) {
        vn.call(this), this.type = "MeshDistanceMaterial", this.referencePosition = new Qe, this.nearDistance = 1, this.farDistance = 1e3, this.skinning = !1, this.morphTargets = !1, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.fog = !1, this.lights = !1, this.setValues(t)
    }

    function $r(t, e, i) {
        for (var n = new fi, r = new Ke, s = new Ze, o = new Ze(i, i), a = new Qe, c = new Qe, l = 1, p = 2, h = 1 + (l | p), u = new Array(h), d = new Array(h), f = {}, m = {
                0: A,
                1: E,
                2: L
            }, g = [new Qe(1, 0, 0), new Qe(-1, 0, 0), new Qe(0, 0, 1), new Qe(0, 0, -1), new Qe(0, 1, 0), new Qe(0, -1, 0)], v = [new Qe(0, 1, 0), new Qe(0, 1, 0), new Qe(0, 1, 0), new Qe(0, 1, 0), new Qe(0, 0, 1), new Qe(0, 0, -1)], y = [new ai, new ai, new ai, new ai, new ai, new ai], x = 0; x !== h; ++x) {
            var w = 0 != (x & l),
                b = 0 != (x & p),
                M = new Jr({
                    depthPacking: We,
                    morphTargets: w,
                    skinning: b
                });
            u[x] = M;
            var S = new Qr({
                morphTargets: w,
                skinning: b
            });
            d[x] = S
        }
        var T = this;

        function k(e, i, n, r, s, o) {
            var a = e.geometry,
                c = null,
                h = u,
                g = e.customDepthMaterial;
            if (n && (h = d, g = e.customDistanceMaterial), g) c = g;
            else {
                var v = !1;
                i.morphTargets && (a && a.isBufferGeometry ? v = a.morphAttributes && a.morphAttributes.position && a.morphAttributes.position.length > 0 : a && a.isGeometry && (v = a.morphTargets && a.morphTargets.length > 0)), e.isSkinnedMesh && !1 === i.skinning && console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:", e);
                var y = e.isSkinnedMesh && i.skinning,
                    x = 0;
                v && (x |= l), y && (x |= p), c = h[x]
            }
            if (t.localClippingEnabled && !0 === i.clipShadows && 0 !== i.clippingPlanes.length) {
                var w = c.uuid,
                    b = i.uuid,
                    M = f[w];
                void 0 === M && (M = {}, f[w] = M);
                var S = M[b];
                void 0 === S && (S = c.clone(), M[b] = S), c = S
            }
            return c.visible = i.visible, c.wireframe = i.wireframe, c.side = null != i.shadowSide ? i.shadowSide : m[i.side], c.clipShadows = i.clipShadows, c.clippingPlanes = i.clippingPlanes, c.clipIntersection = i.clipIntersection, c.wireframeLinewidth = i.wireframeLinewidth, c.linewidth = i.linewidth, n && c.isMeshDistanceMaterial && (c.referencePosition.copy(r), c.nearDistance = s, c.farDistance = o), c
        }

        function R(i, r, s, o) {
            if (!1 !== i.visible) {
                if (i.layers.test(r.layers) && (i.isMesh || i.isLine || i.isPoints) && i.castShadow && (!i.frustumCulled || n.intersectsObject(i))) {
                    i.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse, i.matrixWorld);
                    var a = e.update(i),
                        l = i.material;
                    if (Array.isArray(l))
                        for (var p = a.groups, h = 0, u = p.length; h < u; h++) {
                            var d = p[h],
                                f = l[d.materialIndex];
                            if (f && f.visible) {
                                var m = k(i, f, o, c, s.near, s.far);
                                t.renderBufferDirect(s, null, a, m, i, d)
                            }
                        } else if (l.visible) {
                            m = k(i, l, o, c, s.near, s.far);
                            t.renderBufferDirect(s, null, a, m, i, null)
                        }
                }
                for (var g = i.children, v = 0, y = g.length; v < y; v++) R(g[v], r, s, o)
            }
        }
        this.enabled = !1, this.autoUpdate = !0, this.needsUpdate = !1, this.type = _, this.render = function(e, i, l) {
            if (!1 !== T.enabled && (!1 !== T.autoUpdate || !1 !== T.needsUpdate) && 0 !== e.length) {
                var p, h = t.context,
                    u = t.state;
                u.disable(h.BLEND), u.buffers.color.setClear(1, 1, 1, 1), u.buffers.depth.setTest(!0), u.setScissorTest(!1);
                for (var d = 0, f = e.length; d < f; d++) {
                    var m = e[d],
                        x = m.shadow,
                        w = m && m.isPointLight;
                    if (void 0 !== x) {
                        var b = x.camera;
                        if (s.copy(x.mapSize), s.min(o), w) {
                            var M = s.x,
                                S = s.y;
                            y[0].set(2 * M, S, M, S), y[1].set(0, S, M, S), y[2].set(3 * M, S, M, S), y[3].set(M, S, M, S), y[4].set(3 * M, 0, M, S), y[5].set(M, 0, M, S), s.x *= 4, s.y *= 2
                        }
                        if (null === x.map) {
                            var _ = {
                                minFilter: kt,
                                magFilter: kt,
                                format: Zt
                            };
                            x.map = new ci(s.x, s.y, _), x.map.texture.name = m.name + ".shadowMap", b.updateProjectionMatrix()
                        }
                        x.isSpotLightShadow && x.update(m);
                        var E = x.map,
                            A = x.matrix;
                        c.setFromMatrixPosition(m.matrixWorld), b.position.copy(c), w ? (p = 6, A.makeTranslation(-c.x, -c.y, -c.z)) : (p = 1, a.setFromMatrixPosition(m.target.matrixWorld), b.lookAt(a), b.updateMatrixWorld(), A.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1), A.multiply(b.projectionMatrix), A.multiply(b.matrixWorldInverse)), t.setRenderTarget(E), t.clear();
                        for (var L = 0; L < p; L++) {
                            if (w) {
                                a.copy(b.position), a.add(g[L]), b.up.copy(v[L]), b.lookAt(a), b.updateMatrixWorld();
                                var k = y[L];
                                u.viewport(k)
                            }
                            r.multiplyMatrices(b.projectionMatrix, b.matrixWorldInverse), n.setFromMatrix(r), R(i, l, b, w)
                        }
                    } else console.warn("THREE.WebGLShadowMap:", m, "has no shadow.")
                }
                T.needsUpdate = !1
            }
        }
    }

    function ts(t, e, i, n) {
        var r = new function() {
                var e = !1,
                    i = new ai,
                    n = null,
                    r = new ai(0, 0, 0, 0);
                return {
                    setMask: function(i) {
                        n === i || e || (t.colorMask(i, i, i, i), n = i)
                    },
                    setLocked: function(t) {
                        e = t
                    },
                    setClear: function(e, n, s, o, a) {
                        !0 === a && (e *= o, n *= o, s *= o), i.set(e, n, s, o), !1 === r.equals(i) && (t.clearColor(e, n, s, o), r.copy(i))
                    },
                    reset: function() {
                        e = !1, n = null, r.set(-1, 0, 0, 0)
                    }
                }
            },
            s = new function() {
                var e = !1,
                    i = null,
                    n = null,
                    r = null;
                return {
                    setTest: function(e) {
                        e ? Z(t.DEPTH_TEST) : K(t.DEPTH_TEST)
                    },
                    setMask: function(n) {
                        i === n || e || (t.depthMask(n), i = n)
                    },
                    setFunc: function(e) {
                        if (n !== e) {
                            if (e) switch (e) {
                                case it:
                                    t.depthFunc(t.NEVER);
                                    break;
                                case nt:
                                    t.depthFunc(t.ALWAYS);
                                    break;
                                case rt:
                                    t.depthFunc(t.LESS);
                                    break;
                                case st:
                                    t.depthFunc(t.LEQUAL);
                                    break;
                                case ot:
                                    t.depthFunc(t.EQUAL);
                                    break;
                                case at:
                                    t.depthFunc(t.GEQUAL);
                                    break;
                                case ct:
                                    t.depthFunc(t.GREATER);
                                    break;
                                case lt:
                                    t.depthFunc(t.NOTEQUAL);
                                    break;
                                default:
                                    t.depthFunc(t.LEQUAL)
                            } else t.depthFunc(t.LEQUAL);
                            n = e
                        }
                    },
                    setLocked: function(t) {
                        e = t
                    },
                    setClear: function(e) {
                        r !== e && (t.clearDepth(e), r = e)
                    },
                    reset: function() {
                        e = !1, i = null, n = null, r = null
                    }
                }
            },
            o = new function() {
                var e = !1,
                    i = null,
                    n = null,
                    r = null,
                    s = null,
                    o = null,
                    a = null,
                    c = null,
                    l = null;
                return {
                    setTest: function(e) {
                        e ? Z(t.STENCIL_TEST) : K(t.STENCIL_TEST)
                    },
                    setMask: function(n) {
                        i === n || e || (t.stencilMask(n), i = n)
                    },
                    setFunc: function(e, i, o) {
                        n === e && r === i && s === o || (t.stencilFunc(e, i, o), n = e, r = i, s = o)
                    },
                    setOp: function(e, i, n) {
                        o === e && a === i && c === n || (t.stencilOp(e, i, n), o = e, a = i, c = n)
                    },
                    setLocked: function(t) {
                        e = t
                    },
                    setClear: function(e) {
                        l !== e && (t.clearStencil(e), l = e)
                    },
                    reset: function() {
                        e = !1, i = null, n = null, r = null, s = null, o = null, a = null, c = null, l = null
                    }
                }
            },
            a = t.getParameter(t.MAX_VERTEX_ATTRIBS),
            c = new Uint8Array(a),
            l = new Uint8Array(a),
            p = new Uint8Array(a),
            h = {},
            u = null,
            d = null,
            f = null,
            m = null,
            g = null,
            w = null,
            b = null,
            M = null,
            S = null,
            _ = !1,
            T = null,
            E = null,
            k = null,
            R = null,
            P = null,
            C = t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS),
            I = !1,
            F = 0,
            H = t.getParameter(t.VERSION); - 1 !== H.indexOf("WebGL") ? (F = parseFloat(/^WebGL\ ([0-9])/.exec(H)[1]), I = F >= 1) : -1 !== H.indexOf("OpenGL ES") && (F = parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(H)[1]), I = F >= 2);
        var j = null,
            G = {},
            V = new ai,
            W = new ai;

        function Y(e, i, n) {
            var r = new Uint8Array(4),
                s = t.createTexture();
            t.bindTexture(e, s), t.texParameteri(e, t.TEXTURE_MIN_FILTER, t.NEAREST), t.texParameteri(e, t.TEXTURE_MAG_FILTER, t.NEAREST);
            for (var o = 0; o < n; o++) t.texImage2D(i + o, 0, t.RGBA, 1, 1, 0, t.RGBA, t.UNSIGNED_BYTE, r);
            return s
        }
        var X = {};

        function q(i, r) {
            (c[i] = 1, 0 === l[i] && (t.enableVertexAttribArray(i), l[i] = 1), p[i] !== r) && ((n.isWebGL2 ? t : e.get("ANGLE_instanced_arrays"))[n.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"](i, r), p[i] = r)
        }

        function Z(e) {
            !0 !== h[e] && (t.enable(e), h[e] = !0)
        }

        function K(e) {
            !1 !== h[e] && (t.disable(e), h[e] = !1)
        }

        function J(e, n, r, s, o, a, c, l) {
            if (e !== O ? Z(t.BLEND) : K(t.BLEND), e !== U) {
                if (e !== f || l !== _) switch (e) {
                    case B:
                        l ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD), t.blendFuncSeparate(t.ONE, t.ONE, t.ONE, t.ONE)) : (t.blendEquation(t.FUNC_ADD), t.blendFunc(t.SRC_ALPHA, t.ONE));
                        break;
                    case z:
                        l ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD), t.blendFuncSeparate(t.ZERO, t.ZERO, t.ONE_MINUS_SRC_COLOR, t.ONE_MINUS_SRC_ALPHA)) : (t.blendEquation(t.FUNC_ADD), t.blendFunc(t.ZERO, t.ONE_MINUS_SRC_COLOR));
                        break;
                    case N:
                        l ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD), t.blendFuncSeparate(t.ZERO, t.SRC_COLOR, t.ZERO, t.SRC_ALPHA)) : (t.blendEquation(t.FUNC_ADD), t.blendFunc(t.ZERO, t.SRC_COLOR));
                        break;
                    default:
                        l ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD), t.blendFuncSeparate(t.ONE, t.ONE_MINUS_SRC_ALPHA, t.ONE, t.ONE_MINUS_SRC_ALPHA)) : (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD), t.blendFuncSeparate(t.SRC_ALPHA, t.ONE_MINUS_SRC_ALPHA, t.ONE, t.ONE_MINUS_SRC_ALPHA))
                }
                m = null, g = null, w = null, b = null, M = null, S = null
            } else o = o || n, a = a || r, c = c || s, n === m && o === b || (t.blendEquationSeparate(i.convert(n), i.convert(o)), m = n, b = o), r === g && s === w && a === M && c === S || (t.blendFuncSeparate(i.convert(r), i.convert(s), i.convert(a), i.convert(c)), g = r, w = s, M = a, S = c);
            f = e, _ = l
        }

        function Q(e) {
            T !== e && (e ? t.frontFace(t.CW) : t.frontFace(t.CCW), T = e)
        }

        function $(e) {
            e !== v ? (Z(t.CULL_FACE), e !== E && (e === y ? t.cullFace(t.BACK) : e === x ? t.cullFace(t.FRONT) : t.cullFace(t.FRONT_AND_BACK))) : K(t.CULL_FACE), E = e
        }

        function tt(e, i, n) {
            e ? (Z(t.POLYGON_OFFSET_FILL), R === i && P === n || (t.polygonOffset(i, n), R = i, P = n)) : K(t.POLYGON_OFFSET_FILL)
        }

        function et(e) {
            void 0 === e && (e = t.TEXTURE0 + C - 1), j !== e && (t.activeTexture(e), j = e)
        }
        return X[t.TEXTURE_2D] = Y(t.TEXTURE_2D, t.TEXTURE_2D, 1), X[t.TEXTURE_CUBE_MAP] = Y(t.TEXTURE_CUBE_MAP, t.TEXTURE_CUBE_MAP_POSITIVE_X, 6), r.setClear(0, 0, 0, 1), s.setClear(1), o.setClear(0), Z(t.DEPTH_TEST), s.setFunc(st), Q(!1), $(y), Z(t.CULL_FACE), Z(t.BLEND), J(D), {
            buffers: {
                color: r,
                depth: s,
                stencil: o
            },
            initAttributes: function() {
                for (var t = 0, e = c.length; t < e; t++) c[t] = 0
            },
            enableAttribute: function(t) {
                q(t, 0)
            },
            enableAttributeAndDivisor: q,
            disableUnusedAttributes: function() {
                for (var e = 0, i = l.length; e !== i; ++e) l[e] !== c[e] && (t.disableVertexAttribArray(e), l[e] = 0)
            },
            enable: Z,
            disable: K,
            getCompressedTextureFormats: function() {
                if (null === u && (u = [], e.get("WEBGL_compressed_texture_pvrtc") || e.get("WEBGL_compressed_texture_s3tc") || e.get("WEBGL_compressed_texture_etc1") || e.get("WEBGL_compressed_texture_astc")))
                    for (var i = t.getParameter(t.COMPRESSED_TEXTURE_FORMATS), n = 0; n < i.length; n++) u.push(i[n]);
                return u
            },
            useProgram: function(e) {
                return d !== e && (t.useProgram(e), d = e, !0)
            },
            setBlending: J,
            setMaterial: function(e, i) {
                e.side === L ? K(t.CULL_FACE) : Z(t.CULL_FACE);
                var n = e.side === A;
                i && (n = !n), Q(n), e.blending === D && !1 === e.transparent ? J(O) : J(e.blending, e.blendEquation, e.blendSrc, e.blendDst, e.blendEquationAlpha, e.blendSrcAlpha, e.blendDstAlpha, e.premultipliedAlpha), s.setFunc(e.depthFunc), s.setTest(e.depthTest), s.setMask(e.depthWrite), r.setMask(e.colorWrite), tt(e.polygonOffset, e.polygonOffsetFactor, e.polygonOffsetUnits)
            },
            setFlipSided: Q,
            setCullFace: $,
            setLineWidth: function(e) {
                e !== k && (I && t.lineWidth(e), k = e)
            },
            setPolygonOffset: tt,
            setScissorTest: function(e) {
                e ? Z(t.SCISSOR_TEST) : K(t.SCISSOR_TEST)
            },
            activeTexture: et,
            bindTexture: function(e, i) {
                null === j && et();
                var n = G[j];
                void 0 === n && (n = {
                    type: void 0,
                    texture: void 0
                }, G[j] = n), n.type === e && n.texture === i || (t.bindTexture(e, i || X[e]), n.type = e, n.texture = i)
            },
            compressedTexImage2D: function() {
                try {
                    t.compressedTexImage2D.apply(t, arguments)
                } catch (t) {
                    console.error("THREE.WebGLState:", t)
                }
            },
            texImage2D: function() {
                try {
                    t.texImage2D.apply(t, arguments)
                } catch (t) {
                    console.error("THREE.WebGLState:", t)
                }
            },
            scissor: function(e) {
                !1 === V.equals(e) && (t.scissor(e.x, e.y, e.z, e.w), V.copy(e))
            },
            viewport: function(e) {
                !1 === W.equals(e) && (t.viewport(e.x, e.y, e.z, e.w), W.copy(e))
            },
            reset: function() {
                for (var e = 0; e < l.length; e++) 1 === l[e] && (t.disableVertexAttribArray(e), l[e] = 0);
                h = {}, u = null, j = null, G = {}, d = null, f = null, T = null, E = null, r.reset(), s.reset(), o.reset()
            }
        }
    }

    function es(t, e, i, n, r, s, o) {
        var a, c = {};

        function l(t, e) {
            if (t.width > e || t.height > e) {
                if ("data" in t) return void console.warn("THREE.WebGLRenderer: image in DataTexture is too big (" + t.width + "x" + t.height + ").");
                var i = e / Math.max(t.width, t.height),
                    n = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
                return n.width = Math.floor(t.width * i), n.height = Math.floor(t.height * i), n.getContext("2d").drawImage(t, 0, 0, t.width, t.height, 0, 0, n.width, n.height), console.warn("THREE.WebGLRenderer: image is too big (" + t.width + "x" + t.height + "). Resized to " + n.width + "x" + n.height), n
            }
            return t
        }

        function p(t) {
            return qe.isPowerOfTwo(t.width) && qe.isPowerOfTwo(t.height)
        }

        function h(t, e) {
            return t.generateMipmaps && e && t.minFilter !== kt && t.minFilter !== Ct
        }

        function u(e, i, r, s) {
            t.generateMipmap(e), n.get(i).__maxMipLevel = Math.log(Math.max(r, s)) * Math.LOG2E
        }

        function d(e, i) {
            if (!r.isWebGL2) return e;
            if (e === t.RGB) {
                if (i === t.FLOAT) return t.RGB32F;
                if (i === t.HALF_FLOAT) return t.RGB16F;
                if (i === t.UNSIGNED_BYTE) return t.RGB8
            }
            if (e === t.RGBA) {
                if (i === t.FLOAT) return t.RGBA32F;
                if (i === t.HALF_FLOAT) return t.RGBA16F;
                if (i === t.UNSIGNED_BYTE) return t.RGBA8
            }
            return e
        }

        function f(e) {
            return e === kt || e === Rt || e === Pt ? t.NEAREST : t.LINEAR
        }

        function m(e) {
            var i = e.target;
            i.removeEventListener("dispose", m),
                function(e) {
                    var i = n.get(e);
                    if (e.image && i.__image__webglTextureCube) t.deleteTexture(i.__image__webglTextureCube);
                    else {
                        if (void 0 === i.__webglInit) return;
                        t.deleteTexture(i.__webglTexture)
                    }
                    n.remove(e)
                }(i), i.isVideoTexture && delete c[i.id], o.memory.textures--
        }

        function g(e) {
            var i = e.target;
            i.removeEventListener("dispose", g),
                function(e) {
                    var i = n.get(e),
                        r = n.get(e.texture);
                    if (!e) return;
                    void 0 !== r.__webglTexture && t.deleteTexture(r.__webglTexture);
                    e.depthTexture && e.depthTexture.dispose();
                    if (e.isWebGLRenderTargetCube)
                        for (var s = 0; s < 6; s++) t.deleteFramebuffer(i.__webglFramebuffer[s]), i.__webglDepthbuffer && t.deleteRenderbuffer(i.__webglDepthbuffer[s]);
                    else t.deleteFramebuffer(i.__webglFramebuffer), i.__webglDepthbuffer && t.deleteRenderbuffer(i.__webglDepthbuffer);
                    n.remove(e.texture), n.remove(e)
                }(i), o.memory.textures--
        }

        function v(e, f) {
            var g = n.get(e);
            if (e.isVideoTexture && function(t) {
                    var e = t.id,
                        i = o.render.frame;
                    c[e] !== i && (c[e] = i, t.update())
                }(e), e.version > 0 && g.__version !== e.version) {
                var v = e.image;
                if (void 0 === v) console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");
                else {
                    if (!1 !== v.complete) return void
                    function(e, n, c) {
                        void 0 === e.__webglInit && (e.__webglInit = !0, n.addEventListener("dispose", m), e.__webglTexture = t.createTexture(), o.memory.textures++);
                        i.activeTexture(t.TEXTURE0 + c), i.bindTexture(t.TEXTURE_2D, e.__webglTexture), t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, n.flipY), t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL, n.premultiplyAlpha), t.pixelStorei(t.UNPACK_ALIGNMENT, n.unpackAlignment);
                        var f = l(n.image, r.maxTextureSize);
                        (function(t) {
                            return !r.isWebGL2 && (t.wrapS !== At || t.wrapT !== At || t.minFilter !== kt && t.minFilter !== Ct)
                        })(n) && !1 === p(f) && (f = function(t) {
                            return t instanceof HTMLImageElement || t instanceof HTMLCanvasElement || t instanceof ImageBitmap ? (void 0 === a && (a = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")), a.width = qe.floorPowerOfTwo(t.width), a.height = qe.floorPowerOfTwo(t.height), a.getContext("2d").drawImage(t, 0, 0, a.width, a.height), console.warn("THREE.WebGLRenderer: image is not power of two (" + t.width + "x" + t.height + "). Resized to " + a.width + "x" + a.height), a) : t
                        }(f));
                        var g = p(f),
                            v = s.convert(n.format),
                            x = s.convert(n.type),
                            w = d(v, x);
                        y(t.TEXTURE_2D, n, g);
                        var b, M = n.mipmaps;
                        if (n.isDepthTexture) {
                            if (w = t.DEPTH_COMPONENT, n.type === Ht) {
                                if (!r.isWebGL2) throw new Error("Float Depth Texture only supported in WebGL2.0");
                                w = t.DEPTH_COMPONENT32F
                            } else r.isWebGL2 && (w = t.DEPTH_COMPONENT16);
                            n.format === $t && w === t.DEPTH_COMPONENT && n.type !== Nt && n.type !== Ft && (console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."), n.type = Nt, x = s.convert(n.type)), n.format === te && (w = t.DEPTH_STENCIL, n.type !== Yt && (console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."), n.type = Yt, x = s.convert(n.type))), i.texImage2D(t.TEXTURE_2D, 0, w, f.width, f.height, 0, v, x, null)
                        } else if (n.isDataTexture)
                            if (M.length > 0 && g) {
                                for (var S = 0, _ = M.length; S < _; S++) b = M[S], i.texImage2D(t.TEXTURE_2D, S, w, b.width, b.height, 0, v, x, b.data);
                                n.generateMipmaps = !1, e.__maxMipLevel = M.length - 1
                            } else i.texImage2D(t.TEXTURE_2D, 0, w, f.width, f.height, 0, v, x, f.data), e.__maxMipLevel = 0;
                        else if (n.isCompressedTexture) {
                            for (var S = 0, _ = M.length; S < _; S++) b = M[S], n.format !== Zt && n.format !== qt ? i.getCompressedTextureFormats().indexOf(v) > -1 ? i.compressedTexImage2D(t.TEXTURE_2D, S, w, b.width, b.height, 0, b.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : i.texImage2D(t.TEXTURE_2D, S, w, b.width, b.height, 0, v, x, b.data);
                            e.__maxMipLevel = M.length - 1
                        } else if (M.length > 0 && g) {
                            for (var S = 0, _ = M.length; S < _; S++) b = M[S], i.texImage2D(t.TEXTURE_2D, S, w, v, x, b);
                            n.generateMipmaps = !1, e.__maxMipLevel = M.length - 1
                        } else i.texImage2D(t.TEXTURE_2D, 0, w, v, x, f), e.__maxMipLevel = 0;
                        h(n, g) && u(t.TEXTURE_2D, n, f.width, f.height);
                        e.__version = n.version, n.onUpdate && n.onUpdate(n)
                    }(g, e, f);
                    console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")
                }
            }
            i.activeTexture(t.TEXTURE0 + f), i.bindTexture(t.TEXTURE_2D, g.__webglTexture)
        }

        function y(i, o, a) {
            var c;
            if (a ? (t.texParameteri(i, t.TEXTURE_WRAP_S, s.convert(o.wrapS)), t.texParameteri(i, t.TEXTURE_WRAP_T, s.convert(o.wrapT)), t.texParameteri(i, t.TEXTURE_MAG_FILTER, s.convert(o.magFilter)), t.texParameteri(i, t.TEXTURE_MIN_FILTER, s.convert(o.minFilter))) : (t.texParameteri(i, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE), t.texParameteri(i, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE), o.wrapS === At && o.wrapT === At || console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."), t.texParameteri(i, t.TEXTURE_MAG_FILTER, f(o.magFilter)), t.texParameteri(i, t.TEXTURE_MIN_FILTER, f(o.minFilter)), o.minFilter !== kt && o.minFilter !== Ct && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")), c = e.get("EXT_texture_filter_anisotropic")) {
                if (o.type === Ht && null === e.get("OES_texture_float_linear")) return;
                if (o.type === jt && null === (r.isWebGL2 || e.get("OES_texture_half_float_linear"))) return;
                (o.anisotropy > 1 || n.get(o).__currentAnisotropy) && (t.texParameterf(i, c.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(o.anisotropy, r.getMaxAnisotropy())), n.get(o).__currentAnisotropy = o.anisotropy)
            }
        }

        function x(e, r, o, a) {
            var c = s.convert(r.texture.format),
                l = s.convert(r.texture.type),
                p = d(c, l);
            i.texImage2D(a, 0, p, r.width, r.height, 0, c, l, null), t.bindFramebuffer(t.FRAMEBUFFER, e), t.framebufferTexture2D(t.FRAMEBUFFER, o, a, n.get(r.texture).__webglTexture, 0), t.bindFramebuffer(t.FRAMEBUFFER, null)
        }

        function w(e, i) {
            t.bindRenderbuffer(t.RENDERBUFFER, e), i.depthBuffer && !i.stencilBuffer ? (t.renderbufferStorage(t.RENDERBUFFER, t.DEPTH_COMPONENT16, i.width, i.height), t.framebufferRenderbuffer(t.FRAMEBUFFER, t.DEPTH_ATTACHMENT, t.RENDERBUFFER, e)) : i.depthBuffer && i.stencilBuffer ? (t.renderbufferStorage(t.RENDERBUFFER, t.DEPTH_STENCIL, i.width, i.height), t.framebufferRenderbuffer(t.FRAMEBUFFER, t.DEPTH_STENCIL_ATTACHMENT, t.RENDERBUFFER, e)) : t.renderbufferStorage(t.RENDERBUFFER, t.RGBA4, i.width, i.height), t.bindRenderbuffer(t.RENDERBUFFER, null)
        }

        function b(e) {
            var i = n.get(e),
                r = !0 === e.isWebGLRenderTargetCube;
            if (e.depthTexture) {
                if (r) throw new Error("target.depthTexture not supported in Cube render targets");
                ! function(e, i) {
                    if (i && i.isWebGLRenderTargetCube) throw new Error("Depth Texture with cube render targets is not supported");
                    if (t.bindFramebuffer(t.FRAMEBUFFER, e), !i.depthTexture || !i.depthTexture.isDepthTexture) throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
                    n.get(i.depthTexture).__webglTexture && i.depthTexture.image.width === i.width && i.depthTexture.image.height === i.height || (i.depthTexture.image.width = i.width, i.depthTexture.image.height = i.height, i.depthTexture.needsUpdate = !0), v(i.depthTexture, 0);
                    var r = n.get(i.depthTexture).__webglTexture;
                    if (i.depthTexture.format === $t) t.framebufferTexture2D(t.FRAMEBUFFER, t.DEPTH_ATTACHMENT, t.TEXTURE_2D, r, 0);
                    else {
                        if (i.depthTexture.format !== te) throw new Error("Unknown depthTexture format");
                        t.framebufferTexture2D(t.FRAMEBUFFER, t.DEPTH_STENCIL_ATTACHMENT, t.TEXTURE_2D, r, 0)
                    }
                }(i.__webglFramebuffer, e)
            } else if (r) {
                i.__webglDepthbuffer = [];
                for (var s = 0; s < 6; s++) t.bindFramebuffer(t.FRAMEBUFFER, i.__webglFramebuffer[s]), i.__webglDepthbuffer[s] = t.createRenderbuffer(), w(i.__webglDepthbuffer[s], e)
            } else t.bindFramebuffer(t.FRAMEBUFFER, i.__webglFramebuffer), i.__webglDepthbuffer = t.createRenderbuffer(), w(i.__webglDepthbuffer, e);
            t.bindFramebuffer(t.FRAMEBUFFER, null)
        }
        this.setTexture2D = v, this.setTextureCube = function(e, a) {
            var c = n.get(e);
            if (6 === e.image.length)
                if (e.version > 0 && c.__version !== e.version) {
                    c.__image__webglTextureCube || (e.addEventListener("dispose", m), c.__image__webglTextureCube = t.createTexture(), o.memory.textures++), i.activeTexture(t.TEXTURE0 + a), i.bindTexture(t.TEXTURE_CUBE_MAP, c.__image__webglTextureCube), t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, e.flipY);
                    for (var f = e && e.isCompressedTexture, g = e.image[0] && e.image[0].isDataTexture, v = [], x = 0; x < 6; x++) v[x] = f || g ? g ? e.image[x].image : e.image[x] : l(e.image[x], r.maxCubemapSize);
                    var w = v[0],
                        b = p(w),
                        M = s.convert(e.format),
                        S = s.convert(e.type),
                        _ = d(M, S);
                    for (y(t.TEXTURE_CUBE_MAP, e, b), x = 0; x < 6; x++)
                        if (f)
                            for (var T, E = v[x].mipmaps, A = 0, L = E.length; A < L; A++) T = E[A], e.format !== Zt && e.format !== qt ? i.getCompressedTextureFormats().indexOf(M) > -1 ? i.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + x, A, _, T.width, T.height, 0, T.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + x, A, _, T.width, T.height, 0, M, S, T.data);
                        else g ? i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + x, 0, _, v[x].width, v[x].height, 0, M, S, v[x].data) : i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + x, 0, _, M, S, v[x]);
                    c.__maxMipLevel = f ? E.length - 1 : 0, h(e, b) && u(t.TEXTURE_CUBE_MAP, e, w.width, w.height), c.__version = e.version, e.onUpdate && e.onUpdate(e)
                } else i.activeTexture(t.TEXTURE0 + a), i.bindTexture(t.TEXTURE_CUBE_MAP, c.__image__webglTextureCube)
        }, this.setTextureCubeDynamic = function(e, r) {
            i.activeTexture(t.TEXTURE0 + r), i.bindTexture(t.TEXTURE_CUBE_MAP, n.get(e).__webglTexture)
        }, this.setupRenderTarget = function(e) {
            var r = n.get(e),
                s = n.get(e.texture);
            e.addEventListener("dispose", g), s.__webglTexture = t.createTexture(), o.memory.textures++;
            var a = !0 === e.isWebGLRenderTargetCube,
                c = p(e);
            if (a) {
                r.__webglFramebuffer = [];
                for (var l = 0; l < 6; l++) r.__webglFramebuffer[l] = t.createFramebuffer()
            } else r.__webglFramebuffer = t.createFramebuffer();
            if (a) {
                for (i.bindTexture(t.TEXTURE_CUBE_MAP, s.__webglTexture), y(t.TEXTURE_CUBE_MAP, e.texture, c), l = 0; l < 6; l++) x(r.__webglFramebuffer[l], e, t.COLOR_ATTACHMENT0, t.TEXTURE_CUBE_MAP_POSITIVE_X + l);
                h(e.texture, c) && u(t.TEXTURE_CUBE_MAP, e.texture, e.width, e.height), i.bindTexture(t.TEXTURE_CUBE_MAP, null)
            } else i.bindTexture(t.TEXTURE_2D, s.__webglTexture), y(t.TEXTURE_2D, e.texture, c), x(r.__webglFramebuffer, e, t.COLOR_ATTACHMENT0, t.TEXTURE_2D), h(e.texture, c) && u(t.TEXTURE_2D, e.texture, e.width, e.height), i.bindTexture(t.TEXTURE_2D, null);
            e.depthBuffer && b(e)
        }, this.updateRenderTargetMipmap = function(e) {
            var r = e.texture;
            if (h(r, p(e))) {
                var s = e.isWebGLRenderTargetCube ? t.TEXTURE_CUBE_MAP : t.TEXTURE_2D,
                    o = n.get(r).__webglTexture;
                i.bindTexture(s, o), u(s, r, e.width, e.height), i.bindTexture(s, null)
            }
        }
    }

    function is(t, e, i) {
        return {
            convert: function(n) {
                var r;
                if (n === Et) return t.REPEAT;
                if (n === At) return t.CLAMP_TO_EDGE;
                if (n === Lt) return t.MIRRORED_REPEAT;
                if (n === kt) return t.NEAREST;
                if (n === Rt) return t.NEAREST_MIPMAP_NEAREST;
                if (n === Pt) return t.NEAREST_MIPMAP_LINEAR;
                if (n === Ct) return t.LINEAR;
                if (n === It) return t.LINEAR_MIPMAP_NEAREST;
                if (n === Ot) return t.LINEAR_MIPMAP_LINEAR;
                if (n === Dt) return t.UNSIGNED_BYTE;
                if (n === Gt) return t.UNSIGNED_SHORT_4_4_4_4;
                if (n === Vt) return t.UNSIGNED_SHORT_5_5_5_1;
                if (n === Wt) return t.UNSIGNED_SHORT_5_6_5;
                if (n === Bt) return t.BYTE;
                if (n === zt) return t.SHORT;
                if (n === Nt) return t.UNSIGNED_SHORT;
                if (n === Ut) return t.INT;
                if (n === Ft) return t.UNSIGNED_INT;
                if (n === Ht) return t.FLOAT;
                if (n === jt) {
                    if (i.isWebGL2) return t.HALF_FLOAT;
                    if (null !== (r = e.get("OES_texture_half_float"))) return r.HALF_FLOAT_OES
                }
                if (n === Xt) return t.ALPHA;
                if (n === qt) return t.RGB;
                if (n === Zt) return t.RGBA;
                if (n === Kt) return t.LUMINANCE;
                if (n === Jt) return t.LUMINANCE_ALPHA;
                if (n === $t) return t.DEPTH_COMPONENT;
                if (n === te) return t.DEPTH_STENCIL;
                if (n === F) return t.FUNC_ADD;
                if (n === H) return t.FUNC_SUBTRACT;
                if (n === j) return t.FUNC_REVERSE_SUBTRACT;
                if (n === W) return t.ZERO;
                if (n === Y) return t.ONE;
                if (n === X) return t.SRC_COLOR;
                if (n === q) return t.ONE_MINUS_SRC_COLOR;
                if (n === Z) return t.SRC_ALPHA;
                if (n === K) return t.ONE_MINUS_SRC_ALPHA;
                if (n === J) return t.DST_ALPHA;
                if (n === Q) return t.ONE_MINUS_DST_ALPHA;
                if (n === $) return t.DST_COLOR;
                if (n === tt) return t.ONE_MINUS_DST_COLOR;
                if (n === et) return t.SRC_ALPHA_SATURATE;
                if ((n === ee || n === ie || n === ne || n === re) && null !== (r = e.get("WEBGL_compressed_texture_s3tc"))) {
                    if (n === ee) return r.COMPRESSED_RGB_S3TC_DXT1_EXT;
                    if (n === ie) return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                    if (n === ne) return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                    if (n === re) return r.COMPRESSED_RGBA_S3TC_DXT5_EXT
                }
                if ((n === se || n === oe || n === ae || n === ce) && null !== (r = e.get("WEBGL_compressed_texture_pvrtc"))) {
                    if (n === se) return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
                    if (n === oe) return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
                    if (n === ae) return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
                    if (n === ce) return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
                }
                if (n === le && null !== (r = e.get("WEBGL_compressed_texture_etc1"))) return r.COMPRESSED_RGB_ETC1_WEBGL;
                if ((n === pe || n === he || n === ue || n === de || n === fe || n === me || n === ge || n === ve || n === ye || n === xe || n === we || n === be || n === Me || n === Se) && null !== (r = e.get("WEBGL_compressed_texture_astc"))) return n;
                if (n === G || n === V) {
                    if (i.isWebGL2) {
                        if (n === G) return t.MIN;
                        if (n === V) return t.MAX
                    }
                    if (null !== (r = e.get("EXT_blend_minmax"))) {
                        if (n === G) return r.MIN_EXT;
                        if (n === V) return r.MAX_EXT
                    }
                }
                if (n === Yt) {
                    if (i.isWebGL2) return t.UNSIGNED_INT_24_8;
                    if (null !== (r = e.get("WEBGL_depth_texture"))) return r.UNSIGNED_INT_24_8_WEBGL
                }
                return 0
            }
        }
    }

    function ns() {
        Ci.call(this), this.type = "Group"
    }

    function rs(t, e, i, n) {
        Ii.call(this), this.type = "PerspectiveCamera", this.fov = void 0 !== t ? t : 50, this.zoom = 1, this.near = void 0 !== i ? i : .1, this.far = void 0 !== n ? n : 2e3, this.focus = 10, this.aspect = void 0 !== e ? e : 1, this.view = null, this.filmGauge = 35, this.filmOffset = 0, this.updateProjectionMatrix()
    }

    function ss(t) {
        rs.call(this), this.cameras = t || []
    }

    function os(t) {
        var e = this,
            i = null,
            n = null,
            r = null,
            s = [],
            o = new Ke,
            a = new Ke;
        "undefined" != typeof window && "VRFrameData" in window && (n = new window.VRFrameData, window.addEventListener("vrdisplaypresentchange", v, !1));
        var c = new Ke,
            l = new Je,
            p = new Qe,
            h = new rs;
        h.bounds = new ai(0, 0, .5, 1), h.layers.enable(1);
        var u = new rs;
        u.bounds = new ai(.5, 0, .5, 1), u.layers.enable(2);
        var d, f, m = new ss([h, u]);

        function g() {
            return null !== i && !0 === i.isPresenting
        }

        function v() {
            if (g()) {
                var n = i.getEyeParameters("left"),
                    r = n.renderWidth,
                    s = n.renderHeight;
                f = t.getPixelRatio(), d = t.getSize(), t.setDrawingBufferSize(2 * r, s, 1), w.start()
            } else e.enabled && (t.setDrawingBufferSize(d.width, d.height, f), w.stop())
        }
        m.layers.enable(1), m.layers.enable(2);
        var y = [];

        function x(t) {
            for (var e = navigator.getGamepads && navigator.getGamepads(), i = 0, n = 0, r = e.length; i < r; i++) {
                var s = e[i];
                if (s && ("Daydream Controller" === s.id || "Gear VR Controller" === s.id || "Oculus Go Controller" === s.id || "OpenVR Gamepad" === s.id || s.id.startsWith("Oculus Touch") || s.id.startsWith("Spatial Controller"))) {
                    if (n === t) return s;
                    n++
                }
            }
        }
        this.enabled = !1, this.userHeight = 1.6, this.getController = function(t) {
            var e = s[t];
            return void 0 === e && ((e = new ns).matrixAutoUpdate = !1, e.visible = !1, s[t] = e), e
        }, this.getDevice = function() {
            return i
        }, this.setDevice = function(t) {
            void 0 !== t && (i = t), w.setContext(t)
        }, this.setPoseTarget = function(t) {
            void 0 !== t && (r = t)
        }, this.getCamera = function(t) {
            if (null === i) return t.position.set(0, e.userHeight, 0), t;
            i.depthNear = t.near, i.depthFar = t.far, i.getFrameData(n);
            var d = i.stageParameters;
            d ? o.fromArray(d.sittingToStandingTransform) : o.makeTranslation(0, e.userHeight, 0);
            var f = n.pose,
                g = null !== r ? r : t;
            if (g.matrix.copy(o), g.matrix.decompose(g.position, g.quaternion, g.scale), null !== f.orientation && (l.fromArray(f.orientation), g.quaternion.multiply(l)), null !== f.position && (l.setFromRotationMatrix(o), p.fromArray(f.position), p.applyQuaternion(l), g.position.add(p)), g.updateMatrixWorld(), !1 === i.isPresenting) return t;
            h.near = t.near, u.near = t.near, h.far = t.far, u.far = t.far, m.matrixWorld.copy(t.matrixWorld), m.matrixWorldInverse.copy(t.matrixWorldInverse), h.matrixWorldInverse.fromArray(n.leftViewMatrix), u.matrixWorldInverse.fromArray(n.rightViewMatrix), a.getInverse(o), h.matrixWorldInverse.multiply(a), u.matrixWorldInverse.multiply(a);
            var v = g.parent;
            null !== v && (c.getInverse(v.matrixWorld), h.matrixWorldInverse.multiply(c), u.matrixWorldInverse.multiply(c)), h.matrixWorld.getInverse(h.matrixWorldInverse), u.matrixWorld.getInverse(u.matrixWorldInverse), h.projectionMatrix.fromArray(n.leftProjectionMatrix), u.projectionMatrix.fromArray(n.rightProjectionMatrix), m.projectionMatrix.copy(h.projectionMatrix);
            var w = i.getLayers();
            if (w.length) {
                var b = w[0];
                null !== b.leftBounds && 4 === b.leftBounds.length && h.bounds.fromArray(b.leftBounds), null !== b.rightBounds && 4 === b.rightBounds.length && u.bounds.fromArray(b.rightBounds)
            }
            return function() {
                for (var t = 0; t < s.length; t++) {
                    var e = s[t],
                        i = x(t);
                    if (void 0 !== i && void 0 !== i.pose) {
                        if (null === i.pose) return;
                        var n = i.pose;
                        !1 === n.hasPosition && e.position.set(.2, -.6, -.05), null !== n.position && e.position.fromArray(n.position), null !== n.orientation && e.quaternion.fromArray(n.orientation), e.matrix.compose(e.position, e.quaternion, e.scale), e.matrix.premultiply(o), e.matrix.decompose(e.position, e.quaternion, e.scale), e.matrixWorldNeedsUpdate = !0, e.visible = !0;
                        var r = "Daydream Controller" === i.id ? 0 : 1;
                        y[t] !== i.buttons[r].pressed && (y[t] = i.buttons[r].pressed, !0 === y[t] ? e.dispatchEvent({
                            type: "selectstart"
                        }) : (e.dispatchEvent({
                            type: "selectend"
                        }), e.dispatchEvent({
                            type: "select"
                        })))
                    } else e.visible = !1
                }
            }(), m
        }, this.getStandingMatrix = function() {
            return o
        }, this.isPresenting = g;
        var w = new Si;
        this.setAnimationLoop = function(t) {
            w.setAnimationLoop(t)
        }, this.submitFrame = function() {
            g() && i.submitFrame()
        }, this.dispose = function() {
            "undefined" != typeof window && window.removeEventListener("vrdisplaypresentchange", v)
        }
    }

    function as(t) {
        var e = t.context,
            i = null,
            n = null,
            r = null,
            s = null,
            o = [],
            a = [];

        function c() {
            return null !== n && null !== r
        }
        var l = new rs;
        l.layers.enable(1), l.viewport = new ai;
        var p = new rs;
        p.layers.enable(2), p.viewport = new ai;
        var h = new ss([l, p]);

        function u(t) {
            var e = o[a.indexOf(t.inputSource)];
            e && e.dispatchEvent({
                type: t.type
            })
        }

        function d() {
            t.setFramebuffer(null), g.stop()
        }

        function f(t, e) {
            null === e ? t.matrixWorld.copy(t.matrix) : t.matrixWorld.multiplyMatrices(e.matrixWorld, t.matrix), t.matrixWorldInverse.getInverse(t.matrixWorld)
        }
        h.layers.enable(1), h.layers.enable(2), this.enabled = !1, this.getController = function(t) {
            var e = o[t];
            return void 0 === e && ((e = new ns).matrixAutoUpdate = !1, e.visible = !1, o[t] = e), e
        }, this.getDevice = function() {
            return i
        }, this.setDevice = function(t) {
            void 0 !== t && (i = t), t instanceof XRDevice && e.setCompatibleXRDevice(t)
        }, this.setSession = function(i, s) {
            null !== (n = i) && (n.addEventListener("select", u), n.addEventListener("selectstart", u), n.addEventListener("selectend", u), n.addEventListener("end", d), n.baseLayer = new XRWebGLLayer(n, e), n.requestFrameOfReference(s.frameOfReferenceType).then(function(e) {
                r = e, t.setFramebuffer(n.baseLayer.framebuffer), g.setContext(n), g.start()
            }), a = n.getInputSources(), n.addEventListener("inputsourceschange", function() {
                a = n.getInputSources(), console.log(a)
            }))
        }, this.getCamera = function(t) {
            if (c()) {
                var e = t.parent,
                    i = h.cameras;
                f(h, e);
                for (var n = 0; n < i.length; n++) f(i[n], e);
                t.matrixWorld.copy(h.matrixWorld);
                for (var r = t.children, s = (n = 0, r.length); n < s; n++) r[n].updateMatrixWorld(!0);
                return h
            }
            return t
        }, this.isPresenting = c;
        var m = null;
        var g = new Si;
        g.setAnimationLoop(function(t, e) {
            if (null !== (s = e.getDevicePose(r)))
                for (var i = n.baseLayer, c = e.views, l = 0; l < c.length; l++) {
                    var p = c[l],
                        u = i.getViewport(p),
                        d = s.getViewMatrix(p),
                        f = h.cameras[l];
                    f.matrix.fromArray(d).getInverse(f.matrix), f.projectionMatrix.fromArray(p.projectionMatrix), f.viewport.set(u.x, u.y, u.width, u.height), 0 === l && (h.matrix.copy(f.matrix), h.projectionMatrix.copy(f.projectionMatrix))
                }
            for (l = 0; l < o.length; l++) {
                var g = o[l],
                    v = a[l];
                if (v) {
                    var y = e.getInputPose(v, r);
                    if (null !== y) {
                        g.matrix.elements = y.pointerMatrix, g.matrix.decompose(g.position, g.rotation, g.scale), g.visible = !0;
                        continue
                    }
                }
                g.visible = !1
            }
            m && m(t)
        }), this.setAnimationLoop = function(t) {
            m = t
        }, this.dispose = function() {}, this.getStandingMatrix = function() {
            return console.warn("THREE.WebXRManager: getStandingMatrix() is no longer needed."), new THREE.Matrix4
        }, this.submitFrame = function() {}
    }

    function cs(t) {
        console.log("THREE.WebGLRenderer", m);
        var e = void 0 !== (t = t || {}).canvas ? t.canvas : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"),
            i = void 0 !== t.context ? t.context : null,
            n = void 0 !== t.alpha && t.alpha,
            r = void 0 === t.depth || t.depth,
            s = void 0 === t.stencil || t.stencil,
            o = void 0 !== t.antialias && t.antialias,
            a = void 0 === t.premultipliedAlpha || t.premultipliedAlpha,
            c = void 0 !== t.preserveDrawingBuffer && t.preserveDrawingBuffer,
            l = void 0 !== t.powerPreference ? t.powerPreference : "default",
            p = null,
            h = null;
        this.domElement = e, this.context = null, this.autoClear = !0, this.autoClearColor = !0, this.autoClearDepth = !0, this.autoClearStencil = !0, this.sortObjects = !0, this.clippingPlanes = [], this.localClippingEnabled = !1, this.gammaFactor = 2, this.gammaInput = !1, this.gammaOutput = !1, this.physicallyCorrectLights = !1, this.toneMapping = ft, this.toneMappingExposure = 1, this.toneMappingWhitePoint = 1, this.maxMorphTargets = 8, this.maxMorphNormals = 4;
        var u, d, f, g, v, y, x, w, b, M, S, _, T, E, L, k, R, P, C = this,
            I = !1,
            O = null,
            D = null,
            B = null,
            z = -1,
            N = {
                geometry: null,
                program: null,
                wireframe: !1
            },
            U = null,
            F = null,
            H = new ai,
            j = new ai,
            G = null,
            V = 0,
            W = e.width,
            Y = e.height,
            X = 1,
            q = new ai(0, 0, W, Y),
            Z = new ai(0, 0, W, Y),
            K = !1,
            J = new fi,
            Q = new En,
            $ = !1,
            tt = !1,
            et = new Ke,
            it = new Qe;

        function nt() {
            return null === D ? X : 1
        }
        try {
            var rt = {
                alpha: n,
                depth: r,
                stencil: s,
                antialias: o,
                premultipliedAlpha: a,
                preserveDrawingBuffer: c,
                powerPreference: l
            };
            if (e.addEventListener("webglcontextlost", ct, !1), e.addEventListener("webglcontextrestored", lt, !1), null === (u = i || e.getContext("webgl", rt) || e.getContext("experimental-webgl", rt))) throw null !== e.getContext("webgl") ? new Error("Error creating WebGL context with your selected attributes.") : new Error("Error creating WebGL context.");
            void 0 === u.getShaderPrecisionFormat && (u.getShaderPrecisionFormat = function() {
                return {
                    rangeMin: 1,
                    rangeMax: 1,
                    precision: 1
                }
            })
        } catch (t) {
            console.error("THREE.WebGLRenderer: " + t.message)
        }

        function st() {
            d = new An(u), (f = new Tn(u, d, t)).isWebGL2 || (d.get("WEBGL_depth_texture"), d.get("OES_texture_float"), d.get("OES_texture_half_float"), d.get("OES_texture_half_float_linear"), d.get("OES_standard_derivatives"), d.get("OES_element_index_uint"), d.get("ANGLE_instanced_arrays")), d.get("OES_texture_float_linear"), P = new is(u, d, f), (g = new ts(u, d, P, f)).scissor(j.copy(Z).multiplyScalar(X)), g.viewport(H.copy(q).multiplyScalar(X)), v = new Rn(u), y = new Dr, x = new es(u, d, g, y, f, P, v), w = new _i(u), b = new Ln(u, w, v), M = new In(b, v), L = new Cn(u), S = new Or(C, d, f), _ = new Ur, T = new Kr, E = new Sn(C, g, M, a), k = new _n(u, d, v, f), R = new kn(u, d, v, f), v.programs = S.programs, C.context = u, C.capabilities = f, C.extensions = d, C.properties = y, C.renderLists = _, C.state = g, C.info = v
        }
        st();
        var ot = "xr" in navigator ? new as(C) : new os(C);
        this.vr = ot;
        var at = new $r(C, M, f.maxTextureSize);

        function ct(t) {
            t.preventDefault(), console.log("THREE.WebGLRenderer: Context Lost."), I = !0
        }

        function lt() {
            console.log("THREE.WebGLRenderer: Context Restored."), I = !1, st()
        }

        function pt(t) {
            var e = t.target;
            e.removeEventListener("dispose", pt),
                function(t) {
                    ht(t), y.remove(t)
                }(e)
        }

        function ht(t) {
            var e = y.get(t).program;
            t.program = void 0, void 0 !== e && S.releaseProgram(e)
        }
        this.shadowMap = at, this.getContext = function() {
            return u
        }, this.getContextAttributes = function() {
            return u.getContextAttributes()
        }, this.forceContextLoss = function() {
            var t = d.get("WEBGL_lose_context");
            t && t.loseContext()
        }, this.forceContextRestore = function() {
            var t = d.get("WEBGL_lose_context");
            t && t.restoreContext()
        }, this.getPixelRatio = function() {
            return X
        }, this.setPixelRatio = function(t) {
            void 0 !== t && (X = t, this.setSize(W, Y, !1))
        }, this.getSize = function() {
            return {
                width: W,
                height: Y
            }
        }, this.setSize = function(t, i, n) {
            ot.isPresenting() ? console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.") : (W = t, Y = i, e.width = t * X, e.height = i * X, !1 !== n && (e.style.width = t + "px", e.style.height = i + "px"), this.setViewport(0, 0, t, i))
        }, this.getDrawingBufferSize = function() {
            return {
                width: W * X,
                height: Y * X
            }
        }, this.setDrawingBufferSize = function(t, i, n) {
            W = t, Y = i, X = n, e.width = t * n, e.height = i * n, this.setViewport(0, 0, t, i)
        }, this.getCurrentViewport = function() {
            return H
        }, this.setViewport = function(t, e, i, n) {
            q.set(t, Y - e - n, i, n), g.viewport(H.copy(q).multiplyScalar(X))
        }, this.setScissor = function(t, e, i, n) {
            Z.set(t, Y - e - n, i, n), g.scissor(j.copy(Z).multiplyScalar(X))
        }, this.setScissorTest = function(t) {
            g.setScissorTest(K = t)
        }, this.getClearColor = function() {
            return E.getClearColor()
        }, this.setClearColor = function() {
            E.setClearColor.apply(E, arguments)
        }, this.getClearAlpha = function() {
            return E.getClearAlpha()
        }, this.setClearAlpha = function() {
            E.setClearAlpha.apply(E, arguments)
        }, this.clear = function(t, e, i) {
            var n = 0;
            (void 0 === t || t) && (n |= u.COLOR_BUFFER_BIT), (void 0 === e || e) && (n |= u.DEPTH_BUFFER_BIT), (void 0 === i || i) && (n |= u.STENCIL_BUFFER_BIT), u.clear(n)
        }, this.clearColor = function() {
            this.clear(!0, !1, !1)
        }, this.clearDepth = function() {
            this.clear(!1, !0, !1)
        }, this.clearStencil = function() {
            this.clear(!1, !1, !0)
        }, this.clearTarget = function(t, e, i, n) {
            this.setRenderTarget(t), this.clear(e, i, n)
        }, this.dispose = function() {
            e.removeEventListener("webglcontextlost", ct, !1), e.removeEventListener("webglcontextrestored", lt, !1), _.dispose(), T.dispose(), y.dispose(), M.dispose(), ot.dispose(), mt.stop()
        }, this.renderBufferImmediate = function(t, e) {
            g.initAttributes();
            var i = y.get(t);
            t.hasPositions && !i.position && (i.position = u.createBuffer()), t.hasNormals && !i.normal && (i.normal = u.createBuffer()), t.hasUvs && !i.uv && (i.uv = u.createBuffer()), t.hasColors && !i.color && (i.color = u.createBuffer());
            var n = e.getAttributes();
            t.hasPositions && (u.bindBuffer(u.ARRAY_BUFFER, i.position), u.bufferData(u.ARRAY_BUFFER, t.positionArray, u.DYNAMIC_DRAW), g.enableAttribute(n.position), u.vertexAttribPointer(n.position, 3, u.FLOAT, !1, 0, 0)), t.hasNormals && (u.bindBuffer(u.ARRAY_BUFFER, i.normal), u.bufferData(u.ARRAY_BUFFER, t.normalArray, u.DYNAMIC_DRAW), g.enableAttribute(n.normal), u.vertexAttribPointer(n.normal, 3, u.FLOAT, !1, 0, 0)), t.hasUvs && (u.bindBuffer(u.ARRAY_BUFFER, i.uv), u.bufferData(u.ARRAY_BUFFER, t.uvArray, u.DYNAMIC_DRAW), g.enableAttribute(n.uv), u.vertexAttribPointer(n.uv, 2, u.FLOAT, !1, 0, 0)), t.hasColors && (u.bindBuffer(u.ARRAY_BUFFER, i.color), u.bufferData(u.ARRAY_BUFFER, t.colorArray, u.DYNAMIC_DRAW), g.enableAttribute(n.color), u.vertexAttribPointer(n.color, 3, u.FLOAT, !1, 0, 0)), g.disableUnusedAttributes(), u.drawArrays(u.TRIANGLES, 0, t.count), t.count = 0
        }, this.renderBufferDirect = function(t, e, i, n, r, s) {
            var o = r.isMesh && r.normalMatrix.determinant() < 0;
            g.setMaterial(n, o);
            var a = xt(t, e, n, r),
                c = !1;
            N.geometry === i.id && N.program === a.id && N.wireframe === (!0 === n.wireframe) || (N.geometry = i.id, N.program = a.id, N.wireframe = !0 === n.wireframe, c = !0), r.morphTargetInfluences && (L.update(r, i, n, a), c = !0);
            var l, p = i.index,
                h = i.attributes.position,
                m = 1;
            !0 === n.wireframe && (p = b.getWireframeAttribute(i), m = 2);
            var v = k;
            null !== p && (l = w.get(p), (v = R).setIndex(l)), c && (! function(t, e, i) {
                if (i && i.isInstancedBufferGeometry & !f.isWebGL2 && null === d.get("ANGLE_instanced_arrays")) return void console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
                g.initAttributes();
                var n = i.attributes,
                    r = e.getAttributes(),
                    s = t.defaultAttributeValues;
                for (var o in r) {
                    var a = r[o];
                    if (a >= 0) {
                        var c = n[o];
                        if (void 0 !== c) {
                            var l = c.normalized,
                                p = c.itemSize,
                                h = w.get(c);
                            if (void 0 === h) continue;
                            var m = h.buffer,
                                v = h.type,
                                y = h.bytesPerElement;
                            if (c.isInterleavedBufferAttribute) {
                                var x = c.data,
                                    b = x.stride,
                                    M = c.offset;
                                x && x.isInstancedInterleavedBuffer ? (g.enableAttributeAndDivisor(a, x.meshPerAttribute), void 0 === i.maxInstancedCount && (i.maxInstancedCount = x.meshPerAttribute * x.count)) : g.enableAttribute(a), u.bindBuffer(u.ARRAY_BUFFER, m), u.vertexAttribPointer(a, p, v, l, b * y, M * y)
                            } else c.isInstancedBufferAttribute ? (g.enableAttributeAndDivisor(a, c.meshPerAttribute), void 0 === i.maxInstancedCount && (i.maxInstancedCount = c.meshPerAttribute * c.count)) : g.enableAttribute(a), u.bindBuffer(u.ARRAY_BUFFER, m), u.vertexAttribPointer(a, p, v, l, 0, 0)
                        } else if (void 0 !== s) {
                            var S = s[o];
                            if (void 0 !== S) switch (S.length) {
                                case 2:
                                    u.vertexAttrib2fv(a, S);
                                    break;
                                case 3:
                                    u.vertexAttrib3fv(a, S);
                                    break;
                                case 4:
                                    u.vertexAttrib4fv(a, S);
                                    break;
                                default:
                                    u.vertexAttrib1fv(a, S)
                            }
                        }
                    }
                }
                g.disableUnusedAttributes()
            }(n, a, i), null !== p && u.bindBuffer(u.ELEMENT_ARRAY_BUFFER, l.buffer));
            var y = 1 / 0;
            null !== p ? y = p.count : void 0 !== h && (y = h.count);
            var x = i.drawRange.start * m,
                M = i.drawRange.count * m,
                S = null !== s ? s.start * m : 0,
                _ = null !== s ? s.count * m : 1 / 0,
                T = Math.max(x, S),
                E = Math.min(y, x + M, S + _) - 1,
                A = Math.max(0, E - T + 1);
            if (0 !== A) {
                if (r.isMesh)
                    if (!0 === n.wireframe) g.setLineWidth(n.wireframeLinewidth * nt()), v.setMode(u.LINES);
                    else switch (r.drawMode) {
                        case Ie:
                            v.setMode(u.TRIANGLES);
                            break;
                        case Oe:
                            v.setMode(u.TRIANGLE_STRIP);
                            break;
                        case De:
                            v.setMode(u.TRIANGLE_FAN)
                    } else if (r.isLine) {
                        var P = n.linewidth;
                        void 0 === P && (P = 1), g.setLineWidth(P * nt()), r.isLineSegments ? v.setMode(u.LINES) : r.isLineLoop ? v.setMode(u.LINE_LOOP) : v.setMode(u.LINE_STRIP)
                    } else r.isPoints ? v.setMode(u.POINTS) : r.isSprite && v.setMode(u.TRIANGLES);
                i && i.isInstancedBufferGeometry ? i.maxInstancedCount > 0 && v.renderInstances(i, T, A) : v.render(T, A)
            }
        }, this.compile = function(t, e) {
            (h = T.get(t, e)).init(), t.traverse(function(t) {
                t.isLight && (h.pushLight(t), t.castShadow && h.pushShadow(t))
            }), h.setupLights(e), t.traverse(function(e) {
                if (e.material)
                    if (Array.isArray(e.material))
                        for (var i = 0; i < e.material.length; i++) yt(e.material[i], t.fog, e);
                    else yt(e.material, t.fog, e)
            })
        };
        var ut = null;
        var dt, mt = new Si;

        function gt(t, e, i, n) {
            for (var r = 0, s = t.length; r < s; r++) {
                var o = t[r],
                    a = o.object,
                    c = o.geometry,
                    l = void 0 === n ? o.material : n,
                    p = o.group;
                if (i.isArrayCamera) {
                    F = i;
                    for (var h = i.cameras, u = 0, d = h.length; u < d; u++) {
                        var f = h[u];
                        if (a.layers.test(f.layers)) {
                            if ("viewport" in f) g.viewport(H.copy(f.viewport));
                            else {
                                var m = f.bounds,
                                    v = m.x * W,
                                    y = m.y * Y,
                                    x = m.z * W,
                                    w = m.w * Y;
                                g.viewport(H.set(v, y, x, w).multiplyScalar(X))
                            }
                            vt(a, e, f, c, l, p)
                        }
                    }
                } else F = null, vt(a, e, i, c, l, p)
            }
        }

        function vt(t, e, i, n, r, s) {
            if (t.onBeforeRender(C, e, i, n, r, s), h = T.get(e, F || i), t.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse, t.matrixWorld), t.normalMatrix.getNormalMatrix(t.modelViewMatrix), t.isImmediateRenderObject) {
                g.setMaterial(r);
                var o = xt(i, e.fog, r, t);
                N.geometry = null, N.program = null, N.wireframe = !1,
                    function(t, e) {
                        t.render(function(t) {
                            C.renderBufferImmediate(t, e)
                        })
                    }(t, o)
            } else C.renderBufferDirect(i, e.fog, n, r, t, s);
            t.onAfterRender(C, e, i, n, r, s), h = T.get(e, F || i)
        }

        function yt(t, e, i) {
            var n = y.get(t),
                r = h.state.lights,
                s = h.state.shadowsArray,
                o = n.lightsHash,
                a = r.state.hash,
                c = S.getParameters(t, r.state, s, e, Q.numPlanes, Q.numIntersection, i),
                l = S.getProgramCode(t, c),
                p = n.program,
                u = !0;
            if (void 0 === p) t.addEventListener("dispose", pt);
            else if (p.code !== l) ht(t);
            else if (o.stateID !== a.stateID || o.directionalLength !== a.directionalLength || o.pointLength !== a.pointLength || o.spotLength !== a.spotLength || o.rectAreaLength !== a.rectAreaLength || o.hemiLength !== a.hemiLength || o.shadowsLength !== a.shadowsLength) o.stateID = a.stateID, o.directionalLength = a.directionalLength, o.pointLength = a.pointLength, o.spotLength = a.spotLength, o.rectAreaLength = a.rectAreaLength, o.hemiLength = a.hemiLength, o.shadowsLength = a.shadowsLength, u = !1;
            else {
                if (void 0 !== c.shaderID) return;
                u = !1
            }
            if (u) {
                if (c.shaderID) {
                    var d = Mi[c.shaderID];
                    n.shader = {
                        name: t.type,
                        uniforms: vi.clone(d.uniforms),
                        vertexShader: d.vertexShader,
                        fragmentShader: d.fragmentShader
                    }
                } else n.shader = {
                    name: t.type,
                    uniforms: t.uniforms,
                    vertexShader: t.vertexShader,
                    fragmentShader: t.fragmentShader
                };
                t.onBeforeCompile(n.shader, C), l = S.getProgramCode(t, c), p = S.acquireProgram(t, n.shader, c, l), n.program = p, t.program = p
            }
            var f = p.getAttributes();
            if (t.morphTargets) {
                t.numSupportedMorphTargets = 0;
                for (var m = 0; m < C.maxMorphTargets; m++) f["morphTarget" + m] >= 0 && t.numSupportedMorphTargets++
            }
            if (t.morphNormals) {
                t.numSupportedMorphNormals = 0;
                for (m = 0; m < C.maxMorphNormals; m++) f["morphNormal" + m] >= 0 && t.numSupportedMorphNormals++
            }
            var g = n.shader.uniforms;
            (t.isShaderMaterial || t.isRawShaderMaterial) && !0 !== t.clipping || (n.numClippingPlanes = Q.numPlanes, n.numIntersection = Q.numIntersection, g.clippingPlanes = Q.uniform), n.fog = e, void 0 === o && (n.lightsHash = o = {}), o.stateID = a.stateID, o.directionalLength = a.directionalLength, o.pointLength = a.pointLength, o.spotLength = a.spotLength, o.rectAreaLength = a.rectAreaLength, o.hemiLength = a.hemiLength, o.shadowsLength = a.shadowsLength, t.lights && (g.ambientLightColor.value = r.state.ambient, g.directionalLights.value = r.state.directional, g.spotLights.value = r.state.spot, g.rectAreaLights.value = r.state.rectArea, g.pointLights.value = r.state.point, g.hemisphereLights.value = r.state.hemi, g.directionalShadowMap.value = r.state.directionalShadowMap, g.directionalShadowMatrix.value = r.state.directionalShadowMatrix, g.spotShadowMap.value = r.state.spotShadowMap, g.spotShadowMatrix.value = r.state.spotShadowMatrix, g.pointShadowMap.value = r.state.pointShadowMap, g.pointShadowMatrix.value = r.state.pointShadowMatrix);
            var v = n.program.getUniforms(),
                x = Mr.seqWithValue(v.seq, g);
            n.uniformsList = x
        }

        function xt(t, e, i, n) {
            V = 0;
            var r = y.get(i),
                s = h.state.lights,
                o = r.lightsHash,
                a = s.state.hash;
            if ($ && (tt || t !== U)) {
                var c = t === U && i.id === z;
                Q.setState(i.clippingPlanes, i.clipIntersection, i.clipShadows, t, r, c)
            }!1 === i.needsUpdate && (void 0 === r.program ? i.needsUpdate = !0 : i.fog && r.fog !== e ? i.needsUpdate = !0 : (!i.lights || o.stateID === a.stateID && o.directionalLength === a.directionalLength && o.pointLength === a.pointLength && o.spotLength === a.spotLength && o.rectAreaLength === a.rectAreaLength && o.hemiLength === a.hemiLength && o.shadowsLength === a.shadowsLength) && (void 0 === r.numClippingPlanes || r.numClippingPlanes === Q.numPlanes && r.numIntersection === Q.numIntersection) || (i.needsUpdate = !0)), i.needsUpdate && (yt(i, e, n), i.needsUpdate = !1);
            var l, p, d = !1,
                m = !1,
                v = !1,
                x = r.program,
                w = x.getUniforms(),
                b = r.shader.uniforms;
            if (g.useProgram(x.program) && (d = !0, m = !0, v = !0), i.id !== z && (z = i.id, m = !0), d || t !== U) {
                if (w.setValue(u, "projectionMatrix", t.projectionMatrix), f.logarithmicDepthBuffer && w.setValue(u, "logDepthBufFC", 2 / (Math.log(t.far + 1) / Math.LN2)), U !== (F || t) && (U = F || t, m = !0, v = !0), i.isShaderMaterial || i.isMeshPhongMaterial || i.isMeshStandardMaterial || i.envMap) {
                    var M = w.map.cameraPosition;
                    void 0 !== M && M.setValue(u, it.setFromMatrixPosition(t.matrixWorld))
                }(i.isMeshPhongMaterial || i.isMeshLambertMaterial || i.isMeshBasicMaterial || i.isMeshStandardMaterial || i.isShaderMaterial || i.skinning) && w.setValue(u, "viewMatrix", t.matrixWorldInverse)
            }
            if (i.skinning) {
                w.setOptional(u, n, "bindMatrix"), w.setOptional(u, n, "bindMatrixInverse");
                var S = n.skeleton;
                if (S) {
                    var _ = S.bones;
                    if (f.floatVertexTextures) {
                        if (void 0 === S.boneTexture) {
                            var T = Math.sqrt(4 * _.length);
                            T = qe.ceilPowerOfTwo(T), T = Math.max(T, 4);
                            var E = new Float32Array(T * T * 4);
                            E.set(S.boneMatrices);
                            var L = new pi(E, T, T, Zt, Ht);
                            L.needsUpdate = !0, S.boneMatrices = E, S.boneTexture = L, S.boneTextureSize = T
                        }
                        w.setValue(u, "boneTexture", S.boneTexture), w.setValue(u, "boneTextureSize", S.boneTextureSize)
                    } else w.setOptional(u, S, "boneMatrices")
                }
            }
            return m && (w.setValue(u, "toneMappingExposure", C.toneMappingExposure), w.setValue(u, "toneMappingWhitePoint", C.toneMappingWhitePoint), i.lights && (p = v, (l = b).ambientLightColor.needsUpdate = p, l.directionalLights.needsUpdate = p, l.pointLights.needsUpdate = p, l.spotLights.needsUpdate = p, l.rectAreaLights.needsUpdate = p, l.hemisphereLights.needsUpdate = p), e && i.fog && function(t, e) {
                t.fogColor.value = e.color, e.isFog ? (t.fogNear.value = e.near, t.fogFar.value = e.far) : e.isFogExp2 && (t.fogDensity.value = e.density)
            }(b, e), i.isMeshBasicMaterial ? wt(b, i) : i.isMeshLambertMaterial ? (wt(b, i), function(t, e) {
                e.emissiveMap && (t.emissiveMap.value = e.emissiveMap)
            }(b, i)) : i.isMeshPhongMaterial ? (wt(b, i), i.isMeshToonMaterial ? function(t, e) {
                bt(t, e), e.gradientMap && (t.gradientMap.value = e.gradientMap)
            }(b, i) : bt(b, i)) : i.isMeshStandardMaterial ? (wt(b, i), i.isMeshPhysicalMaterial ? function(t, e) {
                Mt(t, e), t.reflectivity.value = e.reflectivity, t.clearCoat.value = e.clearCoat, t.clearCoatRoughness.value = e.clearCoatRoughness
            }(b, i) : Mt(b, i)) : i.isMeshDepthMaterial ? (wt(b, i), function(t, e) {
                e.displacementMap && (t.displacementMap.value = e.displacementMap, t.displacementScale.value = e.displacementScale, t.displacementBias.value = e.displacementBias)
            }(b, i)) : i.isMeshDistanceMaterial ? (wt(b, i), function(t, e) {
                e.displacementMap && (t.displacementMap.value = e.displacementMap, t.displacementScale.value = e.displacementScale, t.displacementBias.value = e.displacementBias);
                t.referencePosition.value.copy(e.referencePosition), t.nearDistance.value = e.nearDistance, t.farDistance.value = e.farDistance
            }(b, i)) : i.isMeshNormalMaterial ? (wt(b, i), function(t, e) {
                e.bumpMap && (t.bumpMap.value = e.bumpMap, t.bumpScale.value = e.bumpScale, e.side === A && (t.bumpScale.value *= -1));
                e.normalMap && (t.normalMap.value = e.normalMap, t.normalScale.value.copy(e.normalScale), e.side === A && t.normalScale.value.negate());
                e.displacementMap && (t.displacementMap.value = e.displacementMap, t.displacementScale.value = e.displacementScale, t.displacementBias.value = e.displacementBias)
            }(b, i)) : i.isLineBasicMaterial ? (function(t, e) {
                t.diffuse.value = e.color, t.opacity.value = e.opacity
            }(b, i), i.isLineDashedMaterial && function(t, e) {
                t.dashSize.value = e.dashSize, t.totalSize.value = e.dashSize + e.gapSize, t.scale.value = e.scale
            }(b, i)) : i.isPointsMaterial ? function(t, e) {
                t.diffuse.value = e.color, t.opacity.value = e.opacity, t.size.value = e.size * X, t.scale.value = .5 * Y, t.map.value = e.map, null !== e.map && (!0 === e.map.matrixAutoUpdate && e.map.updateMatrix(), t.uvTransform.value.copy(e.map.matrix))
            }(b, i) : i.isSpriteMaterial ? function(t, e) {
                t.diffuse.value = e.color, t.opacity.value = e.opacity, t.rotation.value = e.rotation, t.map.value = e.map, null !== e.map && (!0 === e.map.matrixAutoUpdate && e.map.updateMatrix(), t.uvTransform.value.copy(e.map.matrix))
            }(b, i) : i.isShadowMaterial && (b.color.value = i.color, b.opacity.value = i.opacity), void 0 !== b.ltc_1 && (b.ltc_1.value = bi.LTC_1), void 0 !== b.ltc_2 && (b.ltc_2.value = bi.LTC_2), Mr.upload(u, r.uniformsList, b, C)), i.isShaderMaterial && !0 === i.uniformsNeedUpdate && (Mr.upload(u, r.uniformsList, b, C), i.uniformsNeedUpdate = !1), i.isSpriteMaterial && w.setValue(u, "center", n.center), w.setValue(u, "modelViewMatrix", n.modelViewMatrix), w.setValue(u, "normalMatrix", n.normalMatrix), w.setValue(u, "modelMatrix", n.matrixWorld), x
        }

        function wt(t, e) {
            var i;
            t.opacity.value = e.opacity, e.color && (t.diffuse.value = e.color), e.emissive && t.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity), e.map && (t.map.value = e.map), e.alphaMap && (t.alphaMap.value = e.alphaMap), e.specularMap && (t.specularMap.value = e.specularMap), e.envMap && (t.envMap.value = e.envMap, t.flipEnvMap.value = e.envMap && e.envMap.isCubeTexture ? -1 : 1, t.reflectivity.value = e.reflectivity, t.refractionRatio.value = e.refractionRatio, t.maxMipLevel.value = y.get(e.envMap).__maxMipLevel), e.lightMap && (t.lightMap.value = e.lightMap, t.lightMapIntensity.value = e.lightMapIntensity), e.aoMap && (t.aoMap.value = e.aoMap, t.aoMapIntensity.value = e.aoMapIntensity), e.map ? i = e.map : e.specularMap ? i = e.specularMap : e.displacementMap ? i = e.displacementMap : e.normalMap ? i = e.normalMap : e.bumpMap ? i = e.bumpMap : e.roughnessMap ? i = e.roughnessMap : e.metalnessMap ? i = e.metalnessMap : e.alphaMap ? i = e.alphaMap : e.emissiveMap && (i = e.emissiveMap), void 0 !== i && (i.isWebGLRenderTarget && (i = i.texture), !0 === i.matrixAutoUpdate && i.updateMatrix(), t.uvTransform.value.copy(i.matrix))
        }

        function bt(t, e) {
            t.specular.value = e.specular, t.shininess.value = Math.max(e.shininess, 1e-4), e.emissiveMap && (t.emissiveMap.value = e.emissiveMap), e.bumpMap && (t.bumpMap.value = e.bumpMap, t.bumpScale.value = e.bumpScale, e.side === A && (t.bumpScale.value *= -1)), e.normalMap && (t.normalMap.value = e.normalMap, t.normalScale.value.copy(e.normalScale), e.side === A && t.normalScale.value.negate()), e.displacementMap && (t.displacementMap.value = e.displacementMap, t.displacementScale.value = e.displacementScale, t.displacementBias.value = e.displacementBias)
        }

        function Mt(t, e) {
            t.roughness.value = e.roughness, t.metalness.value = e.metalness, e.roughnessMap && (t.roughnessMap.value = e.roughnessMap), e.metalnessMap && (t.metalnessMap.value = e.metalnessMap), e.emissiveMap && (t.emissiveMap.value = e.emissiveMap), e.bumpMap && (t.bumpMap.value = e.bumpMap, t.bumpScale.value = e.bumpScale, e.side === A && (t.bumpScale.value *= -1)), e.normalMap && (t.normalMap.value = e.normalMap, t.normalScale.value.copy(e.normalScale), e.side === A && t.normalScale.value.negate()), e.displacementMap && (t.displacementMap.value = e.displacementMap, t.displacementScale.value = e.displacementScale, t.displacementBias.value = e.displacementBias), e.envMap && (t.envMapIntensity.value = e.envMapIntensity)
        }
        mt.setAnimationLoop(function(t) {
            ot.isPresenting() || ut && ut(t)
        }), "undefined" != typeof window && mt.setContext(window), this.setAnimationLoop = function(t) {
            ut = t, ot.setAnimationLoop(t), mt.start()
        }, this.render = function(t, e, i, n) {
            if (e && e.isCamera) {
                if (!I) {
                    N.geometry = null, N.program = null, N.wireframe = !1, z = -1, U = null, !0 === t.autoUpdate && t.updateMatrixWorld(), null === e.parent && e.updateMatrixWorld(), ot.enabled && (e = ot.getCamera(e)), (h = T.get(t, e)).init(), t.onBeforeRender(C, t, e, i), et.multiplyMatrices(e.projectionMatrix, e.matrixWorldInverse), J.setFromMatrix(et), tt = this.localClippingEnabled, $ = Q.init(this.clippingPlanes, tt, e), (p = _.get(t, e)).init(),
                        function t(e, i, n) {
                            if (!1 === e.visible) return;
                            var r = e.layers.test(i.layers);
                            if (r)
                                if (e.isLight) h.pushLight(e), e.castShadow && h.pushShadow(e);
                                else if (e.isSprite) {
                                if (!e.frustumCulled || J.intersectsSprite(e)) {
                                    n && it.setFromMatrixPosition(e.matrixWorld).applyMatrix4(et);
                                    var s = M.update(e),
                                        o = e.material;
                                    p.push(e, s, o, it.z, null)
                                }
                            } else if (e.isImmediateRenderObject) n && it.setFromMatrixPosition(e.matrixWorld).applyMatrix4(et), p.push(e, null, e.material, it.z, null);
                            else if ((e.isMesh || e.isLine || e.isPoints) && (e.isSkinnedMesh && e.skeleton.update(), !e.frustumCulled || J.intersectsObject(e))) {
                                n && it.setFromMatrixPosition(e.matrixWorld).applyMatrix4(et);
                                var s = M.update(e),
                                    o = e.material;
                                if (Array.isArray(o))
                                    for (var a = s.groups, c = 0, l = a.length; c < l; c++) {
                                        var u = a[c],
                                            d = o[u.materialIndex];
                                        d && d.visible && p.push(e, s, d, it.z, u)
                                    } else o.visible && p.push(e, s, o, it.z, null)
                            }
                            var f = e.children;
                            for (var c = 0, l = f.length; c < l; c++) t(f[c], i, n)
                        }(t, e, C.sortObjects), !0 === C.sortObjects && p.sort(), $ && Q.beginShadows();
                    var r = h.state.shadowsArray;
                    at.render(r, t, e), h.setupLights(e), $ && Q.endShadows(), this.info.autoReset && this.info.reset(), void 0 === i && (i = null), this.setRenderTarget(i), E.render(p, t, e, n);
                    var s = p.opaque,
                        o = p.transparent;
                    if (t.overrideMaterial) {
                        var a = t.overrideMaterial;
                        s.length && gt(s, t, e, a), o.length && gt(o, t, e, a)
                    } else s.length && gt(s, t, e), o.length && gt(o, t, e);
                    i && x.updateRenderTargetMipmap(i), g.buffers.depth.setTest(!0), g.buffers.depth.setMask(!0), g.buffers.color.setMask(!0), g.setPolygonOffset(!1), t.onAfterRender(C, t, e), ot.enabled && ot.submitFrame(), p = null, h = null
                }
            } else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")
        }, this.allocTextureUnit = function() {
            var t = V;
            return t >= f.maxTextures && console.warn("THREE.WebGLRenderer: Trying to use " + t + " texture units while this GPU supports only " + f.maxTextures), V += 1, t
        }, this.setTexture2D = (dt = !1, function(t, e) {
            t && t.isWebGLRenderTarget && (dt || (console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."), dt = !0), t = t.texture), x.setTexture2D(t, e)
        }), this.setTexture = function() {
            var t = !1;
            return function(e, i) {
                t || (console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."), t = !0), x.setTexture2D(e, i)
            }
        }(), this.setTextureCube = function() {
            var t = !1;
            return function(e, i) {
                e && e.isWebGLRenderTargetCube && (t || (console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."), t = !0), e = e.texture), e && e.isCubeTexture || Array.isArray(e.image) && 6 === e.image.length ? x.setTextureCube(e, i) : x.setTextureCubeDynamic(e, i)
            }
        }(), this.setFramebuffer = function(t) {
            O = t
        }, this.getRenderTarget = function() {
            return D
        }, this.setRenderTarget = function(t) {
            D = t, t && void 0 === y.get(t).__webglFramebuffer && x.setupRenderTarget(t);
            var e = O,
                i = !1;
            if (t) {
                var n = y.get(t).__webglFramebuffer;
                t.isWebGLRenderTargetCube ? (e = n[t.activeCubeFace], i = !0) : e = n, H.copy(t.viewport), j.copy(t.scissor), G = t.scissorTest
            } else H.copy(q).multiplyScalar(X), j.copy(Z).multiplyScalar(X), G = K;
            if (B !== e && (u.bindFramebuffer(u.FRAMEBUFFER, e), B = e), g.viewport(H), g.scissor(j), g.setScissorTest(G), i) {
                var r = y.get(t.texture);
                u.framebufferTexture2D(u.FRAMEBUFFER, u.COLOR_ATTACHMENT0, u.TEXTURE_CUBE_MAP_POSITIVE_X + t.activeCubeFace, r.__webglTexture, t.activeMipMapLevel)
            }
        }, this.readRenderTargetPixels = function(t, e, i, n, r, s) {
            if (t && t.isWebGLRenderTarget) {
                var o = y.get(t).__webglFramebuffer;
                if (o) {
                    var a = !1;
                    o !== B && (u.bindFramebuffer(u.FRAMEBUFFER, o), a = !0);
                    try {
                        var c = t.texture,
                            l = c.format,
                            p = c.type;
                        if (l !== Zt && P.convert(l) !== u.getParameter(u.IMPLEMENTATION_COLOR_READ_FORMAT)) return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                        if (!(p === Dt || P.convert(p) === u.getParameter(u.IMPLEMENTATION_COLOR_READ_TYPE) || p === Ht && (f.isWebGL2 || d.get("OES_texture_float") || d.get("WEBGL_color_buffer_float")) || p === jt && (f.isWebGL2 ? d.get("EXT_color_buffer_float") : d.get("EXT_color_buffer_half_float")))) return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                        u.checkFramebufferStatus(u.FRAMEBUFFER) === u.FRAMEBUFFER_COMPLETE ? e >= 0 && e <= t.width - n && i >= 0 && i <= t.height - r && u.readPixels(e, i, n, r, P.convert(l), P.convert(p), s) : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")
                    } finally {
                        a && u.bindFramebuffer(u.FRAMEBUFFER, B)
                    }
                }
            } else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")
        }, this.copyFramebufferToTexture = function(t, e, i) {
            var n = e.image.width,
                r = e.image.height,
                s = P.convert(e.format);
            this.setTexture2D(e, 0), u.copyTexImage2D(u.TEXTURE_2D, i || 0, s, t.x, t.y, n, r, 0)
        }, this.copyTextureToTexture = function(t, e, i, n) {
            var r = e.image.width,
                s = e.image.height,
                o = P.convert(i.format),
                a = P.convert(i.type);
            this.setTexture2D(i, 0), e.isDataTexture ? u.texSubImage2D(u.TEXTURE_2D, n || 0, t.x, t.y, r, s, o, a, e.image.data) : u.texSubImage2D(u.TEXTURE_2D, n || 0, t.x, t.y, o, a, e.image)
        }
    }

    function ls(t, e) {
        this.name = "", this.color = new xi(t), this.density = void 0 !== e ? e : 25e-5
    }

    function ps(t, e, i) {
        this.name = "", this.color = new xi(t), this.near = void 0 !== e ? e : 1, this.far = void 0 !== i ? i : 1e3
    }

    function hs() {
        Ci.call(this), this.type = "Scene", this.background = null, this.fog = null, this.overrideMaterial = null, this.autoUpdate = !0
    }

    function us(t, e) {
        this.array = t, this.stride = e, this.count = void 0 !== t ? t.length / e : 0, this.dynamic = !1, this.updateRange = {
            offset: 0,
            count: -1
        }, this.version = 0
    }

    function ds(t, e, i, n) {
        this.data = t, this.itemSize = e, this.offset = i, this.normalized = !0 === n
    }

    function fs(t) {
        vn.call(this), this.type = "SpriteMaterial", this.color = new xi(16777215), this.map = null, this.rotation = 0, this.lights = !1, this.transparent = !0, this.setValues(t)
    }

    function ms(t) {
        if (Ci.call(this), this.type = "Sprite", void 0 === Hr) {
            Hr = new $i;
            var e = new us(new Float32Array([-.5, -.5, 0, 0, 0, .5, -.5, 0, 1, 0, .5, .5, 0, 1, 1, -.5, .5, 0, 0, 1]), 5);
            Hr.setIndex([0, 1, 2, 0, 2, 3]), Hr.addAttribute("position", new ds(e, 3, 0, !1)), Hr.addAttribute("uv", new ds(e, 2, 3, !1))
        }
        this.geometry = Hr, this.material = void 0 !== t ? t : new fs, this.center = new Ze(.5, .5)
    }

    function gs() {
        Ci.call(this), this.type = "LOD", Object.defineProperties(this, {
            levels: {
                enumerable: !0,
                value: []
            }
        })
    }

    function vs(t, e) {
        if (t = t || [], this.bones = t.slice(0), this.boneMatrices = new Float32Array(16 * this.bones.length), void 0 === e) this.calculateInverses();
        else if (this.bones.length === e.length) this.boneInverses = e.slice(0);
        else {
            console.warn("THREE.Skeleton boneInverses is the wrong length."), this.boneInverses = [];
            for (var i = 0, n = this.bones.length; i < n; i++) this.boneInverses.push(new Ke)
        }
    }

    function ys() {
        Ci.call(this), this.type = "Bone"
    }

    function xs(t, e) {
        Mn.call(this, t, e), this.type = "SkinnedMesh", this.bindMode = "attached", this.bindMatrix = new Ke, this.bindMatrixInverse = new Ke;
        var i = new vs(this.initBones());
        this.bind(i, this.matrixWorld), this.normalizeSkinWeights()
    }

    function ws(t) {
        vn.call(this), this.type = "LineBasicMaterial", this.color = new xi(16777215), this.linewidth = 1, this.linecap = "round", this.linejoin = "round", this.lights = !1, this.setValues(t)
    }

    function bs(t, e, i) {
        1 === i && console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."), Ci.call(this), this.type = "Line", this.geometry = void 0 !== t ? t : new $i, this.material = void 0 !== e ? e : new ws({
            color: 16777215 * Math.random()
        })
    }

    function Ms(t, e) {
        bs.call(this, t, e), this.type = "LineSegments"
    }

    function Ss(t, e) {
        bs.call(this, t, e), this.type = "LineLoop"
    }

    function _s(t) {
        vn.call(this), this.type = "PointsMaterial", this.color = new xi(16777215), this.map = null, this.size = 1, this.sizeAttenuation = !0, this.morphTargets = !1, this.lights = !1, this.setValues(t)
    }

    function Ts(t, e) {
        Ci.call(this), this.type = "Points", this.geometry = void 0 !== t ? t : new $i, this.material = void 0 !== e ? e : new _s({
            color: 16777215 * Math.random()
        })
    }

    function Es(t, e, i, n, r, s, o, a, c) {
        oi.call(this, t, e, i, n, r, s, o, a, c), this.generateMipmaps = !1
    }

    function As(t, e, i, n, r, s, o, a, c, l, p, h) {
        oi.call(this, null, s, o, a, c, l, n, r, p, h), this.image = {
            width: e,
            height: i
        }, this.mipmaps = t, this.flipY = !1, this.generateMipmaps = !1
    }

    function Ls(t, e, i, n, r, s, o, a, c) {
        oi.call(this, t, e, i, n, r, s, o, a, c), this.needsUpdate = !0
    }

    function ks(t, e, i, n, r, s, o, a, c, l) {
        if ((l = void 0 !== l ? l : $t) !== $t && l !== te) throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
        void 0 === i && l === $t && (i = Nt), void 0 === i && l === te && (i = Yt), oi.call(this, null, n, r, s, o, a, l, i, c), this.image = {
            width: t,
            height: e
        }, this.magFilter = void 0 !== o ? o : kt, this.minFilter = void 0 !== a ? a : kt, this.flipY = !1, this.generateMipmaps = !1
    }

    function Rs(t) {
        $i.call(this), this.type = "WireframeGeometry";
        var e, i, n, r, s, o, a, c, l, p, h = [],
            u = [0, 0],
            d = {},
            f = ["a", "b", "c"];
        if (t && t.isGeometry) {
            var m = t.faces;
            for (e = 0, n = m.length; e < n; e++) {
                var g = m[e];
                for (i = 0; i < 3; i++) a = g[f[i]], c = g[f[(i + 1) % 3]], u[0] = Math.min(a, c), u[1] = Math.max(a, c), void 0 === d[l = u[0] + "," + u[1]] && (d[l] = {
                    index1: u[0],
                    index2: u[1]
                })
            }
            for (l in d) o = d[l], p = t.vertices[o.index1], h.push(p.x, p.y, p.z), p = t.vertices[o.index2], h.push(p.x, p.y, p.z)
        } else if (t && t.isBufferGeometry) {
            var v, y, x, w, b, M, S;
            if (p = new Qe, null !== t.index) {
                for (v = t.attributes.position, y = t.index, 0 === (x = t.groups).length && (x = [{
                        start: 0,
                        count: y.count,
                        materialIndex: 0
                    }]), r = 0, s = x.length; r < s; ++r)
                    for (e = b = (w = x[r]).start, n = b + w.count; e < n; e += 3)
                        for (i = 0; i < 3; i++) a = y.getX(e + i), c = y.getX(e + (i + 1) % 3), u[0] = Math.min(a, c), u[1] = Math.max(a, c), void 0 === d[l = u[0] + "," + u[1]] && (d[l] = {
                            index1: u[0],
                            index2: u[1]
                        });
                for (l in d) o = d[l], p.fromBufferAttribute(v, o.index1), h.push(p.x, p.y, p.z), p.fromBufferAttribute(v, o.index2), h.push(p.x, p.y, p.z)
            } else
                for (e = 0, n = (v = t.attributes.position).count / 3; e < n; e++)
                    for (i = 0; i < 3; i++) M = 3 * e + i, p.fromBufferAttribute(v, M), h.push(p.x, p.y, p.z), S = 3 * e + (i + 1) % 3, p.fromBufferAttribute(v, S), h.push(p.x, p.y, p.z)
        }
        this.addAttribute("position", new qi(h, 3))
    }

    function Ps(t, e, i) {
        Ui.call(this), this.type = "ParametricGeometry", this.parameters = {
            func: t,
            slices: e,
            stacks: i
        }, this.fromBufferGeometry(new Cs(t, e, i)), this.mergeVertices()
    }

    function Cs(t, e, i) {
        $i.call(this), this.type = "ParametricBufferGeometry", this.parameters = {
            func: t,
            slices: e,
            stacks: i
        };
        var n, r, s = [],
            o = [],
            a = [],
            c = [],
            l = new Qe,
            p = new Qe,
            h = new Qe,
            u = new Qe,
            d = new Qe;
        t.length < 3 && console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");
        var f = e + 1;
        for (n = 0; n <= i; n++) {
            var m = n / i;
            for (r = 0; r <= e; r++) {
                var g = r / e;
                t(g, m, p), o.push(p.x, p.y, p.z), g - 1e-5 >= 0 ? (t(g - 1e-5, m, h), u.subVectors(p, h)) : (t(g + 1e-5, m, h), u.subVectors(h, p)), m - 1e-5 >= 0 ? (t(g, m - 1e-5, h), d.subVectors(p, h)) : (t(g, m + 1e-5, h), d.subVectors(h, p)), l.crossVectors(u, d).normalize(), a.push(l.x, l.y, l.z), c.push(g, m)
            }
        }
        for (n = 0; n < i; n++)
            for (r = 0; r < e; r++) {
                var v = n * f + r,
                    y = n * f + r + 1,
                    x = (n + 1) * f + r + 1,
                    w = (n + 1) * f + r;
                s.push(v, y, w), s.push(y, x, w)
            }
        this.setIndex(s), this.addAttribute("position", new qi(o, 3)), this.addAttribute("normal", new qi(a, 3)), this.addAttribute("uv", new qi(c, 2))
    }

    function Is(t, e, i, n) {
        Ui.call(this), this.type = "PolyhedronGeometry", this.parameters = {
            vertices: t,
            indices: e,
            radius: i,
            detail: n
        }, this.fromBufferGeometry(new Os(t, e, i, n)), this.mergeVertices()
    }

    function Os(t, e, i, n) {
        $i.call(this), this.type = "PolyhedronBufferGeometry", this.parameters = {
            vertices: t,
            indices: e,
            radius: i,
            detail: n
        }, i = i || 1;
        var r = [],
            s = [];

        function o(t, e, i, n) {
            var r, s, o = Math.pow(2, n),
                c = [];
            for (r = 0; r <= o; r++) {
                c[r] = [];
                var l = t.clone().lerp(i, r / o),
                    p = e.clone().lerp(i, r / o),
                    h = o - r;
                for (s = 0; s <= h; s++) c[r][s] = 0 === s && r === o ? l : l.clone().lerp(p, s / h)
            }
            for (r = 0; r < o; r++)
                for (s = 0; s < 2 * (o - r) - 1; s++) {
                    var u = Math.floor(s / 2);
                    s % 2 == 0 ? (a(c[r][u + 1]), a(c[r + 1][u]), a(c[r][u])) : (a(c[r][u + 1]), a(c[r + 1][u + 1]), a(c[r + 1][u]))
                }
        }

        function a(t) {
            r.push(t.x, t.y, t.z)
        }

        function c(e, i) {
            var n = 3 * e;
            i.x = t[n + 0], i.y = t[n + 1], i.z = t[n + 2]
        }

        function l(t, e, i, n) {
            n < 0 && 1 === t.x && (s[e] = t.x - 1), 0 === i.x && 0 === i.z && (s[e] = n / 2 / Math.PI + .5)
        }

        function p(t) {
            return Math.atan2(t.z, -t.x)
        }! function(t) {
            for (var i = new Qe, n = new Qe, r = new Qe, s = 0; s < e.length; s += 3) c(e[s + 0], i), c(e[s + 1], n), c(e[s + 2], r), o(i, n, r, t)
        }(n = n || 0),
        function(t) {
            for (var e = new Qe, i = 0; i < r.length; i += 3) e.x = r[i + 0], e.y = r[i + 1], e.z = r[i + 2], e.normalize().multiplyScalar(t), r[i + 0] = e.x, r[i + 1] = e.y, r[i + 2] = e.z
        }(i),
        function() {
            for (var t = new Qe, e = 0; e < r.length; e += 3) {
                t.x = r[e + 0], t.y = r[e + 1], t.z = r[e + 2];
                var i = p(t) / 2 / Math.PI + .5,
                    n = (o = t, Math.atan2(-o.y, Math.sqrt(o.x * o.x + o.z * o.z)) / Math.PI + .5);
                s.push(i, 1 - n)
            }
            var o;
            (function() {
                for (var t = new Qe, e = new Qe, i = new Qe, n = new Qe, o = new Ze, a = new Ze, c = new Ze, h = 0, u = 0; h < r.length; h += 9, u += 6) {
                    t.set(r[h + 0], r[h + 1], r[h + 2]), e.set(r[h + 3], r[h + 4], r[h + 5]), i.set(r[h + 6], r[h + 7], r[h + 8]), o.set(s[u + 0], s[u + 1]), a.set(s[u + 2], s[u + 3]), c.set(s[u + 4], s[u + 5]), n.copy(t).add(e).add(i).divideScalar(3);
                    var d = p(n);
                    l(o, u + 0, t, d), l(a, u + 2, e, d), l(c, u + 4, i, d)
                }
            })(),
            function() {
                for (var t = 0; t < s.length; t += 6) {
                    var e = s[t + 0],
                        i = s[t + 2],
                        n = s[t + 4],
                        r = Math.max(e, i, n),
                        o = Math.min(e, i, n);
                    r > .9 && o < .1 && (e < .2 && (s[t + 0] += 1), i < .2 && (s[t + 2] += 1), n < .2 && (s[t + 4] += 1))
                }
            }()
        }(), this.addAttribute("position", new qi(r, 3)), this.addAttribute("normal", new qi(r.slice(), 3)), this.addAttribute("uv", new qi(s, 2)), 0 === n ? this.computeVertexNormals() : this.normalizeNormals()
    }

    function Ds(t, e) {
        Ui.call(this), this.type = "TetrahedronGeometry", this.parameters = {
            radius: t,
            detail: e
        }, this.fromBufferGeometry(new Bs(t, e)), this.mergeVertices()
    }

    function Bs(t, e) {
        Os.call(this, [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1], [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1], t, e), this.type = "TetrahedronBufferGeometry", this.parameters = {
            radius: t,
            detail: e
        }
    }

    function zs(t, e) {
        Ui.call(this), this.type = "OctahedronGeometry", this.parameters = {
            radius: t,
            detail: e
        }, this.fromBufferGeometry(new Ns(t, e)), this.mergeVertices()
    }

    function Ns(t, e) {
        Os.call(this, [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1], [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2], t, e), this.type = "OctahedronBufferGeometry", this.parameters = {
            radius: t,
            detail: e
        }
    }

    function Us(t, e) {
        Ui.call(this), this.type = "IcosahedronGeometry", this.parameters = {
            radius: t,
            detail: e
        }, this.fromBufferGeometry(new Fs(t, e)), this.mergeVertices()
    }

    function Fs(t, e) {
        var i = (1 + Math.sqrt(5)) / 2,
            n = [-1, i, 0, 1, i, 0, -1, -i, 0, 1, -i, 0, 0, -1, i, 0, 1, i, 0, -1, -i, 0, 1, -i, i, 0, -1, i, 0, 1, -i, 0, -1, -i, 0, 1];
        Os.call(this, n, [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1], t, e), this.type = "IcosahedronBufferGeometry", this.parameters = {
            radius: t,
            detail: e
        }
    }

    function Hs(t, e) {
        Ui.call(this), this.type = "DodecahedronGeometry", this.parameters = {
            radius: t,
            detail: e
        }, this.fromBufferGeometry(new js(t, e)), this.mergeVertices()
    }

    function js(t, e) {
        var i = (1 + Math.sqrt(5)) / 2,
            n = 1 / i,
            r = [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -n, -i, 0, -n, i, 0, n, -i, 0, n, i, -n, -i, 0, -n, i, 0, n, -i, 0, n, i, 0, -i, 0, -n, i, 0, -n, -i, 0, n, i, 0, n];
        Os.call(this, r, [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9], t, e), this.type = "DodecahedronBufferGeometry", this.parameters = {
            radius: t,
            detail: e
        }
    }

    function Gs(t, e, i, n, r, s) {
        Ui.call(this), this.type = "TubeGeometry", this.parameters = {
            path: t,
            tubularSegments: e,
            radius: i,
            radialSegments: n,
            closed: r
        }, void 0 !== s && console.warn("THREE.TubeGeometry: taper has been removed.");
        var o = new Vs(t, e, i, n, r);
        this.tangents = o.tangents, this.normals = o.normals, this.binormals = o.binormals, this.fromBufferGeometry(o), this.mergeVertices()
    }

    function Vs(t, e, i, n, r) {
        $i.call(this), this.type = "TubeBufferGeometry", this.parameters = {
            path: t,
            tubularSegments: e,
            radius: i,
            radialSegments: n,
            closed: r
        }, e = e || 64, i = i || 1, n = n || 8, r = r || !1;
        var s = t.computeFrenetFrames(e, r);
        this.tangents = s.tangents, this.normals = s.normals, this.binormals = s.binormals;
        var o, a, c = new Qe,
            l = new Qe,
            p = new Ze,
            h = new Qe,
            u = [],
            d = [],
            f = [],
            m = [];

        function g(r) {
            h = t.getPointAt(r / e, h);
            var o = s.normals[r],
                p = s.binormals[r];
            for (a = 0; a <= n; a++) {
                var f = a / n * Math.PI * 2,
                    m = Math.sin(f),
                    g = -Math.cos(f);
                l.x = g * o.x + m * p.x, l.y = g * o.y + m * p.y, l.z = g * o.z + m * p.z, l.normalize(), d.push(l.x, l.y, l.z), c.x = h.x + i * l.x, c.y = h.y + i * l.y, c.z = h.z + i * l.z, u.push(c.x, c.y, c.z)
            }
        }! function() {
            for (o = 0; o < e; o++) g(o);
            g(!1 === r ? e : 0),
                function() {
                    for (o = 0; o <= e; o++)
                        for (a = 0; a <= n; a++) p.x = o / e, p.y = a / n, f.push(p.x, p.y)
                }(),
                function() {
                    for (a = 1; a <= e; a++)
                        for (o = 1; o <= n; o++) {
                            var t = (n + 1) * (a - 1) + (o - 1),
                                i = (n + 1) * a + (o - 1),
                                r = (n + 1) * a + o,
                                s = (n + 1) * (a - 1) + o;
                            m.push(t, i, s), m.push(i, r, s)
                        }
                }()
        }(), this.setIndex(m), this.addAttribute("position", new qi(u, 3)), this.addAttribute("normal", new qi(d, 3)), this.addAttribute("uv", new qi(f, 2))
    }

    function Ws(t, e, i, n, r, s, o) {
        Ui.call(this), this.type = "TorusKnotGeometry", this.parameters = {
            radius: t,
            tube: e,
            tubularSegments: i,
            radialSegments: n,
            p: r,
            q: s
        }, void 0 !== o && console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."), this.fromBufferGeometry(new Ys(t, e, i, n, r, s)), this.mergeVertices()
    }

    function Ys(t, e, i, n, r, s) {
        $i.call(this), this.type = "TorusKnotBufferGeometry", this.parameters = {
            radius: t,
            tube: e,
            tubularSegments: i,
            radialSegments: n,
            p: r,
            q: s
        }, t = t || 1, e = e || .4, i = Math.floor(i) || 64, n = Math.floor(n) || 8, r = r || 2, s = s || 3;
        var o, a, c = [],
            l = [],
            p = [],
            h = [],
            u = new Qe,
            d = new Qe,
            f = new Qe,
            m = new Qe,
            g = new Qe,
            v = new Qe,
            y = new Qe;
        for (o = 0; o <= i; ++o) {
            var x = o / i * r * Math.PI * 2;
            for (A(x, r, s, t, f), A(x + .01, r, s, t, m), v.subVectors(m, f), y.addVectors(m, f), g.crossVectors(v, y), y.crossVectors(g, v), g.normalize(), y.normalize(), a = 0; a <= n; ++a) {
                var w = a / n * Math.PI * 2,
                    b = -e * Math.cos(w),
                    M = e * Math.sin(w);
                u.x = f.x + (b * y.x + M * g.x), u.y = f.y + (b * y.y + M * g.y), u.z = f.z + (b * y.z + M * g.z), l.push(u.x, u.y, u.z), d.subVectors(u, f).normalize(), p.push(d.x, d.y, d.z), h.push(o / i), h.push(a / n)
            }
        }
        for (a = 1; a <= i; a++)
            for (o = 1; o <= n; o++) {
                var S = (n + 1) * (a - 1) + (o - 1),
                    _ = (n + 1) * a + (o - 1),
                    T = (n + 1) * a + o,
                    E = (n + 1) * (a - 1) + o;
                c.push(S, _, E), c.push(_, T, E)
            }

        function A(t, e, i, n, r) {
            var s = Math.cos(t),
                o = Math.sin(t),
                a = i / e * t,
                c = Math.cos(a);
            r.x = n * (2 + c) * .5 * s, r.y = n * (2 + c) * o * .5, r.z = n * Math.sin(a) * .5
        }
        this.setIndex(c), this.addAttribute("position", new qi(l, 3)), this.addAttribute("normal", new qi(p, 3)), this.addAttribute("uv", new qi(h, 2))
    }

    function Xs(t, e, i, n, r) {
        Ui.call(this), this.type = "TorusGeometry", this.parameters = {
            radius: t,
            tube: e,
            radialSegments: i,
            tubularSegments: n,
            arc: r
        }, this.fromBufferGeometry(new qs(t, e, i, n, r)), this.mergeVertices()
    }

    function qs(t, e, i, n, r) {
        $i.call(this), this.type = "TorusBufferGeometry", this.parameters = {
            radius: t,
            tube: e,
            radialSegments: i,
            tubularSegments: n,
            arc: r
        }, t = t || 1, e = e || .4, i = Math.floor(i) || 8, n = Math.floor(n) || 6, r = r || 2 * Math.PI;
        var s, o, a = [],
            c = [],
            l = [],
            p = [],
            h = new Qe,
            u = new Qe,
            d = new Qe;
        for (s = 0; s <= i; s++)
            for (o = 0; o <= n; o++) {
                var f = o / n * r,
                    m = s / i * Math.PI * 2;
                u.x = (t + e * Math.cos(m)) * Math.cos(f), u.y = (t + e * Math.cos(m)) * Math.sin(f), u.z = e * Math.sin(m), c.push(u.x, u.y, u.z), h.x = t * Math.cos(f), h.y = t * Math.sin(f), d.subVectors(u, h).normalize(), l.push(d.x, d.y, d.z), p.push(o / n), p.push(s / i)
            }
        for (s = 1; s <= i; s++)
            for (o = 1; o <= n; o++) {
                var g = (n + 1) * s + o - 1,
                    v = (n + 1) * (s - 1) + o - 1,
                    y = (n + 1) * (s - 1) + o,
                    x = (n + 1) * s + o;
                a.push(g, v, x), a.push(v, y, x)
            }
        this.setIndex(a), this.addAttribute("position", new qi(c, 3)), this.addAttribute("normal", new qi(l, 3)), this.addAttribute("uv", new qi(p, 2))
    }
    Jr.prototype = Object.create(vn.prototype), Jr.prototype.constructor = Jr, Jr.prototype.isMeshDepthMaterial = !0, Jr.prototype.copy = function(t) {
        return vn.prototype.copy.call(this, t), this.depthPacking = t.depthPacking, this.skinning = t.skinning, this.morphTargets = t.morphTargets, this.map = t.map, this.alphaMap = t.alphaMap, this.displacementMap = t.displacementMap, this.displacementScale = t.displacementScale, this.displacementBias = t.displacementBias, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this
    }, Qr.prototype = Object.create(vn.prototype), Qr.prototype.constructor = Qr, Qr.prototype.isMeshDistanceMaterial = !0, Qr.prototype.copy = function(t) {
        return vn.prototype.copy.call(this, t), this.referencePosition.copy(t.referencePosition), this.nearDistance = t.nearDistance, this.farDistance = t.farDistance, this.skinning = t.skinning, this.morphTargets = t.morphTargets, this.map = t.map, this.alphaMap = t.alphaMap, this.displacementMap = t.displacementMap, this.displacementScale = t.displacementScale, this.displacementBias = t.displacementBias, this
    }, ns.prototype = Object.assign(Object.create(Ci.prototype), {
        constructor: ns,
        isGroup: !0
    }), rs.prototype = Object.assign(Object.create(Ii.prototype), {
        constructor: rs,
        isPerspectiveCamera: !0,
        copy: function(t, e) {
            return Ii.prototype.copy.call(this, t, e), this.fov = t.fov, this.zoom = t.zoom, this.near = t.near, this.far = t.far, this.focus = t.focus, this.aspect = t.aspect, this.view = null === t.view ? null : Object.assign({}, t.view), this.filmGauge = t.filmGauge, this.filmOffset = t.filmOffset, this
        },
        setFocalLength: function(t) {
            var e = .5 * this.getFilmHeight() / t;
            this.fov = 2 * qe.RAD2DEG * Math.atan(e), this.updateProjectionMatrix()
        },
        getFocalLength: function() {
            var t = Math.tan(.5 * qe.DEG2RAD * this.fov);
            return .5 * this.getFilmHeight() / t
        },
        getEffectiveFOV: function() {
            return 2 * qe.RAD2DEG * Math.atan(Math.tan(.5 * qe.DEG2RAD * this.fov) / this.zoom)
        },
        getFilmWidth: function() {
            return this.filmGauge * Math.min(this.aspect, 1)
        },
        getFilmHeight: function() {
            return this.filmGauge / Math.max(this.aspect, 1)
        },
        setViewOffset: function(t, e, i, n, r, s) {
            this.aspect = t / e, null === this.view && (this.view = {
                enabled: !0,
                fullWidth: 1,
                fullHeight: 1,
                offsetX: 0,
                offsetY: 0,
                width: 1,
                height: 1
            }), this.view.enabled = !0, this.view.fullWidth = t, this.view.fullHeight = e, this.view.offsetX = i, this.view.offsetY = n, this.view.width = r, this.view.height = s, this.updateProjectionMatrix()
        },
        clearViewOffset: function() {
            null !== this.view && (this.view.enabled = !1), this.updateProjectionMatrix()
        },
        updateProjectionMatrix: function() {
            var t = this.near,
                e = t * Math.tan(.5 * qe.DEG2RAD * this.fov) / this.zoom,
                i = 2 * e,
                n = this.aspect * i,
                r = -.5 * n,
                s = this.view;
            if (null !== this.view && this.view.enabled) {
                var o = s.fullWidth,
                    a = s.fullHeight;
                r += s.offsetX * n / o, e -= s.offsetY * i / a, n *= s.width / o, i *= s.height / a
            }
            var c = this.filmOffset;
            0 !== c && (r += t * c / this.getFilmWidth()), this.projectionMatrix.makePerspective(r, r + n, e, e - i, t, this.far)
        },
        toJSON: function(t) {
            var e = Ci.prototype.toJSON.call(this, t);
            return e.object.fov = this.fov, e.object.zoom = this.zoom, e.object.near = this.near, e.object.far = this.far, e.object.focus = this.focus, e.object.aspect = this.aspect, null !== this.view && (e.object.view = Object.assign({}, this.view)), e.object.filmGauge = this.filmGauge, e.object.filmOffset = this.filmOffset, e
        }
    }), ss.prototype = Object.assign(Object.create(rs.prototype), {
        constructor: ss,
        isArrayCamera: !0
    }), ls.prototype.isFogExp2 = !0, ls.prototype.clone = function() {
        return new ls(this.color, this.density)
    }, ls.prototype.toJSON = function() {
        return {
            type: "FogExp2",
            color: this.color.getHex(),
            density: this.density
        }
    }, ps.prototype.isFog = !0, ps.prototype.clone = function() {
        return new ps(this.color, this.near, this.far)
    }, ps.prototype.toJSON = function() {
        return {
            type: "Fog",
            color: this.color.getHex(),
            near: this.near,
            far: this.far
        }
    }, hs.prototype = Object.assign(Object.create(Ci.prototype), {
        constructor: hs,
        copy: function(t, e) {
            return Ci.prototype.copy.call(this, t, e), null !== t.background && (this.background = t.background.clone()), null !== t.fog && (this.fog = t.fog.clone()), null !== t.overrideMaterial && (this.overrideMaterial = t.overrideMaterial.clone()), this.autoUpdate = t.autoUpdate, this.matrixAutoUpdate = t.matrixAutoUpdate, this
        },
        toJSON: function(t) {
            var e = Ci.prototype.toJSON.call(this, t);
            return null !== this.background && (e.object.background = this.background.toJSON(t)), null !== this.fog && (e.object.fog = this.fog.toJSON()), e
        }
    }), Object.defineProperty(us.prototype, "needsUpdate", {
        set: function(t) {
            !0 === t && this.version++
        }
    }), Object.assign(us.prototype, {
        isInterleavedBuffer: !0,
        onUploadCallback: function() {},
        setArray: function(t) {
            if (Array.isArray(t)) throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
            return this.count = void 0 !== t ? t.length / this.stride : 0, this.array = t, this
        },
        setDynamic: function(t) {
            return this.dynamic = t, this
        },
        copy: function(t) {
            return this.array = new t.array.constructor(t.array), this.count = t.count, this.stride = t.stride, this.dynamic = t.dynamic, this
        },
        copyAt: function(t, e, i) {
            t *= this.stride, i *= e.stride;
            for (var n = 0, r = this.stride; n < r; n++) this.array[t + n] = e.array[i + n];
            return this
        },
        set: function(t, e) {
            return void 0 === e && (e = 0), this.array.set(t, e), this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        onUpload: function(t) {
            return this.onUploadCallback = t, this
        }
    }), Object.defineProperties(ds.prototype, {
        count: {
            get: function() {
                return this.data.count
            }
        },
        array: {
            get: function() {
                return this.data.array
            }
        }
    }), Object.assign(ds.prototype, {
        isInterleavedBufferAttribute: !0,
        setX: function(t, e) {
            return this.data.array[t * this.data.stride + this.offset] = e, this
        },
        setY: function(t, e) {
            return this.data.array[t * this.data.stride + this.offset + 1] = e, this
        },
        setZ: function(t, e) {
            return this.data.array[t * this.data.stride + this.offset + 2] = e, this
        },
        setW: function(t, e) {
            return this.data.array[t * this.data.stride + this.offset + 3] = e, this
        },
        getX: function(t) {
            return this.data.array[t * this.data.stride + this.offset]
        },
        getY: function(t) {
            return this.data.array[t * this.data.stride + this.offset + 1]
        },
        getZ: function(t) {
            return this.data.array[t * this.data.stride + this.offset + 2]
        },
        getW: function(t) {
            return this.data.array[t * this.data.stride + this.offset + 3]
        },
        setXY: function(t, e, i) {
            return t = t * this.data.stride + this.offset, this.data.array[t + 0] = e, this.data.array[t + 1] = i, this
        },
        setXYZ: function(t, e, i, n) {
            return t = t * this.data.stride + this.offset, this.data.array[t + 0] = e, this.data.array[t + 1] = i, this.data.array[t + 2] = n, this
        },
        setXYZW: function(t, e, i, n, r) {
            return t = t * this.data.stride + this.offset, this.data.array[t + 0] = e, this.data.array[t + 1] = i, this.data.array[t + 2] = n, this.data.array[t + 3] = r, this
        }
    }), fs.prototype = Object.create(vn.prototype), fs.prototype.constructor = fs, fs.prototype.isSpriteMaterial = !0, fs.prototype.copy = function(t) {
        return vn.prototype.copy.call(this, t), this.color.copy(t.color), this.map = t.map, this.rotation = t.rotation, this
    }, ms.prototype = Object.assign(Object.create(Ci.prototype), {
        constructor: ms,
        isSprite: !0,
        raycast: function() {
            var t = new Qe,
                e = new Qe,
                i = new Qe,
                n = new Ze,
                r = new Ze,
                s = new Ke,
                o = new Qe,
                a = new Qe,
                c = new Qe;

            function l(t, e, i, o, a, c) {
                n.subVectors(t, i).addScalar(.5).multiply(o), void 0 !== a ? (r.x = c * n.x - a * n.y, r.y = a * n.x + c * n.y) : r.copy(n), t.copy(e), t.x += r.x, t.y += r.y, t.applyMatrix4(s)
            }
            return function(n, r) {
                e.setFromMatrixScale(this.matrixWorld), s.getInverse(this.modelViewMatrix).premultiply(this.matrixWorld), i.setFromMatrixPosition(this.modelViewMatrix);
                var p, h, u = this.material.rotation;
                0 !== u && (h = Math.cos(u), p = Math.sin(u));
                var d = this.center;
                l(o.set(-.5, -.5, 0), i, d, e, p, h), l(a.set(.5, -.5, 0), i, d, e, p, h), l(c.set(.5, .5, 0), i, d, e, p, h);
                var f = n.ray.intersectTriangle(o, a, c, !1, t);
                if (null !== f || (l(a.set(-.5, .5, 0), i, d, e, p, h), null !== (f = n.ray.intersectTriangle(o, c, a, !1, t)))) {
                    var m = n.ray.origin.distanceTo(t);
                    m < n.near || m > n.far || r.push({
                        distance: m,
                        point: t.clone(),
                        face: null,
                        object: this
                    })
                }
            }
        }(),
        clone: function() {
            return new this.constructor(this.material).copy(this)
        },
        copy: function(t) {
            return Ci.prototype.copy.call(this, t), void 0 !== t.center && this.center.copy(t.center), this
        }
    }), gs.prototype = Object.assign(Object.create(Ci.prototype), {
        constructor: gs,
        copy: function(t) {
            Ci.prototype.copy.call(this, t, !1);
            for (var e = t.levels, i = 0, n = e.length; i < n; i++) {
                var r = e[i];
                this.addLevel(r.object.clone(), r.distance)
            }
            return this
        },
        addLevel: function(t, e) {
            void 0 === e && (e = 0), e = Math.abs(e);
            for (var i = this.levels, n = 0; n < i.length && !(e < i[n].distance); n++);
            i.splice(n, 0, {
                distance: e,
                object: t
            }), this.add(t)
        },
        getObjectForDistance: function(t) {
            for (var e = this.levels, i = 1, n = e.length; i < n && !(t < e[i].distance); i++);
            return e[i - 1].object
        },
        raycast: (jr = new Qe, function(t, e) {
            jr.setFromMatrixPosition(this.matrixWorld);
            var i = t.ray.origin.distanceTo(jr);
            this.getObjectForDistance(i).raycast(t, e)
        }),
        update: function() {
            var t = new Qe,
                e = new Qe;
            return function(i) {
                var n = this.levels;
                if (n.length > 1) {
                    t.setFromMatrixPosition(i.matrixWorld), e.setFromMatrixPosition(this.matrixWorld);
                    var r = t.distanceTo(e);
                    n[0].object.visible = !0;
                    for (var s = 1, o = n.length; s < o && r >= n[s].distance; s++) n[s - 1].object.visible = !1, n[s].object.visible = !0;
                    for (; s < o; s++) n[s].object.visible = !1
                }
            }
        }(),
        toJSON: function(t) {
            var e = Ci.prototype.toJSON.call(this, t);
            e.object.levels = [];
            for (var i = this.levels, n = 0, r = i.length; n < r; n++) {
                var s = i[n];
                e.object.levels.push({
                    object: s.object.uuid,
                    distance: s.distance
                })
            }
            return e
        }
    }), Object.assign(vs.prototype, {
        calculateInverses: function() {
            this.boneInverses = [];
            for (var t = 0, e = this.bones.length; t < e; t++) {
                var i = new Ke;
                this.bones[t] && i.getInverse(this.bones[t].matrixWorld), this.boneInverses.push(i)
            }
        },
        pose: function() {
            var t, e, i;
            for (e = 0, i = this.bones.length; e < i; e++)(t = this.bones[e]) && t.matrixWorld.getInverse(this.boneInverses[e]);
            for (e = 0, i = this.bones.length; e < i; e++)(t = this.bones[e]) && (t.parent && t.parent.isBone ? (t.matrix.getInverse(t.parent.matrixWorld), t.matrix.multiply(t.matrixWorld)) : t.matrix.copy(t.matrixWorld), t.matrix.decompose(t.position, t.quaternion, t.scale))
        },
        update: (Gr = new Ke, Vr = new Ke, function() {
            for (var t = this.bones, e = this.boneInverses, i = this.boneMatrices, n = this.boneTexture, r = 0, s = t.length; r < s; r++) {
                var o = t[r] ? t[r].matrixWorld : Vr;
                Gr.multiplyMatrices(o, e[r]), Gr.toArray(i, 16 * r)
            }
            void 0 !== n && (n.needsUpdate = !0)
        }),
        clone: function() {
            return new vs(this.bones, this.boneInverses)
        },
        getBoneByName: function(t) {
            for (var e = 0, i = this.bones.length; e < i; e++) {
                var n = this.bones[e];
                if (n.name === t) return n
            }
        }
    }), ys.prototype = Object.assign(Object.create(Ci.prototype), {
        constructor: ys,
        isBone: !0
    }), xs.prototype = Object.assign(Object.create(Mn.prototype), {
        constructor: xs,
        isSkinnedMesh: !0,
        initBones: function() {
            var t, e, i, n, r = [];
            if (this.geometry && void 0 !== this.geometry.bones) {
                for (i = 0, n = this.geometry.bones.length; i < n; i++) e = this.geometry.bones[i], t = new ys, r.push(t), t.name = e.name, t.position.fromArray(e.pos), t.quaternion.fromArray(e.rotq), void 0 !== e.scl && t.scale.fromArray(e.scl);
                for (i = 0, n = this.geometry.bones.length; i < n; i++) - 1 !== (e = this.geometry.bones[i]).parent && null !== e.parent && void 0 !== r[e.parent] ? r[e.parent].add(r[i]) : this.add(r[i])
            }
            return this.updateMatrixWorld(!0), r
        },
        bind: function(t, e) {
            this.skeleton = t, void 0 === e && (this.updateMatrixWorld(!0), this.skeleton.calculateInverses(), e = this.matrixWorld), this.bindMatrix.copy(e), this.bindMatrixInverse.getInverse(e)
        },
        pose: function() {
            this.skeleton.pose()
        },
        normalizeSkinWeights: function() {
            var t, e;
            if (this.geometry && this.geometry.isGeometry)
                for (e = 0; e < this.geometry.skinWeights.length; e++) {
                    var i = this.geometry.skinWeights[e];
                    (t = 1 / i.manhattanLength()) !== 1 / 0 ? i.multiplyScalar(t) : i.set(1, 0, 0, 0)
                } else if (this.geometry && this.geometry.isBufferGeometry) {
                    var n = new ai,
                        r = this.geometry.attributes.skinWeight;
                    for (e = 0; e < r.count; e++) n.x = r.getX(e), n.y = r.getY(e), n.z = r.getZ(e), n.w = r.getW(e), (t = 1 / n.manhattanLength()) !== 1 / 0 ? n.multiplyScalar(t) : n.set(1, 0, 0, 0), r.setXYZW(e, n.x, n.y, n.z, n.w)
                }
        },
        updateMatrixWorld: function(t) {
            Mn.prototype.updateMatrixWorld.call(this, t), "attached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.matrixWorld) : "detached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.bindMatrix) : console.warn("THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode)
        },
        clone: function() {
            return new this.constructor(this.geometry, this.material).copy(this)
        }
    }), ws.prototype = Object.create(vn.prototype), ws.prototype.constructor = ws, ws.prototype.isLineBasicMaterial = !0, ws.prototype.copy = function(t) {
        return vn.prototype.copy.call(this, t), this.color.copy(t.color), this.linewidth = t.linewidth, this.linecap = t.linecap, this.linejoin = t.linejoin, this
    }, bs.prototype = Object.assign(Object.create(Ci.prototype), {
        constructor: bs,
        isLine: !0,
        computeLineDistances: (Wr = new Qe, Yr = new Qe, function() {
            var t = this.geometry;
            if (t.isBufferGeometry)
                if (null === t.index) {
                    for (var e = t.attributes.position, i = [0], n = 1, r = e.count; n < r; n++) Wr.fromBufferAttribute(e, n - 1), Yr.fromBufferAttribute(e, n), i[n] = i[n - 1], i[n] += Wr.distanceTo(Yr);
                    t.addAttribute("lineDistance", new qi(i, 1))
                } else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
            else if (t.isGeometry) {
                var s = t.vertices;
                for ((i = t.lineDistances)[0] = 0, n = 1, r = s.length; n < r; n++) i[n] = i[n - 1], i[n] += s[n - 1].distanceTo(s[n])
            }
            return this
        }),
        raycast: function() {
            var t = new Ke,
                e = new wn,
                i = new ui;
            return function(n, r) {
                var s = n.linePrecision,
                    o = s * s,
                    a = this.geometry,
                    c = this.matrixWorld;
                if (null === a.boundingSphere && a.computeBoundingSphere(), i.copy(a.boundingSphere), i.applyMatrix4(c), !1 !== n.ray.intersectsSphere(i)) {
                    t.getInverse(c), e.copy(n.ray).applyMatrix4(t);
                    var l = new Qe,
                        p = new Qe,
                        h = new Qe,
                        u = new Qe,
                        d = this && this.isLineSegments ? 2 : 1;
                    if (a.isBufferGeometry) {
                        var f = a.index,
                            m = a.attributes.position.array;
                        if (null !== f)
                            for (var g = f.array, v = 0, y = g.length - 1; v < y; v += d) {
                                var x = g[v],
                                    w = g[v + 1];
                                if (l.fromArray(m, 3 * x), p.fromArray(m, 3 * w), !(e.distanceSqToSegment(l, p, u, h) > o)) u.applyMatrix4(this.matrixWorld), (S = n.ray.origin.distanceTo(u)) < n.near || S > n.far || r.push({
                                    distance: S,
                                    point: h.clone().applyMatrix4(this.matrixWorld),
                                    index: v,
                                    face: null,
                                    faceIndex: null,
                                    object: this
                                })
                            } else
                                for (v = 0, y = m.length / 3 - 1; v < y; v += d) {
                                    if (l.fromArray(m, 3 * v), p.fromArray(m, 3 * v + 3), !(e.distanceSqToSegment(l, p, u, h) > o)) u.applyMatrix4(this.matrixWorld), (S = n.ray.origin.distanceTo(u)) < n.near || S > n.far || r.push({
                                        distance: S,
                                        point: h.clone().applyMatrix4(this.matrixWorld),
                                        index: v,
                                        face: null,
                                        faceIndex: null,
                                        object: this
                                    })
                                }
                    } else if (a.isGeometry) {
                        var b = a.vertices,
                            M = b.length;
                        for (v = 0; v < M - 1; v += d) {
                            var S;
                            if (!(e.distanceSqToSegment(b[v], b[v + 1], u, h) > o)) u.applyMatrix4(this.matrixWorld), (S = n.ray.origin.distanceTo(u)) < n.near || S > n.far || r.push({
                                distance: S,
                                point: h.clone().applyMatrix4(this.matrixWorld),
                                index: v,
                                face: null,
                                faceIndex: null,
                                object: this
                            })
                        }
                    }
                }
            }
        }(),
        clone: function() {
            return new this.constructor(this.geometry, this.material).copy(this)
        }
    }), Ms.prototype = Object.assign(Object.create(bs.prototype), {
        constructor: Ms,
        isLineSegments: !0,
        computeLineDistances: function() {
            var t = new Qe,
                e = new Qe;
            return function() {
                var i = this.geometry;
                if (i.isBufferGeometry)
                    if (null === i.index) {
                        for (var n = i.attributes.position, r = [], s = 0, o = n.count; s < o; s += 2) t.fromBufferAttribute(n, s), e.fromBufferAttribute(n, s + 1), r[s] = 0 === s ? 0 : r[s - 1], r[s + 1] = r[s] + t.distanceTo(e);
                        i.addAttribute("lineDistance", new qi(r, 1))
                    } else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
                else if (i.isGeometry) {
                    var a = i.vertices;
                    for (r = i.lineDistances, s = 0, o = a.length; s < o; s += 2) t.copy(a[s]), e.copy(a[s + 1]), r[s] = 0 === s ? 0 : r[s - 1], r[s + 1] = r[s] + t.distanceTo(e)
                }
                return this
            }
        }()
    }), Ss.prototype = Object.assign(Object.create(bs.prototype), {
        constructor: Ss,
        isLineLoop: !0
    }), _s.prototype = Object.create(vn.prototype), _s.prototype.constructor = _s, _s.prototype.isPointsMaterial = !0, _s.prototype.copy = function(t) {
        return vn.prototype.copy.call(this, t), this.color.copy(t.color), this.map = t.map, this.size = t.size, this.sizeAttenuation = t.sizeAttenuation, this.morphTargets = t.morphTargets, this
    }, Ts.prototype = Object.assign(Object.create(Ci.prototype), {
        constructor: Ts,
        isPoints: !0,
        raycast: function() {
            var t = new Ke,
                e = new wn,
                i = new ui;
            return function(n, r) {
                var s = this,
                    o = this.geometry,
                    a = this.matrixWorld,
                    c = n.params.Points.threshold;
                if (null === o.boundingSphere && o.computeBoundingSphere(), i.copy(o.boundingSphere), i.applyMatrix4(a), i.radius += c, !1 !== n.ray.intersectsSphere(i)) {
                    t.getInverse(a), e.copy(n.ray).applyMatrix4(t);
                    var l = c / ((this.scale.x + this.scale.y + this.scale.z) / 3),
                        p = l * l,
                        h = new Qe,
                        u = new Qe;
                    if (o.isBufferGeometry) {
                        var d = o.index,
                            f = o.attributes.position.array;
                        if (null !== d)
                            for (var m = d.array, g = 0, v = m.length; g < v; g++) {
                                var y = m[g];
                                h.fromArray(f, 3 * y), b(h, y)
                            } else {
                                g = 0;
                                for (var x = f.length / 3; g < x; g++) h.fromArray(f, 3 * g), b(h, g)
                            }
                    } else {
                        var w = o.vertices;
                        for (g = 0, x = w.length; g < x; g++) b(w[g], g)
                    }
                }

                function b(t, i) {
                    var o = e.distanceSqToPoint(t);
                    if (o < p) {
                        e.closestPointToPoint(t, u), u.applyMatrix4(a);
                        var c = n.ray.origin.distanceTo(u);
                        if (c < n.near || c > n.far) return;
                        r.push({
                            distance: c,
                            distanceToRay: Math.sqrt(o),
                            point: u.clone(),
                            index: i,
                            face: null,
                            object: s
                        })
                    }
                }
            }
        }(),
        clone: function() {
            return new this.constructor(this.geometry, this.material).copy(this)
        }
    }), Es.prototype = Object.assign(Object.create(oi.prototype), {
        constructor: Es,
        isVideoTexture: !0,
        update: function() {
            var t = this.image;
            t.readyState >= t.HAVE_CURRENT_DATA && (this.needsUpdate = !0)
        }
    }), As.prototype = Object.create(oi.prototype), As.prototype.constructor = As, As.prototype.isCompressedTexture = !0, Ls.prototype = Object.create(oi.prototype), Ls.prototype.constructor = Ls, Ls.prototype.isCanvasTexture = !0, ks.prototype = Object.create(oi.prototype), ks.prototype.constructor = ks, ks.prototype.isDepthTexture = !0, Rs.prototype = Object.create($i.prototype), Rs.prototype.constructor = Rs, Ps.prototype = Object.create(Ui.prototype), Ps.prototype.constructor = Ps, Cs.prototype = Object.create($i.prototype), Cs.prototype.constructor = Cs, Is.prototype = Object.create(Ui.prototype), Is.prototype.constructor = Is, Os.prototype = Object.create($i.prototype), Os.prototype.constructor = Os, Ds.prototype = Object.create(Ui.prototype), Ds.prototype.constructor = Ds, Bs.prototype = Object.create(Os.prototype), Bs.prototype.constructor = Bs, zs.prototype = Object.create(Ui.prototype), zs.prototype.constructor = zs, Ns.prototype = Object.create(Os.prototype), Ns.prototype.constructor = Ns, Us.prototype = Object.create(Ui.prototype), Us.prototype.constructor = Us, Fs.prototype = Object.create(Os.prototype), Fs.prototype.constructor = Fs, Hs.prototype = Object.create(Ui.prototype), Hs.prototype.constructor = Hs, js.prototype = Object.create(Os.prototype), js.prototype.constructor = js, Gs.prototype = Object.create(Ui.prototype), Gs.prototype.constructor = Gs, Vs.prototype = Object.create($i.prototype), Vs.prototype.constructor = Vs, Ws.prototype = Object.create(Ui.prototype), Ws.prototype.constructor = Ws, Ys.prototype = Object.create($i.prototype), Ys.prototype.constructor = Ys, Xs.prototype = Object.create(Ui.prototype), Xs.prototype.constructor = Xs, qs.prototype = Object.create($i.prototype), qs.prototype.constructor = qs;
    var Zs = function(t, e, i) {
        i = i || 2;
        var n, r, s, o, a, c, l, p = e && e.length,
            h = p ? e[0] * i : t.length,
            u = Ks(t, 0, h, i, !0),
            d = [];
        if (!u) return d;
        if (p && (u = function(t, e, i, n) {
                var r, s, o, a, c, l = [];
                for (r = 0, s = e.length; r < s; r++) o = e[r] * n, a = r < s - 1 ? e[r + 1] * n : t.length, (c = Ks(t, o, a, n, !1)) === c.next && (c.steiner = !0), l.push(oo(c));
                for (l.sort(no), r = 0; r < l.length; r++) ro(l[r], i), i = Js(i, i.next);
                return i
            }(t, e, u, i)), t.length > 80 * i) {
            n = s = t[0], r = o = t[1];
            for (var f = i; f < h; f += i)(a = t[f]) < n && (n = a), (c = t[f + 1]) < r && (r = c), a > s && (s = a), c > o && (o = c);
            l = 0 !== (l = Math.max(s - n, o - r)) ? 1 / l : 0
        }
        return Qs(u, d, i, n, r, l), d
    };

    function Ks(t, e, i, n, r) {
        var s, o;
        if (r === function(t, e, i, n) {
                for (var r = 0, s = e, o = i - n; s < i; s += n) r += (t[o] - t[s]) * (t[s + 1] + t[o + 1]), o = s;
                return r
            }(t, e, i, n) > 0)
            for (s = e; s < i; s += n) o = mo(s, t[s], t[s + 1], o);
        else
            for (s = i - n; s >= e; s -= n) o = mo(s, t[s], t[s + 1], o);
        return o && po(o, o.next) && (go(o), o = o.next), o
    }

    function Js(t, e) {
        if (!t) return t;
        e || (e = t);
        var i, n = t;
        do {
            if (i = !1, n.steiner || !po(n, n.next) && 0 !== lo(n.prev, n, n.next)) n = n.next;
            else {
                if (go(n), (n = e = n.prev) === n.next) break;
                i = !0
            }
        } while (i || n !== e);
        return e
    }

    function Qs(t, e, i, n, r, s, o) {
        if (t) {
            !o && s && function(t, e, i, n) {
                var r = t;
                do {
                    null === r.z && (r.z = so(r.x, r.y, e, i, n)), r.prevZ = r.prev, r.nextZ = r.next, r = r.next
                } while (r !== t);
                r.prevZ.nextZ = null, r.prevZ = null,
                    function(t) {
                        var e, i, n, r, s, o, a, c, l = 1;
                        do {
                            for (i = t, t = null, s = null, o = 0; i;) {
                                for (o++, n = i, a = 0, e = 0; e < l && (a++, n = n.nextZ); e++);
                                for (c = l; a > 0 || c > 0 && n;) 0 !== a && (0 === c || !n || i.z <= n.z) ? (r = i, i = i.nextZ, a--) : (r = n, n = n.nextZ, c--), s ? s.nextZ = r : t = r, r.prevZ = s, s = r;
                                i = n
                            }
                            s.nextZ = null, l *= 2
                        } while (o > 1)
                    }(r)
            }(t, n, r, s);
            for (var a, c, l = t; t.prev !== t.next;)
                if (a = t.prev, c = t.next, s ? to(t, n, r, s) : $s(t)) e.push(a.i / i), e.push(t.i / i), e.push(c.i / i), go(t), t = c.next, l = c.next;
                else if ((t = c) === l) {
                o ? 1 === o ? Qs(t = eo(t, e, i), e, i, n, r, s, 2) : 2 === o && io(t, e, i, n, r, s) : Qs(Js(t), e, i, n, r, s, 1);
                break
            }
        }
    }

    function $s(t) {
        var e = t.prev,
            i = t,
            n = t.next;
        if (lo(e, i, n) >= 0) return !1;
        for (var r = t.next.next; r !== t.prev;) {
            if (ao(e.x, e.y, i.x, i.y, n.x, n.y, r.x, r.y) && lo(r.prev, r, r.next) >= 0) return !1;
            r = r.next
        }
        return !0
    }

    function to(t, e, i, n) {
        var r = t.prev,
            s = t,
            o = t.next;
        if (lo(r, s, o) >= 0) return !1;
        for (var a = r.x < s.x ? r.x < o.x ? r.x : o.x : s.x < o.x ? s.x : o.x, c = r.y < s.y ? r.y < o.y ? r.y : o.y : s.y < o.y ? s.y : o.y, l = r.x > s.x ? r.x > o.x ? r.x : o.x : s.x > o.x ? s.x : o.x, p = r.y > s.y ? r.y > o.y ? r.y : o.y : s.y > o.y ? s.y : o.y, h = so(a, c, e, i, n), u = so(l, p, e, i, n), d = t.nextZ; d && d.z <= u;) {
            if (d !== t.prev && d !== t.next && ao(r.x, r.y, s.x, s.y, o.x, o.y, d.x, d.y) && lo(d.prev, d, d.next) >= 0) return !1;
            d = d.nextZ
        }
        for (d = t.prevZ; d && d.z >= h;) {
            if (d !== t.prev && d !== t.next && ao(r.x, r.y, s.x, s.y, o.x, o.y, d.x, d.y) && lo(d.prev, d, d.next) >= 0) return !1;
            d = d.prevZ
        }
        return !0
    }

    function eo(t, e, i) {
        var n = t;
        do {
            var r = n.prev,
                s = n.next.next;
            !po(r, s) && ho(r, n, n.next, s) && uo(r, s) && uo(s, r) && (e.push(r.i / i), e.push(n.i / i), e.push(s.i / i), go(n), go(n.next), n = t = s), n = n.next
        } while (n !== t);
        return n
    }

    function io(t, e, i, n, r, s) {
        var o = t;
        do {
            for (var a = o.next.next; a !== o.prev;) {
                if (o.i !== a.i && co(o, a)) {
                    var c = fo(o, a);
                    return o = Js(o, o.next), c = Js(c, c.next), Qs(o, e, i, n, r, s), void Qs(c, e, i, n, r, s)
                }
                a = a.next
            }
            o = o.next
        } while (o !== t)
    }

    function no(t, e) {
        return t.x - e.x
    }

    function ro(t, e) {
        if (e = function(t, e) {
                var i, n = e,
                    r = t.x,
                    s = t.y,
                    o = -1 / 0;
                do {
                    if (s <= n.y && s >= n.next.y && n.next.y !== n.y) {
                        var a = n.x + (s - n.y) * (n.next.x - n.x) / (n.next.y - n.y);
                        if (a <= r && a > o) {
                            if (o = a, a === r) {
                                if (s === n.y) return n;
                                if (s === n.next.y) return n.next
                            }
                            i = n.x < n.next.x ? n : n.next
                        }
                    }
                    n = n.next
                } while (n !== e);
                if (!i) return null;
                if (r === o) return i.prev;
                var c, l = i,
                    p = i.x,
                    h = i.y,
                    u = 1 / 0;
                n = i.next;
                for (; n !== l;) r >= n.x && n.x >= p && r !== n.x && ao(s < h ? r : o, s, p, h, s < h ? o : r, s, n.x, n.y) && ((c = Math.abs(s - n.y) / (r - n.x)) < u || c === u && n.x > i.x) && uo(n, t) && (i = n, u = c), n = n.next;
                return i
            }(t, e)) {
            var i = fo(e, t);
            Js(i, i.next)
        }
    }

    function so(t, e, i, n, r) {
        return (t = 1431655765 & ((t = 858993459 & ((t = 252645135 & ((t = 16711935 & ((t = 32767 * (t - i) * r) | t << 8)) | t << 4)) | t << 2)) | t << 1)) | (e = 1431655765 & ((e = 858993459 & ((e = 252645135 & ((e = 16711935 & ((e = 32767 * (e - n) * r) | e << 8)) | e << 4)) | e << 2)) | e << 1)) << 1
    }

    function oo(t) {
        var e = t,
            i = t;
        do {
            e.x < i.x && (i = e), e = e.next
        } while (e !== t);
        return i
    }

    function ao(t, e, i, n, r, s, o, a) {
        return (r - o) * (e - a) - (t - o) * (s - a) >= 0 && (t - o) * (n - a) - (i - o) * (e - a) >= 0 && (i - o) * (s - a) - (r - o) * (n - a) >= 0
    }

    function co(t, e) {
        return t.next.i !== e.i && t.prev.i !== e.i && ! function(t, e) {
            var i = t;
            do {
                if (i.i !== t.i && i.next.i !== t.i && i.i !== e.i && i.next.i !== e.i && ho(i, i.next, t, e)) return !0;
                i = i.next
            } while (i !== t);
            return !1
        }(t, e) && uo(t, e) && uo(e, t) && function(t, e) {
            var i = t,
                n = !1,
                r = (t.x + e.x) / 2,
                s = (t.y + e.y) / 2;
            do {
                i.y > s != i.next.y > s && i.next.y !== i.y && r < (i.next.x - i.x) * (s - i.y) / (i.next.y - i.y) + i.x && (n = !n), i = i.next
            } while (i !== t);
            return n
        }(t, e)
    }

    function lo(t, e, i) {
        return (e.y - t.y) * (i.x - e.x) - (e.x - t.x) * (i.y - e.y)
    }

    function po(t, e) {
        return t.x === e.x && t.y === e.y
    }

    function ho(t, e, i, n) {
        return !!(po(t, e) && po(i, n) || po(t, n) && po(i, e)) || lo(t, e, i) > 0 != lo(t, e, n) > 0 && lo(i, n, t) > 0 != lo(i, n, e) > 0
    }

    function uo(t, e) {
        return lo(t.prev, t, t.next) < 0 ? lo(t, e, t.next) >= 0 && lo(t, t.prev, e) >= 0 : lo(t, e, t.prev) < 0 || lo(t, t.next, e) < 0
    }

    function fo(t, e) {
        var i = new vo(t.i, t.x, t.y),
            n = new vo(e.i, e.x, e.y),
            r = t.next,
            s = e.prev;
        return t.next = e, e.prev = t, i.next = r, r.prev = i, n.next = i, i.prev = n, s.next = n, n.prev = s, n
    }

    function mo(t, e, i, n) {
        var r = new vo(t, e, i);
        return n ? (r.next = n.next, r.prev = n, n.next.prev = r, n.next = r) : (r.prev = r, r.next = r), r
    }

    function go(t) {
        t.next.prev = t.prev, t.prev.next = t.next, t.prevZ && (t.prevZ.nextZ = t.nextZ), t.nextZ && (t.nextZ.prevZ = t.prevZ)
    }

    function vo(t, e, i) {
        this.i = t, this.x = e, this.y = i, this.prev = null, this.next = null, this.z = null, this.prevZ = null, this.nextZ = null, this.steiner = !1
    }
    var yo = {
        area: function(t) {
            for (var e = t.length, i = 0, n = e - 1, r = 0; r < e; n = r++) i += t[n].x * t[r].y - t[r].x * t[n].y;
            return .5 * i
        },
        isClockWise: function(t) {
            return yo.area(t) < 0
        },
        triangulateShape: function(t, e) {
            var i = [],
                n = [],
                r = [];
            xo(t), wo(i, t);
            var s = t.length;
            e.forEach(xo);
            for (var o = 0; o < e.length; o++) n.push(s), s += e[o].length, wo(i, e[o]);
            var a = Zs(i, n);
            for (o = 0; o < a.length; o += 3) r.push(a.slice(o, o + 3));
            return r
        }
    };

    function xo(t) {
        var e = t.length;
        e > 2 && t[e - 1].equals(t[0]) && t.pop()
    }

    function wo(t, e) {
        for (var i = 0; i < e.length; i++) t.push(e[i].x), t.push(e[i].y)
    }

    function bo(t, e) {
        Ui.call(this), this.type = "ExtrudeGeometry", this.parameters = {
            shapes: t,
            options: e
        }, this.fromBufferGeometry(new Mo(t, e)), this.mergeVertices()
    }

    function Mo(t, e) {
        $i.call(this), this.type = "ExtrudeBufferGeometry", this.parameters = {
            shapes: t,
            options: e
        }, t = Array.isArray(t) ? t : [t];
        for (var i = this, n = [], r = [], s = 0, o = t.length; s < o; s++) {
            a(t[s])
        }

        function a(t) {
            var s = [],
                o = void 0 !== e.curveSegments ? e.curveSegments : 12,
                a = void 0 !== e.steps ? e.steps : 1,
                c = void 0 !== e.depth ? e.depth : 100,
                l = void 0 === e.bevelEnabled || e.bevelEnabled,
                p = void 0 !== e.bevelThickness ? e.bevelThickness : 6,
                h = void 0 !== e.bevelSize ? e.bevelSize : p - 2,
                u = void 0 !== e.bevelSegments ? e.bevelSegments : 3,
                d = e.extrudePath,
                f = void 0 !== e.UVGenerator ? e.UVGenerator : So;
            void 0 !== e.amount && (console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."), c = e.amount);
            var m, g, v, y, x, w, b, M, S = !1;
            d && (m = d.getSpacedPoints(a), S = !0, l = !1, g = d.computeFrenetFrames(a, !1), v = new Qe, y = new Qe, x = new Qe), l || (u = 0, p = 0, h = 0);
            var _ = t.extractPoints(o),
                T = _.shape,
                E = _.holes;
            if (!yo.isClockWise(T))
                for (T = T.reverse(), b = 0, M = E.length; b < M; b++) w = E[b], yo.isClockWise(w) && (E[b] = w.reverse());
            var A = yo.triangulateShape(T, E),
                L = T;
            for (b = 0, M = E.length; b < M; b++) w = E[b], T = T.concat(w);

            function k(t, e, i) {
                return e || console.error("THREE.ExtrudeGeometry: vec does not exist"), e.clone().multiplyScalar(i).add(t)
            }
            var R, P, C, I, O, D, B = T.length,
                z = A.length;

            function N(t, e, i) {
                var n, r, s, o = t.x - e.x,
                    a = t.y - e.y,
                    c = i.x - t.x,
                    l = i.y - t.y,
                    p = o * o + a * a,
                    h = o * l - a * c;
                if (Math.abs(h) > Number.EPSILON) {
                    var u = Math.sqrt(p),
                        d = Math.sqrt(c * c + l * l),
                        f = e.x - a / u,
                        m = e.y + o / u,
                        g = ((i.x - l / d - f) * l - (i.y + c / d - m) * c) / (o * l - a * c),
                        v = (n = f + o * g - t.x) * n + (r = m + a * g - t.y) * r;
                    if (v <= 2) return new Ze(n, r);
                    s = Math.sqrt(v / 2)
                } else {
                    var y = !1;
                    o > Number.EPSILON ? c > Number.EPSILON && (y = !0) : o < -Number.EPSILON ? c < -Number.EPSILON && (y = !0) : Math.sign(a) === Math.sign(l) && (y = !0), y ? (n = -a, r = o, s = Math.sqrt(p)) : (n = o, r = a, s = Math.sqrt(p / 2))
                }
                return new Ze(n / s, r / s)
            }
            for (var U = [], F = 0, H = L.length, j = H - 1, G = F + 1; F < H; F++, j++, G++) j === H && (j = 0), G === H && (G = 0), U[F] = N(L[F], L[j], L[G]);
            var V, W, Y = [],
                X = U.concat();
            for (b = 0, M = E.length; b < M; b++) {
                for (w = E[b], V = [], F = 0, j = (H = w.length) - 1, G = F + 1; F < H; F++, j++, G++) j === H && (j = 0), G === H && (G = 0), V[F] = N(w[F], w[j], w[G]);
                Y.push(V), X = X.concat(V)
            }
            for (R = 0; R < u; R++) {
                for (C = R / u, I = p * Math.cos(C * Math.PI / 2), P = h * Math.sin(C * Math.PI / 2), F = 0, H = L.length; F < H; F++) Z((O = k(L[F], U[F], P)).x, O.y, -I);
                for (b = 0, M = E.length; b < M; b++)
                    for (w = E[b], V = Y[b], F = 0, H = w.length; F < H; F++) Z((O = k(w[F], V[F], P)).x, O.y, -I)
            }
            for (P = h, F = 0; F < B; F++) O = l ? k(T[F], X[F], P) : T[F], S ? (y.copy(g.normals[0]).multiplyScalar(O.x), v.copy(g.binormals[0]).multiplyScalar(O.y), x.copy(m[0]).add(y).add(v), Z(x.x, x.y, x.z)) : Z(O.x, O.y, 0);
            for (W = 1; W <= a; W++)
                for (F = 0; F < B; F++) O = l ? k(T[F], X[F], P) : T[F], S ? (y.copy(g.normals[W]).multiplyScalar(O.x), v.copy(g.binormals[W]).multiplyScalar(O.y), x.copy(m[W]).add(y).add(v), Z(x.x, x.y, x.z)) : Z(O.x, O.y, c / a * W);
            for (R = u - 1; R >= 0; R--) {
                for (C = R / u, I = p * Math.cos(C * Math.PI / 2), P = h * Math.sin(C * Math.PI / 2), F = 0, H = L.length; F < H; F++) Z((O = k(L[F], U[F], P)).x, O.y, c + I);
                for (b = 0, M = E.length; b < M; b++)
                    for (w = E[b], V = Y[b], F = 0, H = w.length; F < H; F++) O = k(w[F], V[F], P), S ? Z(O.x, O.y + m[a - 1].y, m[a - 1].x + I) : Z(O.x, O.y, c + I)
            }

            function q(t, e) {
                var i, n;
                for (F = t.length; --F >= 0;) {
                    i = F, (n = F - 1) < 0 && (n = t.length - 1);
                    var r = 0,
                        s = a + 2 * u;
                    for (r = 0; r < s; r++) {
                        var o = B * r,
                            c = B * (r + 1);
                        J(e + i + o, e + n + o, e + n + c, e + i + c)
                    }
                }
            }

            function Z(t, e, i) {
                s.push(t), s.push(e), s.push(i)
            }

            function K(t, e, r) {
                Q(t), Q(e), Q(r);
                var s = n.length / 3,
                    o = f.generateTopUV(i, n, s - 3, s - 2, s - 1);
                $(o[0]), $(o[1]), $(o[2])
            }

            function J(t, e, r, s) {
                Q(t), Q(e), Q(s), Q(e), Q(r), Q(s);
                var o = n.length / 3,
                    a = f.generateSideWallUV(i, n, o - 6, o - 3, o - 2, o - 1);
                $(a[0]), $(a[1]), $(a[3]), $(a[1]), $(a[2]), $(a[3])
            }

            function Q(t) {
                n.push(s[3 * t + 0]), n.push(s[3 * t + 1]), n.push(s[3 * t + 2])
            }

            function $(t) {
                r.push(t.x), r.push(t.y)
            }! function() {
                var t = n.length / 3;
                if (l) {
                    var e = 0,
                        r = B * e;
                    for (F = 0; F < z; F++) K((D = A[F])[2] + r, D[1] + r, D[0] + r);
                    for (r = B * (e = a + 2 * u), F = 0; F < z; F++) K((D = A[F])[0] + r, D[1] + r, D[2] + r)
                } else {
                    for (F = 0; F < z; F++) K((D = A[F])[2], D[1], D[0]);
                    for (F = 0; F < z; F++) K((D = A[F])[0] + B * a, D[1] + B * a, D[2] + B * a)
                }
                i.addGroup(t, n.length / 3 - t, 0)
            }(),
            function() {
                var t = n.length / 3,
                    e = 0;
                for (q(L, e), e += L.length, b = 0, M = E.length; b < M; b++) q(w = E[b], e), e += w.length;
                i.addGroup(t, n.length / 3 - t, 1)
            }()
        }
        this.addAttribute("position", new qi(n, 3)), this.addAttribute("uv", new qi(r, 2)), this.computeVertexNormals()
    }
    bo.prototype = Object.create(Ui.prototype), bo.prototype.constructor = bo, bo.prototype.toJSON = function() {
        var t = Ui.prototype.toJSON.call(this);
        return _o(this.parameters.shapes, this.parameters.options, t)
    }, Mo.prototype = Object.create($i.prototype), Mo.prototype.constructor = Mo, Mo.prototype.toJSON = function() {
        var t = $i.prototype.toJSON.call(this);
        return _o(this.parameters.shapes, this.parameters.options, t)
    };
    var So = {
        generateTopUV: function(t, e, i, n, r) {
            var s = e[3 * i],
                o = e[3 * i + 1],
                a = e[3 * n],
                c = e[3 * n + 1],
                l = e[3 * r],
                p = e[3 * r + 1];
            return [new Ze(s, o), new Ze(a, c), new Ze(l, p)]
        },
        generateSideWallUV: function(t, e, i, n, r, s) {
            var o = e[3 * i],
                a = e[3 * i + 1],
                c = e[3 * i + 2],
                l = e[3 * n],
                p = e[3 * n + 1],
                h = e[3 * n + 2],
                u = e[3 * r],
                d = e[3 * r + 1],
                f = e[3 * r + 2],
                m = e[3 * s],
                g = e[3 * s + 1],
                v = e[3 * s + 2];
            return Math.abs(a - p) < .01 ? [new Ze(o, 1 - c), new Ze(l, 1 - h), new Ze(u, 1 - f), new Ze(m, 1 - v)] : [new Ze(a, 1 - c), new Ze(p, 1 - h), new Ze(d, 1 - f), new Ze(g, 1 - v)]
        }
    };

    function _o(t, e, i) {
        if (i.shapes = [], Array.isArray(t))
            for (var n = 0, r = t.length; n < r; n++) {
                var s = t[n];
                i.shapes.push(s.uuid)
            } else i.shapes.push(t.uuid);
        return void 0 !== e.extrudePath && (i.options.extrudePath = e.extrudePath.toJSON()), i
    }

    function To(t, e) {
        Ui.call(this), this.type = "TextGeometry", this.parameters = {
            text: t,
            parameters: e
        }, this.fromBufferGeometry(new Eo(t, e)), this.mergeVertices()
    }

    function Eo(t, e) {
        var i = (e = e || {}).font;
        if (!i || !i.isFont) return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."), new Ui;
        var n = i.generateShapes(t, e.size);
        e.depth = void 0 !== e.height ? e.height : 50, void 0 === e.bevelThickness && (e.bevelThickness = 10), void 0 === e.bevelSize && (e.bevelSize = 8), void 0 === e.bevelEnabled && (e.bevelEnabled = !1), Mo.call(this, n, e), this.type = "TextBufferGeometry"
    }

    function Ao(t, e, i, n, r, s, o) {
        Ui.call(this), this.type = "SphereGeometry", this.parameters = {
            radius: t,
            widthSegments: e,
            heightSegments: i,
            phiStart: n,
            phiLength: r,
            thetaStart: s,
            thetaLength: o
        }, this.fromBufferGeometry(new Lo(t, e, i, n, r, s, o)), this.mergeVertices()
    }

    function Lo(t, e, i, n, r, s, o) {
        $i.call(this), this.type = "SphereBufferGeometry", this.parameters = {
            radius: t,
            widthSegments: e,
            heightSegments: i,
            phiStart: n,
            phiLength: r,
            thetaStart: s,
            thetaLength: o
        }, t = t || 1, e = Math.max(3, Math.floor(e) || 8), i = Math.max(2, Math.floor(i) || 6), n = void 0 !== n ? n : 0, r = void 0 !== r ? r : 2 * Math.PI;
        var a, c, l = (s = void 0 !== s ? s : 0) + (o = void 0 !== o ? o : Math.PI),
            p = 0,
            h = [],
            u = new Qe,
            d = new Qe,
            f = [],
            m = [],
            g = [],
            v = [];
        for (c = 0; c <= i; c++) {
            var y = [],
                x = c / i;
            for (a = 0; a <= e; a++) {
                var w = a / e;
                u.x = -t * Math.cos(n + w * r) * Math.sin(s + x * o), u.y = t * Math.cos(s + x * o), u.z = t * Math.sin(n + w * r) * Math.sin(s + x * o), m.push(u.x, u.y, u.z), d.set(u.x, u.y, u.z).normalize(), g.push(d.x, d.y, d.z), v.push(w, 1 - x), y.push(p++)
            }
            h.push(y)
        }
        for (c = 0; c < i; c++)
            for (a = 0; a < e; a++) {
                var b = h[c][a + 1],
                    M = h[c][a],
                    S = h[c + 1][a],
                    _ = h[c + 1][a + 1];
                (0 !== c || s > 0) && f.push(b, M, _), (c !== i - 1 || l < Math.PI) && f.push(M, S, _)
            }
        this.setIndex(f), this.addAttribute("position", new qi(m, 3)), this.addAttribute("normal", new qi(g, 3)), this.addAttribute("uv", new qi(v, 2))
    }

    function ko(t, e, i, n, r, s) {
        Ui.call(this), this.type = "RingGeometry", this.parameters = {
            innerRadius: t,
            outerRadius: e,
            thetaSegments: i,
            phiSegments: n,
            thetaStart: r,
            thetaLength: s
        }, this.fromBufferGeometry(new Ro(t, e, i, n, r, s)), this.mergeVertices()
    }

    function Ro(t, e, i, n, r, s) {
        $i.call(this), this.type = "RingBufferGeometry", this.parameters = {
            innerRadius: t,
            outerRadius: e,
            thetaSegments: i,
            phiSegments: n,
            thetaStart: r,
            thetaLength: s
        }, t = t || .5, e = e || 1, r = void 0 !== r ? r : 0, s = void 0 !== s ? s : 2 * Math.PI, i = void 0 !== i ? Math.max(3, i) : 8;
        var o, a, c, l = [],
            p = [],
            h = [],
            u = [],
            d = t,
            f = (e - t) / (n = void 0 !== n ? Math.max(1, n) : 1),
            m = new Qe,
            g = new Ze;
        for (a = 0; a <= n; a++) {
            for (c = 0; c <= i; c++) o = r + c / i * s, m.x = d * Math.cos(o), m.y = d * Math.sin(o), p.push(m.x, m.y, m.z), h.push(0, 0, 1), g.x = (m.x / e + 1) / 2, g.y = (m.y / e + 1) / 2, u.push(g.x, g.y);
            d += f
        }
        for (a = 0; a < n; a++) {
            var v = a * (i + 1);
            for (c = 0; c < i; c++) {
                var y = o = c + v,
                    x = o + i + 1,
                    w = o + i + 2,
                    b = o + 1;
                l.push(y, x, b), l.push(x, w, b)
            }
        }
        this.setIndex(l), this.addAttribute("position", new qi(p, 3)), this.addAttribute("normal", new qi(h, 3)), this.addAttribute("uv", new qi(u, 2))
    }

    function Po(t, e, i, n) {
        Ui.call(this), this.type = "LatheGeometry", this.parameters = {
            points: t,
            segments: e,
            phiStart: i,
            phiLength: n
        }, this.fromBufferGeometry(new Co(t, e, i, n)), this.mergeVertices()
    }

    function Co(t, e, i, n) {
        $i.call(this), this.type = "LatheBufferGeometry", this.parameters = {
            points: t,
            segments: e,
            phiStart: i,
            phiLength: n
        }, e = Math.floor(e) || 12, i = i || 0, n = n || 2 * Math.PI, n = qe.clamp(n, 0, 2 * Math.PI);
        var r, s, o, a = [],
            c = [],
            l = [],
            p = 1 / e,
            h = new Qe,
            u = new Ze;
        for (s = 0; s <= e; s++) {
            var d = i + s * p * n,
                f = Math.sin(d),
                m = Math.cos(d);
            for (o = 0; o <= t.length - 1; o++) h.x = t[o].x * f, h.y = t[o].y, h.z = t[o].x * m, c.push(h.x, h.y, h.z), u.x = s / e, u.y = o / (t.length - 1), l.push(u.x, u.y)
        }
        for (s = 0; s < e; s++)
            for (o = 0; o < t.length - 1; o++) {
                var g = r = o + s * t.length,
                    v = r + t.length,
                    y = r + t.length + 1,
                    x = r + 1;
                a.push(g, v, x), a.push(v, y, x)
            }
        if (this.setIndex(a), this.addAttribute("position", new qi(c, 3)), this.addAttribute("uv", new qi(l, 2)), this.computeVertexNormals(), n === 2 * Math.PI) {
            var w = this.attributes.normal.array,
                b = new Qe,
                M = new Qe,
                S = new Qe;
            for (r = e * t.length * 3, s = 0, o = 0; s < t.length; s++, o += 3) b.x = w[o + 0], b.y = w[o + 1], b.z = w[o + 2], M.x = w[r + o + 0], M.y = w[r + o + 1], M.z = w[r + o + 2], S.addVectors(b, M).normalize(), w[o + 0] = w[r + o + 0] = S.x, w[o + 1] = w[r + o + 1] = S.y, w[o + 2] = w[r + o + 2] = S.z
        }
    }

    function Io(t, e) {
        Ui.call(this), this.type = "ShapeGeometry", "object" == typeof e && (console.warn("THREE.ShapeGeometry: Options parameter has been removed."), e = e.curveSegments), this.parameters = {
            shapes: t,
            curveSegments: e
        }, this.fromBufferGeometry(new Oo(t, e)), this.mergeVertices()
    }

    function Oo(t, e) {
        $i.call(this), this.type = "ShapeBufferGeometry", this.parameters = {
            shapes: t,
            curveSegments: e
        }, e = e || 12;
        var i = [],
            n = [],
            r = [],
            s = [],
            o = 0,
            a = 0;
        if (!1 === Array.isArray(t)) l(t);
        else
            for (var c = 0; c < t.length; c++) l(t[c]), this.addGroup(o, a, c), o += a, a = 0;

        function l(t) {
            var o, c, l, p = n.length / 3,
                h = t.extractPoints(e),
                u = h.shape,
                d = h.holes;
            if (!1 === yo.isClockWise(u))
                for (u = u.reverse(), o = 0, c = d.length; o < c; o++) l = d[o], !0 === yo.isClockWise(l) && (d[o] = l.reverse());
            var f = yo.triangulateShape(u, d);
            for (o = 0, c = d.length; o < c; o++) l = d[o], u = u.concat(l);
            for (o = 0, c = u.length; o < c; o++) {
                var m = u[o];
                n.push(m.x, m.y, 0), r.push(0, 0, 1), s.push(m.x, m.y)
            }
            for (o = 0, c = f.length; o < c; o++) {
                var g = f[o],
                    v = g[0] + p,
                    y = g[1] + p,
                    x = g[2] + p;
                i.push(v, y, x), a += 3
            }
        }
        this.setIndex(i), this.addAttribute("position", new qi(n, 3)), this.addAttribute("normal", new qi(r, 3)), this.addAttribute("uv", new qi(s, 2))
    }

    function Do(t, e) {
        if (e.shapes = [], Array.isArray(t))
            for (var i = 0, n = t.length; i < n; i++) {
                var r = t[i];
                e.shapes.push(r.uuid)
            } else e.shapes.push(t.uuid);
        return e
    }

    function Bo(t, e) {
        $i.call(this), this.type = "EdgesGeometry", this.parameters = {
            thresholdAngle: e
        }, e = void 0 !== e ? e : 1;
        var i, n, r, s, o = [],
            a = Math.cos(qe.DEG2RAD * e),
            c = [0, 0],
            l = {},
            p = ["a", "b", "c"];
        t.isBufferGeometry ? (s = new Ui).fromBufferGeometry(t) : s = t.clone(), s.mergeVertices(), s.computeFaceNormals();
        for (var h = s.vertices, u = s.faces, d = 0, f = u.length; d < f; d++)
            for (var m = u[d], g = 0; g < 3; g++) i = m[p[g]], n = m[p[(g + 1) % 3]], c[0] = Math.min(i, n), c[1] = Math.max(i, n), void 0 === l[r = c[0] + "," + c[1]] ? l[r] = {
                index1: c[0],
                index2: c[1],
                face1: d,
                face2: void 0
            } : l[r].face2 = d;
        for (r in l) {
            var v = l[r];
            if (void 0 === v.face2 || u[v.face1].normal.dot(u[v.face2].normal) <= a) {
                var y = h[v.index1];
                o.push(y.x, y.y, y.z), y = h[v.index2], o.push(y.x, y.y, y.z)
            }
        }
        this.addAttribute("position", new qi(o, 3))
    }

    function zo(t, e, i, n, r, s, o, a) {
        Ui.call(this), this.type = "CylinderGeometry", this.parameters = {
            radiusTop: t,
            radiusBottom: e,
            height: i,
            radialSegments: n,
            heightSegments: r,
            openEnded: s,
            thetaStart: o,
            thetaLength: a
        }, this.fromBufferGeometry(new No(t, e, i, n, r, s, o, a)), this.mergeVertices()
    }

    function No(t, e, i, n, r, s, o, a) {
        $i.call(this), this.type = "CylinderBufferGeometry", this.parameters = {
            radiusTop: t,
            radiusBottom: e,
            height: i,
            radialSegments: n,
            heightSegments: r,
            openEnded: s,
            thetaStart: o,
            thetaLength: a
        };
        var c = this;
        t = void 0 !== t ? t : 1, e = void 0 !== e ? e : 1, i = i || 1, n = Math.floor(n) || 8, r = Math.floor(r) || 1, s = void 0 !== s && s, o = void 0 !== o ? o : 0, a = void 0 !== a ? a : 2 * Math.PI;
        var l = [],
            p = [],
            h = [],
            u = [],
            d = 0,
            f = [],
            m = i / 2,
            g = 0;

        function v(i) {
            var r, s, f, v = new Ze,
                y = new Qe,
                x = 0,
                w = !0 === i ? t : e,
                b = !0 === i ? 1 : -1;
            for (s = d, r = 1; r <= n; r++) p.push(0, m * b, 0), h.push(0, b, 0), u.push(.5, .5), d++;
            for (f = d, r = 0; r <= n; r++) {
                var M = r / n * a + o,
                    S = Math.cos(M),
                    _ = Math.sin(M);
                y.x = w * _, y.y = m * b, y.z = w * S, p.push(y.x, y.y, y.z), h.push(0, b, 0), v.x = .5 * S + .5, v.y = .5 * _ * b + .5, u.push(v.x, v.y), d++
            }
            for (r = 0; r < n; r++) {
                var T = s + r,
                    E = f + r;
                !0 === i ? l.push(E, E + 1, T) : l.push(E + 1, E, T), x += 3
            }
            c.addGroup(g, x, !0 === i ? 1 : 2), g += x
        }! function() {
            var s, v, y = new Qe,
                x = new Qe,
                w = 0,
                b = (e - t) / i;
            for (v = 0; v <= r; v++) {
                var M = [],
                    S = v / r,
                    _ = S * (e - t) + t;
                for (s = 0; s <= n; s++) {
                    var T = s / n,
                        E = T * a + o,
                        A = Math.sin(E),
                        L = Math.cos(E);
                    x.x = _ * A, x.y = -S * i + m, x.z = _ * L, p.push(x.x, x.y, x.z), y.set(A, b, L).normalize(), h.push(y.x, y.y, y.z), u.push(T, 1 - S), M.push(d++)
                }
                f.push(M)
            }
            for (s = 0; s < n; s++)
                for (v = 0; v < r; v++) {
                    var k = f[v][s],
                        R = f[v + 1][s],
                        P = f[v + 1][s + 1],
                        C = f[v][s + 1];
                    l.push(k, R, C), l.push(R, P, C), w += 6
                }
            c.addGroup(g, w, 0), g += w
        }(), !1 === s && (t > 0 && v(!0), e > 0 && v(!1)), this.setIndex(l), this.addAttribute("position", new qi(p, 3)), this.addAttribute("normal", new qi(h, 3)), this.addAttribute("uv", new qi(u, 2))
    }

    function Uo(t, e, i, n, r, s, o) {
        zo.call(this, 0, t, e, i, n, r, s, o), this.type = "ConeGeometry", this.parameters = {
            radius: t,
            height: e,
            radialSegments: i,
            heightSegments: n,
            openEnded: r,
            thetaStart: s,
            thetaLength: o
        }
    }

    function Fo(t, e, i, n, r, s, o) {
        No.call(this, 0, t, e, i, n, r, s, o), this.type = "ConeBufferGeometry", this.parameters = {
            radius: t,
            height: e,
            radialSegments: i,
            heightSegments: n,
            openEnded: r,
            thetaStart: s,
            thetaLength: o
        }
    }

    function Ho(t, e, i, n) {
        Ui.call(this), this.type = "CircleGeometry", this.parameters = {
            radius: t,
            segments: e,
            thetaStart: i,
            thetaLength: n
        }, this.fromBufferGeometry(new jo(t, e, i, n)), this.mergeVertices()
    }

    function jo(t, e, i, n) {
        $i.call(this), this.type = "CircleBufferGeometry", this.parameters = {
            radius: t,
            segments: e,
            thetaStart: i,
            thetaLength: n
        }, t = t || 1, e = void 0 !== e ? Math.max(3, e) : 8, i = void 0 !== i ? i : 0, n = void 0 !== n ? n : 2 * Math.PI;
        var r, s, o = [],
            a = [],
            c = [],
            l = [],
            p = new Qe,
            h = new Ze;
        for (a.push(0, 0, 0), c.push(0, 0, 1), l.push(.5, .5), s = 0, r = 3; s <= e; s++, r += 3) {
            var u = i + s / e * n;
            p.x = t * Math.cos(u), p.y = t * Math.sin(u), a.push(p.x, p.y, p.z), c.push(0, 0, 1), h.x = (a[r] / t + 1) / 2, h.y = (a[r + 1] / t + 1) / 2, l.push(h.x, h.y)
        }
        for (r = 1; r <= e; r++) o.push(r, r + 1, 0);
        this.setIndex(o), this.addAttribute("position", new qi(a, 3)), this.addAttribute("normal", new qi(c, 3)), this.addAttribute("uv", new qi(l, 2))
    }
    To.prototype = Object.create(Ui.prototype), To.prototype.constructor = To, Eo.prototype = Object.create(Mo.prototype), Eo.prototype.constructor = Eo, Ao.prototype = Object.create(Ui.prototype), Ao.prototype.constructor = Ao, Lo.prototype = Object.create($i.prototype), Lo.prototype.constructor = Lo, ko.prototype = Object.create(Ui.prototype), ko.prototype.constructor = ko, Ro.prototype = Object.create($i.prototype), Ro.prototype.constructor = Ro, Po.prototype = Object.create(Ui.prototype), Po.prototype.constructor = Po, Co.prototype = Object.create($i.prototype), Co.prototype.constructor = Co, Io.prototype = Object.create(Ui.prototype), Io.prototype.constructor = Io, Io.prototype.toJSON = function() {
        var t = Ui.prototype.toJSON.call(this);
        return Do(this.parameters.shapes, t)
    }, Oo.prototype = Object.create($i.prototype), Oo.prototype.constructor = Oo, Oo.prototype.toJSON = function() {
        var t = $i.prototype.toJSON.call(this);
        return Do(this.parameters.shapes, t)
    }, Bo.prototype = Object.create($i.prototype), Bo.prototype.constructor = Bo, zo.prototype = Object.create(Ui.prototype), zo.prototype.constructor = zo, No.prototype = Object.create($i.prototype), No.prototype.constructor = No, Uo.prototype = Object.create(zo.prototype), Uo.prototype.constructor = Uo, Fo.prototype = Object.create(No.prototype), Fo.prototype.constructor = Fo, Ho.prototype = Object.create(Ui.prototype), Ho.prototype.constructor = Ho, jo.prototype = Object.create($i.prototype), jo.prototype.constructor = jo;
    var Go = Object.freeze({
        WireframeGeometry: Rs,
        ParametricGeometry: Ps,
        ParametricBufferGeometry: Cs,
        TetrahedronGeometry: Ds,
        TetrahedronBufferGeometry: Bs,
        OctahedronGeometry: zs,
        OctahedronBufferGeometry: Ns,
        IcosahedronGeometry: Us,
        IcosahedronBufferGeometry: Fs,
        DodecahedronGeometry: Hs,
        DodecahedronBufferGeometry: js,
        PolyhedronGeometry: Is,
        PolyhedronBufferGeometry: Os,
        TubeGeometry: Gs,
        TubeBufferGeometry: Vs,
        TorusKnotGeometry: Ws,
        TorusKnotBufferGeometry: Ys,
        TorusGeometry: Xs,
        TorusBufferGeometry: qs,
        TextGeometry: To,
        TextBufferGeometry: Eo,
        SphereGeometry: Ao,
        SphereBufferGeometry: Lo,
        RingGeometry: ko,
        RingBufferGeometry: Ro,
        PlaneGeometry: nn,
        PlaneBufferGeometry: rn,
        LatheGeometry: Po,
        LatheBufferGeometry: Co,
        ShapeGeometry: Io,
        ShapeBufferGeometry: Oo,
        ExtrudeGeometry: bo,
        ExtrudeBufferGeometry: Mo,
        EdgesGeometry: Bo,
        ConeGeometry: Uo,
        ConeBufferGeometry: Fo,
        CylinderGeometry: zo,
        CylinderBufferGeometry: No,
        CircleGeometry: Ho,
        CircleBufferGeometry: jo,
        BoxGeometry: tn,
        BoxBufferGeometry: en
    });

    function Vo(t) {
        vn.call(this), this.type = "ShadowMaterial", this.color = new xi(0), this.transparent = !0, this.setValues(t)
    }

    function Wo(t) {
        xn.call(this, t), this.type = "RawShaderMaterial"
    }

    function Yo(t) {
        vn.call(this), this.defines = {
            STANDARD: ""
        }, this.type = "MeshStandardMaterial", this.color = new xi(16777215), this.roughness = .5, this.metalness = .5, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new xi(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Ye, this.normalScale = new Ze(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.roughnessMap = null, this.metalnessMap = null, this.alphaMap = null, this.envMap = null, this.envMapIntensity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(t)
    }

    function Xo(t) {
        Yo.call(this), this.defines = {
            PHYSICAL: ""
        }, this.type = "MeshPhysicalMaterial", this.reflectivity = .5, this.clearCoat = 0, this.clearCoatRoughness = 0, this.setValues(t)
    }

    function qo(t) {
        vn.call(this), this.type = "MeshPhongMaterial", this.color = new xi(16777215), this.specular = new xi(1118481), this.shininess = 30, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new xi(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Ye, this.normalScale = new Ze(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = pt, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(t)
    }

    function Zo(t) {
        qo.call(this), this.defines = {
            TOON: ""
        }, this.type = "MeshToonMaterial", this.gradientMap = null, this.setValues(t)
    }

    function Ko(t) {
        vn.call(this), this.type = "MeshNormalMaterial", this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Ye, this.normalScale = new Ze(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(t)
    }

    function Jo(t) {
        vn.call(this), this.type = "MeshLambertMaterial", this.color = new xi(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new xi(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = pt, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(t)
    }

    function Qo(t) {
        ws.call(this), this.type = "LineDashedMaterial", this.scale = 1, this.dashSize = 3, this.gapSize = 1, this.setValues(t)
    }
    Vo.prototype = Object.create(vn.prototype), Vo.prototype.constructor = Vo, Vo.prototype.isShadowMaterial = !0, Vo.prototype.copy = function(t) {
        return vn.prototype.copy.call(this, t), this.color.copy(t.color), this
    }, Wo.prototype = Object.create(xn.prototype), Wo.prototype.constructor = Wo, Wo.prototype.isRawShaderMaterial = !0, Yo.prototype = Object.create(vn.prototype), Yo.prototype.constructor = Yo, Yo.prototype.isMeshStandardMaterial = !0, Yo.prototype.copy = function(t) {
        return vn.prototype.copy.call(this, t), this.defines = {
            STANDARD: ""
        }, this.color.copy(t.color), this.roughness = t.roughness, this.metalness = t.metalness, this.map = t.map, this.lightMap = t.lightMap, this.lightMapIntensity = t.lightMapIntensity, this.aoMap = t.aoMap, this.aoMapIntensity = t.aoMapIntensity, this.emissive.copy(t.emissive), this.emissiveMap = t.emissiveMap, this.emissiveIntensity = t.emissiveIntensity, this.bumpMap = t.bumpMap, this.bumpScale = t.bumpScale, this.normalMap = t.normalMap, this.normalMapType = t.normalMapType, this.normalScale.copy(t.normalScale), this.displacementMap = t.displacementMap, this.displacementScale = t.displacementScale, this.displacementBias = t.displacementBias, this.roughnessMap = t.roughnessMap, this.metalnessMap = t.metalnessMap, this.alphaMap = t.alphaMap, this.envMap = t.envMap, this.envMapIntensity = t.envMapIntensity, this.refractionRatio = t.refractionRatio, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.wireframeLinecap = t.wireframeLinecap, this.wireframeLinejoin = t.wireframeLinejoin, this.skinning = t.skinning, this.morphTargets = t.morphTargets, this.morphNormals = t.morphNormals, this
    }, Xo.prototype = Object.create(Yo.prototype), Xo.prototype.constructor = Xo, Xo.prototype.isMeshPhysicalMaterial = !0, Xo.prototype.copy = function(t) {
        return Yo.prototype.copy.call(this, t), this.defines = {
            PHYSICAL: ""
        }, this.reflectivity = t.reflectivity, this.clearCoat = t.clearCoat, this.clearCoatRoughness = t.clearCoatRoughness, this
    }, qo.prototype = Object.create(vn.prototype), qo.prototype.constructor = qo, qo.prototype.isMeshPhongMaterial = !0, qo.prototype.copy = function(t) {
        return vn.prototype.copy.call(this, t), this.color.copy(t.color), this.specular.copy(t.specular), this.shininess = t.shininess, this.map = t.map, this.lightMap = t.lightMap, this.lightMapIntensity = t.lightMapIntensity, this.aoMap = t.aoMap, this.aoMapIntensity = t.aoMapIntensity, this.emissive.copy(t.emissive), this.emissiveMap = t.emissiveMap, this.emissiveIntensity = t.emissiveIntensity, this.bumpMap = t.bumpMap, this.bumpScale = t.bumpScale, this.normalMap = t.normalMap, this.normalMapType = t.normalMapType, this.normalScale.copy(t.normalScale), this.displacementMap = t.displacementMap, this.displacementScale = t.displacementScale, this.displacementBias = t.displacementBias, this.specularMap = t.specularMap, this.alphaMap = t.alphaMap, this.envMap = t.envMap, this.combine = t.combine, this.reflectivity = t.reflectivity, this.refractionRatio = t.refractionRatio, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.wireframeLinecap = t.wireframeLinecap, this.wireframeLinejoin = t.wireframeLinejoin, this.skinning = t.skinning, this.morphTargets = t.morphTargets, this.morphNormals = t.morphNormals, this
    }, Zo.prototype = Object.create(qo.prototype), Zo.prototype.constructor = Zo, Zo.prototype.isMeshToonMaterial = !0, Zo.prototype.copy = function(t) {
        return qo.prototype.copy.call(this, t), this.gradientMap = t.gradientMap, this
    }, Ko.prototype = Object.create(vn.prototype), Ko.prototype.constructor = Ko, Ko.prototype.isMeshNormalMaterial = !0, Ko.prototype.copy = function(t) {
        return vn.prototype.copy.call(this, t), this.bumpMap = t.bumpMap, this.bumpScale = t.bumpScale, this.normalMap = t.normalMap, this.normalMapType = t.normalMapType, this.normalScale.copy(t.normalScale), this.displacementMap = t.displacementMap, this.displacementScale = t.displacementScale, this.displacementBias = t.displacementBias, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.skinning = t.skinning, this.morphTargets = t.morphTargets, this.morphNormals = t.morphNormals, this
    }, Jo.prototype = Object.create(vn.prototype), Jo.prototype.constructor = Jo, Jo.prototype.isMeshLambertMaterial = !0, Jo.prototype.copy = function(t) {
        return vn.prototype.copy.call(this, t), this.color.copy(t.color), this.map = t.map, this.lightMap = t.lightMap, this.lightMapIntensity = t.lightMapIntensity, this.aoMap = t.aoMap, this.aoMapIntensity = t.aoMapIntensity, this.emissive.copy(t.emissive), this.emissiveMap = t.emissiveMap, this.emissiveIntensity = t.emissiveIntensity, this.specularMap = t.specularMap, this.alphaMap = t.alphaMap, this.envMap = t.envMap, this.combine = t.combine, this.reflectivity = t.reflectivity, this.refractionRatio = t.refractionRatio, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.wireframeLinecap = t.wireframeLinecap, this.wireframeLinejoin = t.wireframeLinejoin, this.skinning = t.skinning, this.morphTargets = t.morphTargets, this.morphNormals = t.morphNormals, this
    }, Qo.prototype = Object.create(ws.prototype), Qo.prototype.constructor = Qo, Qo.prototype.isLineDashedMaterial = !0, Qo.prototype.copy = function(t) {
        return ws.prototype.copy.call(this, t), this.scale = t.scale, this.dashSize = t.dashSize, this.gapSize = t.gapSize, this
    };
    var $o = Object.freeze({
            ShadowMaterial: Vo,
            SpriteMaterial: fs,
            RawShaderMaterial: Wo,
            ShaderMaterial: xn,
            PointsMaterial: _s,
            MeshPhysicalMaterial: Xo,
            MeshStandardMaterial: Yo,
            MeshPhongMaterial: qo,
            MeshToonMaterial: Zo,
            MeshNormalMaterial: Ko,
            MeshLambertMaterial: Jo,
            MeshDepthMaterial: Jr,
            MeshDistanceMaterial: Qr,
            MeshBasicMaterial: yn,
            LineDashedMaterial: Qo,
            LineBasicMaterial: ws,
            Material: vn
        }),
        ta = {
            enabled: !1,
            files: {},
            add: function(t, e) {
                !1 !== this.enabled && (this.files[t] = e)
            },
            get: function(t) {
                if (!1 !== this.enabled) return this.files[t]
            },
            remove: function(t) {
                delete this.files[t]
            },
            clear: function() {
                this.files = {}
            }
        };

    function ea(t, e, i) {
        var n = this,
            r = !1,
            s = 0,
            o = 0,
            a = void 0;
        this.onStart = void 0, this.onLoad = t, this.onProgress = e, this.onError = i, this.itemStart = function(t) {
            o++, !1 === r && void 0 !== n.onStart && n.onStart(t, s, o), r = !0
        }, this.itemEnd = function(t) {
            s++, void 0 !== n.onProgress && n.onProgress(t, s, o), s === o && (r = !1, void 0 !== n.onLoad && n.onLoad())
        }, this.itemError = function(t) {
            void 0 !== n.onError && n.onError(t)
        }, this.resolveURL = function(t) {
            return a ? a(t) : t
        }, this.setURLModifier = function(t) {
            return a = t, this
        }
    }
    var ia = new ea,
        na = {};

    function ra(t) {
        this.manager = void 0 !== t ? t : ia
    }

    function sa(t) {
        this.manager = void 0 !== t ? t : ia, this._parser = null
    }

    function oa(t) {
        this.manager = void 0 !== t ? t : ia, this._parser = null
    }

    function aa(t) {
        this.manager = void 0 !== t ? t : ia
    }

    function ca(t) {
        this.manager = void 0 !== t ? t : ia
    }

    function la(t) {
        this.manager = void 0 !== t ? t : ia
    }

    function pa() {
        this.type = "Curve", this.arcLengthDivisions = 200
    }

    function ha(t, e, i, n, r, s, o, a) {
        pa.call(this), this.type = "EllipseCurve", this.aX = t || 0, this.aY = e || 0, this.xRadius = i || 1, this.yRadius = n || 1, this.aStartAngle = r || 0, this.aEndAngle = s || 2 * Math.PI, this.aClockwise = o || !1, this.aRotation = a || 0
    }

    function ua(t, e, i, n, r, s) {
        ha.call(this, t, e, i, i, n, r, s), this.type = "ArcCurve"
    }

    function da() {
        var t = 0,
            e = 0,
            i = 0,
            n = 0;

        function r(r, s, o, a) {
            t = r, e = o, i = -3 * r + 3 * s - 2 * o - a, n = 2 * r - 2 * s + o + a
        }
        return {
            initCatmullRom: function(t, e, i, n, s) {
                r(e, i, s * (i - t), s * (n - e))
            },
            initNonuniformCatmullRom: function(t, e, i, n, s, o, a) {
                var c = (e - t) / s - (i - t) / (s + o) + (i - e) / o,
                    l = (i - e) / o - (n - e) / (o + a) + (n - i) / a;
                r(e, i, c *= o, l *= o)
            },
            calc: function(r) {
                var s = r * r;
                return t + e * r + i * s + n * (s * r)
            }
        }
    }
    Object.assign(ra.prototype, {
        load: function(t, e, i, n) {
            void 0 === t && (t = ""), void 0 !== this.path && (t = this.path + t), t = this.manager.resolveURL(t);
            var r = this,
                s = ta.get(t);
            if (void 0 !== s) return r.manager.itemStart(t), setTimeout(function() {
                e && e(s), r.manager.itemEnd(t)
            }, 0), s;
            if (void 0 === na[t]) {
                var o = t.match(/^data:(.*?)(;base64)?,(.*)$/);
                if (o) {
                    var a = o[1],
                        c = !!o[2],
                        l = o[3];
                    l = window.decodeURIComponent(l), c && (l = window.atob(l));
                    try {
                        var p, h = (this.responseType || "").toLowerCase();
                        switch (h) {
                            case "arraybuffer":
                            case "blob":
                                for (var u = new Uint8Array(l.length), d = 0; d < l.length; d++) u[d] = l.charCodeAt(d);
                                p = "blob" === h ? new Blob([u.buffer], {
                                    type: a
                                }) : u.buffer;
                                break;
                            case "document":
                                var f = new DOMParser;
                                p = f.parseFromString(l, a);
                                break;
                            case "json":
                                p = JSON.parse(l);
                                break;
                            default:
                                p = l
                        }
                        window.setTimeout(function() {
                            e && e(p), r.manager.itemEnd(t)
                        }, 0)
                    } catch (e) {
                        window.setTimeout(function() {
                            n && n(e), r.manager.itemEnd(t), r.manager.itemError(t)
                        }, 0)
                    }
                } else {
                    na[t] = [], na[t].push({
                        onLoad: e,
                        onProgress: i,
                        onError: n
                    });
                    var m = new XMLHttpRequest;
                    for (var g in m.open("GET", t, !0), m.addEventListener("load", function(e) {
                            var i = this.response;
                            ta.add(t, i);
                            var n = na[t];
                            if (delete na[t], 200 === this.status || 0 === this.status) {
                                0 === this.status && console.warn("THREE.FileLoader: HTTP Status 0 received.");
                                for (var s = 0, o = n.length; s < o; s++) {
                                    (a = n[s]).onLoad && a.onLoad(i)
                                }
                                r.manager.itemEnd(t)
                            } else {
                                for (s = 0, o = n.length; s < o; s++) {
                                    var a;
                                    (a = n[s]).onError && a.onError(e)
                                }
                                r.manager.itemEnd(t), r.manager.itemError(t)
                            }
                        }, !1), m.addEventListener("progress", function(e) {
                            for (var i = na[t], n = 0, r = i.length; n < r; n++) {
                                var s = i[n];
                                s.onProgress && s.onProgress(e)
                            }
                        }, !1), m.addEventListener("error", function(e) {
                            var i = na[t];
                            delete na[t];
                            for (var n = 0, s = i.length; n < s; n++) {
                                var o = i[n];
                                o.onError && o.onError(e)
                            }
                            r.manager.itemEnd(t), r.manager.itemError(t)
                        }, !1), void 0 !== this.responseType && (m.responseType = this.responseType), void 0 !== this.withCredentials && (m.withCredentials = this.withCredentials), m.overrideMimeType && m.overrideMimeType(void 0 !== this.mimeType ? this.mimeType : "text/plain"), this.requestHeader) m.setRequestHeader(g, this.requestHeader[g]);
                    m.send(null)
                }
                return r.manager.itemStart(t), m
            }
            na[t].push({
                onLoad: e,
                onProgress: i,
                onError: n
            })
        },
        setPath: function(t) {
            return this.path = t, this
        },
        setResponseType: function(t) {
            return this.responseType = t, this
        },
        setWithCredentials: function(t) {
            return this.withCredentials = t, this
        },
        setMimeType: function(t) {
            return this.mimeType = t, this
        },
        setRequestHeader: function(t) {
            return this.requestHeader = t, this
        }
    }), Object.assign(sa.prototype, {
        load: function(t, e, i, n) {
            var r = this,
                s = [],
                o = new As;
            o.image = s;
            var a = new ra(this.manager);

            function c(c) {
                a.load(t[c], function(t) {
                    var i = r._parser(t, !0);
                    s[c] = {
                        width: i.width,
                        height: i.height,
                        format: i.format,
                        mipmaps: i.mipmaps
                    }, 6 === (l += 1) && (1 === i.mipmapCount && (o.minFilter = Ct), o.format = i.format, o.needsUpdate = !0, e && e(o))
                }, i, n)
            }
            if (a.setPath(this.path), a.setResponseType("arraybuffer"), Array.isArray(t))
                for (var l = 0, p = 0, h = t.length; p < h; ++p) c(p);
            else a.load(t, function(t) {
                var i = r._parser(t, !0);
                if (i.isCubemap)
                    for (var n = i.mipmaps.length / i.mipmapCount, a = 0; a < n; a++) {
                        s[a] = {
                            mipmaps: []
                        };
                        for (var c = 0; c < i.mipmapCount; c++) s[a].mipmaps.push(i.mipmaps[a * i.mipmapCount + c]), s[a].format = i.format, s[a].width = i.width, s[a].height = i.height
                    } else o.image.width = i.width, o.image.height = i.height, o.mipmaps = i.mipmaps;
                1 === i.mipmapCount && (o.minFilter = Ct), o.format = i.format, o.needsUpdate = !0, e && e(o)
            }, i, n);
            return o
        },
        setPath: function(t) {
            return this.path = t, this
        }
    }), Object.assign(oa.prototype, {
        load: function(t, e, i, n) {
            var r = this,
                s = new pi,
                o = new ra(this.manager);
            return o.setResponseType("arraybuffer"), o.load(t, function(t) {
                var i = r._parser(t);
                i && (void 0 !== i.image ? s.image = i.image : void 0 !== i.data && (s.image.width = i.width, s.image.height = i.height, s.image.data = i.data), s.wrapS = void 0 !== i.wrapS ? i.wrapS : At, s.wrapT = void 0 !== i.wrapT ? i.wrapT : At, s.magFilter = void 0 !== i.magFilter ? i.magFilter : Ct, s.minFilter = void 0 !== i.minFilter ? i.minFilter : Ot, s.anisotropy = void 0 !== i.anisotropy ? i.anisotropy : 1, void 0 !== i.format && (s.format = i.format), void 0 !== i.type && (s.type = i.type), void 0 !== i.mipmaps && (s.mipmaps = i.mipmaps), 1 === i.mipmapCount && (s.minFilter = Ct), s.needsUpdate = !0, e && e(s, i))
            }, i, n), s
        }
    }), Object.assign(aa.prototype, {
        crossOrigin: "anonymous",
        load: function(t, e, i, n) {
            void 0 === t && (t = ""), void 0 !== this.path && (t = this.path + t), t = this.manager.resolveURL(t);
            var r = this,
                s = ta.get(t);
            if (void 0 !== s) return r.manager.itemStart(t), setTimeout(function() {
                e && e(s), r.manager.itemEnd(t)
            }, 0), s;
            var o = document.createElementNS("http://www.w3.org/1999/xhtml", "img");

            function a() {
                o.removeEventListener("load", a, !1), o.removeEventListener("error", c, !1), ta.add(t, this), e && e(this), r.manager.itemEnd(t)
            }

            function c(e) {
                o.removeEventListener("load", a, !1), o.removeEventListener("error", c, !1), n && n(e), r.manager.itemEnd(t), r.manager.itemError(t)
            }
            return o.addEventListener("load", a, !1), o.addEventListener("error", c, !1), "data:" !== t.substr(0, 5) && void 0 !== this.crossOrigin && (o.crossOrigin = this.crossOrigin), r.manager.itemStart(t), o.src = t, o
        },
        setCrossOrigin: function(t) {
            return this.crossOrigin = t, this
        },
        setPath: function(t) {
            return this.path = t, this
        }
    }), Object.assign(ca.prototype, {
        crossOrigin: "anonymous",
        load: function(t, e, i, n) {
            var r = new On,
                s = new aa(this.manager);
            s.setCrossOrigin(this.crossOrigin), s.setPath(this.path);
            var o = 0;

            function a(i) {
                s.load(t[i], function(t) {
                    r.images[i] = t, 6 === ++o && (r.needsUpdate = !0, e && e(r))
                }, void 0, n)
            }
            for (var c = 0; c < t.length; ++c) a(c);
            return r
        },
        setCrossOrigin: function(t) {
            return this.crossOrigin = t, this
        },
        setPath: function(t) {
            return this.path = t, this
        }
    }), Object.assign(la.prototype, {
        crossOrigin: "anonymous",
        load: function(t, e, i, n) {
            var r = new oi,
                s = new aa(this.manager);
            return s.setCrossOrigin(this.crossOrigin), s.setPath(this.path), s.load(t, function(i) {
                r.image = i;
                var n = t.search(/\.(jpg|jpeg)$/) > 0 || 0 === t.search(/^data\:image\/jpeg/);
                r.format = n ? qt : Zt, r.needsUpdate = !0, void 0 !== e && e(r)
            }, i, n), r
        },
        setCrossOrigin: function(t) {
            return this.crossOrigin = t, this
        },
        setPath: function(t) {
            return this.path = t, this
        }
    }), Object.assign(pa.prototype, {
        getPoint: function() {
            return console.warn("THREE.Curve: .getPoint() not implemented."), null
        },
        getPointAt: function(t, e) {
            var i = this.getUtoTmapping(t);
            return this.getPoint(i, e)
        },
        getPoints: function(t) {
            void 0 === t && (t = 5);
            for (var e = [], i = 0; i <= t; i++) e.push(this.getPoint(i / t));
            return e
        },
        getSpacedPoints: function(t) {
            void 0 === t && (t = 5);
            for (var e = [], i = 0; i <= t; i++) e.push(this.getPointAt(i / t));
            return e
        },
        getLength: function() {
            var t = this.getLengths();
            return t[t.length - 1]
        },
        getLengths: function(t) {
            if (void 0 === t && (t = this.arcLengthDivisions), this.cacheArcLengths && this.cacheArcLengths.length === t + 1 && !this.needsUpdate) return this.cacheArcLengths;
            this.needsUpdate = !1;
            var e, i, n = [],
                r = this.getPoint(0),
                s = 0;
            for (n.push(0), i = 1; i <= t; i++) s += (e = this.getPoint(i / t)).distanceTo(r), n.push(s), r = e;
            return this.cacheArcLengths = n, n
        },
        updateArcLengths: function() {
            this.needsUpdate = !0, this.getLengths()
        },
        getUtoTmapping: function(t, e) {
            var i, n = this.getLengths(),
                r = 0,
                s = n.length;
            i = e || t * n[s - 1];
            for (var o, a = 0, c = s - 1; a <= c;)
                if ((o = n[r = Math.floor(a + (c - a) / 2)] - i) < 0) a = r + 1;
                else {
                    if (!(o > 0)) {
                        c = r;
                        break
                    }
                    c = r - 1
                } if (n[r = c] === i) return r / (s - 1);
            var l = n[r];
            return (r + (i - l) / (n[r + 1] - l)) / (s - 1)
        },
        getTangent: function(t) {
            var e = t - 1e-4,
                i = t + 1e-4;
            e < 0 && (e = 0), i > 1 && (i = 1);
            var n = this.getPoint(e);
            return this.getPoint(i).clone().sub(n).normalize()
        },
        getTangentAt: function(t) {
            var e = this.getUtoTmapping(t);
            return this.getTangent(e)
        },
        computeFrenetFrames: function(t, e) {
            var i, n, r, s = new Qe,
                o = [],
                a = [],
                c = [],
                l = new Qe,
                p = new Ke;
            for (i = 0; i <= t; i++) n = i / t, o[i] = this.getTangentAt(n), o[i].normalize();
            a[0] = new Qe, c[0] = new Qe;
            var h = Number.MAX_VALUE,
                u = Math.abs(o[0].x),
                d = Math.abs(o[0].y),
                f = Math.abs(o[0].z);
            for (u <= h && (h = u, s.set(1, 0, 0)), d <= h && (h = d, s.set(0, 1, 0)), f <= h && s.set(0, 0, 1), l.crossVectors(o[0], s).normalize(), a[0].crossVectors(o[0], l), c[0].crossVectors(o[0], a[0]), i = 1; i <= t; i++) a[i] = a[i - 1].clone(), c[i] = c[i - 1].clone(), l.crossVectors(o[i - 1], o[i]), l.length() > Number.EPSILON && (l.normalize(), r = Math.acos(qe.clamp(o[i - 1].dot(o[i]), -1, 1)), a[i].applyMatrix4(p.makeRotationAxis(l, r))), c[i].crossVectors(o[i], a[i]);
            if (!0 === e)
                for (r = Math.acos(qe.clamp(a[0].dot(a[t]), -1, 1)), r /= t, o[0].dot(l.crossVectors(a[0], a[t])) > 0 && (r = -r), i = 1; i <= t; i++) a[i].applyMatrix4(p.makeRotationAxis(o[i], r * i)), c[i].crossVectors(o[i], a[i]);
            return {
                tangents: o,
                normals: a,
                binormals: c
            }
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.arcLengthDivisions = t.arcLengthDivisions, this
        },
        toJSON: function() {
            var t = {
                metadata: {
                    version: 4.5,
                    type: "Curve",
                    generator: "Curve.toJSON"
                }
            };
            return t.arcLengthDivisions = this.arcLengthDivisions, t.type = this.type, t
        },
        fromJSON: function(t) {
            return this.arcLengthDivisions = t.arcLengthDivisions, this
        }
    }), ha.prototype = Object.create(pa.prototype), ha.prototype.constructor = ha, ha.prototype.isEllipseCurve = !0, ha.prototype.getPoint = function(t, e) {
        for (var i = e || new Ze, n = 2 * Math.PI, r = this.aEndAngle - this.aStartAngle, s = Math.abs(r) < Number.EPSILON; r < 0;) r += n;
        for (; r > n;) r -= n;
        r < Number.EPSILON && (r = s ? 0 : n), !0 !== this.aClockwise || s || (r === n ? r = -n : r -= n);
        var o = this.aStartAngle + t * r,
            a = this.aX + this.xRadius * Math.cos(o),
            c = this.aY + this.yRadius * Math.sin(o);
        if (0 !== this.aRotation) {
            var l = Math.cos(this.aRotation),
                p = Math.sin(this.aRotation),
                h = a - this.aX,
                u = c - this.aY;
            a = h * l - u * p + this.aX, c = h * p + u * l + this.aY
        }
        return i.set(a, c)
    }, ha.prototype.copy = function(t) {
        return pa.prototype.copy.call(this, t), this.aX = t.aX, this.aY = t.aY, this.xRadius = t.xRadius, this.yRadius = t.yRadius, this.aStartAngle = t.aStartAngle, this.aEndAngle = t.aEndAngle, this.aClockwise = t.aClockwise, this.aRotation = t.aRotation, this
    }, ha.prototype.toJSON = function() {
        var t = pa.prototype.toJSON.call(this);
        return t.aX = this.aX, t.aY = this.aY, t.xRadius = this.xRadius, t.yRadius = this.yRadius, t.aStartAngle = this.aStartAngle, t.aEndAngle = this.aEndAngle, t.aClockwise = this.aClockwise, t.aRotation = this.aRotation, t
    }, ha.prototype.fromJSON = function(t) {
        return pa.prototype.fromJSON.call(this, t), this.aX = t.aX, this.aY = t.aY, this.xRadius = t.xRadius, this.yRadius = t.yRadius, this.aStartAngle = t.aStartAngle, this.aEndAngle = t.aEndAngle, this.aClockwise = t.aClockwise, this.aRotation = t.aRotation, this
    }, ua.prototype = Object.create(ha.prototype), ua.prototype.constructor = ua, ua.prototype.isArcCurve = !0;
    var fa = new Qe,
        ma = new da,
        ga = new da,
        va = new da;

    function ya(t, e, i, n) {
        pa.call(this), this.type = "CatmullRomCurve3", this.points = t || [], this.closed = e || !1, this.curveType = i || "centripetal", this.tension = n || .5
    }

    function xa(t, e, i, n, r) {
        var s = .5 * (n - e),
            o = .5 * (r - i),
            a = t * t;
        return (2 * i - 2 * n + s + o) * (t * a) + (-3 * i + 3 * n - 2 * s - o) * a + s * t + i
    }

    function wa(t, e, i, n) {
        return function(t, e) {
            var i = 1 - t;
            return i * i * e
        }(t, e) + function(t, e) {
            return 2 * (1 - t) * t * e
        }(t, i) + function(t, e) {
            return t * t * e
        }(t, n)
    }

    function ba(t, e, i, n, r) {
        return function(t, e) {
            var i = 1 - t;
            return i * i * i * e
        }(t, e) + function(t, e) {
            var i = 1 - t;
            return 3 * i * i * t * e
        }(t, i) + function(t, e) {
            return 3 * (1 - t) * t * t * e
        }(t, n) + function(t, e) {
            return t * t * t * e
        }(t, r)
    }

    function Ma(t, e, i, n) {
        pa.call(this), this.type = "CubicBezierCurve", this.v0 = t || new Ze, this.v1 = e || new Ze, this.v2 = i || new Ze, this.v3 = n || new Ze
    }

    function Sa(t, e, i, n) {
        pa.call(this), this.type = "CubicBezierCurve3", this.v0 = t || new Qe, this.v1 = e || new Qe, this.v2 = i || new Qe, this.v3 = n || new Qe
    }

    function _a(t, e) {
        pa.call(this), this.type = "LineCurve", this.v1 = t || new Ze, this.v2 = e || new Ze
    }

    function Ta(t, e) {
        pa.call(this), this.type = "LineCurve3", this.v1 = t || new Qe, this.v2 = e || new Qe
    }

    function Ea(t, e, i) {
        pa.call(this), this.type = "QuadraticBezierCurve", this.v0 = t || new Ze, this.v1 = e || new Ze, this.v2 = i || new Ze
    }

    function Aa(t, e, i) {
        pa.call(this), this.type = "QuadraticBezierCurve3", this.v0 = t || new Qe, this.v1 = e || new Qe, this.v2 = i || new Qe
    }

    function La(t) {
        pa.call(this), this.type = "SplineCurve", this.points = t || []
    }
    ya.prototype = Object.create(pa.prototype), ya.prototype.constructor = ya, ya.prototype.isCatmullRomCurve3 = !0, ya.prototype.getPoint = function(t, e) {
        var i, n, r, s, o = e || new Qe,
            a = this.points,
            c = a.length,
            l = (c - (this.closed ? 0 : 1)) * t,
            p = Math.floor(l),
            h = l - p;
        if (this.closed ? p += p > 0 ? 0 : (Math.floor(Math.abs(p) / c) + 1) * c : 0 === h && p === c - 1 && (p = c - 2, h = 1), this.closed || p > 0 ? i = a[(p - 1) % c] : (fa.subVectors(a[0], a[1]).add(a[0]), i = fa), n = a[p % c], r = a[(p + 1) % c], this.closed || p + 2 < c ? s = a[(p + 2) % c] : (fa.subVectors(a[c - 1], a[c - 2]).add(a[c - 1]), s = fa), "centripetal" === this.curveType || "chordal" === this.curveType) {
            var u = "chordal" === this.curveType ? .5 : .25,
                d = Math.pow(i.distanceToSquared(n), u),
                f = Math.pow(n.distanceToSquared(r), u),
                m = Math.pow(r.distanceToSquared(s), u);
            f < 1e-4 && (f = 1), d < 1e-4 && (d = f), m < 1e-4 && (m = f), ma.initNonuniformCatmullRom(i.x, n.x, r.x, s.x, d, f, m), ga.initNonuniformCatmullRom(i.y, n.y, r.y, s.y, d, f, m), va.initNonuniformCatmullRom(i.z, n.z, r.z, s.z, d, f, m)
        } else "catmullrom" === this.curveType && (ma.initCatmullRom(i.x, n.x, r.x, s.x, this.tension), ga.initCatmullRom(i.y, n.y, r.y, s.y, this.tension), va.initCatmullRom(i.z, n.z, r.z, s.z, this.tension));
        return o.set(ma.calc(h), ga.calc(h), va.calc(h)), o
    }, ya.prototype.copy = function(t) {
        pa.prototype.copy.call(this, t), this.points = [];
        for (var e = 0, i = t.points.length; e < i; e++) {
            var n = t.points[e];
            this.points.push(n.clone())
        }
        return this.closed = t.closed, this.curveType = t.curveType, this.tension = t.tension, this
    }, ya.prototype.toJSON = function() {
        var t = pa.prototype.toJSON.call(this);
        t.points = [];
        for (var e = 0, i = this.points.length; e < i; e++) {
            var n = this.points[e];
            t.points.push(n.toArray())
        }
        return t.closed = this.closed, t.curveType = this.curveType, t.tension = this.tension, t
    }, ya.prototype.fromJSON = function(t) {
        pa.prototype.fromJSON.call(this, t), this.points = [];
        for (var e = 0, i = t.points.length; e < i; e++) {
            var n = t.points[e];
            this.points.push((new Qe).fromArray(n))
        }
        return this.closed = t.closed, this.curveType = t.curveType, this.tension = t.tension, this
    }, Ma.prototype = Object.create(pa.prototype), Ma.prototype.constructor = Ma, Ma.prototype.isCubicBezierCurve = !0, Ma.prototype.getPoint = function(t, e) {
        var i = e || new Ze,
            n = this.v0,
            r = this.v1,
            s = this.v2,
            o = this.v3;
        return i.set(ba(t, n.x, r.x, s.x, o.x), ba(t, n.y, r.y, s.y, o.y)), i
    }, Ma.prototype.copy = function(t) {
        return pa.prototype.copy.call(this, t), this.v0.copy(t.v0), this.v1.copy(t.v1), this.v2.copy(t.v2), this.v3.copy(t.v3), this
    }, Ma.prototype.toJSON = function() {
        var t = pa.prototype.toJSON.call(this);
        return t.v0 = this.v0.toArray(), t.v1 = this.v1.toArray(), t.v2 = this.v2.toArray(), t.v3 = this.v3.toArray(), t
    }, Ma.prototype.fromJSON = function(t) {
        return pa.prototype.fromJSON.call(this, t), this.v0.fromArray(t.v0), this.v1.fromArray(t.v1), this.v2.fromArray(t.v2), this.v3.fromArray(t.v3), this
    }, Sa.prototype = Object.create(pa.prototype), Sa.prototype.constructor = Sa, Sa.prototype.isCubicBezierCurve3 = !0, Sa.prototype.getPoint = function(t, e) {
        var i = e || new Qe,
            n = this.v0,
            r = this.v1,
            s = this.v2,
            o = this.v3;
        return i.set(ba(t, n.x, r.x, s.x, o.x), ba(t, n.y, r.y, s.y, o.y), ba(t, n.z, r.z, s.z, o.z)), i
    }, Sa.prototype.copy = function(t) {
        return pa.prototype.copy.call(this, t), this.v0.copy(t.v0), this.v1.copy(t.v1), this.v2.copy(t.v2), this.v3.copy(t.v3), this
    }, Sa.prototype.toJSON = function() {
        var t = pa.prototype.toJSON.call(this);
        return t.v0 = this.v0.toArray(), t.v1 = this.v1.toArray(), t.v2 = this.v2.toArray(), t.v3 = this.v3.toArray(), t
    }, Sa.prototype.fromJSON = function(t) {
        return pa.prototype.fromJSON.call(this, t), this.v0.fromArray(t.v0), this.v1.fromArray(t.v1), this.v2.fromArray(t.v2), this.v3.fromArray(t.v3), this
    }, _a.prototype = Object.create(pa.prototype), _a.prototype.constructor = _a, _a.prototype.isLineCurve = !0, _a.prototype.getPoint = function(t, e) {
        var i = e || new Ze;
        return 1 === t ? i.copy(this.v2) : (i.copy(this.v2).sub(this.v1), i.multiplyScalar(t).add(this.v1)), i
    }, _a.prototype.getPointAt = function(t, e) {
        return this.getPoint(t, e)
    }, _a.prototype.getTangent = function() {
        return this.v2.clone().sub(this.v1).normalize()
    }, _a.prototype.copy = function(t) {
        return pa.prototype.copy.call(this, t), this.v1.copy(t.v1), this.v2.copy(t.v2), this
    }, _a.prototype.toJSON = function() {
        var t = pa.prototype.toJSON.call(this);
        return t.v1 = this.v1.toArray(), t.v2 = this.v2.toArray(), t
    }, _a.prototype.fromJSON = function(t) {
        return pa.prototype.fromJSON.call(this, t), this.v1.fromArray(t.v1), this.v2.fromArray(t.v2), this
    }, Ta.prototype = Object.create(pa.prototype), Ta.prototype.constructor = Ta, Ta.prototype.isLineCurve3 = !0, Ta.prototype.getPoint = function(t, e) {
        var i = e || new Qe;
        return 1 === t ? i.copy(this.v2) : (i.copy(this.v2).sub(this.v1), i.multiplyScalar(t).add(this.v1)), i
    }, Ta.prototype.getPointAt = function(t, e) {
        return this.getPoint(t, e)
    }, Ta.prototype.copy = function(t) {
        return pa.prototype.copy.call(this, t), this.v1.copy(t.v1), this.v2.copy(t.v2), this
    }, Ta.prototype.toJSON = function() {
        var t = pa.prototype.toJSON.call(this);
        return t.v1 = this.v1.toArray(), t.v2 = this.v2.toArray(), t
    }, Ta.prototype.fromJSON = function(t) {
        return pa.prototype.fromJSON.call(this, t), this.v1.fromArray(t.v1), this.v2.fromArray(t.v2), this
    }, Ea.prototype = Object.create(pa.prototype), Ea.prototype.constructor = Ea, Ea.prototype.isQuadraticBezierCurve = !0, Ea.prototype.getPoint = function(t, e) {
        var i = e || new Ze,
            n = this.v0,
            r = this.v1,
            s = this.v2;
        return i.set(wa(t, n.x, r.x, s.x), wa(t, n.y, r.y, s.y)), i
    }, Ea.prototype.copy = function(t) {
        return pa.prototype.copy.call(this, t), this.v0.copy(t.v0), this.v1.copy(t.v1), this.v2.copy(t.v2), this
    }, Ea.prototype.toJSON = function() {
        var t = pa.prototype.toJSON.call(this);
        return t.v0 = this.v0.toArray(), t.v1 = this.v1.toArray(), t.v2 = this.v2.toArray(), t
    }, Ea.prototype.fromJSON = function(t) {
        return pa.prototype.fromJSON.call(this, t), this.v0.fromArray(t.v0), this.v1.fromArray(t.v1), this.v2.fromArray(t.v2), this
    }, Aa.prototype = Object.create(pa.prototype), Aa.prototype.constructor = Aa, Aa.prototype.isQuadraticBezierCurve3 = !0, Aa.prototype.getPoint = function(t, e) {
        var i = e || new Qe,
            n = this.v0,
            r = this.v1,
            s = this.v2;
        return i.set(wa(t, n.x, r.x, s.x), wa(t, n.y, r.y, s.y), wa(t, n.z, r.z, s.z)), i
    }, Aa.prototype.copy = function(t) {
        return pa.prototype.copy.call(this, t), this.v0.copy(t.v0), this.v1.copy(t.v1), this.v2.copy(t.v2), this
    }, Aa.prototype.toJSON = function() {
        var t = pa.prototype.toJSON.call(this);
        return t.v0 = this.v0.toArray(), t.v1 = this.v1.toArray(), t.v2 = this.v2.toArray(), t
    }, Aa.prototype.fromJSON = function(t) {
        return pa.prototype.fromJSON.call(this, t), this.v0.fromArray(t.v0), this.v1.fromArray(t.v1), this.v2.fromArray(t.v2), this
    }, La.prototype = Object.create(pa.prototype), La.prototype.constructor = La, La.prototype.isSplineCurve = !0, La.prototype.getPoint = function(t, e) {
        var i = e || new Ze,
            n = this.points,
            r = (n.length - 1) * t,
            s = Math.floor(r),
            o = r - s,
            a = n[0 === s ? s : s - 1],
            c = n[s],
            l = n[s > n.length - 2 ? n.length - 1 : s + 1],
            p = n[s > n.length - 3 ? n.length - 1 : s + 2];
        return i.set(xa(o, a.x, c.x, l.x, p.x), xa(o, a.y, c.y, l.y, p.y)), i
    }, La.prototype.copy = function(t) {
        pa.prototype.copy.call(this, t), this.points = [];
        for (var e = 0, i = t.points.length; e < i; e++) {
            var n = t.points[e];
            this.points.push(n.clone())
        }
        return this
    }, La.prototype.toJSON = function() {
        var t = pa.prototype.toJSON.call(this);
        t.points = [];
        for (var e = 0, i = this.points.length; e < i; e++) {
            var n = this.points[e];
            t.points.push(n.toArray())
        }
        return t
    }, La.prototype.fromJSON = function(t) {
        pa.prototype.fromJSON.call(this, t), this.points = [];
        for (var e = 0, i = t.points.length; e < i; e++) {
            var n = t.points[e];
            this.points.push((new Ze).fromArray(n))
        }
        return this
    };
    var ka = Object.freeze({
        ArcCurve: ua,
        CatmullRomCurve3: ya,
        CubicBezierCurve: Ma,
        CubicBezierCurve3: Sa,
        EllipseCurve: ha,
        LineCurve: _a,
        LineCurve3: Ta,
        QuadraticBezierCurve: Ea,
        QuadraticBezierCurve3: Aa,
        SplineCurve: La
    });

    function Ra() {
        pa.call(this), this.type = "CurvePath", this.curves = [], this.autoClose = !1
    }

    function Pa(t) {
        Ra.call(this), this.type = "Path", this.currentPoint = new Ze, t && this.setFromPoints(t)
    }

    function Ca(t) {
        Pa.call(this, t), this.uuid = qe.generateUUID(), this.type = "Shape", this.holes = []
    }

    function Ia(t, e) {
        Ci.call(this), this.type = "Light", this.color = new xi(t), this.intensity = void 0 !== e ? e : 1, this.receiveShadow = void 0
    }

    function Oa(t, e, i) {
        Ia.call(this, t, i), this.type = "HemisphereLight", this.castShadow = void 0, this.position.copy(Ci.DefaultUp), this.updateMatrix(), this.groundColor = new xi(e)
    }

    function Da(t) {
        this.camera = t, this.bias = 0, this.radius = 1, this.mapSize = new Ze(512, 512), this.map = null, this.matrix = new Ke
    }

    function Ba() {
        Da.call(this, new rs(50, 1, .5, 500))
    }

    function za(t, e, i, n, r, s) {
        Ia.call(this, t, e), this.type = "SpotLight", this.position.copy(Ci.DefaultUp), this.updateMatrix(), this.target = new Ci, Object.defineProperty(this, "power", {
            get: function() {
                return this.intensity * Math.PI
            },
            set: function(t) {
                this.intensity = t / Math.PI
            }
        }), this.distance = void 0 !== i ? i : 0, this.angle = void 0 !== n ? n : Math.PI / 3, this.penumbra = void 0 !== r ? r : 0, this.decay = void 0 !== s ? s : 1, this.shadow = new Ba
    }

    function Na(t, e, i, n) {
        Ia.call(this, t, e), this.type = "PointLight", Object.defineProperty(this, "power", {
            get: function() {
                return 4 * this.intensity * Math.PI
            },
            set: function(t) {
                this.intensity = t / (4 * Math.PI)
            }
        }), this.distance = void 0 !== i ? i : 0, this.decay = void 0 !== n ? n : 1, this.shadow = new Da(new rs(90, 1, .5, 500))
    }

    function Ua() {
        Da.call(this, new Oi(-5, 5, 5, -5, .5, 500))
    }

    function Fa(t, e) {
        Ia.call(this, t, e), this.type = "DirectionalLight", this.position.copy(Ci.DefaultUp), this.updateMatrix(), this.target = new Ci, this.shadow = new Ua
    }

    function Ha(t, e) {
        Ia.call(this, t, e), this.type = "AmbientLight", this.castShadow = void 0
    }

    function ja(t, e, i, n) {
        Ia.call(this, t, e), this.type = "RectAreaLight", this.width = void 0 !== i ? i : 10, this.height = void 0 !== n ? n : 10
    }
    Ra.prototype = Object.assign(Object.create(pa.prototype), {
        constructor: Ra,
        add: function(t) {
            this.curves.push(t)
        },
        closePath: function() {
            var t = this.curves[0].getPoint(0),
                e = this.curves[this.curves.length - 1].getPoint(1);
            t.equals(e) || this.curves.push(new _a(e, t))
        },
        getPoint: function(t) {
            for (var e = t * this.getLength(), i = this.getCurveLengths(), n = 0; n < i.length;) {
                if (i[n] >= e) {
                    var r = i[n] - e,
                        s = this.curves[n],
                        o = s.getLength(),
                        a = 0 === o ? 0 : 1 - r / o;
                    return s.getPointAt(a)
                }
                n++
            }
            return null
        },
        getLength: function() {
            var t = this.getCurveLengths();
            return t[t.length - 1]
        },
        updateArcLengths: function() {
            this.needsUpdate = !0, this.cacheLengths = null, this.getCurveLengths()
        },
        getCurveLengths: function() {
            if (this.cacheLengths && this.cacheLengths.length === this.curves.length) return this.cacheLengths;
            for (var t = [], e = 0, i = 0, n = this.curves.length; i < n; i++) e += this.curves[i].getLength(), t.push(e);
            return this.cacheLengths = t, t
        },
        getSpacedPoints: function(t) {
            void 0 === t && (t = 40);
            for (var e = [], i = 0; i <= t; i++) e.push(this.getPoint(i / t));
            return this.autoClose && e.push(e[0]), e
        },
        getPoints: function(t) {
            t = t || 12;
            for (var e, i = [], n = 0, r = this.curves; n < r.length; n++)
                for (var s = r[n], o = s && s.isEllipseCurve ? 2 * t : s && (s.isLineCurve || s.isLineCurve3) ? 1 : s && s.isSplineCurve ? t * s.points.length : t, a = s.getPoints(o), c = 0; c < a.length; c++) {
                    var l = a[c];
                    e && e.equals(l) || (i.push(l), e = l)
                }
            return this.autoClose && i.length > 1 && !i[i.length - 1].equals(i[0]) && i.push(i[0]), i
        },
        copy: function(t) {
            pa.prototype.copy.call(this, t), this.curves = [];
            for (var e = 0, i = t.curves.length; e < i; e++) {
                var n = t.curves[e];
                this.curves.push(n.clone())
            }
            return this.autoClose = t.autoClose, this
        },
        toJSON: function() {
            var t = pa.prototype.toJSON.call(this);
            t.autoClose = this.autoClose, t.curves = [];
            for (var e = 0, i = this.curves.length; e < i; e++) {
                var n = this.curves[e];
                t.curves.push(n.toJSON())
            }
            return t
        },
        fromJSON: function(t) {
            pa.prototype.fromJSON.call(this, t), this.autoClose = t.autoClose, this.curves = [];
            for (var e = 0, i = t.curves.length; e < i; e++) {
                var n = t.curves[e];
                this.curves.push((new ka[n.type]).fromJSON(n))
            }
            return this
        }
    }), Pa.prototype = Object.assign(Object.create(Ra.prototype), {
        constructor: Pa,
        setFromPoints: function(t) {
            this.moveTo(t[0].x, t[0].y);
            for (var e = 1, i = t.length; e < i; e++) this.lineTo(t[e].x, t[e].y)
        },
        moveTo: function(t, e) {
            this.currentPoint.set(t, e)
        },
        lineTo: function(t, e) {
            var i = new _a(this.currentPoint.clone(), new Ze(t, e));
            this.curves.push(i), this.currentPoint.set(t, e)
        },
        quadraticCurveTo: function(t, e, i, n) {
            var r = new Ea(this.currentPoint.clone(), new Ze(t, e), new Ze(i, n));
            this.curves.push(r), this.currentPoint.set(i, n)
        },
        bezierCurveTo: function(t, e, i, n, r, s) {
            var o = new Ma(this.currentPoint.clone(), new Ze(t, e), new Ze(i, n), new Ze(r, s));
            this.curves.push(o), this.currentPoint.set(r, s)
        },
        splineThru: function(t) {
            var e = new La([this.currentPoint.clone()].concat(t));
            this.curves.push(e), this.currentPoint.copy(t[t.length - 1])
        },
        arc: function(t, e, i, n, r, s) {
            var o = this.currentPoint.x,
                a = this.currentPoint.y;
            this.absarc(t + o, e + a, i, n, r, s)
        },
        absarc: function(t, e, i, n, r, s) {
            this.absellipse(t, e, i, i, n, r, s)
        },
        ellipse: function(t, e, i, n, r, s, o, a) {
            var c = this.currentPoint.x,
                l = this.currentPoint.y;
            this.absellipse(t + c, e + l, i, n, r, s, o, a)
        },
        absellipse: function(t, e, i, n, r, s, o, a) {
            var c = new ha(t, e, i, n, r, s, o, a);
            if (this.curves.length > 0) {
                var l = c.getPoint(0);
                l.equals(this.currentPoint) || this.lineTo(l.x, l.y)
            }
            this.curves.push(c);
            var p = c.getPoint(1);
            this.currentPoint.copy(p)
        },
        copy: function(t) {
            return Ra.prototype.copy.call(this, t), this.currentPoint.copy(t.currentPoint), this
        },
        toJSON: function() {
            var t = Ra.prototype.toJSON.call(this);
            return t.currentPoint = this.currentPoint.toArray(), t
        },
        fromJSON: function(t) {
            return Ra.prototype.fromJSON.call(this, t), this.currentPoint.fromArray(t.currentPoint), this
        }
    }), Ca.prototype = Object.assign(Object.create(Pa.prototype), {
        constructor: Ca,
        getPointsHoles: function(t) {
            for (var e = [], i = 0, n = this.holes.length; i < n; i++) e[i] = this.holes[i].getPoints(t);
            return e
        },
        extractPoints: function(t) {
            return {
                shape: this.getPoints(t),
                holes: this.getPointsHoles(t)
            }
        },
        copy: function(t) {
            Pa.prototype.copy.call(this, t), this.holes = [];
            for (var e = 0, i = t.holes.length; e < i; e++) {
                var n = t.holes[e];
                this.holes.push(n.clone())
            }
            return this
        },
        toJSON: function() {
            var t = Pa.prototype.toJSON.call(this);
            t.uuid = this.uuid, t.holes = [];
            for (var e = 0, i = this.holes.length; e < i; e++) {
                var n = this.holes[e];
                t.holes.push(n.toJSON())
            }
            return t
        },
        fromJSON: function(t) {
            Pa.prototype.fromJSON.call(this, t), this.uuid = t.uuid, this.holes = [];
            for (var e = 0, i = t.holes.length; e < i; e++) {
                var n = t.holes[e];
                this.holes.push((new Pa).fromJSON(n))
            }
            return this
        }
    }), Ia.prototype = Object.assign(Object.create(Ci.prototype), {
        constructor: Ia,
        isLight: !0,
        copy: function(t) {
            return Ci.prototype.copy.call(this, t), this.color.copy(t.color), this.intensity = t.intensity, this
        },
        toJSON: function(t) {
            var e = Ci.prototype.toJSON.call(this, t);
            return e.object.color = this.color.getHex(), e.object.intensity = this.intensity, void 0 !== this.groundColor && (e.object.groundColor = this.groundColor.getHex()), void 0 !== this.distance && (e.object.distance = this.distance), void 0 !== this.angle && (e.object.angle = this.angle), void 0 !== this.decay && (e.object.decay = this.decay), void 0 !== this.penumbra && (e.object.penumbra = this.penumbra), void 0 !== this.shadow && (e.object.shadow = this.shadow.toJSON()), e
        }
    }), Oa.prototype = Object.assign(Object.create(Ia.prototype), {
        constructor: Oa,
        isHemisphereLight: !0,
        copy: function(t) {
            return Ia.prototype.copy.call(this, t), this.groundColor.copy(t.groundColor), this
        }
    }), Object.assign(Da.prototype, {
        copy: function(t) {
            return this.camera = t.camera.clone(), this.bias = t.bias, this.radius = t.radius, this.mapSize.copy(t.mapSize), this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        toJSON: function() {
            var t = {};
            return 0 !== this.bias && (t.bias = this.bias), 1 !== this.radius && (t.radius = this.radius), 512 === this.mapSize.x && 512 === this.mapSize.y || (t.mapSize = this.mapSize.toArray()), t.camera = this.camera.toJSON(!1).object, delete t.camera.matrix, t
        }
    }), Ba.prototype = Object.assign(Object.create(Da.prototype), {
        constructor: Ba,
        isSpotLightShadow: !0,
        update: function(t) {
            var e = this.camera,
                i = 2 * qe.RAD2DEG * t.angle,
                n = this.mapSize.width / this.mapSize.height,
                r = t.distance || e.far;
            i === e.fov && n === e.aspect && r === e.far || (e.fov = i, e.aspect = n, e.far = r, e.updateProjectionMatrix())
        }
    }), za.prototype = Object.assign(Object.create(Ia.prototype), {
        constructor: za,
        isSpotLight: !0,
        copy: function(t) {
            return Ia.prototype.copy.call(this, t), this.distance = t.distance, this.angle = t.angle, this.penumbra = t.penumbra, this.decay = t.decay, this.target = t.target.clone(), this.shadow = t.shadow.clone(), this
        }
    }), Na.prototype = Object.assign(Object.create(Ia.prototype), {
        constructor: Na,
        isPointLight: !0,
        copy: function(t) {
            return Ia.prototype.copy.call(this, t), this.distance = t.distance, this.decay = t.decay, this.shadow = t.shadow.clone(), this
        }
    }), Ua.prototype = Object.assign(Object.create(Da.prototype), {
        constructor: Ua
    }), Fa.prototype = Object.assign(Object.create(Ia.prototype), {
        constructor: Fa,
        isDirectionalLight: !0,
        copy: function(t) {
            return Ia.prototype.copy.call(this, t), this.target = t.target.clone(), this.shadow = t.shadow.clone(), this
        }
    }), Ha.prototype = Object.assign(Object.create(Ia.prototype), {
        constructor: Ha,
        isAmbientLight: !0
    }), ja.prototype = Object.assign(Object.create(Ia.prototype), {
        constructor: ja,
        isRectAreaLight: !0,
        copy: function(t) {
            return Ia.prototype.copy.call(this, t), this.width = t.width, this.height = t.height, this
        },
        toJSON: function(t) {
            var e = Ia.prototype.toJSON.call(this, t);
            return e.object.width = this.width, e.object.height = this.height, e
        }
    });
    var Ga = {
        arraySlice: function(t, e, i) {
            return Ga.isTypedArray(t) ? new t.constructor(t.subarray(e, void 0 !== i ? i : t.length)) : t.slice(e, i)
        },
        convertArray: function(t, e, i) {
            return !t || !i && t.constructor === e ? t : "number" == typeof e.BYTES_PER_ELEMENT ? new e(t) : Array.prototype.slice.call(t)
        },
        isTypedArray: function(t) {
            return ArrayBuffer.isView(t) && !(t instanceof DataView)
        },
        getKeyframeOrder: function(t) {
            for (var e = t.length, i = new Array(e), n = 0; n !== e; ++n) i[n] = n;
            return i.sort(function(e, i) {
                return t[e] - t[i]
            }), i
        },
        sortedArray: function(t, e, i) {
            for (var n = t.length, r = new t.constructor(n), s = 0, o = 0; o !== n; ++s)
                for (var a = i[s] * e, c = 0; c !== e; ++c) r[o++] = t[a + c];
            return r
        },
        flattenJSON: function(t, e, i, n) {
            for (var r = 1, s = t[0]; void 0 !== s && void 0 === s[n];) s = t[r++];
            if (void 0 !== s) {
                var o = s[n];
                if (void 0 !== o)
                    if (Array.isArray(o))
                        do {
                            void 0 !== (o = s[n]) && (e.push(s.time), i.push.apply(i, o)), s = t[r++]
                        } while (void 0 !== s);
                    else if (void 0 !== o.toArray)
                    do {
                        void 0 !== (o = s[n]) && (e.push(s.time), o.toArray(i, i.length)), s = t[r++]
                    } while (void 0 !== s);
                else
                    do {
                        void 0 !== (o = s[n]) && (e.push(s.time), i.push(o)), s = t[r++]
                    } while (void 0 !== s)
            }
        }
    };

    function Va(t, e, i, n) {
        this.parameterPositions = t, this._cachedIndex = 0, this.resultBuffer = void 0 !== n ? n : new e.constructor(i), this.sampleValues = e, this.valueSize = i
    }

    function Wa(t, e, i, n) {
        Va.call(this, t, e, i, n), this._weightPrev = -0, this._offsetPrev = -0, this._weightNext = -0, this._offsetNext = -0
    }

    function Ya(t, e, i, n) {
        Va.call(this, t, e, i, n)
    }

    function Xa(t, e, i, n) {
        Va.call(this, t, e, i, n)
    }

    function qa(t, e, i, n) {
        if (void 0 === t) throw new Error("THREE.KeyframeTrack: track name is undefined");
        if (void 0 === e || 0 === e.length) throw new Error("THREE.KeyframeTrack: no keyframes in track named " + t);
        this.name = t, this.times = Ga.convertArray(e, this.TimeBufferType), this.values = Ga.convertArray(i, this.ValueBufferType), this.setInterpolation(n || this.DefaultInterpolation)
    }

    function Za(t, e, i) {
        qa.call(this, t, e, i)
    }

    function Ka(t, e, i, n) {
        qa.call(this, t, e, i, n)
    }

    function Ja(t, e, i, n) {
        qa.call(this, t, e, i, n)
    }

    function Qa(t, e, i, n) {
        Va.call(this, t, e, i, n)
    }

    function $a(t, e, i, n) {
        qa.call(this, t, e, i, n)
    }

    function tc(t, e, i, n) {
        qa.call(this, t, e, i, n)
    }

    function ec(t, e, i, n) {
        qa.call(this, t, e, i, n)
    }

    function ic(t, e, i) {
        this.name = t, this.tracks = i, this.duration = void 0 !== e ? e : -1, this.uuid = qe.generateUUID(), this.duration < 0 && this.resetDuration()
    }

    function nc(t) {
        if (void 0 === t.type) throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");
        var e = function(t) {
            switch (t.toLowerCase()) {
                case "scalar":
                case "double":
                case "float":
                case "number":
                case "integer":
                    return Ja;
                case "vector":
                case "vector2":
                case "vector3":
                case "vector4":
                    return ec;
                case "color":
                    return Ka;
                case "quaternion":
                    return $a;
                case "bool":
                case "boolean":
                    return Za;
                case "string":
                    return tc
            }
            throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + t)
        }(t.type);
        if (void 0 === t.times) {
            var i = [],
                n = [];
            Ga.flattenJSON(t.keys, i, n, "value"), t.times = i, t.values = n
        }
        return void 0 !== e.parse ? e.parse(t) : new e(t.name, t.times, t.values, t.interpolation)
    }

    function rc(t) {
        this.manager = void 0 !== t ? t : ia, this.textures = {}
    }

    function sc(t) {
        this.manager = void 0 !== t ? t : ia
    }
    Object.assign(Va.prototype, {
            evaluate: function(t) {
                var e = this.parameterPositions,
                    i = this._cachedIndex,
                    n = e[i],
                    r = e[i - 1];
                t: {
                    e: {
                        var s;i: {
                            n: if (!(t < n)) {
                                for (var o = i + 2;;) {
                                    if (void 0 === n) {
                                        if (t < r) break n;
                                        return i = e.length, this._cachedIndex = i, this.afterEnd_(i - 1, t, r)
                                    }
                                    if (i === o) break;
                                    if (r = n, t < (n = e[++i])) break e
                                }
                                s = e.length;
                                break i
                            }if (t >= r) break t;
                            var a = e[1];t < a && (i = 2, r = a);
                            for (o = i - 2;;) {
                                if (void 0 === r) return this._cachedIndex = 0, this.beforeStart_(0, t, n);
                                if (i === o) break;
                                if (n = r, t >= (r = e[--i - 1])) break e
                            }
                            s = i,
                            i = 0
                        }
                        for (; i < s;) {
                            var c = i + s >>> 1;
                            t < e[c] ? s = c : i = c + 1
                        }
                        if (n = e[i], void 0 === (r = e[i - 1])) return this._cachedIndex = 0,
                        this.beforeStart_(0, t, n);
                        if (void 0 === n) return i = e.length,
                        this._cachedIndex = i,
                        this.afterEnd_(i - 1, r, t)
                    }
                    this._cachedIndex = i,
                    this.intervalChanged_(i, r, n)
                }
                return this.interpolate_(i, r, t, n)
            },
            settings: null,
            DefaultSettings_: {},
            getSettings_: function() {
                return this.settings || this.DefaultSettings_
            },
            copySampleValue_: function(t) {
                for (var e = this.resultBuffer, i = this.sampleValues, n = this.valueSize, r = t * n, s = 0; s !== n; ++s) e[s] = i[r + s];
                return e
            },
            interpolate_: function() {
                throw new Error("call to abstract method")
            },
            intervalChanged_: function() {}
        }),
        //!\ DECLARE ALIAS AFTER assign prototype !
        Object.assign(Va.prototype, {
            beforeStart_: Va.prototype.copySampleValue_,
            afterEnd_: Va.prototype.copySampleValue_
        }), Wa.prototype = Object.assign(Object.create(Va.prototype), {
            constructor: Wa,
            DefaultSettings_: {
                endingStart: Re,
                endingEnd: Re
            },
            intervalChanged_: function(t, e, i) {
                var n = this.parameterPositions,
                    r = t - 2,
                    s = t + 1,
                    o = n[r],
                    a = n[s];
                if (void 0 === o) switch (this.getSettings_().endingStart) {
                    case Pe:
                        r = t, o = 2 * e - i;
                        break;
                    case Ce:
                        o = e + n[r = n.length - 2] - n[r + 1];
                        break;
                    default:
                        r = t, o = i
                }
                if (void 0 === a) switch (this.getSettings_().endingEnd) {
                    case Pe:
                        s = t, a = 2 * i - e;
                        break;
                    case Ce:
                        s = 1, a = i + n[1] - n[0];
                        break;
                    default:
                        s = t - 1, a = e
                }
                var c = .5 * (i - e),
                    l = this.valueSize;
                this._weightPrev = c / (e - o), this._weightNext = c / (a - i), this._offsetPrev = r * l, this._offsetNext = s * l
            },
            interpolate_: function(t, e, i, n) {
                for (var r = this.resultBuffer, s = this.sampleValues, o = this.valueSize, a = t * o, c = a - o, l = this._offsetPrev, p = this._offsetNext, h = this._weightPrev, u = this._weightNext, d = (i - e) / (n - e), f = d * d, m = f * d, g = -h * m + 2 * h * f - h * d, v = (1 + h) * m + (-1.5 - 2 * h) * f + (-.5 + h) * d + 1, y = (-1 - u) * m + (1.5 + u) * f + .5 * d, x = u * m - u * f, w = 0; w !== o; ++w) r[w] = g * s[l + w] + v * s[c + w] + y * s[a + w] + x * s[p + w];
                return r
            }
        }), Ya.prototype = Object.assign(Object.create(Va.prototype), {
            constructor: Ya,
            interpolate_: function(t, e, i, n) {
                for (var r = this.resultBuffer, s = this.sampleValues, o = this.valueSize, a = t * o, c = a - o, l = (i - e) / (n - e), p = 1 - l, h = 0; h !== o; ++h) r[h] = s[c + h] * p + s[a + h] * l;
                return r
            }
        }), Xa.prototype = Object.assign(Object.create(Va.prototype), {
            constructor: Xa,
            interpolate_: function(t) {
                return this.copySampleValue_(t - 1)
            }
        }), Object.assign(qa, {
            toJSON: function(t) {
                var e, i = t.constructor;
                if (void 0 !== i.toJSON) e = i.toJSON(t);
                else {
                    e = {
                        name: t.name,
                        times: Ga.convertArray(t.times, Array),
                        values: Ga.convertArray(t.values, Array)
                    };
                    var n = t.getInterpolation();
                    n !== t.DefaultInterpolation && (e.interpolation = n)
                }
                return e.type = t.ValueTypeName, e
            }
        }), Object.assign(qa.prototype, {
            constructor: qa,
            TimeBufferType: Float32Array,
            ValueBufferType: Float32Array,
            DefaultInterpolation: Le,
            InterpolantFactoryMethodDiscrete: function(t) {
                return new Xa(this.times, this.values, this.getValueSize(), t)
            },
            InterpolantFactoryMethodLinear: function(t) {
                return new Ya(this.times, this.values, this.getValueSize(), t)
            },
            InterpolantFactoryMethodSmooth: function(t) {
                return new Wa(this.times, this.values, this.getValueSize(), t)
            },
            setInterpolation: function(t) {
                var e;
                switch (t) {
                    case Ae:
                        e = this.InterpolantFactoryMethodDiscrete;
                        break;
                    case Le:
                        e = this.InterpolantFactoryMethodLinear;
                        break;
                    case ke:
                        e = this.InterpolantFactoryMethodSmooth
                }
                if (void 0 === e) {
                    var i = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
                    if (void 0 === this.createInterpolant) {
                        if (t === this.DefaultInterpolation) throw new Error(i);
                        this.setInterpolation(this.DefaultInterpolation)
                    }
                    return console.warn("THREE.KeyframeTrack:", i), this
                }
                return this.createInterpolant = e, this
            },
            getInterpolation: function() {
                switch (this.createInterpolant) {
                    case this.InterpolantFactoryMethodDiscrete:
                        return Ae;
                    case this.InterpolantFactoryMethodLinear:
                        return Le;
                    case this.InterpolantFactoryMethodSmooth:
                        return ke
                }
            },
            getValueSize: function() {
                return this.values.length / this.times.length
            },
            shift: function(t) {
                if (0 !== t)
                    for (var e = this.times, i = 0, n = e.length; i !== n; ++i) e[i] += t;
                return this
            },
            scale: function(t) {
                if (1 !== t)
                    for (var e = this.times, i = 0, n = e.length; i !== n; ++i) e[i] *= t;
                return this
            },
            trim: function(t, e) {
                for (var i = this.times, n = i.length, r = 0, s = n - 1; r !== n && i[r] < t;) ++r;
                for (; - 1 !== s && i[s] > e;) --s;
                if (++s, 0 !== r || s !== n) {
                    r >= s && (r = (s = Math.max(s, 1)) - 1);
                    var o = this.getValueSize();
                    this.times = Ga.arraySlice(i, r, s), this.values = Ga.arraySlice(this.values, r * o, s * o)
                }
                return this
            },
            validate: function() {
                var t = !0,
                    e = this.getValueSize();
                e - Math.floor(e) != 0 && (console.error("THREE.KeyframeTrack: Invalid value size in track.", this), t = !1);
                var i = this.times,
                    n = this.values,
                    r = i.length;
                0 === r && (console.error("THREE.KeyframeTrack: Track is empty.", this), t = !1);
                for (var s = null, o = 0; o !== r; o++) {
                    var a = i[o];
                    if ("number" == typeof a && isNaN(a)) {
                        console.error("THREE.KeyframeTrack: Time is not a valid number.", this, o, a), t = !1;
                        break
                    }
                    if (null !== s && s > a) {
                        console.error("THREE.KeyframeTrack: Out of order keys.", this, o, a, s), t = !1;
                        break
                    }
                    s = a
                }
                if (void 0 !== n && Ga.isTypedArray(n)) {
                    o = 0;
                    for (var c = n.length; o !== c; ++o) {
                        var l = n[o];
                        if (isNaN(l)) {
                            console.error("THREE.KeyframeTrack: Value is not a valid number.", this, o, l), t = !1;
                            break
                        }
                    }
                }
                return t
            },
            optimize: function() {
                for (var t = this.times, e = this.values, i = this.getValueSize(), n = this.getInterpolation() === ke, r = 1, s = t.length - 1, o = 1; o < s; ++o) {
                    var a = !1,
                        c = t[o];
                    if (c !== t[o + 1] && (1 !== o || c !== c[0]))
                        if (n) a = !0;
                        else
                            for (var l = o * i, p = l - i, h = l + i, u = 0; u !== i; ++u) {
                                var d = e[l + u];
                                if (d !== e[p + u] || d !== e[h + u]) {
                                    a = !0;
                                    break
                                }
                            }
                    if (a) {
                        if (o !== r) {
                            t[r] = t[o];
                            var f = o * i,
                                m = r * i;
                            for (u = 0; u !== i; ++u) e[m + u] = e[f + u]
                        }++r
                    }
                }
                if (s > 0) {
                    t[r] = t[s];
                    for (f = s * i, m = r * i, u = 0; u !== i; ++u) e[m + u] = e[f + u];
                    ++r
                }
                return r !== t.length && (this.times = Ga.arraySlice(t, 0, r), this.values = Ga.arraySlice(e, 0, r * i)), this
            }
        }), Za.prototype = Object.assign(Object.create(qa.prototype), {
            constructor: Za,
            ValueTypeName: "bool",
            ValueBufferType: Array,
            DefaultInterpolation: Ae,
            InterpolantFactoryMethodLinear: void 0,
            InterpolantFactoryMethodSmooth: void 0
        }), Ka.prototype = Object.assign(Object.create(qa.prototype), {
            constructor: Ka,
            ValueTypeName: "color"
        }), Ja.prototype = Object.assign(Object.create(qa.prototype), {
            constructor: Ja,
            ValueTypeName: "number"
        }), Qa.prototype = Object.assign(Object.create(Va.prototype), {
            constructor: Qa,
            interpolate_: function(t, e, i, n) {
                for (var r = this.resultBuffer, s = this.sampleValues, o = this.valueSize, a = t * o, c = (i - e) / (n - e), l = a + o; a !== l; a += 4) Je.slerpFlat(r, 0, s, a - o, s, a, c);
                return r
            }
        }), $a.prototype = Object.assign(Object.create(qa.prototype), {
            constructor: $a,
            ValueTypeName: "quaternion",
            DefaultInterpolation: Le,
            InterpolantFactoryMethodLinear: function(t) {
                return new Qa(this.times, this.values, this.getValueSize(), t)
            },
            InterpolantFactoryMethodSmooth: void 0
        }), tc.prototype = Object.assign(Object.create(qa.prototype), {
            constructor: tc,
            ValueTypeName: "string",
            ValueBufferType: Array,
            DefaultInterpolation: Ae,
            InterpolantFactoryMethodLinear: void 0,
            InterpolantFactoryMethodSmooth: void 0
        }), ec.prototype = Object.assign(Object.create(qa.prototype), {
            constructor: ec,
            ValueTypeName: "vector"
        }), Object.assign(ic, {
            parse: function(t) {
                for (var e = [], i = t.tracks, n = 1 / (t.fps || 1), r = 0, s = i.length; r !== s; ++r) e.push(nc(i[r]).scale(n));
                return new ic(t.name, t.duration, e)
            },
            toJSON: function(t) {
                for (var e = [], i = t.tracks, n = {
                        name: t.name,
                        duration: t.duration,
                        tracks: e,
                        uuid: t.uuid
                    }, r = 0, s = i.length; r !== s; ++r) e.push(qa.toJSON(i[r]));
                return n
            },
            CreateFromMorphTargetSequence: function(t, e, i, n) {
                for (var r = e.length, s = [], o = 0; o < r; o++) {
                    var a = [],
                        c = [];
                    a.push((o + r - 1) % r, o, (o + 1) % r), c.push(0, 1, 0);
                    var l = Ga.getKeyframeOrder(a);
                    a = Ga.sortedArray(a, 1, l), c = Ga.sortedArray(c, 1, l), n || 0 !== a[0] || (a.push(r), c.push(c[0])), s.push(new Ja(".morphTargetInfluences[" + e[o].name + "]", a, c).scale(1 / i))
                }
                return new ic(t, -1, s)
            },
            findByName: function(t, e) {
                var i = t;
                if (!Array.isArray(t)) {
                    var n = t;
                    i = n.geometry && n.geometry.animations || n.animations
                }
                for (var r = 0; r < i.length; r++)
                    if (i[r].name === e) return i[r];
                return null
            },
            CreateClipsFromMorphTargetSequences: function(t, e, i) {
                for (var n = {}, r = /^([\w-]*?)([\d]+)$/, s = 0, o = t.length; s < o; s++) {
                    var a = t[s],
                        c = a.name.match(r);
                    if (c && c.length > 1) {
                        var l = n[h = c[1]];
                        l || (n[h] = l = []), l.push(a)
                    }
                }
                var p = [];
                for (var h in n) p.push(ic.CreateFromMorphTargetSequence(h, n[h], e, i));
                return p
            },
            parseAnimation: function(t, e) {
                if (!t) return console.error("THREE.AnimationClip: No animation in JSONLoader data."), null;
                for (var i = function(t, e, i, n, r) {
                        if (0 !== i.length) {
                            var s = [],
                                o = [];
                            Ga.flattenJSON(i, s, o, n), 0 !== s.length && r.push(new t(e, s, o))
                        }
                    }, n = [], r = t.name || "default", s = t.length || -1, o = t.fps || 30, a = t.hierarchy || [], c = 0; c < a.length; c++) {
                    var l = a[c].keys;
                    if (l && 0 !== l.length)
                        if (l[0].morphTargets) {
                            for (var p = {}, h = 0; h < l.length; h++)
                                if (l[h].morphTargets)
                                    for (var u = 0; u < l[h].morphTargets.length; u++) p[l[h].morphTargets[u]] = -1;
                            for (var d in p) {
                                var f = [],
                                    m = [];
                                for (u = 0; u !== l[h].morphTargets.length; ++u) {
                                    var g = l[h];
                                    f.push(g.time), m.push(g.morphTarget === d ? 1 : 0)
                                }
                                n.push(new Ja(".morphTargetInfluence[" + d + "]", f, m))
                            }
                            s = p.length * (o || 1)
                        } else {
                            var v = ".bones[" + e[c].name + "]";
                            i(ec, v + ".position", l, "pos", n), i($a, v + ".quaternion", l, "rot", n), i(ec, v + ".scale", l, "scl", n)
                        }
                }
                return 0 === n.length ? null : new ic(r, s, n)
            }
        }), Object.assign(ic.prototype, {
            resetDuration: function() {
                for (var t = 0, e = 0, i = this.tracks.length; e !== i; ++e) {
                    var n = this.tracks[e];
                    t = Math.max(t, n.times[n.times.length - 1])
                }
                return this.duration = t, this
            },
            trim: function() {
                for (var t = 0; t < this.tracks.length; t++) this.tracks[t].trim(0, this.duration);
                return this
            },
            validate: function() {
                for (var t = !0, e = 0; e < this.tracks.length; e++) t = t && this.tracks[e].validate();
                return t
            },
            optimize: function() {
                for (var t = 0; t < this.tracks.length; t++) this.tracks[t].optimize();
                return this
            }
        }), Object.assign(rc.prototype, {
            load: function(t, e, i, n) {
                var r = this;
                new ra(r.manager).load(t, function(t) {
                    e(r.parse(JSON.parse(t)))
                }, i, n)
            },
            setTextures: function(t) {
                this.textures = t
            },
            parse: function(t) {
                var e = this.textures;

                function i(t) {
                    return void 0 === e[t] && console.warn("THREE.MaterialLoader: Undefined texture", t), e[t]
                }
                var n = new $o[t.type];
                if (void 0 !== t.uuid && (n.uuid = t.uuid), void 0 !== t.name && (n.name = t.name), void 0 !== t.color && n.color.setHex(t.color), void 0 !== t.roughness && (n.roughness = t.roughness), void 0 !== t.metalness && (n.metalness = t.metalness), void 0 !== t.emissive && n.emissive.setHex(t.emissive), void 0 !== t.specular && n.specular.setHex(t.specular), void 0 !== t.shininess && (n.shininess = t.shininess), void 0 !== t.clearCoat && (n.clearCoat = t.clearCoat), void 0 !== t.clearCoatRoughness && (n.clearCoatRoughness = t.clearCoatRoughness), void 0 !== t.uniforms && (n.uniforms = t.uniforms), void 0 !== t.vertexShader && (n.vertexShader = t.vertexShader), void 0 !== t.fragmentShader && (n.fragmentShader = t.fragmentShader), void 0 !== t.vertexColors && (n.vertexColors = t.vertexColors), void 0 !== t.fog && (n.fog = t.fog), void 0 !== t.flatShading && (n.flatShading = t.flatShading), void 0 !== t.blending && (n.blending = t.blending), void 0 !== t.side && (n.side = t.side), void 0 !== t.opacity && (n.opacity = t.opacity), void 0 !== t.transparent && (n.transparent = t.transparent), void 0 !== t.alphaTest && (n.alphaTest = t.alphaTest), void 0 !== t.depthTest && (n.depthTest = t.depthTest), void 0 !== t.depthWrite && (n.depthWrite = t.depthWrite), void 0 !== t.colorWrite && (n.colorWrite = t.colorWrite), void 0 !== t.wireframe && (n.wireframe = t.wireframe), void 0 !== t.wireframeLinewidth && (n.wireframeLinewidth = t.wireframeLinewidth), void 0 !== t.wireframeLinecap && (n.wireframeLinecap = t.wireframeLinecap), void 0 !== t.wireframeLinejoin && (n.wireframeLinejoin = t.wireframeLinejoin), void 0 !== t.rotation && (n.rotation = t.rotation), 1 !== t.linewidth && (n.linewidth = t.linewidth), void 0 !== t.dashSize && (n.dashSize = t.dashSize), void 0 !== t.gapSize && (n.gapSize = t.gapSize), void 0 !== t.scale && (n.scale = t.scale), void 0 !== t.polygonOffset && (n.polygonOffset = t.polygonOffset), void 0 !== t.polygonOffsetFactor && (n.polygonOffsetFactor = t.polygonOffsetFactor), void 0 !== t.polygonOffsetUnits && (n.polygonOffsetUnits = t.polygonOffsetUnits), void 0 !== t.skinning && (n.skinning = t.skinning), void 0 !== t.morphTargets && (n.morphTargets = t.morphTargets), void 0 !== t.dithering && (n.dithering = t.dithering), void 0 !== t.visible && (n.visible = t.visible), void 0 !== t.userData && (n.userData = t.userData), void 0 !== t.shading && (n.flatShading = 1 === t.shading), void 0 !== t.size && (n.size = t.size), void 0 !== t.sizeAttenuation && (n.sizeAttenuation = t.sizeAttenuation), void 0 !== t.map && (n.map = i(t.map)), void 0 !== t.alphaMap && (n.alphaMap = i(t.alphaMap), n.transparent = !0), void 0 !== t.bumpMap && (n.bumpMap = i(t.bumpMap)), void 0 !== t.bumpScale && (n.bumpScale = t.bumpScale), void 0 !== t.normalMap && (n.normalMap = i(t.normalMap)), void 0 !== t.normalMapType && (n.normalMapType = t.normalMapType), void 0 !== t.normalScale) {
                    var r = t.normalScale;
                    !1 === Array.isArray(r) && (r = [r, r]), n.normalScale = (new Ze).fromArray(r)
                }
                return void 0 !== t.displacementMap && (n.displacementMap = i(t.displacementMap)), void 0 !== t.displacementScale && (n.displacementScale = t.displacementScale), void 0 !== t.displacementBias && (n.displacementBias = t.displacementBias), void 0 !== t.roughnessMap && (n.roughnessMap = i(t.roughnessMap)), void 0 !== t.metalnessMap && (n.metalnessMap = i(t.metalnessMap)), void 0 !== t.emissiveMap && (n.emissiveMap = i(t.emissiveMap)), void 0 !== t.emissiveIntensity && (n.emissiveIntensity = t.emissiveIntensity), void 0 !== t.specularMap && (n.specularMap = i(t.specularMap)), void 0 !== t.envMap && (n.envMap = i(t.envMap)), void 0 !== t.reflectivity && (n.reflectivity = t.reflectivity), void 0 !== t.lightMap && (n.lightMap = i(t.lightMap)), void 0 !== t.lightMapIntensity && (n.lightMapIntensity = t.lightMapIntensity), void 0 !== t.aoMap && (n.aoMap = i(t.aoMap)), void 0 !== t.aoMapIntensity && (n.aoMapIntensity = t.aoMapIntensity), void 0 !== t.gradientMap && (n.gradientMap = i(t.gradientMap)), n
            }
        }), Object.assign(sc.prototype, {
            load: function(t, e, i, n) {
                var r = this;
                new ra(r.manager).load(t, function(t) {
                    e(r.parse(JSON.parse(t)))
                }, i, n)
            },
            parse: function(t) {
                var e = new $i,
                    i = t.data.index;
                if (void 0 !== i) {
                    var n = new pc[i.type](i.array);
                    e.setIndex(new Fi(n, 1))
                }
                var r = t.data.attributes;
                for (var s in r) {
                    var o = r[s];
                    n = new pc[o.type](o.array);
                    e.addAttribute(s, new Fi(n, o.itemSize, o.normalized))
                }
                var a = t.data.groups || t.data.drawcalls || t.data.offsets;
                if (void 0 !== a)
                    for (var c = 0, l = a.length; c !== l; ++c) {
                        var p = a[c];
                        e.addGroup(p.start, p.count, p.materialIndex)
                    }
                var h = t.data.boundingSphere;
                if (void 0 !== h) {
                    var u = new Qe;
                    void 0 !== h.center && u.fromArray(h.center), e.boundingSphere = new ui(u, h.radius)
                }
                return e
            }
        });
    var oc, ac, cc, lc, pc = {
        Int8Array: Int8Array,
        Uint8Array: Uint8Array,
        Uint8ClampedArray: "undefined" != typeof Uint8ClampedArray ? Uint8ClampedArray : Uint8Array,
        Int16Array: Int16Array,
        Uint16Array: Uint16Array,
        Int32Array: Int32Array,
        Uint32Array: Uint32Array,
        Float32Array: Float32Array,
        Float64Array: Float64Array
    };

    function hc() {}
    hc.Handlers = {
        handlers: [],
        add: function(t, e) {
            this.handlers.push(t, e)
        },
        get: function(t) {
            for (var e = this.handlers, i = 0, n = e.length; i < n; i += 2) {
                var r = e[i],
                    s = e[i + 1];
                if (r.test(t)) return s
            }
            return null
        }
    }, Object.assign(hc.prototype, {
        crossOrigin: "anonymous",
        onLoadStart: function() {},
        onLoadProgress: function() {},
        onLoadComplete: function() {},
        initMaterials: function(t, e, i) {
            for (var n = [], r = 0; r < t.length; ++r) n[r] = this.createMaterial(t[r], e, i);
            return n
        },
        createMaterial: (oc = {
            NoBlending: O,
            NormalBlending: D,
            AdditiveBlending: B,
            SubtractiveBlending: z,
            MultiplyBlending: N,
            CustomBlending: U
        }, ac = new xi, cc = new la, lc = new rc, function(t, e, i) {
            var n = {};

            function r(t, r, s, o, a) {
                var c, l = e + t,
                    p = hc.Handlers.get(l);
                null !== p ? c = p.load(l) : (cc.setCrossOrigin(i), c = cc.load(l)), void 0 !== r && (c.repeat.fromArray(r), 1 !== r[0] && (c.wrapS = Et), 1 !== r[1] && (c.wrapT = Et)), void 0 !== s && c.offset.fromArray(s), void 0 !== o && ("repeat" === o[0] && (c.wrapS = Et), "mirror" === o[0] && (c.wrapS = Lt), "repeat" === o[1] && (c.wrapT = Et), "mirror" === o[1] && (c.wrapT = Lt)), void 0 !== a && (c.anisotropy = a);
                var h = qe.generateUUID();
                return n[h] = c, h
            }
            var s = {
                uuid: qe.generateUUID(),
                type: "MeshLambertMaterial"
            };
            for (var o in t) {
                var a = t[o];
                switch (o) {
                    case "DbgColor":
                    case "DbgIndex":
                    case "opticalDensity":
                    case "illumination":
                        break;
                    case "DbgName":
                        s.name = a;
                        break;
                    case "blending":
                        s.blending = oc[a];
                        break;
                    case "colorAmbient":
                    case "mapAmbient":
                        console.warn("THREE.Loader.createMaterial:", o, "is no longer supported.");
                        break;
                    case "colorDiffuse":
                        s.color = ac.fromArray(a).getHex();
                        break;
                    case "colorSpecular":
                        s.specular = ac.fromArray(a).getHex();
                        break;
                    case "colorEmissive":
                        s.emissive = ac.fromArray(a).getHex();
                        break;
                    case "specularCoef":
                        s.shininess = a;
                        break;
                    case "shading":
                        "basic" === a.toLowerCase() && (s.type = "MeshBasicMaterial"), "phong" === a.toLowerCase() && (s.type = "MeshPhongMaterial"), "standard" === a.toLowerCase() && (s.type = "MeshStandardMaterial");
                        break;
                    case "mapDiffuse":
                        s.map = r(a, t.mapDiffuseRepeat, t.mapDiffuseOffset, t.mapDiffuseWrap, t.mapDiffuseAnisotropy);
                        break;
                    case "mapDiffuseRepeat":
                    case "mapDiffuseOffset":
                    case "mapDiffuseWrap":
                    case "mapDiffuseAnisotropy":
                        break;
                    case "mapEmissive":
                        s.emissiveMap = r(a, t.mapEmissiveRepeat, t.mapEmissiveOffset, t.mapEmissiveWrap, t.mapEmissiveAnisotropy);
                        break;
                    case "mapEmissiveRepeat":
                    case "mapEmissiveOffset":
                    case "mapEmissiveWrap":
                    case "mapEmissiveAnisotropy":
                        break;
                    case "mapLight":
                        s.lightMap = r(a, t.mapLightRepeat, t.mapLightOffset, t.mapLightWrap, t.mapLightAnisotropy);
                        break;
                    case "mapLightRepeat":
                    case "mapLightOffset":
                    case "mapLightWrap":
                    case "mapLightAnisotropy":
                        break;
                    case "mapAO":
                        s.aoMap = r(a, t.mapAORepeat, t.mapAOOffset, t.mapAOWrap, t.mapAOAnisotropy);
                        break;
                    case "mapAORepeat":
                    case "mapAOOffset":
                    case "mapAOWrap":
                    case "mapAOAnisotropy":
                        break;
                    case "mapBump":
                        s.bumpMap = r(a, t.mapBumpRepeat, t.mapBumpOffset, t.mapBumpWrap, t.mapBumpAnisotropy);
                        break;
                    case "mapBumpScale":
                        s.bumpScale = a;
                        break;
                    case "mapBumpRepeat":
                    case "mapBumpOffset":
                    case "mapBumpWrap":
                    case "mapBumpAnisotropy":
                        break;
                    case "mapNormal":
                        s.normalMap = r(a, t.mapNormalRepeat, t.mapNormalOffset, t.mapNormalWrap, t.mapNormalAnisotropy);
                        break;
                    case "mapNormalFactor":
                        s.normalScale = a;
                        break;
                    case "mapNormalRepeat":
                    case "mapNormalOffset":
                    case "mapNormalWrap":
                    case "mapNormalAnisotropy":
                        break;
                    case "mapSpecular":
                        s.specularMap = r(a, t.mapSpecularRepeat, t.mapSpecularOffset, t.mapSpecularWrap, t.mapSpecularAnisotropy);
                        break;
                    case "mapSpecularRepeat":
                    case "mapSpecularOffset":
                    case "mapSpecularWrap":
                    case "mapSpecularAnisotropy":
                        break;
                    case "mapMetalness":
                        s.metalnessMap = r(a, t.mapMetalnessRepeat, t.mapMetalnessOffset, t.mapMetalnessWrap, t.mapMetalnessAnisotropy);
                        break;
                    case "mapMetalnessRepeat":
                    case "mapMetalnessOffset":
                    case "mapMetalnessWrap":
                    case "mapMetalnessAnisotropy":
                        break;
                    case "mapRoughness":
                        s.roughnessMap = r(a, t.mapRoughnessRepeat, t.mapRoughnessOffset, t.mapRoughnessWrap, t.mapRoughnessAnisotropy);
                        break;
                    case "mapRoughnessRepeat":
                    case "mapRoughnessOffset":
                    case "mapRoughnessWrap":
                    case "mapRoughnessAnisotropy":
                        break;
                    case "mapAlpha":
                        s.alphaMap = r(a, t.mapAlphaRepeat, t.mapAlphaOffset, t.mapAlphaWrap, t.mapAlphaAnisotropy);
                        break;
                    case "mapAlphaRepeat":
                    case "mapAlphaOffset":
                    case "mapAlphaWrap":
                    case "mapAlphaAnisotropy":
                        break;
                    case "flipSided":
                        s.side = A;
                        break;
                    case "doubleSided":
                        s.side = L;
                        break;
                    case "transparency":
                        console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity"), s.opacity = a;
                        break;
                    case "depthTest":
                    case "depthWrite":
                    case "colorWrite":
                    case "opacity":
                    case "reflectivity":
                    case "transparent":
                    case "visible":
                    case "wireframe":
                        s[o] = a;
                        break;
                    case "vertexColors":
                        !0 === a && (s.vertexColors = I), "face" === a && (s.vertexColors = C);
                        break;
                    default:
                        console.error("THREE.Loader.createMaterial: Unsupported", o, a)
                }
            }
            return "MeshBasicMaterial" === s.type && delete s.emissive, "MeshPhongMaterial" !== s.type && delete s.specular, s.opacity < 1 && (s.transparent = !0), lc.setTextures(n), lc.parse(s)
        })
    });
    var uc = {
        decodeText: function(t) {
            if ("undefined" != typeof TextDecoder) return (new TextDecoder).decode(t);
            for (var e = "", i = 0, n = t.length; i < n; i++) e += String.fromCharCode(t[i]);
            return decodeURIComponent(escape(e))
        },
        extractUrlBase: function(t) {
            var e = t.lastIndexOf("/");
            return -1 === e ? "./" : t.substr(0, e + 1)
        }
    };

    function dc(t) {
        "boolean" == typeof t && (console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."), t = void 0), this.manager = void 0 !== t ? t : ia, this.withCredentials = !1
    }

    function fc(t) {
        this.manager = void 0 !== t ? t : ia, this.texturePath = ""
    }
    Object.assign(dc.prototype, {
        crossOrigin: "anonymous",
        load: function(t, e, i, n) {
            var r = this,
                s = this.texturePath && "string" == typeof this.texturePath ? this.texturePath : uc.extractUrlBase(t),
                o = new ra(this.manager);
            o.setWithCredentials(this.withCredentials), o.load(t, function(i) {
                var n = JSON.parse(i),
                    o = n.metadata;
                if (void 0 !== o) {
                    var a = o.type;
                    if (void 0 !== a && "object" === a.toLowerCase()) return void console.error("THREE.JSONLoader: " + t + " should be loaded with THREE.ObjectLoader instead.")
                }
                var c = r.parse(n, s);
                e(c.geometry, c.materials)
            }, i, n)
        },
        setCrossOrigin: function(t) {
            return this.crossOrigin = t, this
        },
        setTexturePath: function(t) {
            return this.texturePath = t, this
        },
        parse: function() {
            return function(t, e) {
                void 0 !== t.data && (t = t.data), void 0 !== t.scale ? t.scale = 1 / t.scale : t.scale = 1;
                var i = new Ui;
                return function(t, e) {
                        function i(t, e) {
                            return t & 1 << e
                        }
                        var n, r, s, o, a, c, l, p, h, u, d, f, m, g, v, y, x, w, b, M, S, _, T, E, A, L = t.faces,
                            k = t.vertices,
                            R = t.normals,
                            P = t.colors,
                            C = t.scale,
                            I = 0;
                        if (void 0 !== t.uvs) {
                            for (n = 0; n < t.uvs.length; n++) t.uvs[n].length && I++;
                            for (n = 0; n < I; n++) e.faceVertexUvs[n] = []
                        }
                        for (o = 0, a = k.length; o < a;)(w = new Qe).x = k[o++] * C, w.y = k[o++] * C, w.z = k[o++] * C, e.vertices.push(w);
                        for (o = 0, a = L.length; o < a;)
                            if (d = i(u = L[o++], 0), f = i(u, 1), m = i(u, 3), g = i(u, 4), v = i(u, 5), y = i(u, 6), x = i(u, 7), d) {
                                if ((M = new Di).a = L[o], M.b = L[o + 1], M.c = L[o + 3], (S = new Di).a = L[o + 1], S.b = L[o + 2], S.c = L[o + 3], o += 4, f && (h = L[o++], M.materialIndex = h, S.materialIndex = h), s = e.faces.length, m)
                                    for (n = 0; n < I; n++)
                                        for (E = t.uvs[n], e.faceVertexUvs[n][s] = [], e.faceVertexUvs[n][s + 1] = [], r = 0; r < 4; r++) A = new Ze(E[2 * (p = L[o++])], E[2 * p + 1]), 2 !== r && e.faceVertexUvs[n][s].push(A), 0 !== r && e.faceVertexUvs[n][s + 1].push(A);
                                if (g && (l = 3 * L[o++], M.normal.set(R[l++], R[l++], R[l]), S.normal.copy(M.normal)), v)
                                    for (n = 0; n < 4; n++) l = 3 * L[o++], T = new Qe(R[l++], R[l++], R[l]), 2 !== n && M.vertexNormals.push(T), 0 !== n && S.vertexNormals.push(T);
                                if (y && (_ = P[c = L[o++]], M.color.setHex(_), S.color.setHex(_)), x)
                                    for (n = 0; n < 4; n++) _ = P[c = L[o++]], 2 !== n && M.vertexColors.push(new xi(_)), 0 !== n && S.vertexColors.push(new xi(_));
                                e.faces.push(M), e.faces.push(S)
                            } else {
                                if ((b = new Di).a = L[o++], b.b = L[o++], b.c = L[o++], f && (h = L[o++], b.materialIndex = h), s = e.faces.length, m)
                                    for (n = 0; n < I; n++)
                                        for (E = t.uvs[n], e.faceVertexUvs[n][s] = [], r = 0; r < 3; r++) A = new Ze(E[2 * (p = L[o++])], E[2 * p + 1]), e.faceVertexUvs[n][s].push(A);
                                if (g && (l = 3 * L[o++], b.normal.set(R[l++], R[l++], R[l])), v)
                                    for (n = 0; n < 3; n++) l = 3 * L[o++], T = new Qe(R[l++], R[l++], R[l]), b.vertexNormals.push(T);
                                if (y && (c = L[o++], b.color.setHex(P[c])), x)
                                    for (n = 0; n < 3; n++) c = L[o++], b.vertexColors.push(new xi(P[c]));
                                e.faces.push(b)
                            }
                    }(t, i),
                    function(t, e) {
                        var i = void 0 !== t.influencesPerVertex ? t.influencesPerVertex : 2;
                        if (t.skinWeights)
                            for (var n = 0, r = t.skinWeights.length; n < r; n += i) {
                                var s = t.skinWeights[n],
                                    o = i > 1 ? t.skinWeights[n + 1] : 0,
                                    a = i > 2 ? t.skinWeights[n + 2] : 0,
                                    c = i > 3 ? t.skinWeights[n + 3] : 0;
                                e.skinWeights.push(new ai(s, o, a, c))
                            }
                        if (t.skinIndices)
                            for (n = 0, r = t.skinIndices.length; n < r; n += i) {
                                var l = t.skinIndices[n],
                                    p = i > 1 ? t.skinIndices[n + 1] : 0,
                                    h = i > 2 ? t.skinIndices[n + 2] : 0,
                                    u = i > 3 ? t.skinIndices[n + 3] : 0;
                                e.skinIndices.push(new ai(l, p, h, u))
                            }
                        e.bones = t.bones, e.bones && e.bones.length > 0 && (e.skinWeights.length !== e.skinIndices.length || e.skinIndices.length !== e.vertices.length) && console.warn("When skinning, number of vertices (" + e.vertices.length + "), skinIndices (" + e.skinIndices.length + "), and skinWeights (" + e.skinWeights.length + ") should match.")
                    }(t, i),
                    function(t, e) {
                        var i = t.scale;
                        if (void 0 !== t.morphTargets)
                            for (var n = 0, r = t.morphTargets.length; n < r; n++) {
                                e.morphTargets[n] = {}, e.morphTargets[n].name = t.morphTargets[n].name, e.morphTargets[n].vertices = [];
                                for (var s = e.morphTargets[n].vertices, o = t.morphTargets[n].vertices, a = 0, c = o.length; a < c; a += 3) {
                                    var l = new Qe;
                                    l.x = o[a] * i, l.y = o[a + 1] * i, l.z = o[a + 2] * i, s.push(l)
                                }
                            }
                        if (void 0 !== t.morphColors && t.morphColors.length > 0) {
                            console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');
                            var p = e.faces,
                                h = t.morphColors[0].colors;
                            for (n = 0, r = p.length; n < r; n++) p[n].color.fromArray(h, 3 * n)
                        }
                    }(t, i),
                    function(t, e) {
                        var i = [],
                            n = [];
                        void 0 !== t.animation && n.push(t.animation), void 0 !== t.animations && (t.animations.length ? n = n.concat(t.animations) : n.push(t.animations));
                        for (var r = 0; r < n.length; r++) {
                            var s = ic.parseAnimation(n[r], e.bones);
                            s && i.push(s)
                        }
                        if (e.morphTargets) {
                            var o = ic.CreateClipsFromMorphTargetSequences(e.morphTargets, 10);
                            i = i.concat(o)
                        }
                        i.length > 0 && (e.animations = i)
                    }(t, i), i.computeFaceNormals(), i.computeBoundingSphere(), void 0 === t.materials || 0 === t.materials.length ? {
                        geometry: i
                    } : {
                        geometry: i,
                        materials: hc.prototype.initMaterials(t.materials, e, this.crossOrigin)
                    }
            }
        }()
    }), Object.assign(fc.prototype, {
        crossOrigin: "anonymous",
        load: function(t, e, i, n) {
            "" === this.texturePath && (this.texturePath = t.substring(0, t.lastIndexOf("/") + 1));
            var r = this;
            new ra(r.manager).load(t, function(i) {
                var s = null;
                try {
                    s = JSON.parse(i)
                } catch (e) {
                    return void 0 !== n && n(e), void console.error("THREE:ObjectLoader: Can't parse " + t + ".", e.message)
                }
                var o = s.metadata;
                void 0 !== o && void 0 !== o.type && "geometry" !== o.type.toLowerCase() ? r.parse(s, e) : console.error("THREE.ObjectLoader: Can't load " + t + ". Use THREE.JSONLoader instead.")
            }, i, n)
        },
        setTexturePath: function(t) {
            return this.texturePath = t, this
        },
        setCrossOrigin: function(t) {
            return this.crossOrigin = t, this
        },
        parse: function(t, e) {
            var i = this.parseShape(t.shapes),
                n = this.parseGeometries(t.geometries, i),
                r = this.parseImages(t.images, function() {
                    void 0 !== e && e(a)
                }),
                s = this.parseTextures(t.textures, r),
                o = this.parseMaterials(t.materials, s),
                a = this.parseObject(t.object, n, o);
            return t.animations && (a.animations = this.parseAnimations(t.animations)), void 0 !== t.images && 0 !== t.images.length || void 0 !== e && e(a), a
        },
        parseShape: function(t) {
            var e = {};
            if (void 0 !== t)
                for (var i = 0, n = t.length; i < n; i++) {
                    var r = (new Ca).fromJSON(t[i]);
                    e[r.uuid] = r
                }
            return e
        },
        parseGeometries: function(t, e) {
            var i = {};
            if (void 0 !== t)
                for (var n = new dc, r = new sc, s = 0, o = t.length; s < o; s++) {
                    var a, c = t[s];
                    switch (c.type) {
                        case "PlaneGeometry":
                        case "PlaneBufferGeometry":
                            a = new Go[c.type](c.width, c.height, c.widthSegments, c.heightSegments);
                            break;
                        case "BoxGeometry":
                        case "BoxBufferGeometry":
                        case "CubeGeometry":
                            a = new Go[c.type](c.width, c.height, c.depth, c.widthSegments, c.heightSegments, c.depthSegments);
                            break;
                        case "CircleGeometry":
                        case "CircleBufferGeometry":
                            a = new Go[c.type](c.radius, c.segments, c.thetaStart, c.thetaLength);
                            break;
                        case "CylinderGeometry":
                        case "CylinderBufferGeometry":
                            a = new Go[c.type](c.radiusTop, c.radiusBottom, c.height, c.radialSegments, c.heightSegments, c.openEnded, c.thetaStart, c.thetaLength);
                            break;
                        case "ConeGeometry":
                        case "ConeBufferGeometry":
                            a = new Go[c.type](c.radius, c.height, c.radialSegments, c.heightSegments, c.openEnded, c.thetaStart, c.thetaLength);
                            break;
                        case "SphereGeometry":
                        case "SphereBufferGeometry":
                            a = new Go[c.type](c.radius, c.widthSegments, c.heightSegments, c.phiStart, c.phiLength, c.thetaStart, c.thetaLength);
                            break;
                        case "DodecahedronGeometry":
                        case "DodecahedronBufferGeometry":
                        case "IcosahedronGeometry":
                        case "IcosahedronBufferGeometry":
                        case "OctahedronGeometry":
                        case "OctahedronBufferGeometry":
                        case "TetrahedronGeometry":
                        case "TetrahedronBufferGeometry":
                            a = new Go[c.type](c.radius, c.detail);
                            break;
                        case "RingGeometry":
                        case "RingBufferGeometry":
                            a = new Go[c.type](c.innerRadius, c.outerRadius, c.thetaSegments, c.phiSegments, c.thetaStart, c.thetaLength);
                            break;
                        case "TorusGeometry":
                        case "TorusBufferGeometry":
                            a = new Go[c.type](c.radius, c.tube, c.radialSegments, c.tubularSegments, c.arc);
                            break;
                        case "TorusKnotGeometry":
                        case "TorusKnotBufferGeometry":
                            a = new Go[c.type](c.radius, c.tube, c.tubularSegments, c.radialSegments, c.p, c.q);
                            break;
                        case "LatheGeometry":
                        case "LatheBufferGeometry":
                            a = new Go[c.type](c.points, c.segments, c.phiStart, c.phiLength);
                            break;
                        case "PolyhedronGeometry":
                        case "PolyhedronBufferGeometry":
                            a = new Go[c.type](c.vertices, c.indices, c.radius, c.details);
                            break;
                        case "ShapeGeometry":
                        case "ShapeBufferGeometry":
                            for (var l = [], p = 0, h = c.shapes.length; p < h; p++) {
                                var u = e[c.shapes[p]];
                                l.push(u)
                            }
                            a = new Go[c.type](l, c.curveSegments);
                            break;
                        case "ExtrudeGeometry":
                        case "ExtrudeBufferGeometry":
                            for (l = [], p = 0, h = c.shapes.length; p < h; p++) {
                                u = e[c.shapes[p]];
                                l.push(u)
                            }
                            var d = c.options.extrudePath;
                            void 0 !== d && (c.options.extrudePath = (new ka[d.type]).fromJSON(d)), a = new Go[c.type](l, c.options);
                            break;
                        case "BufferGeometry":
                            a = r.parse(c);
                            break;
                        case "Geometry":
                            a = n.parse(c, this.texturePath).geometry;
                            break;
                        default:
                            console.warn('THREE.ObjectLoader: Unsupported geometry type "' + c.type + '"');
                            continue
                    }
                    a.uuid = c.uuid, void 0 !== c.name && (a.name = c.name), !0 === a.isBufferGeometry && void 0 !== c.userData && (a.userData = c.userData), i[c.uuid] = a
                }
            return i
        },
        parseMaterials: function(t, e) {
            var i = {};
            if (void 0 !== t) {
                var n = new rc;
                n.setTextures(e);
                for (var r = 0, s = t.length; r < s; r++) {
                    var o = t[r];
                    if ("MultiMaterial" === o.type) {
                        for (var a = [], c = 0; c < o.materials.length; c++) a.push(n.parse(o.materials[c]));
                        i[o.uuid] = a
                    } else i[o.uuid] = n.parse(o)
                }
            }
            return i
        },
        parseAnimations: function(t) {
            for (var e = [], i = 0; i < t.length; i++) {
                var n = t[i],
                    r = ic.parse(n);
                void 0 !== n.uuid && (r.uuid = n.uuid), e.push(r)
            }
            return e
        },
        parseImages: function(t, e) {
            var i = this,
                n = {};

            function r(t) {
                return i.manager.itemStart(t), s.load(t, function() {
                    i.manager.itemEnd(t)
                }, void 0, function() {
                    i.manager.itemEnd(t), i.manager.itemError(t)
                })
            }
            if (void 0 !== t && t.length > 0) {
                var s = new aa(new ea(e));
                s.setCrossOrigin(this.crossOrigin);
                for (var o = 0, a = t.length; o < a; o++) {
                    var c = t[o],
                        l = c.url;
                    if (Array.isArray(l)) {
                        n[c.uuid] = [];
                        for (var p = 0, h = l.length; p < h; p++) {
                            var u = l[p],
                                d = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(u) ? u : i.texturePath + u;
                            n[c.uuid].push(r(d))
                        }
                    } else {
                        d = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(c.url) ? c.url : i.texturePath + c.url;
                        n[c.uuid] = r(d)
                    }
                }
            }
            return n
        },
        parseTextures: function(t, e) {
            function i(t, e) {
                return "number" == typeof t ? t : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", t), e[t])
            }
            var n = {};
            if (void 0 !== t)
                for (var r = 0, s = t.length; r < s; r++) {
                    var o, a = t[r];
                    void 0 === a.image && console.warn('THREE.ObjectLoader: No "image" specified for', a.uuid), void 0 === e[a.image] && console.warn("THREE.ObjectLoader: Undefined image", a.image), (o = Array.isArray(e[a.image]) ? new On(e[a.image]) : new oi(e[a.image])).needsUpdate = !0, o.uuid = a.uuid, void 0 !== a.name && (o.name = a.name), void 0 !== a.mapping && (o.mapping = i(a.mapping, gc)), void 0 !== a.offset && o.offset.fromArray(a.offset), void 0 !== a.repeat && o.repeat.fromArray(a.repeat), void 0 !== a.center && o.center.fromArray(a.center), void 0 !== a.rotation && (o.rotation = a.rotation), void 0 !== a.wrap && (o.wrapS = i(a.wrap[0], vc), o.wrapT = i(a.wrap[1], vc)), void 0 !== a.format && (o.format = a.format), void 0 !== a.minFilter && (o.minFilter = i(a.minFilter, yc)), void 0 !== a.magFilter && (o.magFilter = i(a.magFilter, yc)), void 0 !== a.anisotropy && (o.anisotropy = a.anisotropy), void 0 !== a.flipY && (o.flipY = a.flipY), n[a.uuid] = o
                }
            return n
        },
        parseObject: function(t, e, i) {
            var n;

            function r(t) {
                return void 0 === e[t] && console.warn("THREE.ObjectLoader: Undefined geometry", t), e[t]
            }

            function s(t) {
                if (void 0 !== t) {
                    if (Array.isArray(t)) {
                        for (var e = [], n = 0, r = t.length; n < r; n++) {
                            var s = t[n];
                            void 0 === i[s] && console.warn("THREE.ObjectLoader: Undefined material", s), e.push(i[s])
                        }
                        return e
                    }
                    return void 0 === i[t] && console.warn("THREE.ObjectLoader: Undefined material", t), i[t]
                }
            }
            switch (t.type) {
                case "Scene":
                    n = new hs, void 0 !== t.background && Number.isInteger(t.background) && (n.background = new xi(t.background)), void 0 !== t.fog && ("Fog" === t.fog.type ? n.fog = new ps(t.fog.color, t.fog.near, t.fog.far) : "FogExp2" === t.fog.type && (n.fog = new ls(t.fog.color, t.fog.density)));
                    break;
                case "PerspectiveCamera":
                    n = new rs(t.fov, t.aspect, t.near, t.far), void 0 !== t.focus && (n.focus = t.focus), void 0 !== t.zoom && (n.zoom = t.zoom), void 0 !== t.filmGauge && (n.filmGauge = t.filmGauge), void 0 !== t.filmOffset && (n.filmOffset = t.filmOffset), void 0 !== t.view && (n.view = Object.assign({}, t.view));
                    break;
                case "OrthographicCamera":
                    n = new Oi(t.left, t.right, t.top, t.bottom, t.near, t.far), void 0 !== t.zoom && (n.zoom = t.zoom), void 0 !== t.view && (n.view = Object.assign({}, t.view));
                    break;
                case "AmbientLight":
                    n = new Ha(t.color, t.intensity);
                    break;
                case "DirectionalLight":
                    n = new Fa(t.color, t.intensity);
                    break;
                case "PointLight":
                    n = new Na(t.color, t.intensity, t.distance, t.decay);
                    break;
                case "RectAreaLight":
                    n = new ja(t.color, t.intensity, t.width, t.height);
                    break;
                case "SpotLight":
                    n = new za(t.color, t.intensity, t.distance, t.angle, t.penumbra, t.decay);
                    break;
                case "HemisphereLight":
                    n = new Oa(t.color, t.groundColor, t.intensity);
                    break;
                case "SkinnedMesh":
                    console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");
                case "Mesh":
                    var o = r(t.geometry),
                        a = s(t.material);
                    n = o.bones && o.bones.length > 0 ? new xs(o, a) : new Mn(o, a);
                    break;
                case "LOD":
                    n = new gs;
                    break;
                case "Line":
                    n = new bs(r(t.geometry), s(t.material), t.mode);
                    break;
                case "LineLoop":
                    n = new Ss(r(t.geometry), s(t.material));
                    break;
                case "LineSegments":
                    n = new Ms(r(t.geometry), s(t.material));
                    break;
                case "PointCloud":
                case "Points":
                    n = new Ts(r(t.geometry), s(t.material));
                    break;
                case "Sprite":
                    n = new ms(s(t.material));
                    break;
                case "Group":
                    n = new ns;
                    break;
                default:
                    n = new Ci
            }
            if (n.uuid = t.uuid, void 0 !== t.name && (n.name = t.name), void 0 !== t.matrix ? (n.matrix.fromArray(t.matrix), void 0 !== t.matrixAutoUpdate && (n.matrixAutoUpdate = t.matrixAutoUpdate), n.matrixAutoUpdate && n.matrix.decompose(n.position, n.quaternion, n.scale)) : (void 0 !== t.position && n.position.fromArray(t.position), void 0 !== t.rotation && n.rotation.fromArray(t.rotation), void 0 !== t.quaternion && n.quaternion.fromArray(t.quaternion), void 0 !== t.scale && n.scale.fromArray(t.scale)), void 0 !== t.castShadow && (n.castShadow = t.castShadow), void 0 !== t.receiveShadow && (n.receiveShadow = t.receiveShadow), t.shadow && (void 0 !== t.shadow.bias && (n.shadow.bias = t.shadow.bias), void 0 !== t.shadow.radius && (n.shadow.radius = t.shadow.radius), void 0 !== t.shadow.mapSize && n.shadow.mapSize.fromArray(t.shadow.mapSize), void 0 !== t.shadow.camera && (n.shadow.camera = this.parseObject(t.shadow.camera))), void 0 !== t.visible && (n.visible = t.visible), void 0 !== t.frustumCulled && (n.frustumCulled = t.frustumCulled), void 0 !== t.renderOrder && (n.renderOrder = t.renderOrder), void 0 !== t.userData && (n.userData = t.userData), void 0 !== t.layers && (n.layers.mask = t.layers), void 0 !== t.children)
                for (var c = t.children, l = 0; l < c.length; l++) n.add(this.parseObject(c[l], e, i));
            if ("LOD" === t.type)
                for (var p = t.levels, h = 0; h < p.length; h++) {
                    var u = p[h],
                        d = n.getObjectByProperty("uuid", u.object);
                    void 0 !== d && n.addLevel(d, u.distance)
                }
            return n
        }
    });
    var mc, gc = {
            UVMapping: yt,
            CubeReflectionMapping: xt,
            CubeRefractionMapping: wt,
            EquirectangularReflectionMapping: bt,
            EquirectangularRefractionMapping: Mt,
            SphericalReflectionMapping: St,
            CubeUVReflectionMapping: _t,
            CubeUVRefractionMapping: Tt
        },
        vc = {
            RepeatWrapping: Et,
            ClampToEdgeWrapping: At,
            MirroredRepeatWrapping: Lt
        },
        yc = {
            NearestFilter: kt,
            NearestMipMapNearestFilter: Rt,
            NearestMipMapLinearFilter: Pt,
            LinearFilter: Ct,
            LinearMipMapNearestFilter: It,
            LinearMipMapLinearFilter: Ot
        };

    function xc(t) {
        "undefined" == typeof createImageBitmap && console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."), "undefined" == typeof fetch && console.warn("THREE.ImageBitmapLoader: fetch() not supported."), this.manager = void 0 !== t ? t : ia, this.options = void 0
    }

    function wc() {
        this.type = "ShapePath", this.color = new xi, this.subPaths = [], this.currentPath = null
    }

    function bc(t) {
        this.type = "Font", this.data = t
    }

    function Mc(t, e, i, n, r) {
        var s = r.glyphs[t] || r.glyphs["?"];
        if (s) {
            var o, a, c, l, p, h, u, d, f = new wc;
            if (s.o)
                for (var m = s._cachedOutline || (s._cachedOutline = s.o.split(" ")), g = 0, v = m.length; g < v;) {
                    switch (m[g++]) {
                        case "m":
                            o = m[g++] * e + i, a = m[g++] * e + n, f.moveTo(o, a);
                            break;
                        case "l":
                            o = m[g++] * e + i, a = m[g++] * e + n, f.lineTo(o, a);
                            break;
                        case "q":
                            c = m[g++] * e + i, l = m[g++] * e + n, p = m[g++] * e + i, h = m[g++] * e + n, f.quadraticCurveTo(p, h, c, l);
                            break;
                        case "b":
                            c = m[g++] * e + i, l = m[g++] * e + n, p = m[g++] * e + i, h = m[g++] * e + n, u = m[g++] * e + i, d = m[g++] * e + n, f.bezierCurveTo(p, h, u, d, c, l)
                    }
                }
            return {
                offsetX: s.ha * e,
                path: f
            }
        }
    }

    function Sc(t) {
        this.manager = void 0 !== t ? t : ia
    }
    xc.prototype = {
        constructor: xc,
        setOptions: function(t) {
            return this.options = t, this
        },
        load: function(t, e, i, n) {
            void 0 === t && (t = ""), void 0 !== this.path && (t = this.path + t), t = this.manager.resolveURL(t);
            var r = this,
                s = ta.get(t);
            if (void 0 !== s) return r.manager.itemStart(t), setTimeout(function() {
                e && e(s), r.manager.itemEnd(t)
            }, 0), s;
            fetch(t).then(function(t) {
                return t.blob()
            }).then(function(t) {
                return createImageBitmap(t, r.options)
            }).then(function(i) {
                ta.add(t, i), e && e(i), r.manager.itemEnd(t)
            }).catch(function(e) {
                n && n(e), r.manager.itemEnd(t), r.manager.itemError(t)
            })
        },
        setCrossOrigin: function() {
            return this
        },
        setPath: function(t) {
            return this.path = t, this
        }
    }, Object.assign(wc.prototype, {
        moveTo: function(t, e) {
            this.currentPath = new Pa, this.subPaths.push(this.currentPath), this.currentPath.moveTo(t, e)
        },
        lineTo: function(t, e) {
            this.currentPath.lineTo(t, e)
        },
        quadraticCurveTo: function(t, e, i, n) {
            this.currentPath.quadraticCurveTo(t, e, i, n)
        },
        bezierCurveTo: function(t, e, i, n, r, s) {
            this.currentPath.bezierCurveTo(t, e, i, n, r, s)
        },
        splineThru: function(t) {
            this.currentPath.splineThru(t)
        },
        toShapes: function(t, e) {
            function i(t) {
                for (var e = [], i = 0, n = t.length; i < n; i++) {
                    var r = t[i],
                        s = new Ca;
                    s.curves = r.curves, e.push(s)
                }
                return e
            }

            function n(t, e) {
                for (var i = e.length, n = !1, r = i - 1, s = 0; s < i; r = s++) {
                    var o = e[r],
                        a = e[s],
                        c = a.x - o.x,
                        l = a.y - o.y;
                    if (Math.abs(l) > Number.EPSILON) {
                        if (l < 0 && (o = e[s], c = -c, a = e[r], l = -l), t.y < o.y || t.y > a.y) continue;
                        if (t.y === o.y) {
                            if (t.x === o.x) return !0
                        } else {
                            var p = l * (t.x - o.x) - c * (t.y - o.y);
                            if (0 === p) return !0;
                            if (p < 0) continue;
                            n = !n
                        }
                    } else {
                        if (t.y !== o.y) continue;
                        if (a.x <= t.x && t.x <= o.x || o.x <= t.x && t.x <= a.x) return !0
                    }
                }
                return n
            }
            var r = yo.isClockWise,
                s = this.subPaths;
            if (0 === s.length) return [];
            if (!0 === e) return i(s);
            var o, a, c, l = [];
            if (1 === s.length) return a = s[0], (c = new Ca).curves = a.curves, l.push(c), l;
            var p = !r(s[0].getPoints());
            p = t ? !p : p;
            var h, u, d = [],
                f = [],
                m = [],
                g = 0;
            f[g] = void 0, m[g] = [];
            for (var v = 0, y = s.length; v < y; v++) o = r(h = (a = s[v]).getPoints()), (o = t ? !o : o) ? (!p && f[g] && g++, f[g] = {
                s: new Ca,
                p: h
            }, f[g].s.curves = a.curves, p && g++, m[g] = []) : m[g].push({
                h: a,
                p: h[0]
            });
            if (!f[0]) return i(s);
            if (f.length > 1) {
                for (var x = !1, w = [], b = 0, M = f.length; b < M; b++) d[b] = [];
                for (b = 0, M = f.length; b < M; b++)
                    for (var S = m[b], _ = 0; _ < S.length; _++) {
                        for (var T = S[_], E = !0, A = 0; A < f.length; A++) n(T.p, f[A].p) && (b !== A && w.push({
                            froms: b,
                            tos: A,
                            hole: _
                        }), E ? (E = !1, d[A].push(T)) : x = !0);
                        E && d[b].push(T)
                    }
                w.length > 0 && (x || (m = d))
            }
            v = 0;
            for (var L = f.length; v < L; v++) {
                c = f[v].s, l.push(c);
                for (var k = 0, R = (u = m[v]).length; k < R; k++) c.holes.push(u[k].h)
            }
            return l
        }
    }), Object.assign(bc.prototype, {
        isFont: !0,
        generateShapes: function(t, e) {
            void 0 === e && (e = 100);
            for (var i = [], n = function(t, e, i) {
                    for (var n = Array.from ? Array.from(t) : String(t).split(""), r = e / i.resolution, s = (i.boundingBox.yMax - i.boundingBox.yMin + i.underlineThickness) * r, o = [], a = 0, c = 0, l = 0; l < n.length; l++) {
                        var p = n[l];
                        if ("\n" === p) a = 0, c -= s;
                        else {
                            var h = Mc(p, r, a, c, i);
                            a += h.offsetX, o.push(h.path)
                        }
                    }
                    return o
                }(t, e, this.data), r = 0, s = n.length; r < s; r++) Array.prototype.push.apply(i, n[r].toShapes());
            return i
        }
    }), Object.assign(Sc.prototype, {
        load: function(t, e, i, n) {
            var r = this,
                s = new ra(this.manager);
            s.setPath(this.path), s.load(t, function(t) {
                var i;
                try {
                    i = JSON.parse(t)
                } catch (e) {
                    console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."), i = JSON.parse(t.substring(65, t.length - 2))
                }
                var n = r.parse(i);
                e && e(n)
            }, i, n)
        },
        parse: function(t) {
            return new bc(t)
        },
        setPath: function(t) {
            return this.path = t, this
        }
    });
    var _c, Tc, Ec, Ac, Lc, kc, Rc, Pc, Cc, Ic, Oc = {
        getContext: function() {
            return void 0 === mc && (mc = new(window.AudioContext || window.webkitAudioContext)), mc
        },
        setContext: function(t) {
            mc = t
        }
    };

    function Dc(t) {
        this.manager = void 0 !== t ? t : ia
    }

    function Bc() {
        this.type = "StereoCamera", this.aspect = 1, this.eyeSep = .064, this.cameraL = new rs, this.cameraL.layers.enable(1), this.cameraL.matrixAutoUpdate = !1, this.cameraR = new rs, this.cameraR.layers.enable(2), this.cameraR.matrixAutoUpdate = !1
    }

    function zc(t, e, i) {
        Ci.call(this), this.type = "CubeCamera";
        var n = new rs(90, 1, t, e);
        n.up.set(0, -1, 0), n.lookAt(new Qe(1, 0, 0)), this.add(n);
        var r = new rs(90, 1, t, e);
        r.up.set(0, -1, 0), r.lookAt(new Qe(-1, 0, 0)), this.add(r);
        var s = new rs(90, 1, t, e);
        s.up.set(0, 0, 1), s.lookAt(new Qe(0, 1, 0)), this.add(s);
        var o = new rs(90, 1, t, e);
        o.up.set(0, 0, -1), o.lookAt(new Qe(0, -1, 0)), this.add(o);
        var a = new rs(90, 1, t, e);
        a.up.set(0, -1, 0), a.lookAt(new Qe(0, 0, 1)), this.add(a);
        var c = new rs(90, 1, t, e);
        c.up.set(0, -1, 0), c.lookAt(new Qe(0, 0, -1)), this.add(c);
        var l = {
            format: qt,
            magFilter: Ct,
            minFilter: Ct
        };
        this.renderTarget = new li(i, i, l), this.renderTarget.texture.name = "CubeCamera", this.update = function(t, e) {
            null === this.parent && this.updateMatrixWorld();
            var i = this.renderTarget,
                l = i.texture.generateMipmaps;
            i.texture.generateMipmaps = !1, i.activeCubeFace = 0, t.render(e, n, i), i.activeCubeFace = 1, t.render(e, r, i), i.activeCubeFace = 2, t.render(e, s, i), i.activeCubeFace = 3, t.render(e, o, i), i.activeCubeFace = 4, t.render(e, a, i), i.texture.generateMipmaps = l, i.activeCubeFace = 5, t.render(e, c, i), t.setRenderTarget(null)
        }, this.clear = function(t, e, i, n) {
            for (var r = this.renderTarget, s = 0; s < 6; s++) r.activeCubeFace = s, t.setRenderTarget(r), t.clear(e, i, n);
            t.setRenderTarget(null)
        }
    }

    function Nc() {
        Ci.call(this), this.type = "AudioListener", this.context = Oc.getContext(), this.gain = this.context.createGain(), this.gain.connect(this.context.destination), this.filter = null
    }

    function Uc(t) {
        Ci.call(this), this.type = "Audio", this.context = t.context, this.gain = this.context.createGain(), this.gain.connect(t.getInput()), this.autoplay = !1, this.buffer = null, this.loop = !1, this.startTime = 0, this.offset = 0, this.playbackRate = 1, this.isPlaying = !1, this.hasPlaybackControl = !0, this.sourceType = "empty", this.filters = []
    }

    function Fc(t) {
        Uc.call(this, t), this.panner = this.context.createPanner(), this.panner.connect(this.gain)
    }

    function Hc(t, e) {
        this.analyser = t.context.createAnalyser(), this.analyser.fftSize = void 0 !== e ? e : 2048, this.data = new Uint8Array(this.analyser.frequencyBinCount), t.getOutput().connect(this.analyser)
    }

    function jc(t, e, i) {
        this.binding = t, this.valueSize = i;
        var n, r = Float64Array;
        switch (e) {
            case "quaternion":
                n = this._slerp;
                break;
            case "string":
            case "bool":
                r = Array, n = this._select;
                break;
            default:
                n = this._lerp
        }
        this.buffer = new r(4 * i), this._mixBufferRegion = n, this.cumulativeWeight = 0, this.useCount = 0, this.referenceCount = 0
    }
    Object.assign(Dc.prototype, {
        load: function(t, e, i, n) {
            var r = new ra(this.manager);
            r.setResponseType("arraybuffer"), r.load(t, function(t) {
                var i = t.slice(0);
                Oc.getContext().decodeAudioData(i, function(t) {
                    e(t)
                })
            }, i, n)
        }
    }), Object.assign(Bc.prototype, {
        update: (Cc = new Ke, Ic = new Ke, function(t) {
            if (_c !== this || Tc !== t.focus || Ec !== t.fov || Ac !== t.aspect * this.aspect || Lc !== t.near || kc !== t.far || Rc !== t.zoom || Pc !== this.eyeSep) {
                _c = this, Tc = t.focus, Ec = t.fov, Ac = t.aspect * this.aspect, Lc = t.near, kc = t.far, Rc = t.zoom;
                var e, i, n = t.projectionMatrix.clone(),
                    r = (Pc = this.eyeSep / 2) * Lc / Tc,
                    s = Lc * Math.tan(qe.DEG2RAD * Ec * .5) / Rc;
                Ic.elements[12] = -Pc, Cc.elements[12] = Pc, e = -s * Ac + r, i = s * Ac + r, n.elements[0] = 2 * Lc / (i - e), n.elements[8] = (i + e) / (i - e), this.cameraL.projectionMatrix.copy(n), e = -s * Ac - r, i = s * Ac - r, n.elements[0] = 2 * Lc / (i - e), n.elements[8] = (i + e) / (i - e), this.cameraR.projectionMatrix.copy(n)
            }
            this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(Ic), this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(Cc)
        })
    }), zc.prototype = Object.create(Ci.prototype), zc.prototype.constructor = zc, Nc.prototype = Object.assign(Object.create(Ci.prototype), {
        constructor: Nc,
        getInput: function() {
            return this.gain
        },
        removeFilter: function() {
            return null !== this.filter && (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination), this.gain.connect(this.context.destination), this.filter = null), this
        },
        getFilter: function() {
            return this.filter
        },
        setFilter: function(t) {
            return null !== this.filter ? (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination), this.filter = t, this.gain.connect(this.filter), this.filter.connect(this.context.destination), this
        },
        getMasterVolume: function() {
            return this.gain.gain.value
        },
        setMasterVolume: function(t) {
            return this.gain.gain.setTargetAtTime(t, this.context.currentTime, .01), this
        },
        updateMatrixWorld: function() {
            var t = new Qe,
                e = new Je,
                i = new Qe,
                n = new Qe;
            return function(r) {
                Ci.prototype.updateMatrixWorld.call(this, r);
                var s = this.context.listener,
                    o = this.up;
                this.matrixWorld.decompose(t, e, i), n.set(0, 0, -1).applyQuaternion(e), s.positionX ? (s.positionX.setValueAtTime(t.x, this.context.currentTime), s.positionY.setValueAtTime(t.y, this.context.currentTime), s.positionZ.setValueAtTime(t.z, this.context.currentTime), s.forwardX.setValueAtTime(n.x, this.context.currentTime), s.forwardY.setValueAtTime(n.y, this.context.currentTime), s.forwardZ.setValueAtTime(n.z, this.context.currentTime), s.upX.setValueAtTime(o.x, this.context.currentTime), s.upY.setValueAtTime(o.y, this.context.currentTime), s.upZ.setValueAtTime(o.z, this.context.currentTime)) : (s.setPosition(t.x, t.y, t.z), s.setOrientation(n.x, n.y, n.z, o.x, o.y, o.z))
            }
        }()
    }), Uc.prototype = Object.assign(Object.create(Ci.prototype), {
        constructor: Uc,
        getOutput: function() {
            return this.gain
        },
        setNodeSource: function(t) {
            return this.hasPlaybackControl = !1, this.sourceType = "audioNode", this.source = t, this.connect(), this
        },
        setMediaElementSource: function(t) {
            return this.hasPlaybackControl = !1, this.sourceType = "mediaNode", this.source = this.context.createMediaElementSource(t), this.connect(), this
        },
        setBuffer: function(t) {
            return this.buffer = t, this.sourceType = "buffer", this.autoplay && this.play(), this
        },
        play: function() {
            if (!0 !== this.isPlaying) {
                if (!1 !== this.hasPlaybackControl) {
                    var t = this.context.createBufferSource();
                    return t.buffer = this.buffer, t.loop = this.loop, t.onended = this.onEnded.bind(this), t.playbackRate.setValueAtTime(this.playbackRate, this.startTime), this.startTime = this.context.currentTime, t.start(this.startTime, this.offset), this.isPlaying = !0, this.source = t, this.connect()
                }
                console.warn("THREE.Audio: this Audio has no playback control.")
            } else console.warn("THREE.Audio: Audio is already playing.")
        },
        pause: function() {
            if (!1 !== this.hasPlaybackControl) return !0 === this.isPlaying && (this.source.stop(), this.source.onended = null, this.offset += (this.context.currentTime - this.startTime) * this.playbackRate, this.isPlaying = !1), this;
            console.warn("THREE.Audio: this Audio has no playback control.")
        },
        stop: function() {
            if (!1 !== this.hasPlaybackControl) return this.source.stop(), this.source.onended = null, this.offset = 0, this.isPlaying = !1, this;
            console.warn("THREE.Audio: this Audio has no playback control.")
        },
        connect: function() {
            if (this.filters.length > 0) {
                this.source.connect(this.filters[0]);
                for (var t = 1, e = this.filters.length; t < e; t++) this.filters[t - 1].connect(this.filters[t]);
                this.filters[this.filters.length - 1].connect(this.getOutput())
            } else this.source.connect(this.getOutput());
            return this
        },
        disconnect: function() {
            if (this.filters.length > 0) {
                this.source.disconnect(this.filters[0]);
                for (var t = 1, e = this.filters.length; t < e; t++) this.filters[t - 1].disconnect(this.filters[t]);
                this.filters[this.filters.length - 1].disconnect(this.getOutput())
            } else this.source.disconnect(this.getOutput());
            return this
        },
        getFilters: function() {
            return this.filters
        },
        setFilters: function(t) {
            return t || (t = []), !0 === this.isPlaying ? (this.disconnect(), this.filters = t, this.connect()) : this.filters = t, this
        },
        getFilter: function() {
            return this.getFilters()[0]
        },
        setFilter: function(t) {
            return this.setFilters(t ? [t] : [])
        },
        setPlaybackRate: function(t) {
            if (!1 !== this.hasPlaybackControl) return this.playbackRate = t, !0 === this.isPlaying && this.source.playbackRate.setValueAtTime(this.playbackRate, this.context.currentTime), this;
            console.warn("THREE.Audio: this Audio has no playback control.")
        },
        getPlaybackRate: function() {
            return this.playbackRate
        },
        onEnded: function() {
            this.isPlaying = !1
        },
        getLoop: function() {
            return !1 === this.hasPlaybackControl ? (console.warn("THREE.Audio: this Audio has no playback control."), !1) : this.loop
        },
        setLoop: function(t) {
            if (!1 !== this.hasPlaybackControl) return this.loop = t, !0 === this.isPlaying && (this.source.loop = this.loop), this;
            console.warn("THREE.Audio: this Audio has no playback control.")
        },
        getVolume: function() {
            return this.gain.gain.value
        },
        setVolume: function(t) {
            return this.gain.gain.setTargetAtTime(t, this.context.currentTime, .01), this
        }
    }), Fc.prototype = Object.assign(Object.create(Uc.prototype), {
        constructor: Fc,
        getOutput: function() {
            return this.panner
        },
        getRefDistance: function() {
            return this.panner.refDistance
        },
        setRefDistance: function(t) {
            return this.panner.refDistance = t, this
        },
        getRolloffFactor: function() {
            return this.panner.rolloffFactor
        },
        setRolloffFactor: function(t) {
            return this.panner.rolloffFactor = t, this
        },
        getDistanceModel: function() {
            return this.panner.distanceModel
        },
        setDistanceModel: function(t) {
            return this.panner.distanceModel = t, this
        },
        getMaxDistance: function() {
            return this.panner.maxDistance
        },
        setMaxDistance: function(t) {
            return this.panner.maxDistance = t, this
        },
        setDirectionalCone: function(t, e, i) {
            return this.panner.coneInnerAngle = t, this.panner.coneOuterAngle = e, this.panner.coneOuterGain = i, this
        },
        updateMatrixWorld: function() {
            var t = new Qe,
                e = new Je,
                i = new Qe,
                n = new Qe;
            return function(r) {
                Ci.prototype.updateMatrixWorld.call(this, r);
                var s = this.panner;
                this.matrixWorld.decompose(t, e, i), n.set(0, 0, 1).applyQuaternion(e), s.setPosition(t.x, t.y, t.z), s.setOrientation(n.x, n.y, n.z)
            }
        }()
    }), Object.assign(Hc.prototype, {
        getFrequencyData: function() {
            return this.analyser.getByteFrequencyData(this.data), this.data
        },
        getAverageFrequency: function() {
            for (var t = 0, e = this.getFrequencyData(), i = 0; i < e.length; i++) t += e[i];
            return t / e.length
        }
    }), Object.assign(jc.prototype, {
        accumulate: function(t, e) {
            var i = this.buffer,
                n = this.valueSize,
                r = t * n + n,
                s = this.cumulativeWeight;
            if (0 === s) {
                for (var o = 0; o !== n; ++o) i[r + o] = i[o];
                s = e
            } else {
                var a = e / (s += e);
                this._mixBufferRegion(i, r, 0, a, n)
            }
            this.cumulativeWeight = s
        },
        apply: function(t) {
            var e = this.valueSize,
                i = this.buffer,
                n = t * e + e,
                r = this.cumulativeWeight,
                s = this.binding;
            if (this.cumulativeWeight = 0, r < 1) {
                var o = 3 * e;
                this._mixBufferRegion(i, n, o, 1 - r, e)
            }
            for (var a = e, c = e + e; a !== c; ++a)
                if (i[a] !== i[a + e]) {
                    s.setValue(i, n);
                    break
                }
        },
        saveOriginalState: function() {
            var t = this.binding,
                e = this.buffer,
                i = this.valueSize,
                n = 3 * i;
            t.getValue(e, n);
            for (var r = i, s = n; r !== s; ++r) e[r] = e[n + r % i];
            this.cumulativeWeight = 0
        },
        restoreOriginalState: function() {
            var t = 3 * this.valueSize;
            this.binding.setValue(this.buffer, t)
        },
        _select: function(t, e, i, n, r) {
            if (n >= .5)
                for (var s = 0; s !== r; ++s) t[e + s] = t[i + s]
        },
        _slerp: function(t, e, i, n) {
            Je.slerpFlat(t, e, t, e, t, i, n)
        },
        _lerp: function(t, e, i, n, r) {
            for (var s = 1 - n, o = 0; o !== r; ++o) {
                var a = e + o;
                t[a] = t[a] * s + t[i + o] * n
            }
        }
    });
    var Gc, Vc, Wc, Yc, Xc, qc, Zc, Kc, Jc, Qc, $c, tl, el, il, nl;

    function rl(t, e, i) {
        var n = i || sl.parseTrackName(e);
        this._targetGroup = t, this._bindings = t.subscribe_(e, n)
    }

    function sl(t, e, i) {
        this.path = e, this.parsedPath = i || sl.parseTrackName(e), this.node = sl.findNode(t, this.parsedPath.nodeName) || t, this.rootNode = t
    }

    function ol() {
        this.uuid = qe.generateUUID(), this._objects = Array.prototype.slice.call(arguments), this.nCachedObjects_ = 0;
        var t = {};
        this._indicesByUUID = t;
        for (var e = 0, i = arguments.length; e !== i; ++e) t[arguments[e].uuid] = e;
        this._paths = [], this._parsedPaths = [], this._bindings = [], this._bindingsIndicesByPath = {};
        var n = this;
        this.stats = {
            objects: {
                get total() {
                    return n._objects.length
                },
                get inUse() {
                    return this.total - n.nCachedObjects_
                }
            },
            get bindingsPerObject() {
                return n._bindings.length
            }
        }
    }

    function al(t, e, i) {
        this._mixer = t, this._clip = e, this._localRoot = i || null;
        for (var n = e.tracks, r = n.length, s = new Array(r), o = {
                endingStart: Re,
                endingEnd: Re
            }, a = 0; a !== r; ++a) {
            var c = n[a].createInterpolant(null);
            s[a] = c, c.settings = o
        }
        this._interpolantSettings = o, this._interpolants = s, this._propertyBindings = new Array(r), this._cacheIndex = null, this._byClipCacheIndex = null, this._timeScaleInterpolant = null, this._weightInterpolant = null, this.loop = Te, this._loopCount = -1, this._startTime = null, this.time = 0, this.timeScale = 1, this._effectiveTimeScale = 1, this.weight = 1, this._effectiveWeight = 1, this.repetitions = 1 / 0, this.paused = !1, this.enabled = !0, this.clampWhenFinished = !1, this.zeroSlopeAtStart = !0, this.zeroSlopeAtEnd = !0
    }

    function cl(t) {
        this._root = t, this._initMemoryManager(), this._accuIndex = 0, this.time = 0, this.timeScale = 1
    }

    function ll(t) {
        "string" == typeof t && (console.warn("THREE.Uniform: Type parameter is no longer needed."), t = arguments[1]), this.value = t
    }

    function pl() {
        $i.call(this), this.type = "InstancedBufferGeometry", this.maxInstancedCount = void 0
    }

    function hl(t, e, i) {
        us.call(this, t, e), this.meshPerAttribute = i || 1
    }

    function ul(t, e, i) {
        Fi.call(this, t, e), this.meshPerAttribute = i || 1
    }

    function dl(t, e, i, n) {
        this.ray = new wn(t, e), this.near = i || 0, this.far = n || 1 / 0, this.params = {
            Mesh: {},
            Line: {},
            LOD: {},
            Points: {
                threshold: 1
            },
            Sprite: {}
        }, Object.defineProperties(this.params, {
            PointCloud: {
                get: function() {
                    return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."), this.Points
                }
            }
        })
    }

    function fl(t, e) {
        return t.distance - e.distance
    }

    function ml(t, e, i, n) {
        if (!1 !== t.visible && (t.raycast(e, i), !0 === n))
            for (var r = t.children, s = 0, o = r.length; s < o; s++) ml(r[s], e, i, !0)
    }

    function gl(t) {
        this.autoStart = void 0 === t || t, this.startTime = 0, this.oldTime = 0, this.elapsedTime = 0, this.running = !1
    }

    function vl(t, e, i) {
        return this.radius = void 0 !== t ? t : 1, this.phi = void 0 !== e ? e : 0, this.theta = void 0 !== i ? i : 0, this
    }

    function yl(t, e, i) {
        return this.radius = void 0 !== t ? t : 1, this.theta = void 0 !== e ? e : 0, this.y = void 0 !== i ? i : 0, this
    }

    function xl(t, e) {
        this.min = void 0 !== t ? t : new Ze(1 / 0, 1 / 0), this.max = void 0 !== e ? e : new Ze(-1 / 0, -1 / 0)
    }

    function wl(t, e) {
        this.start = void 0 !== t ? t : new Qe, this.end = void 0 !== e ? e : new Qe
    }

    function bl(t) {
        Ci.call(this), this.material = t, this.render = function() {}
    }

    function Ml(t, e, i, n) {
        this.object = t, this.size = void 0 !== e ? e : 1;
        var r = void 0 !== i ? i : 16711680,
            s = void 0 !== n ? n : 1,
            o = 0,
            a = this.object.geometry;
        a && a.isGeometry ? o = 3 * a.faces.length : a && a.isBufferGeometry && (o = a.attributes.normal.count);
        var c = new $i,
            l = new qi(2 * o * 3, 3);
        c.addAttribute("position", l), Ms.call(this, c, new ws({
            color: r,
            linewidth: s
        })), this.matrixAutoUpdate = !1, this.update()
    }

    function Sl(t, e) {
        Ci.call(this), this.light = t, this.light.updateMatrixWorld(), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1, this.color = e;
        for (var i = new $i, n = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1], r = 0, s = 1; r < 32; r++, s++) {
            var o = r / 32 * Math.PI * 2,
                a = s / 32 * Math.PI * 2;
            n.push(Math.cos(o), Math.sin(o), 1, Math.cos(a), Math.sin(a), 1)
        }
        i.addAttribute("position", new qi(n, 3));
        var c = new ws({
            fog: !1
        });
        this.cone = new Ms(i, c), this.add(this.cone), this.update()
    }

    function _l(t) {
        for (var e = function t(e) {
                var i = [];
                e && e.isBone && i.push(e);
                for (var n = 0; n < e.children.length; n++) i.push.apply(i, t(e.children[n]));
                return i
            }(t), i = new $i, n = [], r = [], s = new xi(0, 0, 1), o = new xi(0, 1, 0), a = 0; a < e.length; a++) {
            var c = e[a];
            c.parent && c.parent.isBone && (n.push(0, 0, 0), n.push(0, 0, 0), r.push(s.r, s.g, s.b), r.push(o.r, o.g, o.b))
        }
        i.addAttribute("position", new qi(n, 3)), i.addAttribute("color", new qi(r, 3));
        var l = new ws({
            vertexColors: I,
            depthTest: !1,
            depthWrite: !1,
            transparent: !0
        });
        Ms.call(this, i, l), this.root = t, this.bones = e, this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1
    }

    function Tl(t, e, i) {
        this.light = t, this.light.updateMatrixWorld(), this.color = i;
        var n = new Lo(e, 4, 2),
            r = new yn({
                wireframe: !0,
                fog: !1
            });
        Mn.call(this, n, r), this.matrix = this.light.matrixWorld, this.matrixAutoUpdate = !1, this.update()
    }

    function El(t, e) {
        Ci.call(this), this.light = t, this.light.updateMatrixWorld(), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1, this.color = e;
        var i = new ws({
                fog: !1
            }),
            n = new $i;
        n.addAttribute("position", new Fi(new Float32Array(15), 3)), this.line = new bs(n, i), this.add(this.line), this.update()
    }

    function Al(t, e, i) {
        Ci.call(this), this.light = t, this.light.updateMatrixWorld(), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1, this.color = i;
        var n = new Ns(e);
        n.rotateY(.5 * Math.PI), this.material = new yn({
            wireframe: !0,
            fog: !1
        }), void 0 === this.color && (this.material.vertexColors = I);
        var r = n.getAttribute("position"),
            s = new Float32Array(3 * r.count);
        n.addAttribute("color", new Fi(s, 3)), this.add(new Mn(n, this.material)), this.update()
    }

    function Ll(t, e, i, n) {
        t = t || 10, e = e || 10, i = new xi(void 0 !== i ? i : 4473924), n = new xi(void 0 !== n ? n : 8947848);
        for (var r = e / 2, s = t / e, o = t / 2, a = [], c = [], l = 0, p = 0, h = -o; l <= e; l++, h += s) {
            a.push(-o, 0, h, o, 0, h), a.push(h, 0, -o, h, 0, o);
            var u = l === r ? i : n;
            u.toArray(c, p), p += 3, u.toArray(c, p), p += 3, u.toArray(c, p), p += 3, u.toArray(c, p), p += 3
        }
        var d = new $i;
        d.addAttribute("position", new qi(a, 3)), d.addAttribute("color", new qi(c, 3));
        var f = new ws({
            vertexColors: I
        });
        Ms.call(this, d, f)
    }

    function kl(t, e, i, n, r, s) {
        t = t || 10, e = e || 16, i = i || 8, n = n || 64, r = new xi(void 0 !== r ? r : 4473924), s = new xi(void 0 !== s ? s : 8947848);
        var o, a, c, l, p, h, u, d = [],
            f = [];
        for (l = 0; l <= e; l++) c = l / e * (2 * Math.PI), o = Math.sin(c) * t, a = Math.cos(c) * t, d.push(0, 0, 0), d.push(o, 0, a), u = 1 & l ? r : s, f.push(u.r, u.g, u.b), f.push(u.r, u.g, u.b);
        for (l = 0; l <= i; l++)
            for (u = 1 & l ? r : s, h = t - t / i * l, p = 0; p < n; p++) c = p / n * (2 * Math.PI), o = Math.sin(c) * h, a = Math.cos(c) * h, d.push(o, 0, a), f.push(u.r, u.g, u.b), c = (p + 1) / n * (2 * Math.PI), o = Math.sin(c) * h, a = Math.cos(c) * h, d.push(o, 0, a), f.push(u.r, u.g, u.b);
        var m = new $i;
        m.addAttribute("position", new qi(d, 3)), m.addAttribute("color", new qi(f, 3));
        var g = new ws({
            vertexColors: I
        });
        Ms.call(this, m, g)
    }

    function Rl(t, e, i, n) {
        this.object = t, this.size = void 0 !== e ? e : 1;
        var r = void 0 !== i ? i : 16776960,
            s = void 0 !== n ? n : 1,
            o = 0,
            a = this.object.geometry;
        a && a.isGeometry ? o = a.faces.length : console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");
        var c = new $i,
            l = new qi(2 * o * 3, 3);
        c.addAttribute("position", l), Ms.call(this, c, new ws({
            color: r,
            linewidth: s
        })), this.matrixAutoUpdate = !1, this.update()
    }

    function Pl(t, e, i) {
        Ci.call(this), this.light = t, this.light.updateMatrixWorld(), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1, this.color = i, void 0 === e && (e = 1);
        var n = new $i;
        n.addAttribute("position", new qi([-e, e, 0, e, e, 0, e, -e, 0, -e, -e, 0, -e, e, 0], 3));
        var r = new ws({
            fog: !1
        });
        this.lightPlane = new bs(n, r), this.add(this.lightPlane), (n = new $i).addAttribute("position", new qi([0, 0, 0, 0, 0, 1], 3)), this.targetLine = new bs(n, r), this.add(this.targetLine), this.update()
    }

    function Cl(t) {
        var e = new $i,
            i = new ws({
                color: 16777215,
                vertexColors: C
            }),
            n = [],
            r = [],
            s = {},
            o = new xi(16755200),
            a = new xi(16711680),
            c = new xi(43775),
            l = new xi(16777215),
            p = new xi(3355443);

        function h(t, e, i) {
            u(t, i), u(e, i)
        }

        function u(t, e) {
            n.push(0, 0, 0), r.push(e.r, e.g, e.b), void 0 === s[t] && (s[t] = []), s[t].push(n.length / 3 - 1)
        }
        h("n1", "n2", o), h("n2", "n4", o), h("n4", "n3", o), h("n3", "n1", o), h("f1", "f2", o), h("f2", "f4", o), h("f4", "f3", o), h("f3", "f1", o), h("n1", "f1", o), h("n2", "f2", o), h("n3", "f3", o), h("n4", "f4", o), h("p", "n1", a), h("p", "n2", a), h("p", "n3", a), h("p", "n4", a), h("u1", "u2", c), h("u2", "u3", c), h("u3", "u1", c), h("c", "t", l), h("p", "c", p), h("cn1", "cn2", p), h("cn3", "cn4", p), h("cf1", "cf2", p), h("cf3", "cf4", p), e.addAttribute("position", new qi(n, 3)), e.addAttribute("color", new qi(r, 3)), Ms.call(this, e, i), this.camera = t, this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1, this.pointMap = s, this.update()
    }

    function Il(t, e) {
        this.object = t, void 0 === e && (e = 16776960);
        var i = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]),
            n = new Float32Array(24),
            r = new $i;
        r.setIndex(new Fi(i, 1)), r.addAttribute("position", new Fi(n, 3)), Ms.call(this, r, new ws({
            color: e
        })), this.matrixAutoUpdate = !1, this.update()
    }

    function Ol(t, e) {
        this.type = "Box3Helper", this.box = t;
        var i = void 0 !== e ? e : 16776960,
            n = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]),
            r = new $i;
        r.setIndex(new Fi(n, 1)), r.addAttribute("position", new qi([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1], 3)), Ms.call(this, r, new ws({
            color: i
        })), this.geometry.computeBoundingSphere()
    }

    function Dl(t, e, i) {
        this.type = "PlaneHelper", this.plane = t, this.size = void 0 === e ? 1 : e;
        var n = void 0 !== i ? i : 16776960,
            r = new $i;
        r.addAttribute("position", new qi([1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0], 3)), r.computeBoundingSphere(), bs.call(this, r, new ws({
            color: n
        }));
        var s = new $i;
        s.addAttribute("position", new qi([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1], 3)), s.computeBoundingSphere(), this.add(new Mn(s, new yn({
            color: n,
            opacity: .2,
            transparent: !0,
            depthWrite: !1
        })))
    }

    function Bl(t, e, i, n, r, s) {
        Ci.call(this), void 0 === n && (n = 16776960), void 0 === i && (i = 1), void 0 === r && (r = .2 * i), void 0 === s && (s = .2 * r), void 0 === tl && ((tl = new $i).addAttribute("position", new qi([0, 0, 0, 0, 1, 0], 3)), (el = new No(0, .5, 1, 5, 1)).translate(0, -.5, 0)), this.position.copy(e), this.line = new bs(tl, new ws({
            color: n
        })), this.line.matrixAutoUpdate = !1, this.add(this.line), this.cone = new Mn(el, new yn({
            color: n
        })), this.cone.matrixAutoUpdate = !1, this.add(this.cone), this.setDirection(t), this.setLength(i, r, s)
    }

    function zl(t) {
        var e = [0, 0, 0, t = t || 1, 0, 0, 0, 0, 0, 0, t, 0, 0, 0, 0, 0, 0, t],
            i = new $i;
        i.addAttribute("position", new qi(e, 3)), i.addAttribute("color", new qi([1, 0, 0, 1, .6, 0, 0, 1, 0, .6, 1, 0, 0, 0, 1, 0, .6, 1], 3));
        var n = new ws({
            vertexColors: I
        });
        Ms.call(this, i, n)
    }

    function Nl(t, e, i, n, r, s, o) {
        return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."), new Di(t, e, i, r, s, o)
    }
    Object.assign(rl.prototype, {
            getValue: function(t, e) {
                this.bind();
                var i = this._targetGroup.nCachedObjects_,
                    n = this._bindings[i];
                void 0 !== n && n.getValue(t, e)
            },
            setValue: function(t, e) {
                for (var i = this._bindings, n = this._targetGroup.nCachedObjects_, r = i.length; n !== r; ++n) i[n].setValue(t, e)
            },
            bind: function() {
                for (var t = this._bindings, e = this._targetGroup.nCachedObjects_, i = t.length; e !== i; ++e) t[e].bind()
            },
            unbind: function() {
                for (var t = this._bindings, e = this._targetGroup.nCachedObjects_, i = t.length; e !== i; ++e) t[e].unbind()
            }
        }), Object.assign(sl, {
            Composite: rl,
            create: function(t, e, i) {
                return t && t.isAnimationObjectGroup ? new sl.Composite(t, e, i) : new sl(t, e, i)
            },
            sanitizeNodeName: (Jc = new RegExp("[\\[\\]\\.:\\/]", "g"), function(t) {
                return t.replace(/\s/g, "_").replace(Jc, "")
            }),
            parseTrackName: (Gc = "[^\\[\\]\\.:\\/]", Vc = "[^" + "\\[\\]\\.:\\/".replace("\\.", "") + "]", Wc = /((?:WC+[\/:])*)/.source.replace("WC", Gc), Yc = /(WCOD+)?/.source.replace("WCOD", Vc), Xc = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", Gc), qc = /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", Gc), Zc = new RegExp("^" + Wc + Yc + Xc + qc + "$"), Kc = ["material", "materials", "bones"], function(t) {
                var e = Zc.exec(t);
                if (!e) throw new Error("PropertyBinding: Cannot parse trackName: " + t);
                var i = {
                        nodeName: e[2],
                        objectName: e[3],
                        objectIndex: e[4],
                        propertyName: e[5],
                        propertyIndex: e[6]
                    },
                    n = i.nodeName && i.nodeName.lastIndexOf(".");
                if (void 0 !== n && -1 !== n) {
                    var r = i.nodeName.substring(n + 1); - 1 !== Kc.indexOf(r) && (i.nodeName = i.nodeName.substring(0, n), i.objectName = r)
                }
                if (null === i.propertyName || 0 === i.propertyName.length) throw new Error("PropertyBinding: can not parse propertyName from trackName: " + t);
                return i
            }),
            findNode: function(t, e) {
                if (!e || "" === e || "root" === e || "." === e || -1 === e || e === t.name || e === t.uuid) return t;
                if (t.skeleton) {
                    var i = t.skeleton.getBoneByName(e);
                    if (void 0 !== i) return i
                }
                if (t.children) {
                    var n = function(t) {
                            for (var i = 0; i < t.length; i++) {
                                var r = t[i];
                                if (r.name === e || r.uuid === e) return r;
                                var s = n(r.children);
                                if (s) return s
                            }
                            return null
                        },
                        r = n(t.children);
                    if (r) return r
                }
                return null
            }
        }), Object.assign(sl.prototype, {
            _getValue_unavailable: function() {},
            _setValue_unavailable: function() {},
            BindingType: {
                Direct: 0,
                EntireArray: 1,
                ArrayElement: 2,
                HasFromToArray: 3
            },
            Versioning: {
                None: 0,
                NeedsUpdate: 1,
                MatrixWorldNeedsUpdate: 2
            },
            GetterByBindingType: [function(t, e) {
                t[e] = this.node[this.propertyName]
            }, function(t, e) {
                for (var i = this.resolvedProperty, n = 0, r = i.length; n !== r; ++n) t[e++] = i[n]
            }, function(t, e) {
                t[e] = this.resolvedProperty[this.propertyIndex]
            }, function(t, e) {
                this.resolvedProperty.toArray(t, e)
            }],
            SetterByBindingTypeAndVersioning: [
                [function(t, e) {
                    this.targetObject[this.propertyName] = t[e]
                }, function(t, e) {
                    this.targetObject[this.propertyName] = t[e], this.targetObject.needsUpdate = !0
                }, function(t, e) {
                    this.targetObject[this.propertyName] = t[e], this.targetObject.matrixWorldNeedsUpdate = !0
                }],
                [function(t, e) {
                    for (var i = this.resolvedProperty, n = 0, r = i.length; n !== r; ++n) i[n] = t[e++]
                }, function(t, e) {
                    for (var i = this.resolvedProperty, n = 0, r = i.length; n !== r; ++n) i[n] = t[e++];
                    this.targetObject.needsUpdate = !0
                }, function(t, e) {
                    for (var i = this.resolvedProperty, n = 0, r = i.length; n !== r; ++n) i[n] = t[e++];
                    this.targetObject.matrixWorldNeedsUpdate = !0
                }],
                [function(t, e) {
                    this.resolvedProperty[this.propertyIndex] = t[e]
                }, function(t, e) {
                    this.resolvedProperty[this.propertyIndex] = t[e], this.targetObject.needsUpdate = !0
                }, function(t, e) {
                    this.resolvedProperty[this.propertyIndex] = t[e], this.targetObject.matrixWorldNeedsUpdate = !0
                }],
                [function(t, e) {
                    this.resolvedProperty.fromArray(t, e)
                }, function(t, e) {
                    this.resolvedProperty.fromArray(t, e), this.targetObject.needsUpdate = !0
                }, function(t, e) {
                    this.resolvedProperty.fromArray(t, e), this.targetObject.matrixWorldNeedsUpdate = !0
                }]
            ],
            getValue: function(t, e) {
                this.bind(), this.getValue(t, e)
            },
            setValue: function(t, e) {
                this.bind(), this.setValue(t, e)
            },
            bind: function() {
                var t = this.node,
                    e = this.parsedPath,
                    i = e.objectName,
                    n = e.propertyName,
                    r = e.propertyIndex;
                if (t || (t = sl.findNode(this.rootNode, e.nodeName) || this.rootNode, this.node = t), this.getValue = this._getValue_unavailable, this.setValue = this._setValue_unavailable, t) {
                    if (i) {
                        var s = e.objectIndex;
                        switch (i) {
                            case "materials":
                                if (!t.material) return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                                if (!t.material.materials) return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.", this);
                                t = t.material.materials;
                                break;
                            case "bones":
                                if (!t.skeleton) return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.", this);
                                t = t.skeleton.bones;
                                for (var o = 0; o < t.length; o++)
                                    if (t[o].name === s) {
                                        s = o;
                                        break
                                    } break;
                            default:
                                if (void 0 === t[i]) return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.", this);
                                t = t[i]
                        }
                        if (void 0 !== s) {
                            if (void 0 === t[s]) return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.", this, t);
                            t = t[s]
                        }
                    }
                    var a = t[n];
                    if (void 0 !== a) {
                        var c = this.Versioning.None;
                        void 0 !== t.needsUpdate ? (c = this.Versioning.NeedsUpdate, this.targetObject = t) : void 0 !== t.matrixWorldNeedsUpdate && (c = this.Versioning.MatrixWorldNeedsUpdate, this.targetObject = t);
                        var l = this.BindingType.Direct;
                        if (void 0 !== r) {
                            if ("morphTargetInfluences" === n) {
                                if (!t.geometry) return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.", this);
                                if (t.geometry.isBufferGeometry) {
                                    if (!t.geometry.morphAttributes) return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.", this);
                                    for (o = 0; o < this.node.geometry.morphAttributes.position.length; o++)
                                        if (t.geometry.morphAttributes.position[o].name === r) {
                                            r = o;
                                            break
                                        }
                                } else {
                                    if (!t.geometry.morphTargets) return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.", this);
                                    for (o = 0; o < this.node.geometry.morphTargets.length; o++)
                                        if (t.geometry.morphTargets[o].name === r) {
                                            r = o;
                                            break
                                        }
                                }
                            }
                            l = this.BindingType.ArrayElement, this.resolvedProperty = a, this.propertyIndex = r
                        } else void 0 !== a.fromArray && void 0 !== a.toArray ? (l = this.BindingType.HasFromToArray, this.resolvedProperty = a) : Array.isArray(a) ? (l = this.BindingType.EntireArray, this.resolvedProperty = a) : this.propertyName = n;
                        this.getValue = this.GetterByBindingType[l], this.setValue = this.SetterByBindingTypeAndVersioning[l][c]
                    } else {
                        var p = e.nodeName;
                        console.error("THREE.PropertyBinding: Trying to update property for track: " + p + "." + n + " but it wasn't found.", t)
                    }
                } else console.error("THREE.PropertyBinding: Trying to update node for track: " + this.path + " but it wasn't found.")
            },
            unbind: function() {
                this.node = null, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound
            }
        }),
        //!\ DECLARE ALIAS AFTER assign prototype !
        Object.assign(sl.prototype, {
            _getValue_unbound: sl.prototype.getValue,
            _setValue_unbound: sl.prototype.setValue
        }), Object.assign(ol.prototype, {
            isAnimationObjectGroup: !0,
            add: function() {
                for (var t = this._objects, e = t.length, i = this.nCachedObjects_, n = this._indicesByUUID, r = this._paths, s = this._parsedPaths, o = this._bindings, a = o.length, c = void 0, l = 0, p = arguments.length; l !== p; ++l) {
                    var h = arguments[l],
                        u = h.uuid,
                        d = n[u];
                    if (void 0 === d) {
                        d = e++, n[u] = d, t.push(h);
                        for (var f = 0, m = a; f !== m; ++f) o[f].push(new sl(h, r[f], s[f]))
                    } else if (d < i) {
                        c = t[d];
                        var g = --i,
                            v = t[g];
                        n[v.uuid] = d, t[d] = v, n[u] = g, t[g] = h;
                        for (f = 0, m = a; f !== m; ++f) {
                            var y = o[f],
                                x = y[g],
                                w = y[d];
                            y[d] = x, void 0 === w && (w = new sl(h, r[f], s[f])), y[g] = w
                        }
                    } else t[d] !== c && console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")
                }
                this.nCachedObjects_ = i
            },
            remove: function() {
                for (var t = this._objects, e = this.nCachedObjects_, i = this._indicesByUUID, n = this._bindings, r = n.length, s = 0, o = arguments.length; s !== o; ++s) {
                    var a = arguments[s],
                        c = a.uuid,
                        l = i[c];
                    if (void 0 !== l && l >= e) {
                        var p = e++,
                            h = t[p];
                        i[h.uuid] = l, t[l] = h, i[c] = p, t[p] = a;
                        for (var u = 0, d = r; u !== d; ++u) {
                            var f = n[u],
                                m = f[p],
                                g = f[l];
                            f[l] = m, f[p] = g
                        }
                    }
                }
                this.nCachedObjects_ = e
            },
            uncache: function() {
                for (var t = this._objects, e = t.length, i = this.nCachedObjects_, n = this._indicesByUUID, r = this._bindings, s = r.length, o = 0, a = arguments.length; o !== a; ++o) {
                    var c = arguments[o].uuid,
                        l = n[c];
                    if (void 0 !== l)
                        if (delete n[c], l < i) {
                            var p = --i,
                                h = t[p],
                                u = t[v = --e];
                            n[h.uuid] = l, t[l] = h, n[u.uuid] = p, t[p] = u, t.pop();
                            for (var d = 0, f = s; d !== f; ++d) {
                                var m = (y = r[d])[p],
                                    g = y[v];
                                y[l] = m, y[p] = g, y.pop()
                            }
                        } else {
                            var v;
                            n[(u = t[v = --e]).uuid] = l, t[l] = u, t.pop();
                            for (d = 0, f = s; d !== f; ++d) {
                                var y;
                                (y = r[d])[l] = y[v], y.pop()
                            }
                        }
                }
                this.nCachedObjects_ = i
            },
            subscribe_: function(t, e) {
                var i = this._bindingsIndicesByPath,
                    n = i[t],
                    r = this._bindings;
                if (void 0 !== n) return r[n];
                var s = this._paths,
                    o = this._parsedPaths,
                    a = this._objects,
                    c = a.length,
                    l = this.nCachedObjects_,
                    p = new Array(c);
                n = r.length, i[t] = n, s.push(t), o.push(e), r.push(p);
                for (var h = l, u = a.length; h !== u; ++h) {
                    var d = a[h];
                    p[h] = new sl(d, t, e)
                }
                return p
            },
            unsubscribe_: function(t) {
                var e = this._bindingsIndicesByPath,
                    i = e[t];
                if (void 0 !== i) {
                    var n = this._paths,
                        r = this._parsedPaths,
                        s = this._bindings,
                        o = s.length - 1,
                        a = s[o];
                    e[t[o]] = i, s[i] = a, s.pop(), r[i] = r[o], r.pop(), n[i] = n[o], n.pop()
                }
            }
        }), Object.assign(al.prototype, {
            play: function() {
                return this._mixer._activateAction(this), this
            },
            stop: function() {
                return this._mixer._deactivateAction(this), this.reset()
            },
            reset: function() {
                return this.paused = !1, this.enabled = !0, this.time = 0, this._loopCount = -1, this._startTime = null, this.stopFading().stopWarping()
            },
            isRunning: function() {
                return this.enabled && !this.paused && 0 !== this.timeScale && null === this._startTime && this._mixer._isActiveAction(this)
            },
            isScheduled: function() {
                return this._mixer._isActiveAction(this)
            },
            startAt: function(t) {
                return this._startTime = t, this
            },
            setLoop: function(t, e) {
                return this.loop = t, this.repetitions = e, this
            },
            setEffectiveWeight: function(t) {
                return this.weight = t, this._effectiveWeight = this.enabled ? t : 0, this.stopFading()
            },
            getEffectiveWeight: function() {
                return this._effectiveWeight
            },
            fadeIn: function(t) {
                return this._scheduleFading(t, 0, 1)
            },
            fadeOut: function(t) {
                return this._scheduleFading(t, 1, 0)
            },
            crossFadeFrom: function(t, e, i) {
                if (t.fadeOut(e), this.fadeIn(e), i) {
                    var n = this._clip.duration,
                        r = t._clip.duration,
                        s = r / n,
                        o = n / r;
                    t.warp(1, s, e), this.warp(o, 1, e)
                }
                return this
            },
            crossFadeTo: function(t, e, i) {
                return t.crossFadeFrom(this, e, i)
            },
            stopFading: function() {
                var t = this._weightInterpolant;
                return null !== t && (this._weightInterpolant = null, this._mixer._takeBackControlInterpolant(t)), this
            },
            setEffectiveTimeScale: function(t) {
                return this.timeScale = t, this._effectiveTimeScale = this.paused ? 0 : t, this.stopWarping()
            },
            getEffectiveTimeScale: function() {
                return this._effectiveTimeScale
            },
            setDuration: function(t) {
                return this.timeScale = this._clip.duration / t, this.stopWarping()
            },
            syncWith: function(t) {
                return this.time = t.time, this.timeScale = t.timeScale, this.stopWarping()
            },
            halt: function(t) {
                return this.warp(this._effectiveTimeScale, 0, t)
            },
            warp: function(t, e, i) {
                var n = this._mixer,
                    r = n.time,
                    s = this._timeScaleInterpolant,
                    o = this.timeScale;
                null === s && (s = n._lendControlInterpolant(), this._timeScaleInterpolant = s);
                var a = s.parameterPositions,
                    c = s.sampleValues;
                return a[0] = r, a[1] = r + i, c[0] = t / o, c[1] = e / o, this
            },
            stopWarping: function() {
                var t = this._timeScaleInterpolant;
                return null !== t && (this._timeScaleInterpolant = null, this._mixer._takeBackControlInterpolant(t)), this
            },
            getMixer: function() {
                return this._mixer
            },
            getClip: function() {
                return this._clip
            },
            getRoot: function() {
                return this._localRoot || this._mixer._root
            },
            _update: function(t, e, i, n) {
                if (this.enabled) {
                    var r = this._startTime;
                    if (null !== r) {
                        var s = (t - r) * i;
                        if (s < 0 || 0 === i) return;
                        this._startTime = null, e = i * s
                    }
                    e *= this._updateTimeScale(t);
                    var o = this._updateTime(e),
                        a = this._updateWeight(t);
                    if (a > 0)
                        for (var c = this._interpolants, l = this._propertyBindings, p = 0, h = c.length; p !== h; ++p) c[p].evaluate(o), l[p].accumulate(n, a)
                } else this._updateWeight(t)
            },
            _updateWeight: function(t) {
                var e = 0;
                if (this.enabled) {
                    e = this.weight;
                    var i = this._weightInterpolant;
                    if (null !== i) {
                        var n = i.evaluate(t)[0];
                        e *= n, t > i.parameterPositions[1] && (this.stopFading(), 0 === n && (this.enabled = !1))
                    }
                }
                return this._effectiveWeight = e, e
            },
            _updateTimeScale: function(t) {
                var e = 0;
                if (!this.paused) {
                    e = this.timeScale;
                    var i = this._timeScaleInterpolant;
                    if (null !== i) e *= i.evaluate(t)[0], t > i.parameterPositions[1] && (this.stopWarping(), 0 === e ? this.paused = !0 : this.timeScale = e)
                }
                return this._effectiveTimeScale = e, e
            },
            _updateTime: function(t) {
                var e = this.time + t,
                    i = this._clip.duration,
                    n = this.loop,
                    r = this._loopCount,
                    s = n === Ee;
                if (0 === t) return -1 === r ? e : s && 1 == (1 & r) ? i - e : e;
                if (n === _e) {
                    -1 === r && (this._loopCount = 0, this._setEndings(!0, !0, !1));
                    t: {
                        if (e >= i) e = i;
                        else {
                            if (!(e < 0)) break t;
                            e = 0
                        }
                        this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                        this._mixer.dispatchEvent({
                            type: "finished",
                            action: this,
                            direction: t < 0 ? -1 : 1
                        })
                    }
                } else {
                    if (-1 === r && (t >= 0 ? (r = 0, this._setEndings(!0, 0 === this.repetitions, s)) : this._setEndings(0 === this.repetitions, !0, s)), e >= i || e < 0) {
                        var o = Math.floor(e / i);
                        e -= i * o, r += Math.abs(o);
                        var a = this.repetitions - r;
                        if (a <= 0) this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, e = t > 0 ? i : 0, this._mixer.dispatchEvent({
                            type: "finished",
                            action: this,
                            direction: t > 0 ? 1 : -1
                        });
                        else {
                            if (1 === a) {
                                var c = t < 0;
                                this._setEndings(c, !c, s)
                            } else this._setEndings(!1, !1, s);
                            this._loopCount = r, this._mixer.dispatchEvent({
                                type: "loop",
                                action: this,
                                loopDelta: o
                            })
                        }
                    }
                    if (s && 1 == (1 & r)) return this.time = e, i - e
                }
                return this.time = e, e
            },
            _setEndings: function(t, e, i) {
                var n = this._interpolantSettings;
                i ? (n.endingStart = Pe, n.endingEnd = Pe) : (n.endingStart = t ? this.zeroSlopeAtStart ? Pe : Re : Ce, n.endingEnd = e ? this.zeroSlopeAtEnd ? Pe : Re : Ce)
            },
            _scheduleFading: function(t, e, i) {
                var n = this._mixer,
                    r = n.time,
                    s = this._weightInterpolant;
                null === s && (s = n._lendControlInterpolant(), this._weightInterpolant = s);
                var o = s.parameterPositions,
                    a = s.sampleValues;
                return o[0] = r, a[0] = e, o[1] = r + t, a[1] = i, this
            }
        }), cl.prototype = Object.assign(Object.create(n.prototype), {
            constructor: cl,
            _bindAction: function(t, e) {
                var i = t._localRoot || this._root,
                    n = t._clip.tracks,
                    r = n.length,
                    s = t._propertyBindings,
                    o = t._interpolants,
                    a = i.uuid,
                    c = this._bindingsByRootAndName,
                    l = c[a];
                void 0 === l && (l = {}, c[a] = l);
                for (var p = 0; p !== r; ++p) {
                    var h = n[p],
                        u = h.name,
                        d = l[u];
                    if (void 0 !== d) s[p] = d;
                    else {
                        if (void 0 !== (d = s[p])) {
                            null === d._cacheIndex && (++d.referenceCount, this._addInactiveBinding(d, a, u));
                            continue
                        }
                        var f = e && e._propertyBindings[p].binding.parsedPath;
                        ++(d = new jc(sl.create(i, u, f), h.ValueTypeName, h.getValueSize())).referenceCount, this._addInactiveBinding(d, a, u), s[p] = d
                    }
                    o[p].resultBuffer = d.buffer
                }
            },
            _activateAction: function(t) {
                if (!this._isActiveAction(t)) {
                    if (null === t._cacheIndex) {
                        var e = (t._localRoot || this._root).uuid,
                            i = t._clip.uuid,
                            n = this._actionsByClip[i];
                        this._bindAction(t, n && n.knownActions[0]), this._addInactiveAction(t, i, e)
                    }
                    for (var r = t._propertyBindings, s = 0, o = r.length; s !== o; ++s) {
                        var a = r[s];
                        0 == a.useCount++ && (this._lendBinding(a), a.saveOriginalState())
                    }
                    this._lendAction(t)
                }
            },
            _deactivateAction: function(t) {
                if (this._isActiveAction(t)) {
                    for (var e = t._propertyBindings, i = 0, n = e.length; i !== n; ++i) {
                        var r = e[i];
                        0 == --r.useCount && (r.restoreOriginalState(), this._takeBackBinding(r))
                    }
                    this._takeBackAction(t)
                }
            },
            _initMemoryManager: function() {
                this._actions = [], this._nActiveActions = 0, this._actionsByClip = {}, this._bindings = [], this._nActiveBindings = 0, this._bindingsByRootAndName = {}, this._controlInterpolants = [], this._nActiveControlInterpolants = 0;
                var t = this;
                this.stats = {
                    actions: {
                        get total() {
                            return t._actions.length
                        },
                        get inUse() {
                            return t._nActiveActions
                        }
                    },
                    bindings: {
                        get total() {
                            return t._bindings.length
                        },
                        get inUse() {
                            return t._nActiveBindings
                        }
                    },
                    controlInterpolants: {
                        get total() {
                            return t._controlInterpolants.length
                        },
                        get inUse() {
                            return t._nActiveControlInterpolants
                        }
                    }
                }
            },
            _isActiveAction: function(t) {
                var e = t._cacheIndex;
                return null !== e && e < this._nActiveActions
            },
            _addInactiveAction: function(t, e, i) {
                var n = this._actions,
                    r = this._actionsByClip,
                    s = r[e];
                if (void 0 === s) s = {
                    knownActions: [t],
                    actionByRoot: {}
                }, t._byClipCacheIndex = 0, r[e] = s;
                else {
                    var o = s.knownActions;
                    t._byClipCacheIndex = o.length, o.push(t)
                }
                t._cacheIndex = n.length, n.push(t), s.actionByRoot[i] = t
            },
            _removeInactiveAction: function(t) {
                var e = this._actions,
                    i = e[e.length - 1],
                    n = t._cacheIndex;
                i._cacheIndex = n, e[n] = i, e.pop(), t._cacheIndex = null;
                var r = t._clip.uuid,
                    s = this._actionsByClip,
                    o = s[r],
                    a = o.knownActions,
                    c = a[a.length - 1],
                    l = t._byClipCacheIndex;
                c._byClipCacheIndex = l, a[l] = c, a.pop(), t._byClipCacheIndex = null, delete o.actionByRoot[(t._localRoot || this._root).uuid], 0 === a.length && delete s[r], this._removeInactiveBindingsForAction(t)
            },
            _removeInactiveBindingsForAction: function(t) {
                for (var e = t._propertyBindings, i = 0, n = e.length; i !== n; ++i) {
                    var r = e[i];
                    0 == --r.referenceCount && this._removeInactiveBinding(r)
                }
            },
            _lendAction: function(t) {
                var e = this._actions,
                    i = t._cacheIndex,
                    n = this._nActiveActions++,
                    r = e[n];
                t._cacheIndex = n, e[n] = t, r._cacheIndex = i, e[i] = r
            },
            _takeBackAction: function(t) {
                var e = this._actions,
                    i = t._cacheIndex,
                    n = --this._nActiveActions,
                    r = e[n];
                t._cacheIndex = n, e[n] = t, r._cacheIndex = i, e[i] = r
            },
            _addInactiveBinding: function(t, e, i) {
                var n = this._bindingsByRootAndName,
                    r = n[e],
                    s = this._bindings;
                void 0 === r && (r = {}, n[e] = r), r[i] = t, t._cacheIndex = s.length, s.push(t)
            },
            _removeInactiveBinding: function(t) {
                var e = this._bindings,
                    i = t.binding,
                    n = i.rootNode.uuid,
                    r = i.path,
                    s = this._bindingsByRootAndName,
                    o = s[n],
                    a = e[e.length - 1],
                    c = t._cacheIndex;
                a._cacheIndex = c, e[c] = a, e.pop(), delete o[r];
                t: {
                    for (var l in o) break t;delete s[n]
                }
            },
            _lendBinding: function(t) {
                var e = this._bindings,
                    i = t._cacheIndex,
                    n = this._nActiveBindings++,
                    r = e[n];
                t._cacheIndex = n, e[n] = t, r._cacheIndex = i, e[i] = r
            },
            _takeBackBinding: function(t) {
                var e = this._bindings,
                    i = t._cacheIndex,
                    n = --this._nActiveBindings,
                    r = e[n];
                t._cacheIndex = n, e[n] = t, r._cacheIndex = i, e[i] = r
            },
            _lendControlInterpolant: function() {
                var t = this._controlInterpolants,
                    e = this._nActiveControlInterpolants++,
                    i = t[e];
                return void 0 === i && ((i = new Ya(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer)).__cacheIndex = e, t[e] = i), i
            },
            _takeBackControlInterpolant: function(t) {
                var e = this._controlInterpolants,
                    i = t.__cacheIndex,
                    n = --this._nActiveControlInterpolants,
                    r = e[n];
                t.__cacheIndex = n, e[n] = t, r.__cacheIndex = i, e[i] = r
            },
            _controlInterpolantsResultBuffer: new Float32Array(1),
            clipAction: function(t, e) {
                var i = e || this._root,
                    n = i.uuid,
                    r = "string" == typeof t ? ic.findByName(i, t) : t,
                    s = null !== r ? r.uuid : t,
                    o = this._actionsByClip[s],
                    a = null;
                if (void 0 !== o) {
                    var c = o.actionByRoot[n];
                    if (void 0 !== c) return c;
                    a = o.knownActions[0], null === r && (r = a._clip)
                }
                if (null === r) return null;
                var l = new al(this, r, e);
                return this._bindAction(l, a), this._addInactiveAction(l, s, n), l
            },
            existingAction: function(t, e) {
                var i = e || this._root,
                    n = i.uuid,
                    r = "string" == typeof t ? ic.findByName(i, t) : t,
                    s = r ? r.uuid : t,
                    o = this._actionsByClip[s];
                return void 0 !== o && o.actionByRoot[n] || null
            },
            stopAllAction: function() {
                var t = this._actions,
                    e = this._nActiveActions,
                    i = this._bindings,
                    n = this._nActiveBindings;
                this._nActiveActions = 0, this._nActiveBindings = 0;
                for (var r = 0; r !== e; ++r) t[r].reset();
                for (r = 0; r !== n; ++r) i[r].useCount = 0;
                return this
            },
            update: function(t) {
                t *= this.timeScale;
                for (var e = this._actions, i = this._nActiveActions, n = this.time += t, r = Math.sign(t), s = this._accuIndex ^= 1, o = 0; o !== i; ++o) {
                    e[o]._update(n, t, r, s)
                }
                var a = this._bindings,
                    c = this._nActiveBindings;
                for (o = 0; o !== c; ++o) a[o].apply(s);
                return this
            },
            getRoot: function() {
                return this._root
            },
            uncacheClip: function(t) {
                var e = this._actions,
                    i = t.uuid,
                    n = this._actionsByClip,
                    r = n[i];
                if (void 0 !== r) {
                    for (var s = r.knownActions, o = 0, a = s.length; o !== a; ++o) {
                        var c = s[o];
                        this._deactivateAction(c);
                        var l = c._cacheIndex,
                            p = e[e.length - 1];
                        c._cacheIndex = null, c._byClipCacheIndex = null, p._cacheIndex = l, e[l] = p, e.pop(), this._removeInactiveBindingsForAction(c)
                    }
                    delete n[i]
                }
            },
            uncacheRoot: function(t) {
                var e = t.uuid,
                    i = this._actionsByClip;
                for (var n in i) {
                    var r = i[n].actionByRoot[e];
                    void 0 !== r && (this._deactivateAction(r), this._removeInactiveAction(r))
                }
                var s = this._bindingsByRootAndName[e];
                if (void 0 !== s)
                    for (var o in s) {
                        var a = s[o];
                        a.restoreOriginalState(), this._removeInactiveBinding(a)
                    }
            },
            uncacheAction: function(t, e) {
                var i = this.existingAction(t, e);
                null !== i && (this._deactivateAction(i), this._removeInactiveAction(i))
            }
        }), ll.prototype.clone = function() {
            return new ll(void 0 === this.value.clone ? this.value : this.value.clone())
        }, pl.prototype = Object.assign(Object.create($i.prototype), {
            constructor: pl,
            isInstancedBufferGeometry: !0,
            copy: function(t) {
                return $i.prototype.copy.call(this, t), this.maxInstancedCount = t.maxInstancedCount, this
            },
            clone: function() {
                return (new this.constructor).copy(this)
            }
        }), hl.prototype = Object.assign(Object.create(us.prototype), {
            constructor: hl,
            isInstancedInterleavedBuffer: !0,
            copy: function(t) {
                return us.prototype.copy.call(this, t), this.meshPerAttribute = t.meshPerAttribute, this
            }
        }), ul.prototype = Object.assign(Object.create(Fi.prototype), {
            constructor: ul,
            isInstancedBufferAttribute: !0,
            copy: function(t) {
                return Fi.prototype.copy.call(this, t), this.meshPerAttribute = t.meshPerAttribute, this
            }
        }), Object.assign(dl.prototype, {
            linePrecision: 1,
            set: function(t, e) {
                this.ray.set(t, e)
            },
            setFromCamera: function(t, e) {
                e && e.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(e.matrixWorld), this.ray.direction.set(t.x, t.y, .5).unproject(e).sub(this.ray.origin).normalize()) : e && e.isOrthographicCamera ? (this.ray.origin.set(t.x, t.y, (e.near + e.far) / (e.near - e.far)).unproject(e), this.ray.direction.set(0, 0, -1).transformDirection(e.matrixWorld)) : console.error("THREE.Raycaster: Unsupported camera type.")
            },
            intersectObject: function(t, e, i) {
                var n = i || [];
                return ml(t, this, n, e), n.sort(fl), n
            },
            intersectObjects: function(t, e, i) {
                var n = i || [];
                if (!1 === Array.isArray(t)) return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."), n;
                for (var r = 0, s = t.length; r < s; r++) ml(t[r], this, n, e);
                return n.sort(fl), n
            }
        }), Object.assign(gl.prototype, {
            start: function() {
                this.startTime = ("undefined" == typeof performance ? Date : performance).now(), this.oldTime = this.startTime, this.elapsedTime = 0, this.running = !0
            },
            stop: function() {
                this.getElapsedTime(), this.running = !1, this.autoStart = !1
            },
            getElapsedTime: function() {
                return this.getDelta(), this.elapsedTime
            },
            getDelta: function() {
                var t = 0;
                if (this.autoStart && !this.running) return this.start(), 0;
                if (this.running) {
                    var e = ("undefined" == typeof performance ? Date : performance).now();
                    t = (e - this.oldTime) / 1e3, this.oldTime = e, this.elapsedTime += t
                }
                return t
            }
        }), Object.assign(vl.prototype, {
            set: function(t, e, i) {
                return this.radius = t, this.phi = e, this.theta = i, this
            },
            clone: function() {
                return (new this.constructor).copy(this)
            },
            copy: function(t) {
                return this.radius = t.radius, this.phi = t.phi, this.theta = t.theta, this
            },
            makeSafe: function() {
                return this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi)), this
            },
            setFromVector3: function(t) {
                return this.radius = t.length(), 0 === this.radius ? (this.theta = 0, this.phi = 0) : (this.theta = Math.atan2(t.x, t.z), this.phi = Math.acos(qe.clamp(t.y / this.radius, -1, 1))), this
            }
        }), Object.assign(yl.prototype, {
            set: function(t, e, i) {
                return this.radius = t, this.theta = e, this.y = i, this
            },
            clone: function() {
                return (new this.constructor).copy(this)
            },
            copy: function(t) {
                return this.radius = t.radius, this.theta = t.theta, this.y = t.y, this
            },
            setFromVector3: function(t) {
                return this.radius = Math.sqrt(t.x * t.x + t.z * t.z), this.theta = Math.atan2(t.x, t.z), this.y = t.y, this
            }
        }), Object.assign(xl.prototype, {
            set: function(t, e) {
                return this.min.copy(t), this.max.copy(e), this
            },
            setFromPoints: function(t) {
                this.makeEmpty();
                for (var e = 0, i = t.length; e < i; e++) this.expandByPoint(t[e]);
                return this
            },
            setFromCenterAndSize: function() {
                var t = new Ze;
                return function(e, i) {
                    var n = t.copy(i).multiplyScalar(.5);
                    return this.min.copy(e).sub(n), this.max.copy(e).add(n), this
                }
            }(),
            clone: function() {
                return (new this.constructor).copy(this)
            },
            copy: function(t) {
                return this.min.copy(t.min), this.max.copy(t.max), this
            },
            makeEmpty: function() {
                return this.min.x = this.min.y = 1 / 0, this.max.x = this.max.y = -1 / 0, this
            },
            isEmpty: function() {
                return this.max.x < this.min.x || this.max.y < this.min.y
            },
            getCenter: function(t) {
                return void 0 === t && (console.warn("THREE.Box2: .getCenter() target is now required"), t = new Ze), this.isEmpty() ? t.set(0, 0) : t.addVectors(this.min, this.max).multiplyScalar(.5)
            },
            getSize: function(t) {
                return void 0 === t && (console.warn("THREE.Box2: .getSize() target is now required"), t = new Ze), this.isEmpty() ? t.set(0, 0) : t.subVectors(this.max, this.min)
            },
            expandByPoint: function(t) {
                return this.min.min(t), this.max.max(t), this
            },
            expandByVector: function(t) {
                return this.min.sub(t), this.max.add(t), this
            },
            expandByScalar: function(t) {
                return this.min.addScalar(-t), this.max.addScalar(t), this
            },
            containsPoint: function(t) {
                return !(t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y)
            },
            containsBox: function(t) {
                return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y
            },
            getParameter: function(t, e) {
                return void 0 === e && (console.warn("THREE.Box2: .getParameter() target is now required"), e = new Ze), e.set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y))
            },
            intersectsBox: function(t) {
                return !(t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y)
            },
            clampPoint: function(t, e) {
                return void 0 === e && (console.warn("THREE.Box2: .clampPoint() target is now required"), e = new Ze), e.copy(t).clamp(this.min, this.max)
            },
            distanceToPoint: function() {
                var t = new Ze;
                return function(e) {
                    return t.copy(e).clamp(this.min, this.max).sub(e).length()
                }
            }(),
            intersect: function(t) {
                return this.min.max(t.min), this.max.min(t.max), this
            },
            union: function(t) {
                return this.min.min(t.min), this.max.max(t.max), this
            },
            translate: function(t) {
                return this.min.add(t), this.max.add(t), this
            },
            equals: function(t) {
                return t.min.equals(this.min) && t.max.equals(this.max)
            }
        }), Object.assign(wl.prototype, {
            set: function(t, e) {
                return this.start.copy(t), this.end.copy(e), this
            },
            clone: function() {
                return (new this.constructor).copy(this)
            },
            copy: function(t) {
                return this.start.copy(t.start), this.end.copy(t.end), this
            },
            getCenter: function(t) {
                return void 0 === t && (console.warn("THREE.Line3: .getCenter() target is now required"), t = new Qe), t.addVectors(this.start, this.end).multiplyScalar(.5)
            },
            delta: function(t) {
                return void 0 === t && (console.warn("THREE.Line3: .delta() target is now required"), t = new Qe), t.subVectors(this.end, this.start)
            },
            distanceSq: function() {
                return this.start.distanceToSquared(this.end)
            },
            distance: function() {
                return this.start.distanceTo(this.end)
            },
            at: function(t, e) {
                return void 0 === e && (console.warn("THREE.Line3: .at() target is now required"), e = new Qe), this.delta(e).multiplyScalar(t).add(this.start)
            },
            closestPointToPointParameter: (Qc = new Qe, $c = new Qe, function(t, e) {
                Qc.subVectors(t, this.start), $c.subVectors(this.end, this.start);
                var i = $c.dot($c),
                    n = $c.dot(Qc) / i;
                return e && (n = qe.clamp(n, 0, 1)), n
            }),
            closestPointToPoint: function(t, e, i) {
                var n = this.closestPointToPointParameter(t, e);
                return void 0 === i && (console.warn("THREE.Line3: .closestPointToPoint() target is now required"), i = new Qe), this.delta(i).multiplyScalar(n).add(this.start)
            },
            applyMatrix4: function(t) {
                return this.start.applyMatrix4(t), this.end.applyMatrix4(t), this
            },
            equals: function(t) {
                return t.start.equals(this.start) && t.end.equals(this.end)
            }
        }), bl.prototype = Object.create(Ci.prototype), bl.prototype.constructor = bl, bl.prototype.isImmediateRenderObject = !0, Ml.prototype = Object.create(Ms.prototype), Ml.prototype.constructor = Ml, Ml.prototype.update = function() {
            var t = new Qe,
                e = new Qe,
                i = new $e;
            return function() {
                var n = ["a", "b", "c"];
                this.object.updateMatrixWorld(!0), i.getNormalMatrix(this.object.matrixWorld);
                var r = this.object.matrixWorld,
                    s = this.geometry.attributes.position,
                    o = this.object.geometry;
                if (o && o.isGeometry)
                    for (var a = o.vertices, c = o.faces, l = 0, p = 0, h = c.length; p < h; p++)
                        for (var u = c[p], d = 0, f = u.vertexNormals.length; d < f; d++) {
                            var m = a[u[n[d]]],
                                g = u.vertexNormals[d];
                            t.copy(m).applyMatrix4(r), e.copy(g).applyMatrix3(i).normalize().multiplyScalar(this.size).add(t), s.setXYZ(l, t.x, t.y, t.z), l += 1, s.setXYZ(l, e.x, e.y, e.z), l += 1
                        } else if (o && o.isBufferGeometry) {
                            var v = o.attributes.position,
                                y = o.attributes.normal;
                            for (l = 0, d = 0, f = v.count; d < f; d++) t.set(v.getX(d), v.getY(d), v.getZ(d)).applyMatrix4(r), e.set(y.getX(d), y.getY(d), y.getZ(d)), e.applyMatrix3(i).normalize().multiplyScalar(this.size).add(t), s.setXYZ(l, t.x, t.y, t.z), l += 1, s.setXYZ(l, e.x, e.y, e.z), l += 1
                        } s.needsUpdate = !0
            }
        }(), Sl.prototype = Object.create(Ci.prototype), Sl.prototype.constructor = Sl, Sl.prototype.dispose = function() {
            this.cone.geometry.dispose(), this.cone.material.dispose()
        }, Sl.prototype.update = function() {
            var t = new Qe,
                e = new Qe;
            return function() {
                this.light.updateMatrixWorld();
                var i = this.light.distance ? this.light.distance : 1e3,
                    n = i * Math.tan(this.light.angle);
                this.cone.scale.set(n, n, i), t.setFromMatrixPosition(this.light.matrixWorld), e.setFromMatrixPosition(this.light.target.matrixWorld), this.cone.lookAt(e.sub(t)), void 0 !== this.color ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color)
            }
        }(), _l.prototype = Object.create(Ms.prototype), _l.prototype.constructor = _l, _l.prototype.updateMatrixWorld = function() {
            var t = new Qe,
                e = new Ke,
                i = new Ke;
            return function(n) {
                var r = this.bones,
                    s = this.geometry,
                    o = s.getAttribute("position");
                i.getInverse(this.root.matrixWorld);
                for (var a = 0, c = 0; a < r.length; a++) {
                    var l = r[a];
                    l.parent && l.parent.isBone && (e.multiplyMatrices(i, l.matrixWorld), t.setFromMatrixPosition(e), o.setXYZ(c, t.x, t.y, t.z), e.multiplyMatrices(i, l.parent.matrixWorld), t.setFromMatrixPosition(e), o.setXYZ(c + 1, t.x, t.y, t.z), c += 2)
                }
                s.getAttribute("position").needsUpdate = !0, Ci.prototype.updateMatrixWorld.call(this, n)
            }
        }(), Tl.prototype = Object.create(Mn.prototype), Tl.prototype.constructor = Tl, Tl.prototype.dispose = function() {
            this.geometry.dispose(), this.material.dispose()
        }, Tl.prototype.update = function() {
            void 0 !== this.color ? this.material.color.set(this.color) : this.material.color.copy(this.light.color)
        }, El.prototype = Object.create(Ci.prototype), El.prototype.constructor = El, El.prototype.dispose = function() {
            this.children[0].geometry.dispose(), this.children[0].material.dispose()
        }, El.prototype.update = function() {
            var t = .5 * this.light.width,
                e = .5 * this.light.height,
                i = this.line.geometry.attributes.position,
                n = i.array;
            n[0] = t, n[1] = -e, n[2] = 0, n[3] = t, n[4] = e, n[5] = 0, n[6] = -t, n[7] = e, n[8] = 0, n[9] = -t, n[10] = -e, n[11] = 0, n[12] = t, n[13] = -e, n[14] = 0, i.needsUpdate = !0, void 0 !== this.color ? this.line.material.color.set(this.color) : this.line.material.color.copy(this.light.color)
        }, Al.prototype = Object.create(Ci.prototype), Al.prototype.constructor = Al, Al.prototype.dispose = function() {
            this.children[0].geometry.dispose(), this.children[0].material.dispose()
        }, Al.prototype.update = function() {
            var t = new Qe,
                e = new xi,
                i = new xi;
            return function() {
                var n = this.children[0];
                if (void 0 !== this.color) this.material.color.set(this.color);
                else {
                    var r = n.geometry.getAttribute("color");
                    e.copy(this.light.color), i.copy(this.light.groundColor);
                    for (var s = 0, o = r.count; s < o; s++) {
                        var a = s < o / 2 ? e : i;
                        r.setXYZ(s, a.r, a.g, a.b)
                    }
                    r.needsUpdate = !0
                }
                n.lookAt(t.setFromMatrixPosition(this.light.matrixWorld).negate())
            }
        }(), Ll.prototype = Object.create(Ms.prototype), Ll.prototype.constructor = Ll, kl.prototype = Object.create(Ms.prototype), kl.prototype.constructor = kl, Rl.prototype = Object.create(Ms.prototype), Rl.prototype.constructor = Rl, Rl.prototype.update = function() {
            var t = new Qe,
                e = new Qe,
                i = new $e;
            return function() {
                this.object.updateMatrixWorld(!0), i.getNormalMatrix(this.object.matrixWorld);
                for (var n = this.object.matrixWorld, r = this.geometry.attributes.position, s = this.object.geometry, o = s.vertices, a = s.faces, c = 0, l = 0, p = a.length; l < p; l++) {
                    var h = a[l],
                        u = h.normal;
                    t.copy(o[h.a]).add(o[h.b]).add(o[h.c]).divideScalar(3).applyMatrix4(n), e.copy(u).applyMatrix3(i).normalize().multiplyScalar(this.size).add(t), r.setXYZ(c, t.x, t.y, t.z), c += 1, r.setXYZ(c, e.x, e.y, e.z), c += 1
                }
                r.needsUpdate = !0
            }
        }(), Pl.prototype = Object.create(Ci.prototype), Pl.prototype.constructor = Pl, Pl.prototype.dispose = function() {
            this.lightPlane.geometry.dispose(), this.lightPlane.material.dispose(), this.targetLine.geometry.dispose(), this.targetLine.material.dispose()
        }, Pl.prototype.update = function() {
            var t = new Qe,
                e = new Qe,
                i = new Qe;
            return function() {
                t.setFromMatrixPosition(this.light.matrixWorld), e.setFromMatrixPosition(this.light.target.matrixWorld), i.subVectors(e, t), this.lightPlane.lookAt(i), void 0 !== this.color ? (this.lightPlane.material.color.set(this.color), this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color), this.targetLine.material.color.copy(this.light.color)), this.targetLine.lookAt(i), this.targetLine.scale.z = i.length()
            }
        }(), Cl.prototype = Object.create(Ms.prototype), Cl.prototype.constructor = Cl, Cl.prototype.update = function() {
            var t, e, i = new Qe,
                n = new Ii;

            function r(r, s, o, a) {
                i.set(s, o, a).unproject(n);
                var c = e[r];
                if (void 0 !== c)
                    for (var l = t.getAttribute("position"), p = 0, h = c.length; p < h; p++) l.setXYZ(c[p], i.x, i.y, i.z)
            }
            return function() {
                t = this.geometry, e = this.pointMap;
                n.projectionMatrix.copy(this.camera.projectionMatrix), r("c", 0, 0, -1), r("t", 0, 0, 1), r("n1", -1, -1, -1), r("n2", 1, -1, -1), r("n3", -1, 1, -1), r("n4", 1, 1, -1), r("f1", -1, -1, 1), r("f2", 1, -1, 1), r("f3", -1, 1, 1), r("f4", 1, 1, 1), r("u1", .7, 1.1, -1), r("u2", -.7, 1.1, -1), r("u3", 0, 2, -1), r("cf1", -1, 0, 1), r("cf2", 1, 0, 1), r("cf3", 0, -1, 1), r("cf4", 0, 1, 1), r("cn1", -1, 0, -1), r("cn2", 1, 0, -1), r("cn3", 0, -1, -1), r("cn4", 0, 1, -1), t.getAttribute("position").needsUpdate = !0
            }
        }(), Il.prototype = Object.create(Ms.prototype), Il.prototype.constructor = Il, Il.prototype.update = function() {
            var t = new hi;
            return function(e) {
                if (void 0 !== e && console.warn("THREE.BoxHelper: .update() has no longer arguments."), void 0 !== this.object && t.setFromObject(this.object), !t.isEmpty()) {
                    var i = t.min,
                        n = t.max,
                        r = this.geometry.attributes.position,
                        s = r.array;
                    s[0] = n.x, s[1] = n.y, s[2] = n.z, s[3] = i.x, s[4] = n.y, s[5] = n.z, s[6] = i.x, s[7] = i.y, s[8] = n.z, s[9] = n.x, s[10] = i.y, s[11] = n.z, s[12] = n.x, s[13] = n.y, s[14] = i.z, s[15] = i.x, s[16] = n.y, s[17] = i.z, s[18] = i.x, s[19] = i.y, s[20] = i.z, s[21] = n.x, s[22] = i.y, s[23] = i.z, r.needsUpdate = !0, this.geometry.computeBoundingSphere()
                }
            }
        }(), Il.prototype.setFromObject = function(t) {
            return this.object = t, this.update(), this
        }, Ol.prototype = Object.create(Ms.prototype), Ol.prototype.constructor = Ol, Ol.prototype.updateMatrixWorld = function(t) {
            var e = this.box;
            e.isEmpty() || (e.getCenter(this.position), e.getSize(this.scale), this.scale.multiplyScalar(.5), Ci.prototype.updateMatrixWorld.call(this, t))
        }, Dl.prototype = Object.create(bs.prototype), Dl.prototype.constructor = Dl, Dl.prototype.updateMatrixWorld = function(t) {
            var e = -this.plane.constant;
            Math.abs(e) < 1e-8 && (e = 1e-8), this.scale.set(.5 * this.size, .5 * this.size, e), this.children[0].material.side = e < 0 ? A : E, this.lookAt(this.plane.normal), Ci.prototype.updateMatrixWorld.call(this, t)
        }, Bl.prototype = Object.create(Ci.prototype), Bl.prototype.constructor = Bl, Bl.prototype.setDirection = (nl = new Qe, function(t) {
            t.y > .99999 ? this.quaternion.set(0, 0, 0, 1) : t.y < -.99999 ? this.quaternion.set(1, 0, 0, 0) : (nl.set(t.z, 0, -t.x).normalize(), il = Math.acos(t.y), this.quaternion.setFromAxisAngle(nl, il))
        }), Bl.prototype.setLength = function(t, e, i) {
            void 0 === e && (e = .2 * t), void 0 === i && (i = .2 * e), this.line.scale.set(1, Math.max(0, t - e), 1), this.line.updateMatrix(), this.cone.scale.set(i, e, i), this.cone.position.y = t, this.cone.updateMatrix()
        }, Bl.prototype.setColor = function(t) {
            this.line.material.color.copy(t), this.cone.material.color.copy(t)
        }, zl.prototype = Object.create(Ms.prototype), zl.prototype.constructor = zl;
    var Ul = 0,
        Fl = 1;

    function Hl(t) {
        return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."), t
    }

    function jl(t) {
        return void 0 === t && (t = []), console.warn("THREE.MultiMaterial has been removed. Use an Array instead."), t.isMultiMaterial = !0, t.materials = t, t.clone = function() {
            return t.slice()
        }, t
    }

    function Gl(t, e) {
        return console.warn("THREE.PointCloud has been renamed to THREE.Points."), new Ts(t, e)
    }

    function Vl(t) {
        return console.warn("THREE.Particle has been renamed to THREE.Sprite."), new ms(t)
    }

    function Wl(t, e) {
        return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."), new Ts(t, e)
    }

    function Yl(t) {
        return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."), new _s(t)
    }

    function Xl(t) {
        return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."), new _s(t)
    }

    function ql(t) {
        return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."), new _s(t)
    }

    function Zl(t, e, i) {
        return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."), new Qe(t, e, i)
    }

    function Kl(t, e) {
        return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."), new Fi(t, e).setDynamic(!0)
    }

    function Jl(t, e) {
        return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."), new Hi(t, e)
    }

    function Ql(t, e) {
        return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."), new ji(t, e)
    }

    function $l(t, e) {
        return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."), new Gi(t, e)
    }

    function tp(t, e) {
        return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."), new Vi(t, e)
    }

    function ep(t, e) {
        return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."), new Wi(t, e)
    }

    function ip(t, e) {
        return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."), new Yi(t, e)
    }

    function np(t, e) {
        return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."), new Xi(t, e)
    }

    function rp(t, e) {
        return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."), new qi(t, e)
    }

    function sp(t, e) {
        return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."), new Zi(t, e)
    }

    function op(t) {
        console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."), ya.call(this, t), this.type = "catmullrom", this.closed = !0
    }

    function ap(t) {
        console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."), ya.call(this, t), this.type = "catmullrom"
    }

    function cp(t) {
        console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."), ya.call(this, t), this.type = "catmullrom"
    }

    function lp(t) {
        return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."), new zl(t)
    }

    function pp(t, e) {
        return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."), new Il(t, e)
    }

    function hp(t, e) {
        return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."), new Ms(new Bo(t.geometry), new ws({
            color: void 0 !== e ? e : 16777215
        }))
    }

    function up(t, e) {
        return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."), new Ms(new Rs(t.geometry), new ws({
            color: void 0 !== e ? e : 16777215
        }))
    }

    function dp(t) {
        return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."), new ra(t)
    }

    function fp(t) {
        return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."), new oa(t)
    }
    pa.create = function(t, e) {
        return console.log("THREE.Curve.create() has been deprecated"), t.prototype = Object.create(pa.prototype), t.prototype.constructor = t, t.prototype.getPoint = e, t
    }, Object.assign(Ra.prototype, {
        createPointsGeometry: function(t) {
            console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
            var e = this.getPoints(t);
            return this.createGeometry(e)
        },
        createSpacedPointsGeometry: function(t) {
            console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
            var e = this.getSpacedPoints(t);
            return this.createGeometry(e)
        },
        createGeometry: function(t) {
            console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
            for (var e = new Ui, i = 0, n = t.length; i < n; i++) {
                var r = t[i];
                e.vertices.push(new Qe(r.x, r.y, r.z || 0))
            }
            return e
        }
    }), Object.assign(Pa.prototype, {
        fromPoints: function(t) {
            console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."), this.setFromPoints(t)
        }
    }), op.prototype = Object.create(ya.prototype), ap.prototype = Object.create(ya.prototype), cp.prototype = Object.create(ya.prototype), Object.assign(cp.prototype, {
        initFromArray: function() {
            console.error("THREE.Spline: .initFromArray() has been removed.")
        },
        getControlPointsArray: function() {
            console.error("THREE.Spline: .getControlPointsArray() has been removed.")
        },
        reparametrizeByArcLength: function() {
            console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")
        }
    }), Ll.prototype.setColors = function() {
        console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")
    }, _l.prototype.update = function() {
        console.error("THREE.SkeletonHelper: update() no longer needs to be called.")
    }, Object.assign(hc.prototype, {
        extractUrlBase: function(t) {
            return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."), uc.extractUrlBase(t)
        }
    }), Object.assign(xl.prototype, {
        center: function(t) {
            return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."), this.getCenter(t)
        },
        empty: function() {
            return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."), this.isEmpty()
        },
        isIntersectionBox: function(t) {
            return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(t)
        },
        size: function(t) {
            return console.warn("THREE.Box2: .size() has been renamed to .getSize()."), this.getSize(t)
        }
    }), Object.assign(hi.prototype, {
        center: function(t) {
            return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."), this.getCenter(t)
        },
        empty: function() {
            return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."), this.isEmpty()
        },
        isIntersectionBox: function(t) {
            return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(t)
        },
        isIntersectionSphere: function(t) {
            return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(t)
        },
        size: function(t) {
            return console.warn("THREE.Box3: .size() has been renamed to .getSize()."), this.getSize(t)
        }
    }), wl.prototype.center = function(t) {
        return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."), this.getCenter(t)
    }, Object.assign(qe, {
        random16: function() {
            return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."), Math.random()
        },
        nearestPowerOfTwo: function(t) {
            return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."), qe.floorPowerOfTwo(t)
        },
        nextPowerOfTwo: function(t) {
            return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."), qe.ceilPowerOfTwo(t)
        }
    }), Object.assign($e.prototype, {
        flattenToArrayOffset: function(t, e) {
            return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(t, e)
        },
        multiplyVector3: function(t) {
            return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."), t.applyMatrix3(this)
        },
        multiplyVector3Array: function() {
            console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")
        },
        applyToBuffer: function(t) {
            return console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."), this.applyToBufferAttribute(t)
        },
        applyToVector3Array: function() {
            console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")
        }
    }), Object.assign(Ke.prototype, {
        extractPosition: function(t) {
            return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."), this.copyPosition(t)
        },
        flattenToArrayOffset: function(t, e) {
            return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(t, e)
        },
        getPosition: function() {
            var t;
            return function() {
                return void 0 === t && (t = new Qe), console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."), t.setFromMatrixColumn(this, 3)
            }
        }(),
        setRotationFromQuaternion: function(t) {
            return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."), this.makeRotationFromQuaternion(t)
        },
        multiplyToArray: function() {
            console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")
        },
        multiplyVector3: function(t) {
            return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."), t.applyMatrix4(this)
        },
        multiplyVector4: function(t) {
            return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."), t.applyMatrix4(this)
        },
        multiplyVector3Array: function() {
            console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")
        },
        rotateAxis: function(t) {
            console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."), t.transformDirection(this)
        },
        crossVector: function(t) {
            return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."), t.applyMatrix4(this)
        },
        translate: function() {
            console.error("THREE.Matrix4: .translate() has been removed.")
        },
        rotateX: function() {
            console.error("THREE.Matrix4: .rotateX() has been removed.")
        },
        rotateY: function() {
            console.error("THREE.Matrix4: .rotateY() has been removed.")
        },
        rotateZ: function() {
            console.error("THREE.Matrix4: .rotateZ() has been removed.")
        },
        rotateByAxis: function() {
            console.error("THREE.Matrix4: .rotateByAxis() has been removed.")
        },
        applyToBuffer: function(t) {
            return console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."), this.applyToBufferAttribute(t)
        },
        applyToVector3Array: function() {
            console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")
        },
        makeFrustum: function(t, e, i, n, r, s) {
            return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."), this.makePerspective(t, e, n, i, r, s)
        }
    }), di.prototype.isIntersectionLine = function(t) {
        return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."), this.intersectsLine(t)
    }, Je.prototype.multiplyVector3 = function(t) {
        return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."), t.applyQuaternion(this)
    }, Object.assign(wn.prototype, {
        isIntersectionBox: function(t) {
            return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(t)
        },
        isIntersectionPlane: function(t) {
            return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."), this.intersectsPlane(t)
        },
        isIntersectionSphere: function(t) {
            return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(t)
        }
    }), Object.assign(bn.prototype, {
        area: function() {
            return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."), this.getArea()
        },
        barycoordFromPoint: function(t, e) {
            return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), this.getBarycoord(t, e)
        },
        midpoint: function(t) {
            return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."), this.getMidpoint(t)
        },
        normal: function(t) {
            return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), this.getNormal(t)
        },
        plane: function(t) {
            return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."), this.getPlane(t)
        }
    }), Object.assign(bn, {
        barycoordFromPoint: function(t, e, i, n, r) {
            return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), bn.getBarycoord(t, e, i, n, r)
        },
        normal: function(t, e, i, n) {
            return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), bn.getNormal(t, e, i, n)
        }
    }), Object.assign(Ca.prototype, {
        extractAllPoints: function(t) {
            return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."), this.extractPoints(t)
        },
        extrude: function(t) {
            return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."), new bo(this, t)
        },
        makeGeometry: function(t) {
            return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."), new Io(this, t)
        }
    }), Object.assign(Ze.prototype, {
        fromAttribute: function(t, e, i) {
            return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(t, e, i)
        },
        distanceToManhattan: function(t) {
            return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(t)
        },
        lengthManhattan: function() {
            return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength()
        }
    }), Object.assign(Qe.prototype, {
        setEulerFromRotationMatrix: function() {
            console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")
        },
        setEulerFromQuaternion: function() {
            console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")
        },
        getPositionFromMatrix: function(t) {
            return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."), this.setFromMatrixPosition(t)
        },
        getScaleFromMatrix: function(t) {
            return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."), this.setFromMatrixScale(t)
        },
        getColumnFromMatrix: function(t, e) {
            return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."), this.setFromMatrixColumn(e, t)
        },
        applyProjection: function(t) {
            return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."), this.applyMatrix4(t)
        },
        fromAttribute: function(t, e, i) {
            return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(t, e, i)
        },
        distanceToManhattan: function(t) {
            return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(t)
        },
        lengthManhattan: function() {
            return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength()
        }
    }), Object.assign(ai.prototype, {
        fromAttribute: function(t, e, i) {
            return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(t, e, i)
        },
        lengthManhattan: function() {
            return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength()
        }
    }), Object.assign(Ui.prototype, {
        computeTangents: function() {
            console.error("THREE.Geometry: .computeTangents() has been removed.")
        },
        computeLineDistances: function() {
            console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")
        }
    }), Object.assign(Ci.prototype, {
        getChildByName: function(t) {
            return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."), this.getObjectByName(t)
        },
        renderDepth: function() {
            console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")
        },
        translate: function(t, e) {
            return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."), this.translateOnAxis(e, t)
        },
        getWorldRotation: function() {
            console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")
        }
    }), Object.defineProperties(Ci.prototype, {
        eulerOrder: {
            get: function() {
                return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order
            },
            set: function(t) {
                console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order = t
            }
        },
        useQuaternion: {
            get: function() {
                console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
            },
            set: function() {
                console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
            }
        }
    }), Object.defineProperties(gs.prototype, {
        objects: {
            get: function() {
                return console.warn("THREE.LOD: .objects has been renamed to .levels."), this.levels
            }
        }
    }), Object.defineProperty(vs.prototype, "useVertexTexture", {
        get: function() {
            console.warn("THREE.Skeleton: useVertexTexture has been removed.")
        },
        set: function() {
            console.warn("THREE.Skeleton: useVertexTexture has been removed.")
        }
    }), Object.defineProperty(pa.prototype, "__arcLengthDivisions", {
        get: function() {
            return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."), this.arcLengthDivisions
        },
        set: function(t) {
            console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."), this.arcLengthDivisions = t
        }
    }), rs.prototype.setLens = function(t, e) {
        console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."), void 0 !== e && (this.filmGauge = e), this.setFocalLength(t)
    }, Object.defineProperties(Ia.prototype, {
        onlyShadow: {
            set: function() {
                console.warn("THREE.Light: .onlyShadow has been removed.")
            }
        },
        shadowCameraFov: {
            set: function(t) {
                console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."), this.shadow.camera.fov = t
            }
        },
        shadowCameraLeft: {
            set: function(t) {
                console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."), this.shadow.camera.left = t
            }
        },
        shadowCameraRight: {
            set: function(t) {
                console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."), this.shadow.camera.right = t
            }
        },
        shadowCameraTop: {
            set: function(t) {
                console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."), this.shadow.camera.top = t
            }
        },
        shadowCameraBottom: {
            set: function(t) {
                console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."), this.shadow.camera.bottom = t
            }
        },
        shadowCameraNear: {
            set: function(t) {
                console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."), this.shadow.camera.near = t
            }
        },
        shadowCameraFar: {
            set: function(t) {
                console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."), this.shadow.camera.far = t
            }
        },
        shadowCameraVisible: {
            set: function() {
                console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")
            }
        },
        shadowBias: {
            set: function(t) {
                console.warn("THREE.Light: .shadowBias is now .shadow.bias."), this.shadow.bias = t
            }
        },
        shadowDarkness: {
            set: function() {
                console.warn("THREE.Light: .shadowDarkness has been removed.")
            }
        },
        shadowMapWidth: {
            set: function(t) {
                console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."), this.shadow.mapSize.width = t
            }
        },
        shadowMapHeight: {
            set: function(t) {
                console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."), this.shadow.mapSize.height = t
            }
        }
    }), Object.defineProperties(Fi.prototype, {
        length: {
            get: function() {
                return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."), this.array.length
            }
        },
        copyIndicesArray: function() {
            console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")
        }
    }), Object.assign($i.prototype, {
        addIndex: function(t) {
            console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."), this.setIndex(t)
        },
        addDrawCall: function(t, e, i) {
            void 0 !== i && console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."), console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."), this.addGroup(t, e)
        },
        clearDrawCalls: function() {
            console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."), this.clearGroups()
        },
        computeTangents: function() {
            console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")
        },
        computeOffsets: function() {
            console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")
        }
    }), Object.defineProperties($i.prototype, {
        drawcalls: {
            get: function() {
                return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."), this.groups
            }
        },
        offsets: {
            get: function() {
                return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."), this.groups
            }
        }
    }), Object.assign(Mo.prototype, {
        getArrays: function() {
            console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")
        },
        addShapeList: function() {
            console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")
        },
        addShape: function() {
            console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")
        }
    }), Object.defineProperties(ll.prototype, {
        dynamic: {
            set: function() {
                console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")
            }
        },
        onUpdate: {
            value: function() {
                return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."), this
            }
        }
    }), Object.defineProperties(vn.prototype, {
        wrapAround: {
            get: function() {
                console.warn("THREE.Material: .wrapAround has been removed.")
            },
            set: function() {
                console.warn("THREE.Material: .wrapAround has been removed.")
            }
        },
        wrapRGB: {
            get: function() {
                return console.warn("THREE.Material: .wrapRGB has been removed."), new xi
            }
        },
        shading: {
            get: function() {
                console.error("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead.")
            },
            set: function(t) {
                console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = t === k
            }
        }
    }), Object.defineProperties(qo.prototype, {
        metal: {
            get: function() {
                return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."), !1
            },
            set: function() {
                console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")
            }
        }
    }), Object.defineProperties(xn.prototype, {
        derivatives: {
            get: function() {
                return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives
            },
            set: function(t) {
                console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives = t
            }
        }
    }), Object.assign(cs.prototype, {
        animate: function(t) {
            console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."), this.setAnimationLoop(t)
        },
        getCurrentRenderTarget: function() {
            return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."), this.getRenderTarget()
        },
        getMaxAnisotropy: function() {
            return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."), this.capabilities.getMaxAnisotropy()
        },
        getPrecision: function() {
            return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."), this.capabilities.precision
        },
        resetGLState: function() {
            return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."), this.state.reset()
        },
        supportsFloatTextures: function() {
            return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."), this.extensions.get("OES_texture_float")
        },
        supportsHalfFloatTextures: function() {
            return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."), this.extensions.get("OES_texture_half_float")
        },
        supportsStandardDerivatives: function() {
            return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."), this.extensions.get("OES_standard_derivatives")
        },
        supportsCompressedTextureS3TC: function() {
            return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."), this.extensions.get("WEBGL_compressed_texture_s3tc")
        },
        supportsCompressedTexturePVRTC: function() {
            return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."), this.extensions.get("WEBGL_compressed_texture_pvrtc")
        },
        supportsBlendMinMax: function() {
            return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."), this.extensions.get("EXT_blend_minmax")
        },
        supportsVertexTextures: function() {
            return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."), this.capabilities.vertexTextures
        },
        supportsInstancedArrays: function() {
            return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."), this.extensions.get("ANGLE_instanced_arrays")
        },
        enableScissorTest: function(t) {
            console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."), this.setScissorTest(t)
        },
        initMaterial: function() {
            console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")
        },
        addPrePlugin: function() {
            console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")
        },
        addPostPlugin: function() {
            console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")
        },
        updateShadowMap: function() {
            console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")
        },
        setFaceCulling: function() {
            console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")
        }
    }), Object.defineProperties(cs.prototype, {
        shadowMapEnabled: {
            get: function() {
                return this.shadowMap.enabled
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."), this.shadowMap.enabled = t
            }
        },
        shadowMapType: {
            get: function() {
                return this.shadowMap.type
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."), this.shadowMap.type = t
            }
        },
        shadowMapCullFace: {
            get: function() {
                console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")
            },
            set: function() {
                console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")
            }
        }
    }), Object.defineProperties($r.prototype, {
        cullFace: {
            get: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")
            },
            set: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")
            }
        },
        renderReverseSided: {
            get: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")
            },
            set: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")
            }
        },
        renderSingleSided: {
            get: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")
            },
            set: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")
            }
        }
    }), Object.defineProperties(ci.prototype, {
        wrapS: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS = t
            }
        },
        wrapT: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT = t
            }
        },
        magFilter: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter = t
            }
        },
        minFilter: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter = t
            }
        },
        anisotropy: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy = t
            }
        },
        offset: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset = t
            }
        },
        repeat: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat = t
            }
        },
        format: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format = t
            }
        },
        type: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type = t
            }
        },
        generateMipmaps: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps = t
            }
        }
    }), Object.defineProperties(os.prototype, {
        standing: {
            set: function() {
                console.warn("THREE.WebVRManager: .standing has been removed.")
            }
        }
    }), Uc.prototype.load = function(t) {
        console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");
        var e = this;
        return (new Dc).load(t, function(t) {
            e.setBuffer(t)
        }), this
    }, Hc.prototype.getData = function() {
        return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."), this.getFrequencyData()
    }, zc.prototype.updateCubeMap = function(t, e) {
        return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."), this.update(t, e)
    };
    var mp = {
        merge: function(t, e, i) {
            var n;
            console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead."), e.isMesh && (e.matrixAutoUpdate && e.updateMatrix(), n = e.matrix, e = e.geometry), t.merge(e, n, i)
        },
        center: function(t) {
            return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."), t.center()
        }
    };

    function gp() {
        console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."), this.projectVector = function(t, e) {
            console.warn("THREE.Projector: .projectVector() is now vector.project()."), t.project(e)
        }, this.unprojectVector = function(t, e) {
            console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."), t.unproject(e)
        }, this.pickingRay = function() {
            console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")
        }
    }

    function vp() {
        console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"), this.domElement = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"), this.clear = function() {}, this.render = function() {}, this.setClearColor = function() {}, this.setSize = function() {}
    }
    ri.crossOrigin = void 0, ri.loadTexture = function(t, e, i, n) {
        console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");
        var r = new la;
        r.setCrossOrigin(this.crossOrigin);
        var s = r.load(t, i, void 0, n);
        return e && (s.mapping = e), s
    }, ri.loadTextureCube = function(t, e, i, n) {
        console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");
        var r = new ca;
        r.setCrossOrigin(this.crossOrigin);
        var s = r.load(t, i, void 0, n);
        return e && (s.mapping = e), s
    }, ri.loadCompressedTexture = function() {
        console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")
    }, ri.loadCompressedTextureCube = function() {
        console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")
    };
    var yp = {
        createMultiMaterialObject: function() {
            console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js")
        },
        detach: function() {
            console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js")
        },
        attach: function() {
            console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js")
        }
    };

    function xp() {
        console.error("THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js")
    }
}, function(t, e, i) {
    (function(e) {
        t.exports.isProd = void 0 !== e && !!e.env.IS_PROD || "undefined" != typeof location && "127.0.0.1" !== location.hostname && "localhost" !== location.hostname && !location.hostname.startsWith("192.168."), t.exports.enableHttps = t.exports.isProd, t.exports.serverTickRate = 1e3 / 30, t.exports.serverSendRate = 100, t.exports.clientSendRate = 1e3 / 30, t.exports.dltMx = Math.round(1e3 / 30), t.exports.streamUpdate = 1e4, t.exports.maxPlayers = 8, t.exports.serverSpread = 3, t.exports.minServerSpace = 3, t.exports.gamesPerServer = 5, t.exports.serverBrowserRate = 1e4, t.exports.maxPlayersTotal = t.exports.maxPlayers * t.exports.gamesPerServer + 50, t.exports.kickTimer = 9e4, t.exports.apiURL = void 0 === e ? t.exports.isProd ? "krunker.io" == location.hostname ? "https://api.krunker.io" : "https://api_beta.krunker.io" : "http://127.0.0.1:5060" : t.exports.isProd ? "krunker_prod" == e.env.VULTR_SCHEME ? "https://api.krunker.io" : "https://api_beta.krunker.io" : "http://127.0.0.1:5060", t.exports.needsRestart = !1, t.exports.useLooseClient = !1, t.exports.rewardTime = 216e5, t.exports.rewardMinLvl = 5, t.exports.endTimer = 2e4, t.exports.endAnim = 5e3, t.exports.thirdPZ = 14, t.exports.thirdPX = 5, t.exports.serverConfig = [{
            name: "Players",
            varN: "maxPlayers",
            def: 2,
            max: 10,
            maxF: 16,
            min: 1,
            step: 1
        }, {
            name: "Min Players",
            varN: "minPlayers",
            def: 0,
            max: 10,
            maxF: 16,
            min: 0,
            step: 1
        }, {
            name: "Lives",
            varN: "lives",
            def: 0,
            max: 10,
            min: 0,
            step: 1
        }, {
            name: "Minutes",
            varN: "gameTime",
            def: 4,
            max: 60,
            min: 0,
            step: 1
        }, {
            name: "Gravity",
            varN: "gravMlt",
            dontChange: !0,
            def: 1,
            max: 2,
            min: .1,
            step: .1
        }, {
            name: "Jump Force",
            varN: "jumpMlt",
            dontChange: !0,
            def: 1,
            max: 3,
            min: .1,
            step: .1
        }, {
            name: "Time Scale",
            varN: "deltaMlt",
            dontChange: !0,
            def: 1,
            max: 1.5,
            min: .1,
            step: .1
        }, {
            name: "Strafe Speed",
            varN: "strafeSpd",
            dontChange: !0,
            def: 1.2,
            max: 2,
            min: 1,
            step: .1
        }, {
            name: "Health Multiplier",
            varN: "healthMlt",
            dontChange: !0,
            def: 1,
            max: 3,
            min: .1,
            step: .1
        }, {
            name: "Spectating",
            varN: "allowSpect",
            def: !0,
            bool: !0
        }, {
            name: "Kill Rewards",
            varN: "killRewards",
            dontChange: !0,
            def: !0,
            bool: !0
        }, {
            name: "Sliding",
            varN: "canSlide",
            def: !0,
            bool: !0
        }, {
            name: "Auto Jump",
            varN: "autoJump",
            def: !1,
            bool: !0
        }, {
            name: "3rd Person",
            varN: "thirdPerson",
            def: !1,
            bool: !0
        }, {
            name: "Hide Nametags",
            varN: "nameTags",
            def: !1,
            bool: !0
        }], t.exports.prefabIDS = ["CUBE", "CRATE", "BARREL", "LADDER", "PLANE", "SPAWN_POINT", "CAMERA_POSITION", "VEHICLE", "STACK", "RAMP", "SCORE_ZONE", "BILLBOARD", "DEATH_ZONE", "PARTICLES", "OBJECTIVE", "TREE", "CONE", "CONTAINER", "GRASS", "CONTAINERR", "ACIDBARREL", "DOOR", "WINDOW", "FLAG", "WATER", "CHECK_POINT"], t.exports.textureIDS = ["WALL", "DIRT", "FLOOR", "GRID", "GREY", "DEFAULT", "ROOF", "FLAG", "GRASS", "CHECK", "LINES", "BRICK"], t.exports.objectLimit = 3500, t.exports.objectLimitF = 6e3, t.exports.spawnLimit = 20, t.exports.followURLS = ["https://www.instagram.com/sidney.devries/", "https://www.instagram.com/sidney.devries/", "https://www.instagram.com/sidney.devries/", "https://www.instagram.com/sidney.devries/", "https://www.instagram.com/vincent.de.vries/"], t.exports.gravity = 15e-5, t.exports.deathY = -100, t.exports.skyScale = 18e3, t.exports.shadowDst = 1200, t.exports.shadowRes = 1024, t.exports.shadowOff = .004, t.exports.lightDistance = 500, t.exports.cornerPad = 1, t.exports.cornerScl = 2.5, t.exports.cornerH = 7, t.exports.wallH = 5, t.exports.wallW = .8, t.exports.crateScale = 6, t.exports.stackScale = 6, t.exports.barrelScale = 4, t.exports.acidbarrelScale = t.exports.barrelScale, t.exports.treeScale = 10, t.exports.doorScale = 5, t.exports.windowScale = 6, t.exports.coneScale = 4, t.exports.containerScale = 7, t.exports.containerrScale = t.exports.containerScale, t.exports.grassScale = 32, t.exports.vehicleScale = 20, t.exports.barrelMlt = 1, t.exports.ladderWidth = 3.2, t.exports.ladderScale = .5, t.exports.terrainGrid = 8, t.exports.maxTerrainS = 4e3, t.exports.otherSoundMlt = .55, t.exports.maxParticles = 100, t.exports.explosionRange = 200, t.exports.chatMaxLength = 70, t.exports.chatInterval = 800, t.exports.voiceChatInterval = 2e3, t.exports.voiceChatMaxLength = 5, t.exports.movDirs = [];
        for (var i = 0; 8 > i; ++i) t.exports.movDirs.push(-Math.PI + (i + 1) * Math.PI / 4);
        t.exports.interpolation = 1.1, t.exports.stateHistory = 1e3, t.exports.syncFreq = 800, t.exports.pingCount = 10, t.exports.mouseSens = .0024, t.exports.camChaseTrn = .0022, t.exports.camChaseSpd = .0012, t.exports.camChaseSen = .2, t.exports.camChaseDst = 24, t.exports.menuCamDist = 200, t.exports.menuCamAngle = -.5, t.exports.menuCamSpeed = .1, t.exports.idleAnimS = .0019, t.exports.animMult = 1.2, t.exports.leanPull = .99, t.exports.leanSens = .05, t.exports.leanMax = .16, t.exports.leanPullZ = .99, t.exports.leanMltZ = .03, t.exports.bobMltY = .024, t.exports.bobMltZ = .02, t.exports.bobPullY = .985, t.exports.bobPullZ = .99, t.exports.landPull = .994, t.exports.landPullV = .985, t.exports.landOff = .15, t.exports.aimAnimMlt = .18, t.exports.aimSlow = .55, t.exports.aimJumpSlow = .85, t.exports.stepAnim = .075, t.exports.stepMlt = .25, t.exports.stepPull = .995, t.exports.maxHealth = 100, t.exports.passiveInc = 500, t.exports.cameraHeight = 1.5, t.exports.playerSpeed = 42e-5, t.exports.slippingSpeed = 3e-4, t.exports.ladderSpeed = .035, t.exports.ladderDecel = .97, t.exports.slideDecel = .999, t.exports.terrainSlideDecel = .9996, t.exports.groundDecel = .99, t.exports.terrainDecel = .99, t.exports.terrainSlipDecel = .99, t.exports.airSpeed = 47e-6, t.exports.airDecel = .9996, t.exports.jumpVel = .072, t.exports.jumpPush = .1, t.exports.decelMin = 1e-4, t.exports.climbHeight = 3, t.exports.wpnSpin = .018, t.exports.terrainSlideThreshold = 1.2, t.exports.terrainGravityMlt = 1.85, t.exports.playerSlideVelMlt = 1.2, t.exports.playerTerrainSlideVelMlt = .4, t.exports.playerSlippingJumpCooldown = 500, t.exports.materialDens = {
            flesh: .2,
            default: .5
        }, t.exports.nameOffset = .6, t.exports.nameOffsetHat = .8, t.exports.maxNameLength = 14, t.exports.maxPassLength = 16, t.exports.playerHeight = 11, t.exports.chestWidth = 2.6, t.exports.chestScale = 1.3, t.exports.armScale = 1.3, t.exports.legScale = 1.3, t.exports.uArmLength = 2.7, t.exports.armInset = -.1, t.exports.lArmLength = 2.7, t.exports.headScale = 2, t.exports.armOff = -.8, t.exports.legHeight = 4.2, t.exports.playerScale = (2 * t.exports.armScale + t.exports.chestWidth + t.exports.armInset) / 2, t.exports.hitBoxPad = 1, t.exports.tracerMinDst = 20, t.exports.tracerMaxDst = 500, t.exports.tracerChance = 1, t.exports.crouchLean = -.1 * Math.PI, t.exports.crouchDst = 3, t.exports.crouchSlow = .3, t.exports.crouchSpeed = .007, t.exports.crouchJump = .25, t.exports.crouchSpread = .4, t.exports.crouchAnim = 8e-4, t.exports.crouchAnimMlt = .5, t.exports.spreadMove = 30, t.exports.spreadFall = 35, t.exports.spreadRecover = .985, t.exports.spreadAdj = 63e-5, t.exports.spreadMlt = 400, t.exports.recoilMlt = .3, t.exports.flagMsg = "You have the Flag", t.exports.flagMsgE = "Enemy has your Flag", t.exports.flagMsgRC = "Enemy has your Flag", t.exports.flagZoneS = 24, t.exports.flagZoneH = 36, t.exports.flagScale = 12, t.exports.flagOff = 6, t.exports.flagHOff = 15, t.exports.maxLevel = 102, t.exports.assistTime = 5e3, t.exports.assistScore = 25, t.exports.assistMin = 20, t.exports.medalAnim = 1e3, t.exports.medalDelay = 900, t.exports.scoreStreak = 2e3, t.exports.feedTimer = 2e3, t.exports.spinTimer = 1800, t.exports.endStats = ["sid", "name", "score", "kills", "deaths", "playtime", "reward"], t.exports.endForm = {
            reward: function(t) {
                return t ? "<span style='color:#F8C55C'>+" + t + "</span> KR" : "NONE"
            },
            time: function(t, e, i) {
                return i.timer || "DNF"
            },
            playtime: function(t, e, i) {
                t = i.playTime || 0;
                parseInt(t % 1e3 / 100);
                var n = parseInt(t / 1e3 % 60),
                    r = parseInt(t / 6e4 % 60);
                return (r = 10 > r ? "0" + r : r) + ":" + (n = 10 > n ? "0" + n : n)
            },
            infected: function(t, e, i) {
                return i.convs
            },
            found: function(t, e, i) {
                return i.convs
            }
        }, t.exports.hitLife = 2e3, t.exports.regenDelay = 5e3, t.exports.regenVal = .1, t.exports.sprayTimer = 1e3, t.exports.sprayRange = 25, t.exports.sprayScale = 15, t.exports.deathDelay = 2800, t.exports.deathFollowD = 100, t.exports.suicides = ["suicide", "uninstall life", "toaster bath", "alt f4", "not alive", "neck rope", "sudoku", "scooter ankle", "death.exe"], t.exports.fov = 70, t.exports.viewDist = 2e3, t.exports.nameVisRate = 200, t.exports.worldUV = 60, t.exports.ambientVal = .8, t.exports.ambD = 2, t.exports.ambMlt = 15, t.exports.ambOff = .09, t.exports.ambScale = 10, t.exports.ambDiv = 20, t.exports.ambSFactor = 1, t.exports.ambBleed = 0, t.exports.boosterSpd = .002, t.exports.rankVar = .03, t.exports.newDataInterval = 12e4, t.exports.socials = ["leaders", "profile", "maps"], t.exports.leaderQueries = ["score", "kills", "wins", "timeplayed", "funds", "clan"], t.exports.leaderCal = {
            player_score: function(e) {
                var i = Math.max(1, Math.floor(t.exports.rankVar * Math.sqrt(e)));
                return "<span class='floatR'><img src='./img/levels/" + Math.max(Math.min(t.exports.maxLevel - 2, i.roundToNearest(3) - 2), 0) + ".png' class='rnkIcon'>" + i + "</span>"
            },
            player_kills: function(t) {
                return t + "<span class='lName'> kills</span>"
            },
            player_wins: function(t) {
                return t + "<span class='lName'> wins</span>"
            },
            player_funds: function(t) {
                return t + " KR"
            },
            player_timeplayed: function(t) {
                var e = t / 1e3 / 60,
                    i = parseInt(e % 60);
                e /= 60;
                var n = parseInt(e % 24);
                e /= 24;
                var r = parseInt(e);
                return (r ? r + "d " : "") + (n ? n + "h " : "") + (i || 0) + "m "
            }
        }, t.exports.regionNames = {
            local: "Local",
            "us-nj": "New Jersey",
            "us-il": "Chicago",
            "us-tx": "Dallas",
            "us-wa": "Seattle",
            "us-ca-la": "Los Angeles",
            "us-ga": "Atlanta",
            "nl-ams": "Amsterdam",
            "gb-lon": "London",
            "de-fra": "Frankfurt",
            "us-ca-sv": "Silicon Valley",
            "au-syd": "Sydney",
            "fr-par": "Paris",
            "jb-hnd": "Tokyo",
            "us-fl": "Miami",
            sgp: "Singapore"
        }
    }).call(this, i(12))
}, function(t, e, i) {
    (function(e) {
        const n = i(2);
        t.exports.keyboardMap = ["", "", "", "CANCEL", "", "", "HELP", "", "BACK_SPACE", "TAB", "", "", "CLEAR", "ENTER", "ENTER_SPECIAL", "", "SHIFT", "CONTROL", "ALT", "PAUSE", "CAPS_LOCK", "KANA", "EISU", "JUNJA", "FINAL", "HANJA", "", "ESCAPE", "CONVERT", "NONCONVERT", "ACCEPT", "MODECHANGE", "SPACE", "PAGE_UP", "PAGE_DOWN", "END", "HOME", "LEFT", "UP", "RIGHT", "DOWN", "SELECT", "PRINT", "EXECUTE", "PRINTSCREEN", "INSERT", "DELETE", "", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "COLON", "SEMICOLON", "LESS_THAN", "EQUALS", "GREATER_THAN", "QUESTION_MARK", "AT", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "OS_KEY", "", "CONTEXT_MENU", "", "SLEEP", "NUMPAD0", "NUMPAD1", "NUMPAD2", "NUMPAD3", "NUMPAD4", "NUMPAD5", "NUMPAD6", "NUMPAD7", "NUMPAD8", "NUMPAD9", "MULTIPLY", "ADD", "SEPARATOR", "SUBTRACT", "DECIMAL", "DIVIDE", "F1", "F2", "F3", "F4", "F5", "F6", "F7", "F8", "F9", "F10", "F11", "F12", "F13", "F14", "F15", "F16", "F17", "F18", "F19", "F20", "F21", "F22", "F23", "F24", "", "", "", "", "", "", "", "", "NUM_LOCK", "SCROLL_LOCK", "WIN_OEM_FJ_JISHO", "WIN_OEM_FJ_MASSHOU", "WIN_OEM_FJ_TOUROKU", "WIN_OEM_FJ_LOYA", "WIN_OEM_FJ_ROYA", "", "", "", "", "", "", "", "", "", "CIRCUMFLEX", "EXCLAMATION", "DOUBLE_QUOTE", "HASH", "DOLLAR", "PERCENT", "AMPERSAND", "UNDERSCORE", "OPEN_PAREN", "CLOSE_PAREN", "ASTERISK", "PLUS", "PIPE", "HYPHEN_MINUS", "OPEN_CURLY_BRACKET", "CLOSE_CURLY_BRACKET", "TILDE", "", "", "", "", "VOLUME_MUTE", "VOLUME_DOWN", "VOLUME_UP", "", "", "SEMICOLON", "EQUALS", "COMMA", "MINUS", "PERIOD", "SLASH", "BACK_QUOTE", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "OPEN_BRACKET", "BACK_SLASH", "CLOSE_BRACKET", "QUOTE", "", "META", "ALTGR", "", "WIN_ICO_HELP", "WIN_ICO_00", "", "WIN_ICO_CLEAR", "", "", "WIN_OEM_RESET", "WIN_OEM_JUMP", "WIN_OEM_PA1", "WIN_OEM_PA2", "WIN_OEM_PA3", "WIN_OEM_WSCTRL", "WIN_OEM_CUSEL", "WIN_OEM_ATTN", "WIN_OEM_FINISH", "WIN_OEM_COPY", "WIN_OEM_AUTO", "WIN_OEM_ENLW", "WIN_OEM_BACKTAB", "ATTN", "CRSEL", "EXSEL", "EREOF", "PLAY", "ZOOM", "", "PA1", "WIN_OEM_CLEAR", ""], t.exports.getB64Size = function() {}, Number.prototype.round = function(t) {
            return +this.toFixed(t)
        }, String.prototype.escape = function() {
            return (this + "").replace(/[\\"']/g, "\\$&").replace(/\u0000/g, "\\0")
        }, Number.prototype.roundToNearest = function(t) {
            return 0 < this ? Math.ceil(this / t) * t : 0 > this ? Math.floor(this / t) * t : this
        }, t.exports.isURL = function(t) {
            try {
                return /^(https?:\/\/)?((([a-z\d]([a-z\d-]*[a-z\d])*)\.)+[a-z]{2,}|((\d{1,3}\.){3}\d{1,3}))(\:\d+)?(\/[-a-z\d%@_.~+&:]*)*(\?[;&a-z\d%@_.,~+&:=-]*)?(\#[-a-z\d_]*)?$/i.test(t)
            } catch (t) {}
            return !1
        }, t.exports.arrayAverage = function(t) {
            for (var e = 0, i = 0; i < t.length; i++) e += t[i];
            return e / t.length
        }, t.exports.countInArray = function(t, e) {
            for (var i = 0, n = 0; n < t.length; n++) t[n] === e && i++;
            return i
        }, t.exports.formatNum = function(t) {
            var e = Math.floor(Math.log(Math.abs(t)) / Math.log(1e3)),
                i = "kmb" [e - 1];
            return i ? (t / Math.pow(1e3, e)).toFixed(1) + i : "" + t
        }, t.exports.randInt = function(t, e) {
            return Math.floor(Math.random() * (e - t + 1)) + t
        }, t.exports.randFloat = function(t, e) {
            return Math.random() * (e - t) + t
        }, t.exports.getRandom = function(e) {
            return e[t.exports.randInt(0, e.length - 1)]
        }, t.exports.getDistance = function(t, e, i, n) {
            return Math.sqrt((i -= t) * i + (n -= e) * n)
        }, t.exports.getDistance3D = function(t, e, i, n, r, s) {
            var o = t - n,
                a = e - r,
                c = i - s;
            return Math.sqrt(o * o + a * a + c * c)
        }, t.exports.getAnglesSSS = function(t, e, i) {
            var n = Math.acos((e * e + i * i - t * t) / (2 * e * i)),
                r = Math.acos((i * i + t * t - e * e) / (2 * i * t)),
                s = Math.PI - n - r;
            return [-n - Math.PI / 2, r, s]
        }, t.exports.getXDir = function(e, i, n, r, s, o) {
            var a = Math.abs(i - s),
                c = t.exports.getDistance3D(e, i, n, r, s, o);
            return Math.asin(a / c) * (i > s ? -1 : 1)
        }, t.exports.getAngleDist = function(t, e) {
            return Math.atan2(Math.sin(e - t), Math.cos(t - e))
        }, t.exports.getAngleDist2 = function(t, e) {
            var i = Math.abs(e - t) % (2 * Math.PI);
            return i > Math.PI ? 2 * Math.PI - i : i
        }, t.exports.toRad = function(t) {
            return t * (Math.PI / 180)
        }, t.exports.getDirection = function(t, e, i, n) {
            return Math.atan2(e - n, t - i)
        }, t.exports.lerp = function(t, e, i) {
            return t + (e - t) * i
        }, t.exports.orderByScore = function(t, e) {
            return e.score - t.score
        }, t.exports.orderByKills = function(t, e) {
            return e.kills - t.kills
        }, t.exports.orderByDst = function(t, e) {
            return t.dst - e.dst
        }, t.exports.orderByNum = function(t, e) {
            return t - e
        }, t.exports.capFirst = function(t) {
            return t.charAt(0).toUpperCase() + t.slice(1)
        }, t.exports.truncateText = function(t, e) {
            return t.length > e ? t.substring(0, e) + "..." : t
        }, t.exports.randomString = function(t) {
            for (var e = "", i = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", n = 0; n < t; n++) e += i.charAt(Math.floor(Math.random() * i.length));
            return e
        }, t.exports.formatNumCash = function(t) {
            return parseFloat(Math.round(100 * t) / 100).toFixed(2)
        }, t.exports.getKeyName = function(e) {
            return t.exports.keyboardMap[e]
        }, t.exports.getTime = function(t, e) {
            var i = parseInt(t % 1e3 / 100),
                n = parseInt(t / 1e3 % 60),
                r = parseInt(t / 6e4 % 60);
            return (r = 10 > r ? "0" + r : r) + ":" + (n = 10 > n ? "0" + n : n) + (e ? "." + i : "")
        }, t.exports.getReadableTime = function(t) {
            var e = t / 1e3 / 60,
                i = parseInt(e % 60);
            e /= 60;
            var n = parseInt(e % 24);
            e /= 24;
            var r = parseInt(e);
            return (r ? r + "d " : "") + (n ? n + "h " : "") + (i || 0) + "m "
        }, t.exports.getTimeH = function(t) {
            parseInt(t % 1e3 / 100);
            var e = Math.floor(t / 1e3 % 60),
                i = Math.floor(t / 6e4 % 60),
                n = Math.floor(t / 36e5 % 24);
            return (n = 10 > n ? "0" + n : n) + ":" + (i = 10 > i ? "0" + i : i) + ":" + (e = 10 > e ? "0" + e : e)
        }, t.exports.scrambleS = function(t) {
            return t && t.replace ? t.replace(/.(.)?/g, "$1") + ("d" + t).replace(/.(.)?/g, "$1") : t
        }, t.exports.fixTo = function(t, e) {
            return parseFloat(t.toFixed(e))
        }, t.exports.limit = function(t, e) {
            return t < -e ? -e : t > e ? e : t
        }, t.exports.limitMM = function(t, e, i) {
            return t < e ? e : t > i ? i : t
        }, t.exports.cropVal = function(t, e) {
            return t <= e && t >= -e ? 0 : t
        }, t.exports.isNumber = function(t) {
            return null != t && "number" == typeof t && !isNaN(t) && isFinite(t)
        }, t.exports.arrayInts = function(e) {
            for (var i = 0; i < e.length; ++i)
                if (!t.exports.isNumber(e[i])) return !1;
            return !0
        }, t.exports.isArray = function(t) {
            return !!t && t.constructor === Array
        }, t.exports.isString = function(t) {
            return t && "string" == typeof t
        };
        t.exports.lineInRect = function(t, e, i, n, r, s, o, a, c, l, p, h) {
            var u = (o - t) * n,
                d = (l - t) * n,
                f = (c - i) * s,
                m = (h - i) * s,
                g = (a - e) * r,
                v = (p - e) * r,
                y = Math.max(Math.max(Math.min(u, d), Math.min(f, m)), Math.min(g, v)),
                x = Math.min(Math.min(Math.max(u, d), Math.max(f, m)), Math.max(g, v));
            return !(0 > x) && !(y > x) && y
        }, t.exports.pointInBox3D = function(t, e, i, n, r) {
            return r = r || 0, t >= n.x - n.width - r && t <= n.x + n.width + r && e >= n.y - n.height - r && e <= n.y + n.height + r && i >= n.z - n.length - r && i <= n.z + n.length + r
        }, t.exports.similar = function(t, e, i) {
            return i = i || 0, Math.abs(t - e) <= i
        }, t.exports.pointInBox = function(t, e, i, n, r, s, o) {
            return o ? t >= i && t <= r && e >= n && e <= s : t > i && t < r && e > n && e < s
        }, t.exports.sharePos = function(t, e, i) {
            return i = i || 0, Math.abs(t.x - e.x) <= i && Math.abs(t.y - e.y) <= i && Math.abs(t.z - e.z) <= i && Math.abs(t.d - e.d) <= i
        }, t.exports.cdv = {
            x: "width",
            y: "height",
            z: "length"
        }, t.exports.boxIntersection = function(e, i, n, r, s) {
            var o = t.exports.cdv[n],
                a = t.exports.cdv[r],
                c = e[n] - e[o] - .1,
                l = i[n] - i[o] - .1,
                p = e[n] + e[o] + .1,
                h = i[n] + i[o] + .1,
                u = e[r] - e[a] - .1,
                d = i[r] - i[a] - .1,
                f = e[r] + e[a] + .1,
                m = i[r] + i[a] + .1,
                g = Math.max(c, l),
                v = Math.min(p, h);
            if (v >= g) {
                var y = Math.max(u, d),
                    x = Math.min(f, m);
                if (x >= y) {
                    for (var w = [{
                            [n]: g,
                            [r]: y,
                            d: s[0]
                        }, {
                            [n]: v,
                            [r]: x,
                            d: s[1]
                        }, {
                            [n]: g,
                            [r]: x,
                            d: s[2]
                        }, {
                            [n]: v,
                            [r]: y,
                            d: s[3]
                        }], b = w.length - 1; 0 <= b; --b)(w[b][n] == p && w[b][n] == h || w[b][n] == c && w[b][n] == l || w[b][r] == f && w[b][r] == m || w[b][r] == u && w[b][r] == d || t.exports.pointInBox(w[b][n], w[b][r], c, u, p, f) || t.exports.pointInBox(w[b][n], w[b][r], l, d, h, m)) && (w[b].dontUse = !0);
                    return w
                }
            }
            return null
        }, t.exports.boxCornerIntersection = function(e, i, n, r) {
            for (var s = t.exports.cdv[n], o = t.exports.cdv[r], a = e[n] - e[s], c = i[n] - i[s], l = e[n] + e[s], p = i[n] + i[s], h = e[r] - e[o], u = i[r] - i[o], d = e[r] + e[o], f = i[r] + i[o], m = [{
                    [n]: a,
                    [r]: h,
                    d: Math.PI / 2
                }, {
                    [n]: a,
                    [r]: d,
                    d: Math.PI
                }, {
                    [n]: l,
                    [r]: h,
                    d: 0
                }, {
                    [n]: l,
                    [r]: d,
                    d: -Math.PI / 2
                }], g = m.length - 1; 0 <= g; --g) m[g].i = g, t.exports.pointInBox(m[g][n], m[g][r], c, u, p, f, !0) || m.splice(g, 1);
            return m.length ? m : null
        }, t.exports.getIntersection = function(e, i, n) {
            var r = t.exports.cdv[n],
                s = e[n] - e[r],
                o = i[n] - i[r],
                a = e[n] + e[r],
                c = i[n] + i[r],
                l = Math.max(s, o),
                p = Math.min(a, c);
            if (p >= l) {
                var h = (p - l) / 2;
                return {
                    [n]: l + h,
                    [r]: h
                }
            }
            return null
        }, t.exports.limitRectVal = function(e, i, n) {
            var r = t.exports.cdv[n];
            if (e[n] - e[r] < i[n] - i[r]) {
                var s = (i[n] - i[r] - (e[n] - e[r])) / 2;
                e[r] -= s, e[n] += s
            }
            if (e[n] + e[r] > i[n] + i[r]) {
                s = (e[n] + e[r] - (i[n] + i[r])) / 2;
                e[r] -= s, e[n] -= s
            }
        }, t.exports.getMaxRect = function(e, i, n) {
            for (var r, s, o, a, c = t.exports.cdv[i], l = t.exports.cdv[n], p = 0; p < e.length; ++p) r = null == r ? e[p][i] - e[p][c] : Math.min(e[p][i] - e[p][c], r), o = null == o ? e[p][i] + e[p][c] : Math.max(e[p][i] + e[p][c], o), s = null == s ? e[p][n] - e[p][l] : Math.min(e[p][n] - e[p][l], s), a = null == a ? e[p][n] + e[p][l] : Math.max(e[p][n] + e[p][l], a);
            return {
                [i]: (r + o) / 2,
                [n]: (s + a) / 2,
                [c]: Math.abs(o - r) / 2,
                [l]: Math.abs(a - s) / 2
            }
        }, t.exports.limitRect = function(e, i, n, r, s, o, a, c) {
            var l = t.exports.getMaxRect(o, a, c),
                p = t.exports.cdv[a],
                h = t.exports.cdv[c],
                u = {};
            if (u[a] = e, u[c] = i, u[p] = n, u[h] = r, t.exports.limitRectVal(u, l, a), t.exports.limitRectVal(u, l, c), 0 == s || s == Math.PI) {
                var d = u[p];
                u[p] = u[h], u[h] = d
            }
            return u
        }, t.exports.progressOnLine = function(t, e, i, n, r, s) {
            var o = i - t,
                a = n - e,
                c = Math.sqrt(o * o + a * a);
            return ((o /= c) * (r - t) + (a /= c) * (s - e)) / Math.sqrt(Math.pow(i - t, 2) + Math.pow(n - e, 2))
        }, t.exports.generateSID = function(t) {
            for (var e = 0, i = !0; i;) {
                i = !1, e++;
                for (var n = 0; n < t.length; ++n)
                    if (t[n].sid == e) {
                        i = !0;
                        break
                    }
            }
            return e
        }, t.exports.levelIconId = function(t) {
            return Math.max(Math.min(n.maxLevel - 2, t.roundToNearest(3) - 2), 0)
        }, t.exports.copyToClipboard = function(t) {
            const e = document.createElement("textarea");
            e.value = t, e.setAttribute("readonly", ""), e.style.position = "absolute", e.style.left = "-9999px", document.body.appendChild(e);
            const i = !!(0 < document.getSelection().rangeCount) && document.getSelection().getRangeAt(0);
            e.select(), document.execCommand("copy"), document.body.removeChild(e), i && (document.getSelection().removeAllRanges(), document.getSelection().addRange(i))
        };
        var r = function(t, e) {
            return t.concat(e)
        };
        Array.prototype.flatMap = function(t) {
            return function(t, e) {
                return e.map(t).reduce(r, [])
            }(t, this)
        };
        var s = i(26);
        t.exports.FcYpjWZ = function(e, i) {
            let n = s.encode(e),
                r = new Uint8Array(n.length + 2);
            return r.set(t.exports.pYYBWNbRTBk(i), r.length - 2), r.set(n, 0), r
        }, t.exports.aqZx = function(e) {
            e = new Uint8Array(e);
            let i = t.exports.iSIBDa(e[e.length - 2], e[e.length - 1]),
                n = e.slice(0, e.length - 2);
            return [s.decode(n), i]
        }, t.exports.wmCIIWUdzAT = function(t, e) {
            return 255 & t + e
        }, t.exports.pYYBWNbRTBk = function(t) {
            return [15 & t >> 4, 15 & t]
        }, t.exports.iSIBDa = function(t, e) {
            return (t << 4) + e
        }, t.exports.restartIfNeeded = function(t) {
            if (n.needsRestart) {
                for (var i in t.sockets) {
                    var r = t.sockets[i];
                    r.send("error", "GAME UPDATING"), r.close()
                }
                setTimeout(function() {
                    e.exit()
                }, 1e3)
            }
        }, t.exports.thumbnailSize = function(t) {
            return parseInt(.75 * t.replace(/=/g, "").length) / 1e3
        }, t.exports.hexToRGB = (t => t.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i, (t, e, i, n) => "#" + e + e + i + i + n + n).substring(1).match(/.{2}/g).map(t => parseInt(t, 16)))
    }).call(this, i(12))
}, function(t, e) {
    var i = {}.toString;
    t.exports = Array.isArray || function(t) {
        return "[object Array]" == i.call(t)
    }
}, function(t, e, i) {
    var n = i(4);
    e.createCodec = a, e.install = function(t) {
        for (var e in t) s.prototype[e] = o(s.prototype[e], t[e])
    }, e.filter = function(t) {
        return n(t) ? function(t) {
            function e(t, e) {
                return e(t)
            }
            return t = t.slice(),
                function(i) {
                    return t.reduce(e, i)
                }
        }(t) : t
    };
    var r = i(0);

    function s(t) {
        return this instanceof s ? (this.options = t, void this.init()) : new s(t)
    }

    function o(t, e) {
        return t && e ? function() {
            return t.apply(this, arguments), e.apply(this, arguments)
        } : t || e
    }

    function a(t) {
        return new s(t)
    }
    s.prototype.init = function() {
        var t = this.options;
        return t && t.uint8array && (this.bufferish = r.Uint8Array), this
    }, e.preset = a({
        preset: !0
    })
}, function(t, e, i) {
    var n = i(7).ExtBuffer,
        r = i(33),
        s = i(34),
        o = i(5);

    function a() {
        var t = this.options;
        return this.encode = function(t) {
            var e = s.getWriteType(t);
            return function(t, i) {
                var n = e[typeof i];
                if (!n) throw new Error('Unsupported type "' + typeof i + '": ' + i);
                n(t, i)
            }
        }(t), t && t.preset && r.setExtPackers(this), this
    }
    o.install({
        addExtPacker: function(t, e, i) {
            function r(e) {
                return i && (e = i(e)), new n(e, t)
            }
            i = o.filter(i);
            var s = e.name;
            if (s && "Object" !== s) {
                var a = this.extPackers || (this.extPackers = {});
                a[s] = r
            } else {
                var c = this.extEncoderList || (this.extEncoderList = []);
                c.unshift([e, r])
            }
        },
        getExtPacker: function(t) {
            var e = this.extPackers || (this.extPackers = {}),
                i = t.constructor,
                n = i && i.name && e[i.name];
            if (n) return n;
            for (var r, s = this.extEncoderList || (this.extEncoderList = []), o = s.length, a = 0; a < o; a++)
                if (r = s[a], i === r[0]) return r[1]
        },
        init: a
    }), e.preset = a.call(o.preset)
}, function(t, e, i) {
    e.ExtBuffer = function t(e, i) {
        return this instanceof t ? (this.buffer = n.from(e), void(this.type = i)) : new t(e, i)
    };
    var n = i(0)
}, function(t, e) {
    e.read = function(t, e, i, n, r) {
        var s, o, a = 8 * r - n - 1,
            c = (1 << a) - 1,
            l = c >> 1,
            p = -7,
            h = i ? r - 1 : 0,
            u = i ? -1 : 1,
            d = t[e + h];
        for (h += u, s = d & (1 << -p) - 1, d >>= -p, p += a; 0 < p; s = 256 * s + t[e + h], h += u, p -= 8);
        for (o = s & (1 << -p) - 1, s >>= -p, p += n; 0 < p; o = 256 * o + t[e + h], h += u, p -= 8);
        if (0 === s) s = 1 - l;
        else {
            if (s === c) return o ? NaN : 1 / 0 * (d ? -1 : 1);
            o += Math.pow(2, n), s -= l
        }
        return (d ? -1 : 1) * o * Math.pow(2, s - n)
    }, e.write = function(t, e, i, n, r, s) {
        var o, a, c, l = 8 * s - r - 1,
            p = (1 << l) - 1,
            h = p >> 1,
            u = 23 === r ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
            d = n ? 0 : s - 1,
            f = n ? 1 : -1,
            m = 0 > e || 0 === e && 0 > 1 / e ? 1 : 0;
        for (e = Math.abs(e), isNaN(e) || e === 1 / 0 ? (a = isNaN(e) ? 1 : 0, o = p) : (o = Math.floor(Math.log(e) / Math.LN2), 1 > e * (c = Math.pow(2, -o)) && (o--, c *= 2), 2 <= (e += 1 <= o + h ? u / c : u * Math.pow(2, 1 - h)) * c && (o++, c /= 2), o + h >= p ? (a = 0, o = p) : 1 <= o + h ? (a = (e * c - 1) * Math.pow(2, r), o += h) : (a = e * Math.pow(2, h - 1) * Math.pow(2, r), o = 0)); 8 <= r; t[i + d] = 255 & a, d += f, a /= 256, r -= 8);
        for (o = o << r | a, l += r; 0 < l; t[i + d] = 255 & o, d += f, o /= 256, l -= 8);
        t[i + d - f] |= 128 * m
    }
}, function(t, e, i) {
    var n, r = i(32);
    e.copy = l, e.slice = p, e.toString = function() {
        return (!a && s.isBuffer(this) ? this.toString : r.toString).apply(this, arguments)
    }, e.write = (n = "write", function() {
        var t = this[n] || r[n];
        return t.apply(this, arguments)
    });
    var s = i(0),
        o = s.global,
        a = s.hasBuffer && "TYPED_ARRAY_SUPPORT" in o,
        c = a && !o.TYPED_ARRAY_SUPPORT;

    function l(t, e, i, n) {
        var o = s.isBuffer(this),
            a = s.isBuffer(t);
        if (o && a) return this.copy(t, e, i, n);
        if (!c && !o && !a && s.isView(this) && s.isView(t)) {
            var l = i || null != n ? p.call(this, i, n) : this;
            return t.set(l, e), l.length
        }
        return r.copy.call(this, t, e, i, n)
    }

    function p(t, e) {
        var i = this.slice || !c && this.subarray;
        if (i) return i.call(this, t, e);
        var n = s.alloc.call(this, e - t);
        return l.call(this, n, 0, t, e), n
    }
}, function(t, e, i) {
    (function(t) {
        ! function(e) {
            function i(t, i, y) {
                function x(t, e, i, n) {
                    return this instanceof x ? function(t, e, i, n, r) {
                        if (m && g && (e instanceof g && (e = new m(e)), n instanceof g && (n = new m(n))), !(e || i || n || d)) return void(t.buffer = c(v, 0));
                        if (!o(e, i)) {
                            var s = d || Array;
                            r = i, n = e, i = 0, e = new s(8)
                        }
                        t.buffer = e, t.offset = i |= 0, void 0 === n || ("string" == typeof n ? function(t, e, i, n) {
                            var r = 0,
                                s = i.length,
                                o = 0,
                                a = 0;
                            "-" === i[0] && r++;
                            for (var c, l = r; r < s && 0 <= (c = parseInt(i[r++], n));) a = a * n + c, o = o * n + Math.floor(a / 4294967296), a %= 4294967296;
                            l && (o = ~o, a ? a = 4294967296 - a : o++), b(t, e + S, o), b(t, e + _, a)
                        }(e, i, n, r || 10) : o(n, r) ? a(e, i, n, r) : "number" == typeof r ? (b(e, i + S, n), b(e, i + _, r)) : 0 < n ? k(e, i, n) : 0 > n ? R(e, i, n) : a(e, i, v, 0))
                    }(this, t, e, i, n) : new x(t, e, i, n)
                }

                function w() {
                    var t = this.buffer,
                        e = this.offset,
                        i = M(t, e + S),
                        n = M(t, e + _);
                    return y || (i |= 0), i ? 4294967296 * i + n : n
                }

                function b(t, e, i) {
                    t[e + L] = 255 & i, i >>= 8, t[e + A] = 255 & i, i >>= 8, t[e + E] = 255 & i, i >>= 8, t[e + T] = 255 & i
                }

                function M(t, e) {
                    return 16777216 * t[e + T] + (t[e + E] << 16) + (t[e + A] << 8) + t[e + L]
                }
                var S = i ? 0 : 4,
                    _ = i ? 4 : 0,
                    T = i ? 0 : 3,
                    E = i ? 1 : 2,
                    A = i ? 2 : 1,
                    L = i ? 3 : 0,
                    k = i ? l : h,
                    R = i ? p : u,
                    P = x.prototype,
                    C = "is" + t,
                    I = "_" + C;
                return P.buffer = void 0, P.offset = 0, P[I] = !0, P.toNumber = w, P.toString = function(t) {
                    var e = this.buffer,
                        i = this.offset,
                        n = M(e, i + S),
                        r = M(e, i + _),
                        s = "",
                        o = !y && 2147483648 & n;
                    for (o && (n = ~n, r = 4294967296 - r), t = t || 10;;) {
                        var a = n % t * 4294967296 + r;
                        if (n = Math.floor(n / t), r = Math.floor(a / t), s = (a % t).toString(t) + s, !n && !r) break
                    }
                    return o && (s = "-" + s), s
                }, P.toJSON = w, P.toArray = n, f && (P.toBuffer = r), m && (P.toArrayBuffer = s), x[C] = function(t) {
                    return !(!t || !t[I])
                }, e[t] = x, x
            }

            function n(t) {
                var e = this.buffer,
                    i = this.offset;
                return d = null, !1 !== t && 0 === i && 8 === e.length && y(e) ? e : c(e, i)
            }

            function r(e) {
                var i = this.buffer,
                    n = this.offset;
                if (d = f, !1 !== e && 0 === n && 8 === i.length && t.isBuffer(i)) return i;
                var r = new f(8);
                return a(r, 0, i, n), r
            }

            function s(t) {
                var e = this.buffer,
                    i = this.offset,
                    n = e.buffer;
                if (d = m, !1 !== t && 0 === i && n instanceof g && 8 === n.byteLength) return n;
                var r = new m(8);
                return a(r, 0, e, i), r.buffer
            }

            function o(t, e) {
                var i = t && t.length;
                return e |= 0, i && e + 8 <= i && "string" != typeof t[e]
            }

            function a(t, e, i, n) {
                e |= 0, n |= 0;
                for (var r = 0; 8 > r; r++) t[e++] = 255 & i[n++]
            }

            function c(t, e) {
                return Array.prototype.slice.call(t, e, e + 8)
            }

            function l(t, e, i) {
                for (var n = e + 8; n > e;) t[--n] = 255 & i, i /= 256
            }

            function p(t, e, i) {
                var n = e + 8;
                for (i++; n > e;) t[--n] = 255 ^ 255 & -i, i /= 256
            }

            function h(t, e, i) {
                for (var n = e + 8; e < n;) t[e++] = 255 & i, i /= 256
            }

            function u(t, e, i) {
                var n = e + 8;
                for (i++; e < n;) t[e++] = 255 ^ 255 & -i, i /= 256
            }
            var d, f = void 0 !== t && t,
                m = "undefined" != typeof Uint8Array && Uint8Array,
                g = "undefined" != typeof ArrayBuffer && ArrayBuffer,
                v = [0, 0, 0, 0, 0, 0, 0, 0],
                y = Array.isArray || function(t) {
                    return !!t && "[object Array]" == Object.prototype.toString.call(t)
                };
            i("Uint64BE", !0, !0), i("Int64BE", !0, !1), i("Uint64LE", !1, !0), i("Int64LE", !1, !1)
        }("string" != typeof e.nodeName ? e : this || {})
    }).call(this, i(15).Buffer)
}, function(t, e, i) {
    var n = i(7).ExtBuffer,
        r = i(36),
        s = i(20).readUint8,
        o = i(37),
        a = i(5);

    function c() {
        var t = this.options;
        return this.decode = function(t) {
            var e = o.getReadToken(t);
            return function(t) {
                var i = s(t),
                    n = e[i];
                if (!n) throw new Error("Invalid type: " + (i ? "0x" + i.toString(16) : i));
                return n(t)
            }
        }(t), t && t.preset && r.setExtUnpackers(this), this
    }
    a.install({
        addExtUnpacker: function(t, e) {
            (this.extUnpackers || (this.extUnpackers = []))[t] = a.filter(e)
        },
        getExtUnpacker: function(t) {
            return (this.extUnpackers || (this.extUnpackers = []))[t] || function(e) {
                return new n(e, t)
            }
        },
        init: c
    }), e.preset = c.call(a.preset)
}, function(t, e) {
    var i, n, r = t.exports = {};

    function s() {
        throw new Error("setTimeout has not been defined")
    }

    function o() {
        throw new Error("clearTimeout has not been defined")
    }

    function a(t) {
        if (i === setTimeout) return setTimeout(t, 0);
        if ((i === s || !i) && setTimeout) return i = setTimeout, setTimeout(t, 0);
        try {
            return i(t, 0)
        } catch (e) {
            try {
                return i.call(null, t, 0)
            } catch (e) {
                return i.call(this, t, 0)
            }
        }
    }! function() {
        try {
            i = "function" == typeof setTimeout ? setTimeout : s
        } catch (t) {
            i = s
        }
        try {
            n = "function" == typeof clearTimeout ? clearTimeout : o
        } catch (t) {
            n = o
        }
    }();
    var c, l = [],
        p = !1,
        h = -1;

    function u() {
        p && c && (p = !1, c.length ? l = c.concat(l) : h = -1, l.length && d())
    }

    function d() {
        if (!p) {
            var t = a(u);
            p = !0;
            for (var e = l.length; e;) {
                for (c = l, l = []; ++h < e;) c && c[h].run();
                h = -1, e = l.length
            }
            c = null, p = !1,
                function(t) {
                    if (n === clearTimeout) return clearTimeout(t);
                    if ((n === o || !n) && clearTimeout) return n = clearTimeout, clearTimeout(t);
                    try {
                        n(t)
                    } catch (e) {
                        try {
                            return n.call(null, t)
                        } catch (e) {
                            return n.call(this, t)
                        }
                    }
                }(t)
        }
    }

    function f(t, e) {
        this.fun = t, this.array = e
    }

    function m() {}
    r.nextTick = function(t) {
        var e = Array(arguments.length - 1);
        if (1 < arguments.length)
            for (var i = 1; i < arguments.length; i++) e[i - 1] = arguments[i];
        l.push(new f(t, e)), 1 !== l.length || p || a(d)
    }, f.prototype.run = function() {
        this.fun.apply(null, this.array)
    }, r.title = "browser", r.browser = !0, r.env = {}, r.argv = [], r.version = "", r.versions = {}, r.on = m, r.addListener = m, r.once = m, r.off = m, r.removeListener = m, r.removeAllListeners = m, r.emit = m, r.prependListener = m, r.prependOnceListener = m, r.listeners = function() {
        return []
    }, r.binding = function() {
        throw new Error("process.binding is not supported")
    }, r.cwd = function() {
        return "/"
    }, r.chdir = function() {
        throw new Error("process.chdir is not supported")
    }, r.umask = function() {
        return 0
    }
}, function(t, e, i) {
    e.encode = function(t, e) {
        var i = new n(e);
        return i.write(t), i.read()
    };
    var n = i(14).EncodeBuffer
}, function(t, e, i) {
    e.EncodeBuffer = r;
    var n = i(6).preset;

    function r(t) {
        if (!(this instanceof r)) return new r(t);
        if (t && (this.options = t, t.codec)) {
            var e = this.codec = t.codec;
            e.bufferish && (this.bufferish = e.bufferish)
        }
    }
    i(17).FlexEncoder.mixin(r.prototype), r.prototype.codec = n, r.prototype.write = function(t) {
        this.codec.encode(this, t)
    }
}, function(t, e, i) {
    (function(t) {
        /*!
         * The buffer module from node.js, for the browser.
         *
         * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
         * @license  MIT
         */
        var n = i(28),
            r = i(8),
            s = i(4);

        function o() {
            return c.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823
        }

        function a(t, e) {
            if (o() < e) throw new RangeError("Invalid typed array length");
            return c.TYPED_ARRAY_SUPPORT ? (t = new Uint8Array(e)).__proto__ = c.prototype : (null === t && (t = new c(e)), t.length = e), t
        }

        function c(t, e, i) {
            if (!(c.TYPED_ARRAY_SUPPORT || this instanceof c)) return new c(t, e, i);
            if ("number" == typeof t) {
                if ("string" == typeof e) throw new Error("If encoding is specified then the first argument must be a string");
                return h(this, t)
            }
            return l(this, t, e, i)
        }

        function l(t, e, i, n) {
            if ("number" == typeof e) throw new TypeError('"value" argument must not be a number');
            return "undefined" != typeof ArrayBuffer && e instanceof ArrayBuffer ? function(t, e, i, n) {
                if (e.byteLength, 0 > i || e.byteLength < i) throw new RangeError("'offset' is out of bounds");
                if (e.byteLength < i + (n || 0)) throw new RangeError("'length' is out of bounds");
                return e = void 0 === i && void 0 === n ? new Uint8Array(e) : void 0 === n ? new Uint8Array(e, i) : new Uint8Array(e, i, n), c.TYPED_ARRAY_SUPPORT ? (t = e).__proto__ = c.prototype : t = u(t, e), t
            }(t, e, i, n) : "string" == typeof e ? function(t, e, i) {
                if (("string" != typeof i || "" === i) && (i = "utf8"), !c.isEncoding(i)) throw new TypeError('"encoding" must be a valid string encoding');
                var n = 0 | f(e, i),
                    r = (t = a(t, n)).write(e, i);
                return r !== n && (t = t.slice(0, r)), t
            }(t, e, i) : function(t, e) {
                if (c.isBuffer(e)) {
                    var i = 0 | d(e.length);
                    return 0 === (t = a(t, i)).length ? t : (e.copy(t, 0, 0, i), t)
                }
                if (e) {
                    if ("undefined" != typeof ArrayBuffer && e.buffer instanceof ArrayBuffer || "length" in e) return "number" != typeof e.length || function(t) {
                        return t != t
                    }(e.length) ? a(t, 0) : u(t, e);
                    if ("Buffer" === e.type && s(e.data)) return u(t, e.data)
                }
                throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")
            }(t, e)
        }

        function p(t) {
            if ("number" != typeof t) throw new TypeError('"size" argument must be a number');
            if (0 > t) throw new RangeError('"size" argument must not be negative')
        }

        function h(t, e) {
            if (p(e), t = a(t, 0 > e ? 0 : 0 | d(e)), !c.TYPED_ARRAY_SUPPORT)
                for (var i = 0; i < e; ++i) t[i] = 0;
            return t
        }

        function u(t, e) {
            var i = 0 > e.length ? 0 : 0 | d(e.length);
            t = a(t, i);
            for (var n = 0; n < i; n += 1) t[n] = 255 & e[n];
            return t
        }

        function d(t) {
            if (t >= o()) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + o().toString(16) + " bytes");
            return 0 | t
        }

        function f(t, e) {
            if (c.isBuffer(t)) return t.length;
            if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(t) || t instanceof ArrayBuffer)) return t.byteLength;
            "string" != typeof t && (t = "" + t);
            var i = t.length;
            if (0 === i) return 0;
            for (var n = !1;;) switch (e) {
                case "ascii":
                case "latin1":
                case "binary":
                    return i;
                case "utf8":
                case "utf-8":
                case void 0:
                    return F(t).length;
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                    return 2 * i;
                case "hex":
                    return i >>> 1;
                case "base64":
                    return H(t).length;
                default:
                    if (n) return F(t).length;
                    e = ("" + e).toLowerCase(), n = !0
            }
        }

        function m(t, e, i) {
            var n = t[e];
            t[e] = t[i], t[i] = n
        }

        function g(t, e, i, n, r) {
            if (0 === t.length) return -1;
            if ("string" == typeof i ? (n = i, i = 0) : 2147483647 < i ? i = 2147483647 : -2147483648 > i && (i = -2147483648), i = +i, isNaN(i) && (i = r ? 0 : t.length - 1), 0 > i && (i = t.length + i), i >= t.length) {
                if (r) return -1;
                i = t.length - 1
            } else if (0 > i) {
                if (!r) return -1;
                i = 0
            }
            if ("string" == typeof e && (e = c.from(e, n)), c.isBuffer(e)) return 0 === e.length ? -1 : v(t, e, i, n, r);
            if ("number" == typeof e) return e &= 255, c.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf ? r ? Uint8Array.prototype.indexOf.call(t, e, i) : Uint8Array.prototype.lastIndexOf.call(t, e, i) : v(t, [e], i, n, r);
            throw new TypeError("val must be string, number or Buffer")
        }

        function v(t, e, i, n, r) {
            function s(t, e) {
                return 1 === a ? t[e] : t.readUInt16BE(e * a)
            }
            var o, a = 1,
                c = t.length,
                l = e.length;
            if (void 0 !== n && ("ucs2" === (n = (n + "").toLowerCase()) || "ucs-2" === n || "utf16le" === n || "utf-16le" === n)) {
                if (2 > t.length || 2 > e.length) return -1;
                a = 2, c /= 2, l /= 2, i /= 2
            }
            if (r) {
                var p = -1;
                for (o = i; o < c; o++)
                    if (s(t, o) !== s(e, -1 === p ? 0 : o - p)) - 1 !== p && (o -= o - p), p = -1;
                    else if (-1 === p && (p = o), o - p + 1 === l) return p * a
            } else
                for (i + l > c && (i = c - l), o = i; 0 <= o; o--) {
                    for (var h = !0, u = 0; u < l; u++)
                        if (s(t, o + u) !== s(e, u)) {
                            h = !1;
                            break
                        } if (h) return o
                }
            return -1
        }

        function y(t, e, i, n) {
            i = +i || 0;
            var r = t.length - i;
            n ? (n = +n) > r && (n = r) : n = r;
            var s = e.length;
            if (0 != s % 2) throw new TypeError("Invalid hex string");
            n > s / 2 && (n = s / 2);
            for (var o, a = 0; a < n; ++a) {
                if (o = parseInt(e.substr(2 * a, 2), 16), isNaN(o)) return a;
                t[i + a] = o
            }
            return a
        }

        function x(t, e, i, n) {
            return j(F(e, t.length - i), t, i, n)
        }

        function w(t, e, i, n) {
            return j(function(t) {
                for (var e = [], i = 0; i < t.length; ++i) e.push(255 & t.charCodeAt(i));
                return e
            }(e), t, i, n)
        }

        function b(t, e, i, n) {
            return w(t, e, i, n)
        }

        function M(t, e, i, n) {
            return j(H(e), t, i, n)
        }

        function S(t, e, i, n) {
            return j(function(t, e) {
                for (var i, n, r, s = [], o = 0; o < t.length && !(0 > (e -= 2)); ++o) i = t.charCodeAt(o), n = i >> 8, r = i % 256, s.push(r), s.push(n);
                return s
            }(e, t.length - i), t, i, n)
        }

        function _(t, e, i) {
            return 0 === e && i === t.length ? n.fromByteArray(t) : n.fromByteArray(t.slice(e, i))
        }

        function T(t, e, i) {
            i = Math.min(t.length, i);
            for (var n = [], r = e; r < i;) {
                var s, o, a, c, l = t[r],
                    p = null,
                    h = 239 < l ? 4 : 223 < l ? 3 : 191 < l ? 2 : 1;
                if (r + h <= i) 1 === h ? 128 > l && (p = l) : 2 === h ? 128 == (192 & (s = t[r + 1])) && (127 < (c = (31 & l) << 6 | 63 & s) && (p = c)) : 3 === h ? (s = t[r + 1], o = t[r + 2], 128 == (192 & s) && 128 == (192 & o) && (2047 < (c = (15 & l) << 12 | (63 & s) << 6 | 63 & o) && (55296 > c || 57343 < c) && (p = c))) : 4 === h && (s = t[r + 1], o = t[r + 2], a = t[r + 3], 128 == (192 & s) && 128 == (192 & o) && 128 == (192 & a) && (65535 < (c = (15 & l) << 18 | (63 & s) << 12 | (63 & o) << 6 | 63 & a) && 1114112 > c && (p = c)));
                null === p ? (p = 65533, h = 1) : 65535 < p && (p -= 65536, n.push(55296 | 1023 & p >>> 10), p = 56320 | 1023 & p), n.push(p), r += h
            }
            return function(t) {
                var e = t.length;
                if (e <= E) return String.fromCharCode.apply(String, t);
                for (var i = "", n = 0; n < e;) i += String.fromCharCode.apply(String, t.slice(n, n += E));
                return i
            }(n)
        }
        e.Buffer = c, e.SlowBuffer = function(t) {
            return +t != t && (t = 0), c.alloc(+t)
        }, e.INSPECT_MAX_BYTES = 50, c.TYPED_ARRAY_SUPPORT = void 0 === t.TYPED_ARRAY_SUPPORT ? function() {
            try {
                var t = new Uint8Array(1);
                return t.__proto__ = {
                    __proto__: Uint8Array.prototype,
                    foo: function() {
                        return 42
                    }
                }, 42 === t.foo() && "function" == typeof t.subarray && 0 === t.subarray(1, 1).byteLength
            } catch (t) {
                return !1
            }
        }() : t.TYPED_ARRAY_SUPPORT, e.kMaxLength = o(), c.poolSize = 8192, c._augment = function(t) {
            return t.__proto__ = c.prototype, t
        }, c.from = function(t, e, i) {
            return l(null, t, e, i)
        }, c.TYPED_ARRAY_SUPPORT && (c.prototype.__proto__ = Uint8Array.prototype, c.__proto__ = Uint8Array, "undefined" != typeof Symbol && Symbol.species && c[Symbol.species] === c && Object.defineProperty(c, Symbol.species, {
            value: null,
            configurable: !0
        })), c.alloc = function(t, e, i) {
            return function(t, e, i, n) {
                return p(e), 0 >= e ? a(t, e) : void 0 === i ? a(t, e) : "string" == typeof n ? a(t, e).fill(i, n) : a(t, e).fill(i)
            }(null, t, e, i)
        }, c.allocUnsafe = function(t) {
            return h(null, t)
        }, c.allocUnsafeSlow = function(t) {
            return h(null, t)
        }, c.isBuffer = function(t) {
            return !(null == t || !t._isBuffer)
        }, c.compare = function(t, e) {
            if (!c.isBuffer(t) || !c.isBuffer(e)) throw new TypeError("Arguments must be Buffers");
            if (t === e) return 0;
            for (var i = t.length, n = e.length, r = 0, s = Math.min(i, n); r < s; ++r)
                if (t[r] !== e[r]) {
                    i = t[r], n = e[r];
                    break
                } return i < n ? -1 : n < i ? 1 : 0
        }, c.isEncoding = function(t) {
            switch ((t + "").toLowerCase()) {
                case "hex":
                case "utf8":
                case "utf-8":
                case "ascii":
                case "latin1":
                case "binary":
                case "base64":
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                    return !0;
                default:
                    return !1
            }
        }, c.concat = function(t, e) {
            if (!s(t)) throw new TypeError('"list" argument must be an Array of Buffers');
            if (0 === t.length) return c.alloc(0);
            var i;
            if (void 0 === e)
                for (e = 0, i = 0; i < t.length; ++i) e += t[i].length;
            var n = c.allocUnsafe(e),
                r = 0;
            for (i = 0; i < t.length; ++i) {
                var o = t[i];
                if (!c.isBuffer(o)) throw new TypeError('"list" argument must be an Array of Buffers');
                o.copy(n, r), r += o.length
            }
            return n
        }, c.byteLength = f, c.prototype._isBuffer = !0, c.prototype.swap16 = function() {
            var t = this.length;
            if (0 != t % 2) throw new RangeError("Buffer size must be a multiple of 16-bits");
            for (var e = 0; e < t; e += 2) m(this, e, e + 1);
            return this
        }, c.prototype.swap32 = function() {
            var t = this.length;
            if (0 != t % 4) throw new RangeError("Buffer size must be a multiple of 32-bits");
            for (var e = 0; e < t; e += 4) m(this, e, e + 3), m(this, e + 1, e + 2);
            return this
        }, c.prototype.swap64 = function() {
            var t = this.length;
            if (0 != t % 8) throw new RangeError("Buffer size must be a multiple of 64-bits");
            for (var e = 0; e < t; e += 8) m(this, e, e + 7), m(this, e + 1, e + 6), m(this, e + 2, e + 5), m(this, e + 3, e + 4);
            return this
        }, c.prototype.toString = function() {
            var t = 0 | this.length;
            return 0 == t ? "" : 0 === arguments.length ? T(this, 0, t) : function(t, e, i) {
                var n = !1;
                if ((void 0 === e || 0 > e) && (e = 0), e > this.length) return "";
                if ((void 0 === i || i > this.length) && (i = this.length), 0 >= i) return "";
                if ((i >>>= 0) <= (e >>>= 0)) return "";
                for (t || (t = "utf8");;) switch (t) {
                    case "hex":
                        return k(this, e, i);
                    case "utf8":
                    case "utf-8":
                        return T(this, e, i);
                    case "ascii":
                        return A(this, e, i);
                    case "latin1":
                    case "binary":
                        return L(this, e, i);
                    case "base64":
                        return _(this, e, i);
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return R(this, e, i);
                    default:
                        if (n) throw new TypeError("Unknown encoding: " + t);
                        t = (t + "").toLowerCase(), n = !0
                }
            }.apply(this, arguments)
        }, c.prototype.equals = function(t) {
            if (!c.isBuffer(t)) throw new TypeError("Argument must be a Buffer");
            return this === t || 0 === c.compare(this, t)
        }, c.prototype.inspect = function() {
            var t = "",
                i = e.INSPECT_MAX_BYTES;
            return 0 < this.length && (t = this.toString("hex", 0, i).match(/.{2}/g).join(" "), this.length > i && (t += " ... ")), "<Buffer " + t + ">"
        }, c.prototype.compare = function(t, e, i, n, r) {
            if (!c.isBuffer(t)) throw new TypeError("Argument must be a Buffer");
            if (void 0 === e && (e = 0), void 0 === i && (i = t ? t.length : 0), void 0 === n && (n = 0), void 0 === r && (r = this.length), 0 > e || i > t.length || 0 > n || r > this.length) throw new RangeError("out of range index");
            if (n >= r && e >= i) return 0;
            if (n >= r) return -1;
            if (e >= i) return 1;
            if (this === t) return 0;
            for (var s = (r >>>= 0) - (n >>>= 0), o = (i >>>= 0) - (e >>>= 0), a = Math.min(s, o), l = this.slice(n, r), p = t.slice(e, i), h = 0; h < a; ++h)
                if (l[h] !== p[h]) {
                    s = l[h], o = p[h];
                    break
                } return s < o ? -1 : o < s ? 1 : 0
        }, c.prototype.includes = function(t, e, i) {
            return -1 !== this.indexOf(t, e, i)
        }, c.prototype.indexOf = function(t, e, i) {
            return g(this, t, e, i, !0)
        }, c.prototype.lastIndexOf = function(t, e, i) {
            return g(this, t, e, i, !1)
        }, c.prototype.write = function(t, e, i, n) {
            if (void 0 === e) n = "utf8", i = this.length, e = 0;
            else if (void 0 === i && "string" == typeof e) n = e, i = this.length, e = 0;
            else {
                if (!isFinite(e)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                e |= 0, isFinite(i) ? (i |= 0, void 0 === n && (n = "utf8")) : (n = i, i = void 0)
            }
            var r = this.length - e;
            if ((void 0 === i || i > r) && (i = r), 0 < t.length && (0 > i || 0 > e) || e > this.length) throw new RangeError("Attempt to write outside buffer bounds");
            n || (n = "utf8");
            for (var s = !1;;) switch (n) {
                case "hex":
                    return y(this, t, e, i);
                case "utf8":
                case "utf-8":
                    return x(this, t, e, i);
                case "ascii":
                    return w(this, t, e, i);
                case "latin1":
                case "binary":
                    return b(this, t, e, i);
                case "base64":
                    return M(this, t, e, i);
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                    return S(this, t, e, i);
                default:
                    if (s) throw new TypeError("Unknown encoding: " + n);
                    n = ("" + n).toLowerCase(), s = !0
            }
        }, c.prototype.toJSON = function() {
            return {
                type: "Buffer",
                data: Array.prototype.slice.call(this._arr || this, 0)
            }
        };
        var E = 4096;

        function A(t, e, i) {
            var n = "";
            i = Math.min(t.length, i);
            for (var r = e; r < i; ++r) n += String.fromCharCode(127 & t[r]);
            return n
        }

        function L(t, e, i) {
            var n = "";
            i = Math.min(t.length, i);
            for (var r = e; r < i; ++r) n += String.fromCharCode(t[r]);
            return n
        }

        function k(t, e, i) {
            var n = t.length;
            (!e || 0 > e) && (e = 0), (!i || 0 > i || i > n) && (i = n);
            for (var r = "", s = e; s < i; ++s) r += U(t[s]);
            return r
        }

        function R(t, e, i) {
            for (var n = t.slice(e, i), r = "", s = 0; s < n.length; s += 2) r += String.fromCharCode(n[s] + 256 * n[s + 1]);
            return r
        }

        function P(t, e, i) {
            if (0 != t % 1 || 0 > t) throw new RangeError("offset is not uint");
            if (t + e > i) throw new RangeError("Trying to access beyond buffer length")
        }

        function C(t, e, i, n, r, s) {
            if (!c.isBuffer(t)) throw new TypeError('"buffer" argument must be a Buffer instance');
            if (e > r || e < s) throw new RangeError('"value" argument is out of bounds');
            if (i + n > t.length) throw new RangeError("Index out of range")
        }

        function I(t, e, i, n) {
            0 > e && (e = 65535 + e + 1);
            for (var r = 0, s = Math.min(t.length - i, 2); r < s; ++r) t[i + r] = (e & 255 << 8 * (n ? r : 1 - r)) >>> 8 * (n ? r : 1 - r)
        }

        function O(t, e, i, n) {
            0 > e && (e = 4294967295 + e + 1);
            for (var r = 0, s = Math.min(t.length - i, 4); r < s; ++r) t[i + r] = 255 & e >>> 8 * (n ? r : 3 - r)
        }

        function D(t, e, i, n) {
            if (i + n > t.length) throw new RangeError("Index out of range");
            if (0 > i) throw new RangeError("Index out of range")
        }

        function B(t, e, i, n, s) {
            return s || D(t, 0, i, 4), r.write(t, e, i, n, 23, 4), i + 4
        }

        function z(t, e, i, n, s) {
            return s || D(t, 0, i, 8), r.write(t, e, i, n, 52, 8), i + 8
        }
        c.prototype.slice = function(t, e) {
            var i, n = this.length;
            if (0 > (t = ~~t) ? 0 > (t += n) && (t = 0) : t > n && (t = n), 0 > (e = void 0 === e ? n : ~~e) ? 0 > (e += n) && (e = 0) : e > n && (e = n), e < t && (e = t), c.TYPED_ARRAY_SUPPORT)(i = this.subarray(t, e)).__proto__ = c.prototype;
            else {
                var r = e - t;
                i = new c(r, void 0);
                for (var s = 0; s < r; ++s) i[s] = this[s + t]
            }
            return i
        }, c.prototype.readUIntLE = function(t, e, i) {
            t |= 0, e |= 0, i || P(t, e, this.length);
            for (var n = this[t], r = 1, s = 0; ++s < e && (r *= 256);) n += this[t + s] * r;
            return n
        }, c.prototype.readUIntBE = function(t, e, i) {
            t |= 0, e |= 0, i || P(t, e, this.length);
            for (var n = this[t + --e], r = 1; 0 < e && (r *= 256);) n += this[t + --e] * r;
            return n
        }, c.prototype.readUInt8 = function(t, e) {
            return e || P(t, 1, this.length), this[t]
        }, c.prototype.readUInt16LE = function(t, e) {
            return e || P(t, 2, this.length), this[t] | this[t + 1] << 8
        }, c.prototype.readUInt16BE = function(t, e) {
            return e || P(t, 2, this.length), this[t] << 8 | this[t + 1]
        }, c.prototype.readUInt32LE = function(t, e) {
            return e || P(t, 4, this.length), (this[t] | this[t + 1] << 8 | this[t + 2] << 16) + 16777216 * this[t + 3]
        }, c.prototype.readUInt32BE = function(t, e) {
            return e || P(t, 4, this.length), 16777216 * this[t] + (this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3])
        }, c.prototype.readIntLE = function(t, e, i) {
            t |= 0, e |= 0, i || P(t, e, this.length);
            for (var n = this[t], r = 1, s = 0; ++s < e && (r *= 256);) n += this[t + s] * r;
            return n >= (r *= 128) && (n -= Math.pow(2, 8 * e)), n
        }, c.prototype.readIntBE = function(t, e, i) {
            t |= 0, e |= 0, i || P(t, e, this.length);
            for (var n = e, r = 1, s = this[t + --n]; 0 < n && (r *= 256);) s += this[t + --n] * r;
            return s >= (r *= 128) && (s -= Math.pow(2, 8 * e)), s
        }, c.prototype.readInt8 = function(t, e) {
            return e || P(t, 1, this.length), 128 & this[t] ? -1 * (255 - this[t] + 1) : this[t]
        }, c.prototype.readInt16LE = function(t, e) {
            e || P(t, 2, this.length);
            var i = this[t] | this[t + 1] << 8;
            return 32768 & i ? 4294901760 | i : i
        }, c.prototype.readInt16BE = function(t, e) {
            e || P(t, 2, this.length);
            var i = this[t + 1] | this[t] << 8;
            return 32768 & i ? 4294901760 | i : i
        }, c.prototype.readInt32LE = function(t, e) {
            return e || P(t, 4, this.length), this[t] | this[t + 1] << 8 | this[t + 2] << 16 | this[t + 3] << 24
        }, c.prototype.readInt32BE = function(t, e) {
            return e || P(t, 4, this.length), this[t] << 24 | this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3]
        }, c.prototype.readFloatLE = function(t, e) {
            return e || P(t, 4, this.length), r.read(this, t, !0, 23, 4)
        }, c.prototype.readFloatBE = function(t, e) {
            return e || P(t, 4, this.length), r.read(this, t, !1, 23, 4)
        }, c.prototype.readDoubleLE = function(t, e) {
            return e || P(t, 8, this.length), r.read(this, t, !0, 52, 8)
        }, c.prototype.readDoubleBE = function(t, e) {
            return e || P(t, 8, this.length), r.read(this, t, !1, 52, 8)
        }, c.prototype.writeUIntLE = function(t, e, i, n) {
            (t = +t, e |= 0, i |= 0, n) || C(this, t, e, i, Math.pow(2, 8 * i) - 1, 0);
            var r = 1,
                s = 0;
            for (this[e] = 255 & t; ++s < i && (r *= 256);) this[e + s] = 255 & t / r;
            return e + i
        }, c.prototype.writeUIntBE = function(t, e, i, n) {
            (t = +t, e |= 0, i |= 0, n) || C(this, t, e, i, Math.pow(2, 8 * i) - 1, 0);
            var r = i - 1,
                s = 1;
            for (this[e + r] = 255 & t; 0 <= --r && (s *= 256);) this[e + r] = 255 & t / s;
            return e + i
        }, c.prototype.writeUInt8 = function(t, e, i) {
            return t = +t, e |= 0, i || C(this, t, e, 1, 255, 0), c.TYPED_ARRAY_SUPPORT || (t = Math.floor(t)), this[e] = 255 & t, e + 1
        }, c.prototype.writeUInt16LE = function(t, e, i) {
            return t = +t, e |= 0, i || C(this, t, e, 2, 65535, 0), c.TYPED_ARRAY_SUPPORT ? (this[e] = 255 & t, this[e + 1] = t >>> 8) : I(this, t, e, !0), e + 2
        }, c.prototype.writeUInt16BE = function(t, e, i) {
            return t = +t, e |= 0, i || C(this, t, e, 2, 65535, 0), c.TYPED_ARRAY_SUPPORT ? (this[e] = t >>> 8, this[e + 1] = 255 & t) : I(this, t, e, !1), e + 2
        }, c.prototype.writeUInt32LE = function(t, e, i) {
            return t = +t, e |= 0, i || C(this, t, e, 4, 4294967295, 0), c.TYPED_ARRAY_SUPPORT ? (this[e + 3] = t >>> 24, this[e + 2] = t >>> 16, this[e + 1] = t >>> 8, this[e] = 255 & t) : O(this, t, e, !0), e + 4
        }, c.prototype.writeUInt32BE = function(t, e, i) {
            return t = +t, e |= 0, i || C(this, t, e, 4, 4294967295, 0), c.TYPED_ARRAY_SUPPORT ? (this[e] = t >>> 24, this[e + 1] = t >>> 16, this[e + 2] = t >>> 8, this[e + 3] = 255 & t) : O(this, t, e, !1), e + 4
        }, c.prototype.writeIntLE = function(t, e, i, n) {
            if (t = +t, e |= 0, !n) {
                var r = Math.pow(2, 8 * i - 1);
                C(this, t, e, i, r - 1, -r)
            }
            var s = 0,
                o = 1,
                a = 0;
            for (this[e] = 255 & t; ++s < i && (o *= 256);) 0 > t && 0 === a && 0 !== this[e + s - 1] && (a = 1), this[e + s] = 255 & (t / o >> 0) - a;
            return e + i
        }, c.prototype.writeIntBE = function(t, e, i, n) {
            if (t = +t, e |= 0, !n) {
                var r = Math.pow(2, 8 * i - 1);
                C(this, t, e, i, r - 1, -r)
            }
            var s = i - 1,
                o = 1,
                a = 0;
            for (this[e + s] = 255 & t; 0 <= --s && (o *= 256);) 0 > t && 0 === a && 0 !== this[e + s + 1] && (a = 1), this[e + s] = 255 & (t / o >> 0) - a;
            return e + i
        }, c.prototype.writeInt8 = function(t, e, i) {
            return t = +t, e |= 0, i || C(this, t, e, 1, 127, -128), c.TYPED_ARRAY_SUPPORT || (t = Math.floor(t)), 0 > t && (t = 255 + t + 1), this[e] = 255 & t, e + 1
        }, c.prototype.writeInt16LE = function(t, e, i) {
            return t = +t, e |= 0, i || C(this, t, e, 2, 32767, -32768), c.TYPED_ARRAY_SUPPORT ? (this[e] = 255 & t, this[e + 1] = t >>> 8) : I(this, t, e, !0), e + 2
        }, c.prototype.writeInt16BE = function(t, e, i) {
            return t = +t, e |= 0, i || C(this, t, e, 2, 32767, -32768), c.TYPED_ARRAY_SUPPORT ? (this[e] = t >>> 8, this[e + 1] = 255 & t) : I(this, t, e, !1), e + 2
        }, c.prototype.writeInt32LE = function(t, e, i) {
            return t = +t, e |= 0, i || C(this, t, e, 4, 2147483647, -2147483648), c.TYPED_ARRAY_SUPPORT ? (this[e] = 255 & t, this[e + 1] = t >>> 8, this[e + 2] = t >>> 16, this[e + 3] = t >>> 24) : O(this, t, e, !0), e + 4
        }, c.prototype.writeInt32BE = function(t, e, i) {
            return t = +t, e |= 0, i || C(this, t, e, 4, 2147483647, -2147483648), 0 > t && (t = 4294967295 + t + 1), c.TYPED_ARRAY_SUPPORT ? (this[e] = t >>> 24, this[e + 1] = t >>> 16, this[e + 2] = t >>> 8, this[e + 3] = 255 & t) : O(this, t, e, !1), e + 4
        }, c.prototype.writeFloatLE = function(t, e, i) {
            return B(this, t, e, !0, i)
        }, c.prototype.writeFloatBE = function(t, e, i) {
            return B(this, t, e, !1, i)
        }, c.prototype.writeDoubleLE = function(t, e, i) {
            return z(this, t, e, !0, i)
        }, c.prototype.writeDoubleBE = function(t, e, i) {
            return z(this, t, e, !1, i)
        }, c.prototype.copy = function(t, e, i, n) {
            if (i || (i = 0), n || 0 === n || (n = this.length), e >= t.length && (e = t.length), e || (e = 0), 0 < n && n < i && (n = i), n === i) return 0;
            if (0 === t.length || 0 === this.length) return 0;
            if (0 > e) throw new RangeError("targetStart out of bounds");
            if (0 > i || i >= this.length) throw new RangeError("sourceStart out of bounds");
            if (0 > n) throw new RangeError("sourceEnd out of bounds");
            n > this.length && (n = this.length), t.length - e < n - i && (n = t.length - e + i);
            var r, s = n - i;
            if (this === t && i < e && e < n)
                for (r = s - 1; 0 <= r; --r) t[r + e] = this[r + i];
            else if (1e3 > s || !c.TYPED_ARRAY_SUPPORT)
                for (r = 0; r < s; ++r) t[r + e] = this[r + i];
            else Uint8Array.prototype.set.call(t, this.subarray(i, i + s), e);
            return s
        }, c.prototype.fill = function(t, e, i, n) {
            if ("string" == typeof t) {
                if ("string" == typeof e ? (n = e, e = 0, i = this.length) : "string" == typeof i && (n = i, i = this.length), 1 === t.length) {
                    var r = t.charCodeAt(0);
                    256 > r && (t = r)
                }
                if (void 0 !== n && "string" != typeof n) throw new TypeError("encoding must be a string");
                if ("string" == typeof n && !c.isEncoding(n)) throw new TypeError("Unknown encoding: " + n)
            } else "number" == typeof t && (t &= 255);
            if (0 > e || this.length < e || this.length < i) throw new RangeError("Out of range index");
            if (i <= e) return this;
            var s;
            if (e >>>= 0, i = void 0 === i ? this.length : i >>> 0, t || (t = 0), "number" == typeof t)
                for (s = e; s < i; ++s) this[s] = t;
            else {
                var o = c.isBuffer(t) ? t : F(new c(t, n).toString()),
                    a = o.length;
                for (s = 0; s < i - e; ++s) this[s + e] = o[s % a]
            }
            return this
        };
        var N = /[^+\/0-9A-Za-z-_]/g;

        function U(t) {
            return 16 > t ? "0" + t.toString(16) : t.toString(16)
        }

        function F(t, e) {
            e = e || 1 / 0;
            for (var i, n = t.length, r = null, s = [], o = 0; o < n; ++o) {
                if (55295 < (i = t.charCodeAt(o)) && 57344 > i) {
                    if (!r) {
                        if (56319 < i) {
                            -1 < (e -= 3) && s.push(239, 191, 189);
                            continue
                        }
                        if (o + 1 === n) {
                            -1 < (e -= 3) && s.push(239, 191, 189);
                            continue
                        }
                        r = i;
                        continue
                    }
                    if (56320 > i) {
                        -1 < (e -= 3) && s.push(239, 191, 189), r = i;
                        continue
                    }
                    i = 65536 + (r - 55296 << 10 | i - 56320)
                } else r && -1 < (e -= 3) && s.push(239, 191, 189);
                if (r = null, 128 > i) {
                    if (0 > (e -= 1)) break;
                    s.push(i)
                } else if (2048 > i) {
                    if (0 > (e -= 2)) break;
                    s.push(192 | i >> 6, 128 | 63 & i)
                } else if (65536 > i) {
                    if (0 > (e -= 3)) break;
                    s.push(224 | i >> 12, 128 | 63 & i >> 6, 128 | 63 & i)
                } else {
                    if (!(1114112 > i)) throw new Error("Invalid code point");
                    if (0 > (e -= 4)) break;
                    s.push(240 | i >> 18, 128 | 63 & i >> 12, 128 | 63 & i >> 6, 128 | 63 & i)
                }
            }
            return s
        }

        function H(t) {
            return n.toByteArray(function(t) {
                if (2 > (t = function(t) {
                        return t.trim ? t.trim() : t.replace(/^\s+|\s+$/g, "")
                    }(t).replace(N, "")).length) return "";
                for (; 0 != t.length % 4;) t += "=";
                return t
            }(t))
        }

        function j(t, e, i, n) {
            for (var r = 0; r < n && !(r + i >= e.length || r >= t.length); ++r) e[r + i] = t[r];
            return r
        }
    }).call(this, i(25))
}, function(t, e) {
    for (var i = e.uint8 = Array(256), n = 0; 255 >= n; n++) i[n] = r(n);

    function r(t) {
        return function(e) {
            var i = e.reserve(1);
            e.buffer[i] = t
        }
    }
}, function(t, e, i) {
    e.FlexDecoder = a, e.FlexEncoder = c;
    var n = i(0),
        r = 2048,
        s = 65536,
        o = "BUFFER_SHORTAGE";

    function a() {
        if (!(this instanceof a)) return new a
    }

    function c() {
        if (!(this instanceof c)) return new c
    }

    function l() {
        throw new Error("method not implemented: write()")
    }

    function p() {
        throw new Error("method not implemented: fetch()")
    }

    function h() {
        return this.buffers && this.buffers.length ? (this.flush(), this.pull()) : this.fetch()
    }

    function u(t) {
        (this.buffers || (this.buffers = [])).push(t)
    }

    function d() {
        return (this.buffers || (this.buffers = [])).shift()
    }

    function f(t) {
        return function(e) {
            for (var i in t) e[i] = t[i];
            return e
        }
    }
    a.mixin = f({
        bufferish: n,
        write: function(t) {
            var e = this.offset ? n.prototype.slice.call(this.buffer, this.offset) : this.buffer;
            this.buffer = e ? t ? this.bufferish.concat([e, t]) : e : t, this.offset = 0
        },
        fetch: p,
        flush: function() {
            for (; this.offset < this.buffer.length;) {
                var t, e = this.offset;
                try {
                    t = this.fetch()
                } catch (t) {
                    if (t && t.message != o) throw t;
                    this.offset = e;
                    break
                }
                this.push(t)
            }
        },
        push: u,
        pull: d,
        read: h,
        reserve: function(t) {
            var e = this.offset,
                i = e + t;
            if (i > this.buffer.length) throw new Error(o);
            return this.offset = i, e
        },
        offset: 0
    }), a.mixin(a.prototype), c.mixin = f({
        bufferish: n,
        write: l,
        fetch: function() {
            var t = this.start;
            if (t < this.offset) {
                var e = this.start = this.offset;
                return n.prototype.slice.call(this.buffer, t, e)
            }
        },
        flush: function() {
            for (; this.start < this.offset;) {
                var t = this.fetch();
                t && this.push(t)
            }
        },
        push: u,
        pull: function() {
            var t = this.buffers || (this.buffers = []),
                e = 1 < t.length ? this.bufferish.concat(t) : t[0];
            return t.length = 0, e
        },
        read: h,
        reserve: function(t) {
            var e = 0 | t;
            if (this.buffer) {
                var i = this.buffer.length,
                    n = 0 | this.offset,
                    r = n + e;
                if (r < i) return this.offset = r, n;
                this.flush(), t = Math.max(t, Math.min(2 * i, this.maxBufferSize))
            }
            return t = Math.max(t, this.minBufferSize), this.buffer = this.bufferish.alloc(t), this.start = 0, this.offset = e, 0
        },
        send: function(t) {
            var e = t.length;
            if (e > this.minBufferSize) this.flush(), this.push(t);
            else {
                var i = this.reserve(e);
                n.prototype.copy.call(t, this.buffer, i)
            }
        },
        maxBufferSize: s,
        minBufferSize: r,
        offset: 0,
        start: 0
    }), c.mixin(c.prototype)
}, function(t, e, i) {
    e.decode = function(t, e) {
        var i = new n(e);
        return i.write(t), i.read()
    };
    var n = i(19).DecodeBuffer
}, function(t, e, i) {
    e.DecodeBuffer = r;
    var n = i(11).preset;

    function r(t) {
        if (!(this instanceof r)) return new r(t);
        if (t && (this.options = t, t.codec)) {
            var e = this.codec = t.codec;
            e.bufferish && (this.bufferish = e.bufferish)
        }
    }
    i(17).FlexDecoder.mixin(r.prototype), r.prototype.codec = n, r.prototype.fetch = function() {
        return this.codec.decode(this)
    }
}, function(t, e, i) {
    var n = i(8),
        r = i(10),
        s = r.Uint64BE,
        o = r.Int64BE;
    e.getReadFormat = function(t) {
        var e = a.hasArrayBuffer && t && t.binarraybuffer,
            i = t && t.int64;
        return {
            map: l && t && t.usemap ? u : h,
            array: d,
            str: f,
            bin: e ? g : m,
            ext: v,
            uint8: y,
            uint16: w,
            uint32: M,
            uint64: _(8, i ? A : T),
            int8: x,
            int16: b,
            int32: S,
            int64: _(8, i ? L : E),
            float32: _(4, k),
            float64: _(8, R)
        }
    }, e.readUint8 = y;
    var a = i(0),
        c = i(9),
        l = "undefined" != typeof Map,
        p = !0;

    function h(t, e) {
        var i, n = {},
            r = Array(e),
            s = Array(e),
            o = t.codec.decode;
        for (i = 0; i < e; i++) r[i] = o(t), s[i] = o(t);
        for (i = 0; i < e; i++) n[r[i]] = s[i];
        return n
    }

    function u(t, e) {
        var i, n = new Map,
            r = Array(e),
            s = Array(e),
            o = t.codec.decode;
        for (i = 0; i < e; i++) r[i] = o(t), s[i] = o(t);
        for (i = 0; i < e; i++) n.set(r[i], s[i]);
        return n
    }

    function d(t, e) {
        for (var i = Array(e), n = t.codec.decode, r = 0; r < e; r++) i[r] = n(t);
        return i
    }

    function f(t, e) {
        var i = t.reserve(e);
        return c.toString.call(t.buffer, "utf-8", i, i + e)
    }

    function m(t, e) {
        var i = t.reserve(e),
            n = c.slice.call(t.buffer, i, i + e);
        return a.from(n)
    }

    function g(t, e) {
        var i = t.reserve(e),
            n = c.slice.call(t.buffer, i, i + e);
        return a.Uint8Array.from(n).buffer
    }

    function v(t, e) {
        var i = t.reserve(e + 1),
            n = t.buffer[i++],
            r = i + e,
            s = t.codec.getExtUnpacker(n);
        if (!s) throw new Error("Invalid ext type: " + (n ? "0x" + n.toString(16) : n));
        return s(c.slice.call(t.buffer, i, r))
    }

    function y(t) {
        var e = t.reserve(1);
        return t.buffer[e]
    }

    function x(t) {
        var e = t.reserve(1),
            i = t.buffer[e];
        return 128 & i ? i - 256 : i
    }

    function w(t) {
        var e = t.reserve(2),
            i = t.buffer;
        return i[e++] << 8 | i[e]
    }

    function b(t) {
        var e = t.reserve(2),
            i = t.buffer,
            n = i[e++] << 8 | i[e];
        return 32768 & n ? n - 65536 : n
    }

    function M(t) {
        var e = t.reserve(4),
            i = t.buffer;
        return 16777216 * i[e++] + (i[e++] << 16) + (i[e++] << 8) + i[e]
    }

    function S(t) {
        var e = t.reserve(4),
            i = t.buffer;
        return i[e++] << 24 | i[e++] << 16 | i[e++] << 8 | i[e]
    }

    function _(t, e) {
        return function(i) {
            var n = i.reserve(t);
            return e.call(i.buffer, n, p)
        }
    }

    function T(t) {
        return new s(this, t).toNumber()
    }

    function E(t) {
        return new o(this, t).toNumber()
    }

    function A(t) {
        return new s(this, t)
    }

    function L(t) {
        return new o(this, t)
    }

    function k(t) {
        return n.read(this, t, !1, 23, 4)
    }

    function R(t) {
        return n.read(this, t, !1, 52, 8)
    }
}, function(t, e, i) {
    ! function(e) {
        function i(t) {
            for (var e in s) t[e] = s[e];
            return t
        }

        function n(t, e) {
            var i, s = this;
            if (arguments.length) {
                if (e) {
                    if (i = r(s, t, !0)) {
                        if (!(i = i.filter(function(t) {
                                return t !== e && t.originalListener !== e
                            })).length) return n.call(s, t);
                        s.listeners[t] = i
                    }
                } else if ((i = s.listeners) && (delete i[t], !Object.keys(i).length)) return n.call(s)
            } else delete s.listeners;
            return s
        }

        function r(t, e, i) {
            if (!i || t.listeners) {
                var n = t.listeners || (t.listeners = {});
                return n[e] || (n[e] = [])
            }
        }
        t.exports = e;
        var s = {
            on: function(t, e) {
                return r(this, t).push(e), this
            },
            once: function(t, e) {
                function i() {
                    n.call(s, t, i), e.apply(this, arguments)
                }
                var s = this;
                return i.originalListener = e, r(s, t).push(i), s
            },
            off: n,
            emit: function(t, e) {
                var i = this,
                    n = r(i, t, !0);
                if (!n) return !1;
                var s = arguments.length;
                if (1 === s) n.forEach(function(t) {
                    t.call(i)
                });
                else if (2 === s) n.forEach(function(t) {
                    t.call(i, e)
                });
                else {
                    var o = Array.prototype.slice.call(arguments, 1);
                    n.forEach(function(t) {
                        t.apply(i, o)
                    })
                }
                return !!n.length
            }
        };
        i(e.prototype), e.mixin = i
    }(
        /**
         * event-lite.js - Light-weight EventEmitter (less than 1KB when gzipped)
         *
         * @copyright Yusuke Kawasaki
         * @license MIT
         * @constructor
         * @see https://github.com/kawanet/event-lite
         * @see http://kawanet.github.io/event-lite/EventLite.html
         * @example
         * var EventLite = require("event-lite");
         *
         * function MyClass() {...}             // your class
         *
         * EventLite.mixin(MyClass.prototype);  // import event methods
         *
         * var obj = new MyClass();
         * obj.on("foo", function() {...});     // add event listener
         * obj.once("bar", function() {...});   // add one-time event listener
         * obj.emit("foo");                     // dispatch event
         * obj.emit("bar");                     // dispatch another event
         * obj.off("foo");                      // remove event listener
         */
        function t() {
            if (!(this instanceof t)) return new t
        })
}, function(t, e, i) {
    var n = i(1);
    const r = i(2);
    i(3);
    var s = {};
    t.exports.getColor = function(t, e) {
        var i = t + "-" + (e || ""),
            r = s[i];
        return r || (r = new n.Color(t), e && r.multiplyScalar(e), s[i] = r), r
    }, t.exports.colorize = function(e, i, n) {
        i = n || t.exports.getColor(i);
        for (var r = 0; r < e.faces.length; ++r) e.faces[r].vertexColors[0] = i, e.faces[r].vertexColors[1] = i, e.faces[r].vertexColors[2] = i
    };
    var o, a = function(t, e, i, r) {
            for (var s, o = new n.Vector2(e, i).multiplyScalar(r || 1), a = 0; a < t.faceVertexUvs.length; a++) {
                s = t.faceVertexUvs[a];
                for (var c = 0; c < s.length; c++)
                    for (var l, p = 0; 3 > p; p++)(l = s[c][p].multiply(o)).x = .5 + l.x - o.x / 2
            }
        },
        c = function(t, e, i, n, r, s) {
            return t >= i - r && t <= i + r && e >= n - s && e <= n + s
        },
        l = [],
        p = ["a", "b", "c", "d"];
    t.exports.generatePlane = function(e, i, s, h, u, d) {
        e *= s.ratio || 1;
        var f = (s.scale ? e + "_" + i + "_" : "") + (s.scale || "") + (s.tilesX || "") + (s.tilesZ || "") + (s.noise ? h + "_" + u + "_" + d : "") + (null == s.colr ? "" : s.colr);
        if (!(o = l[f])) {
            if (o = new n.PlaneGeometry(1, 1, s.tilesX || 1, s.tilesZ || 1), s.noise) {
                for (var m = {}, g = s.margin || 0, v = 0; v < o.vertices.length; ++v) {
                    var y = o.vertices[v].x,
                        x = o.vertices[v].y;
                    if (!s.pinEdges || -.5 != y && .5 != y && -.5 != x && .5 != x)
                        if (s.objects) {
                            for (var w = 0; w < s.objects.length; ++w)
                                if (s.objects[w].y - s.objects[w].height <= u + .1 && s.objects[w].y + s.objects[w].height > u + s.noise && c(d + -x * e * 2, h + y * i * 2, s.objects[w].z, s.objects[w].x, s.objects[w].length + g, s.objects[w].width + g)) {
                                    o.vertices[v].z = Math.random() * s.noise + 1, m[v] = t.exports.getColor(s.colr, .65);
                                    break
                                }
                        } else o.vertices[v].z = Math.random() * s.noise;
                    m[v] || (m[v] = t.exports.getColor(s.colr))
                }
                for (v = 0; v < o.faces.length; v++) {
                    for (var b = o.faces[v], M = 0, S = 0; 3 > S; S++) b.vertexColors[S] = m[b[p[S]]], 0 >= o.vertices[b[p[S]]].z && M++;
                    3 <= M && delete o.faces[v]
                }
                o.faces = o.faces.filter(function(t) {
                    return t
                }), o.elementsNeedUpdate = !0
            } else s.colr && t.exports.colorize(o, s.colr);
            s.scale && a(o, i / r.worldUV, e / r.worldUV, s.scale), o.computeVertexNormals(), l[f] = o
        }
        return o
    };
    var h = [];
    t.exports.generateCube = function(e, i, s, c, l) {
        e = e || [1, 1, 1, 1, 1, 1], l.flipp = (i > s || c > s) && "floor_0" == l.src, l.flippW = i > c && "floor_0" == l.src;
        for (var p = (l.scale ? i + "_" + s + "_" + c + "_" : "") + (null == l.colr ? "" : l.colr) + (l.scale || "") + (l.flippW ? "flw" : "fnw") + (l.flipp ? "fl" : "fn") + (l.amb || "") + (l.useScale || ""), u = 0; u < e.length; ++u) p += "_" + e[u];
        if (!(o = h[p])) {
            l.colr = null == l.colr ? 16777215 : l.colr;
            var d = t.exports.getColor(l.colr),
                f = d;
            o = new n.Geometry;
            var m, g = [];
            e[0] && ((m = new n.PlaneGeometry(1, 1)).rotateY(Math.PI / 2), l.flipp && m.rotateX(Math.PI / 2), m.translate(.5, .5, 0), m.faces[0].vertexColors = [d, f, d], m.faces[1].vertexColors = [f, f, d], l.scale && a(m, (l.flipp ? s : c) / r.worldUV, (l.flipp ? c : s) / r.worldUV, l.scale), g.push(m)), e[1] && ((m = new n.PlaneGeometry(1, 1)).rotateY(-Math.PI / 2), l.flipp && m.rotateX(Math.PI / 2), m.translate(-.5, .5, 0), m.faces[0].vertexColors = [d, f, d], m.faces[1].vertexColors = [f, f, d], l.scale && a(m, (l.flipp ? s : c) / r.worldUV, (l.flipp ? c : s) / r.worldUV, l.scale), g.push(m)), e[2] && ((m = new n.PlaneGeometry(1, 1)).rotateX(-Math.PI / 2), l.flippW && m.rotateY(Math.PI / 2), m.translate(0, 1, 0), m.faces[0].vertexColors = [d, d, d], m.faces[1].vertexColors = [d, d, d], l.scale && a(m, (l.flippW ? c : i) / r.worldUV, (l.flippW ? i : c) / r.worldUV, l.scale), g.push(m)), e[3] && ((m = new n.PlaneGeometry(1, 1)).rotateX(Math.PI / 2), l.flippW && m.rotateY(Math.PI / 2), m.translate(0, 0, 0), m.faces[0].vertexColors = [f, f, f], m.faces[1].vertexColors = [f, f, f], l.scale && a(m, (l.flippW ? c : i) / r.worldUV, (l.flippW ? i : c) / r.worldUV, l.scale), g.push(m)), e[4] && (m = new n.PlaneGeometry(1, 1), l.flipp && m.rotateZ(Math.PI / 2), m.translate(0, .5, .5), m.faces[0].vertexColors = [d, f, d], m.faces[1].vertexColors = [f, f, d], l.scale && a(m, (l.flipp ? s : i) / r.worldUV, (l.flipp ? i : s) / r.worldUV, l.scale), g.push(m)), e[5] && ((m = new n.PlaneGeometry(1, 1)).rotateY(Math.PI), l.flipp && m.rotateZ(Math.PI / 2), m.translate(0, .5, -.5), m.faces[0].vertexColors = [d, f, d], m.faces[1].vertexColors = [f, f, d], l.scale && a(m, (l.flipp ? s : i) / r.worldUV, (l.flipp ? i : s) / r.worldUV, l.scale), g.push(m));
            for (u = 0; u < g.length; u++) o.merge(g[u], new n.Matrix4);
            l && l.useScale && (o.scale(i, s, c), o.translate(0, -s / 2, 0)), h[p] = o
        }
        return o
    }
}, function(t, e, i) {
    var n = i(70),
        r = i(81),
        s = Object.prototype.toString;

    function o(t) {
        return "[object Array]" === s.call(t)
    }

    function a(t) {
        return null !== t && "object" == typeof t
    }

    function c(t) {
        return "[object Function]" === s.call(t)
    }

    function l(t, e) {
        if (null != t)
            if ("object" != typeof t && (t = [t]), o(t))
                for (var i = 0, n = t.length; i < n; i++) e.call(null, t[i], i, t);
            else
                for (var r in t) Object.prototype.hasOwnProperty.call(t, r) && e.call(null, t[r], r, t)
    }
    t.exports = {
        isArray: o,
        isArrayBuffer: function(t) {
            return "[object ArrayBuffer]" === s.call(t)
        },
        isBuffer: r,
        isFormData: function(t) {
            return "undefined" != typeof FormData && t instanceof FormData
        },
        isArrayBufferView: function(t) {
            return "undefined" != typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(t) : t && t.buffer && t.buffer instanceof ArrayBuffer
        },
        isString: function(t) {
            return "string" == typeof t
        },
        isNumber: function(t) {
            return "number" == typeof t
        },
        isObject: a,
        isUndefined: function(t) {
            return void 0 === t
        },
        isDate: function(t) {
            return "[object Date]" === s.call(t)
        },
        isFile: function(t) {
            return "[object File]" === s.call(t)
        },
        isBlob: function(t) {
            return "[object Blob]" === s.call(t)
        },
        isFunction: c,
        isStream: function(t) {
            return a(t) && c(t.pipe)
        },
        isURLSearchParams: function(t) {
            return "undefined" != typeof URLSearchParams && t instanceof URLSearchParams
        },
        isStandardBrowserEnv: function() {
            return ("undefined" == typeof navigator || "ReactNative" !== navigator.product) && "undefined" != typeof window && "undefined" != typeof document
        },
        forEach: l,
        merge: function t() {
            function e(e, n) {
                i[n] = "object" == typeof i[n] && "object" == typeof e ? t(i[n], e) : e
            }
            for (var i = {}, n = 0, r = arguments.length; n < r; n++) l(arguments[n], e);
            return i
        },
        extend: function(t, e, i) {
            return l(e, function(e, r) {
                t[r] = i && "function" == typeof e ? n(e, i) : e
            }), t
        },
        trim: function(t) {
            return t.replace(/^\s*/, "").replace(/\s*$/, "")
        }
    }
}, function(t, e, i) {
    let n = i(1);
    const r = i(2),
        s = i(22),
        o = i(3);
    let a = new n.TextureLoader;

    function c(t, e, i, r, s = 0) {
        return new Promise(o => {
            (new n.OBJLoader).load(e, e => {
                let c;
                i && (c = a.load(i, t => {
                    t.wrapS = n.RepeatWrapping, t.wrapT = n.RepeatWrapping, t.repeat.set(1, 1), t.minFilter = n.NearestFilter, t.magFilter = n.NearestFilter, t.needsUpdate = !0
                }));
                let l = new n.MeshLambertMaterial({
                        map: c
                    }),
                    p = new n.Geometry;
                e.traverse(t => {
                    t instanceof n.Mesh && (t.geometry.isBufferGeometry ? (p.fromBufferGeometry(t.geometry), p.computeFlatVertexNormals(), t.geometry.fromGeometry(p)) : t.geometry.computeFlatVertexNormals(), t.material = l)
                }), e.scale.setScalar(r || 1), e.position.y += s, t.add(e), o()
            })
        })
    }
    new n.BoxBufferGeometry(1, 1, 1);
    new n.PlaneBufferGeometry(1, 1).rotateX(-Math.PI / 2);
    new n.MeshLambertMaterial({
        color: 65280
    }), new n.MeshLambertMaterial({
        color: 5592405
    });

    function l(t, e, i, r) {
        var o = s.generateCube([1, 1, 1, 1, 1, 1], t, e, i, {
            scale: 1,
            amb: r,
            useScale: !0
        });
        return o = (new n.BufferGeometry).fromGeometry(o)
    }
    let p = (t, e, i, r, o, a, c, l, p, h) => {
            (c = c || {}).premultipliedAlpha = !0;
            var u = new n.Mesh(s.generatePlane(a, o, c, e, i, r));
            u.position.set(e, i, r), u.rotateY(l || 0), u.rotateX((p || 0) - Math.PI / 2), u.rotateZ(h || 0), u.scale.set(2 * o, 2 * a, 1), u.updateMatrix(), t.merge(u.geometry, u.matrix)
        },
        h = (t, e, i, r, o, a, c, l, p) => {
            p = p || {};
            var h = new n.Mesh(s.generateCube(l, o, a, c, p));
            return h.position.set(e, i, r), h.rotation.set(p.yR || 0, p.xR || 0, p.zR || 0), h.scale.set(o, a, c), t instanceof n.Geometry ? (h.updateMatrix(), t.merge(h.geometry, h.matrix)) : t.add(h), h
        };
    t.exports.prefabs = {
        CRATE: {
            dontRound: !0,
            gen: t => c(t, "models/crate_0.obj", "textures/crate_0.png", r.crateScale),
            dummy: !1,
            castShadow: !0,
            receiveShadow: !0
        },
        STACK: {
            dontRound: !0,
            gen: t => c(t, "models/stack_0.obj", "textures/stack_0.png", r.crateScale),
            dummy: !1,
            castShadow: !0,
            receiveShadow: !0
        },
        BARREL: {
            dontRound: !0,
            gen: t => c(t, "models/barrel_0.obj", "textures/barrel_0.png", r.barrelScale),
            castShadow: !0,
            receiveShadow: !0
        },
        ACIDBARREL: {
            dontRound: !0,
            emiss: !0,
            gen: t => c(t, "models/acidbarrel_0.obj", "textures/acidbarrel_0.png", r.acidbarrelScale),
            castShadow: !0,
            receiveShadow: !0
        },
        TREE: {
            dontRound: !0,
            complex: !0,
            gen: t => c(t, "models/tree_0.obj", "textures/tree_0.png", r.treeScale),
            castShadow: !0,
            receiveShadow: !0
        },
        CONE: {
            dontRound: !0,
            complex: !0,
            gen: t => c(t, "models/cone_0.obj", "textures/cone_0.png", r.coneScale),
            castShadow: !0,
            receiveShadow: !0
        },
        CONTAINER: {
            dontRound: !0,
            gen: t => c(t, "models/container_0.obj", "textures/container_0.png", r.containerScale),
            castShadow: !0,
            receiveShadow: !0
        },
        CONTAINERR: {
            dontRound: !0,
            gen: t => c(t, "models/containerr_0.obj", "textures/containerr_0.png", r.containerScale),
            castShadow: !0,
            receiveShadow: !0
        },
        DOOR: {
            dontRound: !0,
            gen: t => c(t, "models/door_0.obj", "textures/door_0.png", r.doorScale),
            castShadow: !0,
            receiveShadow: !0
        },
        WINDOW: {
            dontRound: !0,
            gen: t => c(t, "models/window_0.obj", "textures/window_0.png", r.windowScale),
            castShadow: !0,
            transparent: !0,
            receiveShadow: !0
        },
        GRASS: {
            complex: !0,
            doubleSide: !0,
            transparent: !0,
            gen: t => c(t, "models/grass_0.obj", "textures/grass_0.png", r.grassScale),
            receiveShadow: !0
        },
        VEHICLE: {
            dontRound: !0,
            complex: !0,
            emiss: !0,
            gen: t => c(t, "models/vehicle_0.obj", "textures/vehicle_0.png", r.vehicleScale),
            castShadow: !0,
            receiveShadow: !0
        },
        LADDER: {
            defaultSize: [2, 10, 4],
            scalable: !0,
            scaleWithSize: !1,
            editColor: !0,
            hideBoundingBox: !1,
            texturable: !0,
            genGeo: async t => (function(t, e, i, s) {
                var a = new n.Geometry;
                s = s * Math.PI / 2;
                let c = {
                    x: 0 + r.ladderScale * Math.cos(s),
                    z: 0 + r.ladderScale * Math.sin(s),
                    y: 0 - e / 2
                };
                h(a, c.x + r.ladderWidth * Math.sin(s), c.y, c.z + r.ladderWidth * Math.cos(s), 2 * r.ladderScale, e + 2, 2 * r.ladderScale, [1, 1, 1, 1, 1, 1], {
                    scale: .02
                }), h(a, c.x - r.ladderWidth * Math.sin(s), c.y, c.z - r.ladderWidth * Math.cos(s), 2 * r.ladderScale, e + 2, 2 * r.ladderScale, [1, 1, 1, 1, 1, 1], {
                    scale: .02
                });
                for (var l = Math.floor(e / 6), u = 0; u < l; ++u) p(a, c.x, c.y + 6 * (u + 1) + o.randFloat(-1, 1), c.z, r.ladderWidth, r.ladderScale, {
                    scale: .02
                }, -s + Math.PI / 2, Math.PI / 2, o.randFloat(-.1, .1));
                return a
            })(...t.size, t.direction),
            customDirection: !0,
            stepSrc: "a",
            dummy: !1,
            castShadow: !0,
            receiveShadow: !0
        },
        CUBE: {
            defaultSize: [10, 10, 10],
            hasHealth: !0,
            scalable: !0,
            editAmb: !0,
            scaleWithSize: !1,
            editColor: !0,
            editEmissive: !0,
            editOpac: !0,
            hideBoundingBox: !1,
            editPen: !0,
            texturable: !0,
            genGeo: async (t, e) => l(...t.size, e),
            stepSrc: "a",
            dummy: !1,
            castShadow: !0,
            receiveShadow: !0
        },
        RAMP: {
            defaultSize: [10, 5, 10],
            scalable: !0,
            scaleWithSize: !1,
            hideBoundingBox: !1,
            boostable: !0,
            editColor: !0,
            texturable: !0,
            genGeo: async t => (function(t, e, i, r, o, a, c) {
                var l = new n.Geometry;
                e = 0 - o / 2;
                var p = 0 != (c = c * Math.PI / 2) && c != Math.PI;
                return ((t, e, i, r, o, a, c, p, h) => {
                    p = p || {};
                    var u = new n.Mesh(s.generatePlane(2 * a, r, p));
                    u.position.set(t, e + o / 2, i), a *= 2;
                    var d = Math.sqrt(o * o + a * a);
                    u.scale.set(r, d, 2), u.rotateY(-Math.PI / 2 - c), u.rotateX(Math.asin(o / d) - Math.PI / 2), u.rotateZ(h || 0), u.updateMatrix(), l.merge(u.geometry, u.matrix)
                })(t, e, i, p ? r : a, o, (p ? a : r) / 2, c, {
                    scale: 1
                }), l
            })(0, 0, 0, ...t.size, t.direction),
            shootable: !0,
            customDirection: !0,
            stepSrc: "a",
            dummy: !1,
            castShadow: !0,
            receiveShadow: !0,
            doubleSide: !0
        },
        PLANE: {
            defaultSize: [4, .01, 4],
            dontRound: !0,
            scalable: !0,
            canTerrain: !0,
            edgeNoise: !0,
            scaleWithSize: !0,
            editColor: !0,
            editPen: !0,
            editEmissive: !0,
            editOpac: !0,
            hideBoundingBox: !1,
            texturable: !0,
            genGeo: async t => (function(t, e) {
                let i = new n.PlaneGeometry(t, e);
                return i.rotateX(-Math.PI / 2), i
            })(t.size[0], t.size[2]),
            stepSrc: "a",
            dummy: !1,
            castShadow: !0,
            receiveShadow: !0,
            doubleSide: !0
        },
        OBJECTIVE: {
            defaultSize: [50, 50, 50],
            scalable: !0,
            noTexture: !0,
            opacity: .2,
            lineCol: 13107455,
            tool: !0,
            genGeo: async (t, e) => l(...t.size, e),
            stepSrc: "a"
        },
        PARTICLES: {
            defaultSize: [20, 20, 20],
            hasParticles: !0,
            scalable: !0,
            noTexture: !0,
            opacity: .3,
            lineCol: 3080191,
            tool: !0,
            genGeo: async (t, e) => l(...t.size, e),
            stepSrc: "a"
        },
        BILLBOARD: {
            defaultSize: [40, .01, 10],
            lineCol: 16776960,
            dontRound: !0,
            scalable: !0,
            canTerrain: !0,
            scaleWithSize: !0,
            hideBoundingBox: !1,
            genGeo: async t => (function(t, e, i, r, s, o) {
                var a = new n.Geometry;
                return p(a, t, e, i, r / 2, o / 2), a
            })(0, 0, 0, ...t.size),
            stepSrc: "a",
            dummy: !1,
            castShadow: !0,
            receiveShadow: !0,
            doubleSide: !0
        },
        SCORE_ZONE: {
            customScore: !0,
            defaultSize: [10, 10, 10],
            scalable: !0,
            noTexture: !0,
            opacity: .3,
            lineCol: 16776960,
            tool: !0,
            genGeo: async (t, e) => l(...t.size, e),
            stepSrc: "a"
        },
        DEATH_ZONE: {
            defaultSize: [10, 10, 10],
            scalable: !0,
            noTexture: !0,
            opacity: .3,
            lineCol: 16711680,
            tool: !0,
            genGeo: async (t, e) => l(...t.size, e),
            stepSrc: "a"
        },
        SPAWN_POINT: {
            scalable: !1,
            alwaysSee: !0,
            tool: !0,
            scaleWithSize: !1,
            teamable: !0,
            hideBoundingBox: !0,
            stepSrc: "a",
            dontRound: !0,
            gen: t => c(t, "models/spawn_0.obj", "textures/spawn_0.png", 1.1),
            dummy: !1,
            castShadow: !1,
            receiveShadow: !1
        },
        CHECK_POINT: {
            defaultSize: [10, 10, 10],
            scalable: !0,
            noTexture: !0,
            opacity: .3,
            lineCol: 252613,
            tool: !0,
            genGeo: async (t, e) => l(...t.size, e),
            stepSrc: "a"
        },
        CAMERA_POSITION: {
            defaultSize: [2, 2, 2],
            scalable: !1,
            alwaysSee: !0,
            tool: !0,
            scaleWithSize: !1,
            hideBoundingBox: !0,
            editorGen: t => (function(t, e, i) {
                let r = (new n.TextureLoader).load(e);
                r.magFilter = n.NearestFilter;
                let s = new n.SpriteMaterial({
                        map: r,
                        color: 16777215
                    }),
                    o = new n.Sprite(s);
                i && o.scale.set(i, i, 1), t.add(o)
            })(t, "img/crosshair.png", 5),
            stepSrc: "a",
            dummy: !1,
            castShadow: !1,
            receiveShadow: !1
        },
        FLAG: {
            defaultSize: [r.flagZoneS, r.flagZoneH, r.flagZoneS],
            scalable: !1,
            tool: !0,
            scaleWithSize: !1,
            lineCol: 13107455,
            teamable: !0,
            noDefault: !0,
            genGeo: async (t, e) => (function(t, e) {
                c(t, "models/crystal_0.obj", "textures/crystal_0.png", r.flagScale, r.flagOff / 2);
                var i = s.generateCube([1, 1, 0, 0, 1, 1], ...t.size, {
                    scale: 1,
                    amb: e,
                    useScale: !0,
                    transparent: !0,
                    depthWrite: !1,
                    side: 2
                });
                return i = (new n.BufferGeometry).fromGeometry(i)
            })(t, e),
            stepSrc: "a",
            dummy: !1,
            castShadow: !1,
            receiveShadow: !1
        },
        WATER: {
            movingTexture: !0,
            defaultSize: [10, 10, 10],
            scalable: !0,
            forceCollision: !0,
            editAmb: !0,
            scaleWithSize: !1,
            editColor: !0,
            editEmissive: !0,
            editOpac: !0,
            hideBoundingBox: !1,
            genGeo: async (t, e) => l(...t.size, e),
            stepSrc: "a",
            dummy: !1,
            castShadow: !0,
            receiveShadow: !0
        },
        PLACEHOLDER: {
            defaultSize: [10, 10, 10],
            scalable: !0,
            noTexture: !0,
            noExport: !0,
            tool: !0,
            opacity: .1,
            lineCol: 0,
            genGeo: async (t, e) => l(...t.size, e),
            stepSrc: "a"
        }
    }, t.exports.texturePrefabs = {
        WALL: {
            src: "wall_0",
            filter: n.NearestFilter
        },
        DIRT: {
            src: "dirt_0",
            filter: n.NearestFilter
        },
        FLOOR: {
            src: "floor_0",
            filter: n.NearestFilter
        },
        GRID: {
            src: "grid_0",
            filter: n.NearestFilter
        },
        GREY: {
            src: "grey_0",
            filter: n.NearestFilter
        },
        DEFAULT: {
            src: "default",
            filter: n.NearestFilter
        },
        ROOF: {
            src: "roof_0",
            filter: n.NearestFilter
        },
        FLAG: {
            src: "flag_0",
            filter: n.NearestFilter
        },
        CHECK: {
            src: "check_0",
            filter: n.NearestFilter
        },
        GRASS: {
            src: "grass_1",
            filter: n.NearestFilter
        },
        LINES: {
            src: "lines_0",
            filter: n.NearestFilter
        },
        BRICK: {
            src: "brick_0",
            filter: n.NearestFilter
        }
    };
    let u = t => ({
        src: t,
        filter: n.NearestFilter
    });
    t.exports.loadTexturePrefab = function(e, i = null) {
        let r = "BILLBOARD" == i.objType ? u("pubs/bill_" + o.randInt(1, 4)) : t.exports.texturePrefabs[e];
        return "default" == (r = "FLAG" == i.objType ? u("zone_r") : r).src ? void 0 : a.load("/textures/" + r.src + ".png", t => {
            t.wrapS = n.RepeatWrapping, t.wrapT = n.RepeatWrapping, t.minFilter = r.filter, t.magFilter = r.filter, t.needsUpdate = !0
        })
    }
}, function(t, e) {
    var i = function() {
        return this
    }();
    try {
        i = i || new Function("return this")()
    } catch (t) {
        "object" == typeof window && (i = window)
    }
    t.exports = i
}, function(t, e, i) {
    e.encode = i(13).encode, e.decode = i(18).decode, e.Encoder = i(38).Encoder, e.Decoder = i(39).Decoder, e.createCodec = i(40).createCodec, e.codec = i(41).codec
}, function(t, e, i) {
    (function(e) {
        function i(t) {
            return t && t.isBuffer && t
        }
        t.exports = i(void 0 !== e && e) || i(this.Buffer) || i("undefined" != typeof window && window.Buffer) || this.Buffer
    }).call(this, i(15).Buffer)
}, function(t, e, i) {
    e.byteLength = function(t) {
        var e = l(t),
            i = e[0],
            n = e[1];
        return 3 * (i + n) / 4 - n
    }, e.toByteArray = function(t) {
        for (var e, i = l(t), n = i[0], o = i[1], a = new s(function(t, e, i) {
                return 3 * (e + i) / 4 - i
            }(0, n, o)), c = 0, p = 0 < o ? n - 4 : n, h = 0; h < p; h += 4) e = r[t.charCodeAt(h)] << 18 | r[t.charCodeAt(h + 1)] << 12 | r[t.charCodeAt(h + 2)] << 6 | r[t.charCodeAt(h + 3)], a[c++] = 255 & e >> 16, a[c++] = 255 & e >> 8, a[c++] = 255 & e;
        return 2 === o && (e = r[t.charCodeAt(h)] << 2 | r[t.charCodeAt(h + 1)] >> 4, a[c++] = 255 & e), 1 === o && (e = r[t.charCodeAt(h)] << 10 | r[t.charCodeAt(h + 1)] << 4 | r[t.charCodeAt(h + 2)] >> 2, a[c++] = 255 & e >> 8, a[c++] = 255 & e), a
    }, e.fromByteArray = function(t) {
        for (var e, i = t.length, r = i % 3, s = [], o = 16383, a = 0, c = i - r; a < c; a += o) s.push(h(t, a, a + o > c ? c : a + o));
        return 1 === r ? (e = t[i - 1], s.push(n[e >> 2] + n[63 & e << 4] + "==")) : 2 === r && (e = (t[i - 2] << 8) + t[i - 1], s.push(n[e >> 10] + n[63 & e >> 4] + n[63 & e << 2] + "=")), s.join("")
    };
    for (var n = [], r = [], s = "undefined" == typeof Uint8Array ? Array : Uint8Array, o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", a = 0, c = o.length; a < c; ++a) n[a] = o[a], r[o.charCodeAt(a)] = a;

    function l(t) {
        var e = t.length;
        if (0 < e % 4) throw new Error("Invalid string. Length must be a multiple of 4");
        var i = t.indexOf("=");
        return -1 === i && (i = e), [i, i === e ? 0 : 4 - i % 4]
    }

    function p(t) {
        return n[63 & t >> 18] + n[63 & t >> 12] + n[63 & t >> 6] + n[63 & t]
    }

    function h(t, e, i) {
        for (var n, r = [], s = e; s < i; s += 3) n = (16711680 & t[s] << 16) + (65280 & t[s + 1] << 8) + (255 & t[s + 2]), r.push(p(n));
        return r.join("")
    }
    r[45] = 62, r[95] = 63
}, function(t, e, i) {
    var n = i(0);

    function r(t) {
        return Array(t)
    }(e = t.exports = r(0)).alloc = r, e.concat = n.concat, e.from = function(t) {
        if (!n.isBuffer(t) && n.isView(t)) t = n.Uint8Array.from(t);
        else if (n.isArrayBuffer(t)) t = new Uint8Array(t);
        else {
            if ("string" == typeof t) return n.from.call(e, t);
            if ("number" == typeof t) throw new TypeError('"value" argument must not be a number')
        }
        return Array.prototype.slice.call(t)
    }
}, function(t, e, i) {
    var n = i(0),
        r = n.global;

    function s(t) {
        return new r(t)
    }(e = t.exports = n.hasBuffer ? s(0) : []).alloc = n.hasBuffer && r.alloc || s, e.concat = n.concat, e.from = function(t) {
        if (!n.isBuffer(t) && n.isView(t)) t = n.Uint8Array.from(t);
        else if (n.isArrayBuffer(t)) t = new Uint8Array(t);
        else {
            if ("string" == typeof t) return n.from.call(e, t);
            if ("number" == typeof t) throw new TypeError('"value" argument must not be a number')
        }
        return r.from && 1 !== r.from.length ? r.from(t) : new r(t)
    }
}, function(t, e, i) {
    var n = i(0);

    function r(t) {
        return new Uint8Array(t)
    }(e = t.exports = n.hasArrayBuffer ? r(0) : []).alloc = r, e.concat = n.concat, e.from = function(t) {
        if (n.isView(t)) {
            var i = t.byteOffset,
                r = t.byteLength;
            (t = t.buffer).byteLength !== r && (t.slice ? t = t.slice(i, i + r) : (t = new Uint8Array(t)).byteLength !== r && (t = Array.prototype.slice.call(t, i, i + r)))
        } else {
            if ("string" == typeof t) return n.from.call(e, t);
            if ("number" == typeof t) throw new TypeError('"value" argument must not be a number')
        }
        return new Uint8Array(t)
    }
}, function(t, e) {
    e.copy = function(t, e, i, n) {
        var r;
        i || (i = 0), n || 0 === n || (n = this.length), e || (e = 0);
        var s = n - i;
        if (t === this && i < e && e < n)
            for (r = s - 1; 0 <= r; r--) t[r + e] = this[r + i];
        else
            for (r = 0; r < s; r++) t[r + e] = this[r + i];
        return s
    }, e.toString = function(t, e, i) {
        var n = this,
            r = 0 | e;
        i || (i = n.length);
        for (var s = "", o = 0; r < i;) 128 > (o = n[r++]) ? s += String.fromCharCode(o) : (192 == (224 & o) ? o = (31 & o) << 6 | 63 & n[r++] : 224 == (240 & o) ? o = (15 & o) << 12 | (63 & n[r++]) << 6 | 63 & n[r++] : 240 == (248 & o) && (o = (7 & o) << 18 | (63 & n[r++]) << 12 | (63 & n[r++]) << 6 | 63 & n[r++]), 65536 <= o ? (o -= 65536, s += String.fromCharCode(55296 + (o >>> 10), 56320 + (1023 & o))) : s += String.fromCharCode(o));
        return s
    }, e.write = function(t, e) {
        for (var i = this, n = e || (e |= 0), r = t.length, s = 0, o = 0; o < r;) 128 > (s = t.charCodeAt(o++)) ? i[n++] = s : 2048 > s ? (i[n++] = 192 | s >>> 6, i[n++] = 128 | 63 & s) : 55296 > s || 57343 < s ? (i[n++] = 224 | s >>> 12, i[n++] = 128 | 63 & s >>> 6, i[n++] = 128 | 63 & s) : (s = 65536 + (s - 55296 << 10 | t.charCodeAt(o++) - 56320), i[n++] = 240 | s >>> 18, i[n++] = 128 | 63 & s >>> 12, i[n++] = 128 | 63 & s >>> 6, i[n++] = 128 | 63 & s);
        return n - e
    }
}, function(t, e, i) {
    e.setExtPackers = function(t) {
        t.addExtPacker(14, Error, [h, c]), t.addExtPacker(1, EvalError, [h, c]), t.addExtPacker(2, RangeError, [h, c]), t.addExtPacker(3, ReferenceError, [h, c]), t.addExtPacker(4, SyntaxError, [h, c]), t.addExtPacker(5, TypeError, [h, c]), t.addExtPacker(6, URIError, [h, c]), t.addExtPacker(10, RegExp, [p, c]), t.addExtPacker(11, Boolean, [l, c]), t.addExtPacker(12, String, [l, c]), t.addExtPacker(13, Date, [Number, c]), t.addExtPacker(15, Number, [l, c]), "undefined" != typeof Uint8Array && (t.addExtPacker(17, Int8Array, o), t.addExtPacker(18, Uint8Array, o), t.addExtPacker(19, Int16Array, o), t.addExtPacker(20, Uint16Array, o), t.addExtPacker(21, Int32Array, o), t.addExtPacker(22, Uint32Array, o), t.addExtPacker(23, Float32Array, o), "undefined" != typeof Float64Array && t.addExtPacker(24, Float64Array, o), "undefined" != typeof Uint8ClampedArray && t.addExtPacker(25, Uint8ClampedArray, o), t.addExtPacker(26, ArrayBuffer, o), t.addExtPacker(29, DataView, o)), r.hasBuffer && t.addExtPacker(27, s, r.from)
    };
    var n, r = i(0),
        s = r.global,
        o = r.Uint8Array.from,
        a = {
            name: 1,
            message: 1,
            stack: 1,
            columnNumber: 1,
            fileName: 1,
            lineNumber: 1
        };

    function c(t) {
        return n || (n = i(13).encode), n(t)
    }

    function l(t) {
        return t.valueOf()
    }

    function p(t) {
        (t = RegExp.prototype.toString.call(t).split("/")).shift();
        var e = [t.pop()];
        return e.unshift(t.join("/")), e
    }

    function h(t) {
        var e = {};
        for (var i in a) e[i] = t[i];
        return e
    }
}, function(t, e, i) {
    var n = i(4),
        r = i(10),
        s = r.Uint64BE,
        o = r.Int64BE,
        a = i(0),
        c = i(9),
        l = i(35),
        p = i(16).uint8,
        h = i(7).ExtBuffer,
        u = "undefined" != typeof Uint8Array,
        d = "undefined" != typeof Map,
        f = [];
    f[1] = 212, f[2] = 213, f[4] = 214, f[8] = 215, f[16] = 216, e.getWriteType = function(t) {
        function e(t, e) {
            if (null === e) return i(t, e);
            if (x(e)) return w(t, e);
            if (n(e)) return function(t, e) {
                var i = e.length;
                g[16 > i ? 144 + i : 65535 >= i ? 220 : 221](t, i);
                for (var n = t.codec.encode, r = 0; r < i; r++) n(t, e[r])
            }(t, e);
            if (s.isUint64BE(e)) return function(t, e) {
                g[207](t, e.toArray())
            }(t, e);
            if (o.isInt64BE(e)) return function(t, e) {
                g[211](t, e.toArray())
            }(t, e);
            var r = t.codec.getExtPacker(e);
            return r && (e = r(e)), e instanceof h ? function(t, e) {
                var i = e.buffer,
                    n = i.length,
                    r = f[n] || (255 > n ? 199 : 65535 >= n ? 200 : 201);
                g[r](t, n), p[e.type](t), t.send(i)
            }(t, e) : void b(t, e)
        }

        function i(t, e) {
            g[192](t, e)
        }

        function r(t, e) {
            var i = e.length,
                n = 255 > i ? 196 : 65535 >= i ? 197 : 198;
            g[n](t, i), t.send(e)
        }

        function m(t, e) {
            var i = Object.keys(e),
                n = i.length,
                r = 16 > n ? 128 + n : 65535 >= n ? 222 : 223;
            g[r](t, n);
            var s = t.codec.encode;
            i.forEach(function(i) {
                s(t, i), s(t, e[i])
            })
        }
        var g = l.getWriteToken(t),
            v = t && t.useraw,
            y = u && t && t.binarraybuffer,
            x = y ? a.isArrayBuffer : a.isBuffer,
            w = y ? function(t, e) {
                r(t, new Uint8Array(e))
            } : r,
            b = d && t && t.usemap ? function(t, e) {
                if (!(e instanceof Map)) return m(t, e);
                var i = e.size,
                    n = 16 > i ? 128 + i : 65535 >= i ? 222 : 223;
                g[n](t, i);
                var r = t.codec.encode;
                e.forEach(function(e, i) {
                    r(t, i), r(t, e)
                })
            } : m;
        return {
            boolean: function(t, e) {
                var i = e ? 195 : 194;
                g[i](t, e)
            },
            function: i,
            number: function(t, e) {
                var i = 0 | e;
                e === i ? g[-32 <= i && 127 >= i ? 255 & i : 0 <= i ? 255 >= i ? 204 : 65535 >= i ? 205 : 206 : -128 <= i ? 208 : -32768 <= i ? 209 : 210](t, i) : g[203](t, e)
            },
            object: v ? function(t, i) {
                return x(i) ? function(t, e) {
                    var i = e.length;
                    g[32 > i ? 160 + i : 65535 >= i ? 218 : 219](t, i), t.send(e)
                }(t, i) : void e(t, i)
            } : e,
            string: function(t) {
                return function(e, i) {
                    var n = i.length,
                        r = 5 + 3 * n;
                    e.offset = e.reserve(r);
                    var s = e.buffer,
                        o = t(n),
                        a = e.offset + o;
                    n = c.write.call(s, i, a);
                    var l = t(n);
                    if (o !== l) {
                        var p = a + n;
                        c.copy.call(s, s, a + l - o, a, p)
                    }
                    var h = 1 === l ? 160 + n : 3 >= l ? 215 + l : 219;
                    g[h](e, n), e.offset += n
                }
            }(v ? function(t) {
                return 32 > t ? 1 : 65535 >= t ? 3 : 5
            } : function(t) {
                return 32 > t ? 1 : 255 >= t ? 2 : 65535 >= t ? 3 : 5
            }),
            symbol: i,
            undefined: i
        }
    }
}, function(t, e, i) {
    var n = i(8),
        r = i(10),
        s = r.Uint64BE,
        o = r.Int64BE,
        a = i(16).uint8,
        c = i(0),
        l = c.global,
        p = c.hasBuffer && "TYPED_ARRAY_SUPPORT" in l && !l.TYPED_ARRAY_SUPPORT,
        h = c.hasBuffer && l.prototype || {};

    function u() {
        var t = a.slice();
        return t[196] = d(196), t[197] = f(197), t[198] = m(198), t[199] = d(199), t[200] = f(200), t[201] = m(201), t[202] = g(202, 4, h.writeFloatBE || x, !0), t[203] = g(203, 8, h.writeDoubleBE || w, !0), t[204] = d(204), t[205] = f(205), t[206] = m(206), t[207] = g(207, 8, v), t[208] = d(208), t[209] = f(209), t[210] = m(210), t[211] = g(211, 8, y), t[217] = d(217), t[218] = f(218), t[219] = m(219), t[220] = f(220), t[221] = m(221), t[222] = f(222), t[223] = m(223), t
    }

    function d(t) {
        return function(e, i) {
            var n = e.reserve(2),
                r = e.buffer;
            r[n++] = t, r[n] = i
        }
    }

    function f(t) {
        return function(e, i) {
            var n = e.reserve(3),
                r = e.buffer;
            r[n++] = t, r[n++] = i >>> 8, r[n] = i
        }
    }

    function m(t) {
        return function(e, i) {
            var n = e.reserve(5),
                r = e.buffer;
            r[n++] = t, r[n++] = i >>> 24, r[n++] = i >>> 16, r[n++] = i >>> 8, r[n] = i
        }
    }

    function g(t, e, i, n) {
        return function(r, s) {
            var o = r.reserve(e + 1);
            r.buffer[o++] = t, i.call(r.buffer, s, o, n)
        }
    }

    function v(t, e) {
        new s(this, e, t)
    }

    function y(t, e) {
        new o(this, e, t)
    }

    function x(t, e) {
        n.write(this, t, e, !1, 23, 4)
    }

    function w(t, e) {
        n.write(this, t, e, !1, 52, 8)
    }
    e.getWriteToken = function(t) {
        return t && t.uint8array ? function() {
            var t = u();
            return t[202] = g(202, 4, x), t[203] = g(203, 8, w), t
        }() : p || c.hasBuffer && t && t.safe ? function() {
            var t = a.slice();
            return t[196] = g(196, 1, l.prototype.writeUInt8), t[197] = g(197, 2, l.prototype.writeUInt16BE), t[198] = g(198, 4, l.prototype.writeUInt32BE), t[199] = g(199, 1, l.prototype.writeUInt8), t[200] = g(200, 2, l.prototype.writeUInt16BE), t[201] = g(201, 4, l.prototype.writeUInt32BE), t[202] = g(202, 4, l.prototype.writeFloatBE), t[203] = g(203, 8, l.prototype.writeDoubleBE), t[204] = g(204, 1, l.prototype.writeUInt8), t[205] = g(205, 2, l.prototype.writeUInt16BE), t[206] = g(206, 4, l.prototype.writeUInt32BE), t[207] = g(207, 8, v), t[208] = g(208, 1, l.prototype.writeInt8), t[209] = g(209, 2, l.prototype.writeInt16BE), t[210] = g(210, 4, l.prototype.writeInt32BE), t[211] = g(211, 8, y), t[217] = g(217, 1, l.prototype.writeUInt8), t[218] = g(218, 2, l.prototype.writeUInt16BE), t[219] = g(219, 4, l.prototype.writeUInt32BE), t[220] = g(220, 2, l.prototype.writeUInt16BE), t[221] = g(221, 4, l.prototype.writeUInt32BE), t[222] = g(222, 2, l.prototype.writeUInt16BE), t[223] = g(223, 4, l.prototype.writeUInt32BE), t
        }() : u()
    }
}, function(t, e, i) {
    e.setExtUnpackers = function(t) {
        t.addExtUnpacker(14, [a, l(Error)]), t.addExtUnpacker(1, [a, l(EvalError)]), t.addExtUnpacker(2, [a, l(RangeError)]), t.addExtUnpacker(3, [a, l(ReferenceError)]), t.addExtUnpacker(4, [a, l(SyntaxError)]), t.addExtUnpacker(5, [a, l(TypeError)]), t.addExtUnpacker(6, [a, l(URIError)]), t.addExtUnpacker(10, [a, c]), t.addExtUnpacker(11, [a, p(Boolean)]), t.addExtUnpacker(12, [a, p(String)]), t.addExtUnpacker(13, [a, p(Date)]), t.addExtUnpacker(15, [a, p(Number)]), "undefined" != typeof Uint8Array && (t.addExtUnpacker(17, p(Int8Array)), t.addExtUnpacker(18, p(Uint8Array)), t.addExtUnpacker(19, [h, p(Int16Array)]), t.addExtUnpacker(20, [h, p(Uint16Array)]), t.addExtUnpacker(21, [h, p(Int32Array)]), t.addExtUnpacker(22, [h, p(Uint32Array)]), t.addExtUnpacker(23, [h, p(Float32Array)]), "undefined" != typeof Float64Array && t.addExtUnpacker(24, [h, p(Float64Array)]), "undefined" != typeof Uint8ClampedArray && t.addExtUnpacker(25, p(Uint8ClampedArray)), t.addExtUnpacker(26, h), t.addExtUnpacker(29, [h, p(DataView)])), r.hasBuffer && t.addExtUnpacker(27, p(s))
    };
    var n, r = i(0),
        s = r.global,
        o = {
            name: 1,
            message: 1,
            stack: 1,
            columnNumber: 1,
            fileName: 1,
            lineNumber: 1
        };

    function a(t) {
        return n || (n = i(18).decode), n(t)
    }

    function c(t) {
        return RegExp.apply(null, t)
    }

    function l(t) {
        return function(e) {
            var i = new t;
            for (var n in o) i[n] = e[n];
            return i
        }
    }

    function p(t) {
        return function(e) {
            return new t(e)
        }
    }

    function h(t) {
        return new Uint8Array(t).buffer
    }
}, function(t, e, i) {
    var n = i(20);

    function r(t) {
        var e, i = Array(256);
        for (e = 0; 127 >= e; e++) i[e] = s(e);
        for (e = 128; 143 >= e; e++) i[e] = a(e - 128, t.map);
        for (e = 144; 159 >= e; e++) i[e] = a(e - 144, t.array);
        for (e = 160; 191 >= e; e++) i[e] = a(e - 160, t.str);
        for (i[192] = s(null), i[193] = null, i[194] = s(!1), i[195] = s(!0), i[196] = o(t.uint8, t.bin), i[197] = o(t.uint16, t.bin), i[198] = o(t.uint32, t.bin), i[199] = o(t.uint8, t.ext), i[200] = o(t.uint16, t.ext), i[201] = o(t.uint32, t.ext), i[202] = t.float32, i[203] = t.float64, i[204] = t.uint8, i[205] = t.uint16, i[206] = t.uint32, i[207] = t.uint64, i[208] = t.int8, i[209] = t.int16, i[210] = t.int32, i[211] = t.int64, i[212] = a(1, t.ext), i[213] = a(2, t.ext), i[214] = a(4, t.ext), i[215] = a(8, t.ext), i[216] = a(16, t.ext), i[217] = o(t.uint8, t.str), i[218] = o(t.uint16, t.str), i[219] = o(t.uint32, t.str), i[220] = o(t.uint16, t.array), i[221] = o(t.uint32, t.array), i[222] = o(t.uint16, t.map), i[223] = o(t.uint32, t.map), e = 224; 255 >= e; e++) i[e] = s(e - 256);
        return i
    }

    function s(t) {
        return function() {
            return t
        }
    }

    function o(t, e) {
        return function(i) {
            var n = t(i);
            return e(i, n)
        }
    }

    function a(t, e) {
        return function(i) {
            return e(i, t)
        }
    }
    e.getReadToken = function(t) {
        var e = n.getReadFormat(t);
        return t && t.useraw ? function(t) {
            var e, i = r(t).slice();
            for (i[217] = i[196], i[218] = i[197], i[219] = i[198], e = 160; 191 >= e; e++) i[e] = a(e - 160, t.bin);
            return i
        }(e) : r(e)
    }
}, function(t, e, i) {
    e.Encoder = s;
    var n = i(21),
        r = i(14).EncodeBuffer;

    function s(t) {
        return this instanceof s ? void r.call(this, t) : new s(t)
    }
    s.prototype = new r, n.mixin(s.prototype), s.prototype.encode = function(t) {
        this.write(t), this.emit("data", this.read())
    }, s.prototype.end = function(t) {
        arguments.length && this.encode(t), this.flush(), this.emit("end")
    }
}, function(t, e, i) {
    e.Decoder = s;
    var n = i(21),
        r = i(19).DecodeBuffer;

    function s(t) {
        return this instanceof s ? void r.call(this, t) : new s(t)
    }
    s.prototype = new r, n.mixin(s.prototype), s.prototype.decode = function(t) {
        arguments.length && this.write(t), this.flush()
    }, s.prototype.push = function(t) {
        this.emit("data", t)
    }, s.prototype.end = function(t) {
        this.decode(t), this.emit("end")
    }
}, function(t, e, i) {
    i(11), i(6), e.createCodec = i(5).createCodec
}, function(t, e, i) {
    i(11), i(6), e.codec = {
        preset: i(5).preset
    }
}, function(t, e, i) {
    const n = i(2),
        r = i(45);
    var s = [{
        id: "ffa",
        name: "Free for All",
        alias: "ffa"
    }, {
        id: "tdm",
        name: "Team Deathmatch",
        alias: "tdm",
        teams: !0
    }, {
        id: "point",
        name: "Hardpoint",
        alias: "point",
        objective: !0,
        teams: !0,
        gameStart: function(t) {
            t.activeObjective = -1, t.nextObjective()
        }
    }, {
        id: "ctf",
        name: "Capture the Flag",
        alias: "ctf",
        endStats: ["sid", "name", "score", "kills", "deaths", "caps", "reward"],
        flags: !0,
        teams: !0,
        noScoreC: !0
    }, {
        id: "bhop",
        name: "Parkour",
        endStats: ["sid", "name", "score", "deaths"],
        alias: "bhop",
        noKick: !0,
        friendly: !0
    }, {
        id: "hide",
        name: "Hide & Seek",
        alias: "hide",
        endStats: ["sid", "name", "score", "found", "reward"],
        winCondition: function(t) {
            for (var e = 0, i = 0; i < t.players.list.length; ++i) t.players.list[i].active && "hide" == t.players.list[i].team && e++;
            return 0 < e ? "hide" : "seek"
        },
        condition: function(t) {
            for (var e = 0, i = 0; i < t.players.list.length; ++i) t.players.list[i].active && "hide" == t.players.list[i].team && e++;
            return 0 < e
        },
        minPlayers: 2,
        waitTimers: [{
            time: 1e4,
            msg: "picking seeker in ",
            trigger: function(t) {
                t.pickSeeker()
            }
        }, {
            time: 45e3,
            msg: "releasing seeker in ",
            trigger: function(t) {
                t.releaseSeeker()
            }
        }],
        spdMlt: {
            hide: .8
        },
        killConv: !0,
        noKick: !0,
        showTeam: !0,
        startTeam: "hide",
        convTeam: "seek",
        convWord: "found",
        noWeap: !0,
        friendly: !0,
        hideNames: !0
    }, {
        id: "infect",
        name: "Infected",
        alias: "infect",
        endStats: ["sid", "name", "score", "kills", "infected", "reward"],
        winCondition: function(t) {
            for (var e = 0, i = 0; i < t.players.list.length; ++i) t.players.list[i].active && "surv" == t.players.list[i].team && e++;
            return 0 < e ? "surv" : "inf"
        },
        condition: function(t) {
            for (var e = 0, i = 0; i < t.players.list.length; ++i) t.players.list[i].active && "surv" == t.players.list[i].team && e++;
            return 0 < e
        },
        minPlayers: 2,
        waitTimers: [{
            time: 2e4,
            msg: "infection in ",
            trigger: function(t) {
                t.infectRandom()
            }
        }],
        teamClass: {
            inf: 9
        },
        spdMlt: {
            inf: 1.15
        },
        killConv: !0,
        noKick: !0,
        startTeam: "surv",
        convWord: "infected",
        convTeam: "inf"
    }, {
        id: "race",
        name: "Race",
        alias: "race",
        endStats: ["sid", "name", "score", "time"],
        gameTime: 0,
        showMS: !0,
        timed: !0,
        endSort: function(t, e) {
            return t.score === e.score && t.gameTimer && e.gameTimer ? t.gameTimer - e.gameTimer : e.score - t.score
        },
        gameStart: function(t) {
            t.lockMove = !0, t.targetScore = 0;
            for (var e = 0; e < t.map.manager.objects.length; ++e) t.map.manager.objects[e].score && (t.targetScore += t.map.manager.objects[e].scoreP)
        },
        condition: function(t) {
            for (var e = 0; e < t.players.list.length; ++e) t.players.list[e].score >= t.targetScore && !t.players.list[e].timer && (t.players.list[e].timer = t.lastTimer, t.players.list[e].gameTimer = t.gameTimer, t.waitTimers || (t.waitTimers = [{
                time: 1e4,
                contTime: !0,
                msg: "race ends in ",
                trigger: function(t) {
                    t.gameTimer = "skip"
                }
            }]));
            return !0
        },
        waitTimers: [{
            time: 15e3,
            msg: "race starting in ",
            trigger: function(t) {
                t.lockMove = !1
            }
        }],
        noWeap: !0,
        friendly: !0
    }, {
        id: "boss",
        name: "Boss Hunt",
        alias: "boss",
        winCondition: function(t) {
            for (var e = 0, i = 0; i < t.players.list.length; ++i) t.players.list[i].active && "boss" == t.players.list[i].team && e++;
            return 0 < e ? "boss" : "heros"
        },
        condition: function(t) {
            for (var e = 0, i = 0; i < t.players.list.length; ++i) t.players.list[i].active && "boss" == t.players.list[i].team && e++;
            return 0 < e
        },
        waitTimers: [{
            time: 15e3,
            msg: "picking boss in ",
            trigger: function(t) {
                t.pickBoss()
            }
        }],
        noReward: !0,
        minPlayers: 2,
        startTeam: "heros"
    }, {
        id: "comp",
        name: "Competitive",
        alias: "comp",
        endStats: ["sid", "name", "score", "kills", "deaths"],
        noReward: !0,
        killSort: !0,
        winCondition: function(t) {
            for (var e = 0; e < t.players.list.length; ++e)
                if (10 <= t.players.list[e].kills) return t.players.list[e];
            return null
        },
        condition: function(t) {
            for (var e = 0; e < t.players.list.length; ++e)
                if (10 <= t.players.list[e].kills) return !1;
            return !0
        },
        gameTime: 6e5,
        regenDelay: 15e3,
        waitTimers: [{
            time: 25e3,
            msg: "match begins in "
        }]
    }, {
        id: "simon",
        name: "Simon Says",
        alias: "simon",
        endStats: ["sid", "name", "score", "reward"],
        condition: function(t) {
            for (var e = 0, i = 0; i < t.players.list.length; ++i) t.players.list[i].active && "foll" == t.players.list[i].team && e++;
            return 0 < e
        },
        minPlayers: 3,
        waitTimers: [{
            time: 1e4,
            msg: "starts in ",
            trigger: function(t) {
                t.pickSimon()
            }
        }],
        noKick: !0,
        startTeam: "foll"
    }];
    t.exports.mapModes = [
        [0, 2, 3],
        [0, 2, 3],
        [0, 2, 3],
        [0, 1, 3]
    ], t.exports.modes = s;
    for (var o = [{
            name: "Burg",
            modURL: "",
            terrainSeed: "",
            terrainWidth: 2048,
            terrainHeight: 2048,
            terrainMntMlt: 1,
            terrainMntCol: "#a0a0a0",
            terrainGrsCol: "#4a6904",
            terrainDrtCol: "#8c6835",
            skyDome: !1,
            skyDomeCol0: "#ffffff",
            skyDomeCol1: "#7196a2",
            skyDomeCol2: "#184452",
            sizeMlt: 2,
            shadowR: 1024,
            ambient: 8220268,
            light: 16771304,
            sky: 14141126,
            fog: 13812161,
            fogD: 918.7540927106669,
            dthY: -100,
            camPos: [11, 33, -217],
            spawns: [
                [-80, 18, 35],
                [187, 0, -188],
                [215, 14, -494],
                [-169, 2, -514],
                [-328, 0, -255],
                [-154, 0, -134],
                [-125, -28, -341],
                [32, -28, -509],
                [331, 0, -227],
                [114, 0, -365]
            ],
            modes: [0, 1],
            shadScale: 170,
            objects: [{
                p: [-96, 16, 41],
                s: [288, 2, 62],
                t: 1
            }, {
                p: [73, 0, 33],
                s: [50, 18, 46],
                id: 9,
                t: 1,
                d: 2
            }, {
                p: [28, 0, 8],
                s: [152, 24, 4]
            }, {
                p: [0, -2, -71],
                s: [516, 2, 252],
                t: 1
            }, {
                p: [-76, 0, -48],
                s: [56, 74, 122]
            }, {
                p: [37, 0, -68],
                s: [110, 54, 80]
            }, {
                p: [-112, 0, 74],
                s: [126, 76, 38]
            }, {
                p: [90, 0, 77],
                s: [158, 76, 44]
            }, {
                p: [-136, 16, -16],
                s: [64, 2, 52],
                t: 1
            }, {
                p: [-136, 0, -44],
                s: [64, 24, 4]
            }, {
                p: [-170, 0, -18],
                s: [4, 24, 56]
            }, {
                p: [-234, 0, -27],
                s: [32, 60, 97]
            }, {
                p: [-258, 18, 41],
                s: [47, 32, 44],
                c: 13619151
            }, {
                p: [-218, 13, 74],
                s: [88, 38, 54]
            }, {
                p: [185, 0, -9],
                s: [16, 67, 84]
            }, {
                p: [180, 0, 45],
                s: [60, 92, 44],
                c: 11842740
            }, {
                p: [213, 0, -61],
                s: [94, 92, 60],
                c: 11645361
            }, {
                p: [96, 0, -175],
                s: [110, 44, 44],
                col: 1
            }, {
                p: [-85, 0, -140],
                s: [56, 84, 112]
            }, {
                p: [126, -4, -300],
                s: [228, 4, 206],
                t: 1
            }, {
                p: [-82, -28, -252],
                s: [60, 94, 138]
            }, {
                p: [9, -28, -274],
                s: [6, 34, 168]
            }, {
                p: [49, -28, -385],
                s: [96, 104, 68]
            }, {
                p: [-23, -28, -252],
                s: [58, 28, 110],
                id: 9,
                t: 1,
                d: 1
            }, {
                p: [59, -32, -452],
                s: [218, 4, 138],
                t: 1
            }, {
                p: [-108, -28, -377],
                s: [130, 88, 42]
            }, {
                p: [-21, 6, -377],
                s: [44, 38, 20]
            }, {
                p: [-243, 0, -105],
                s: [21, 50, 96],
                c: 12302777
            }, {
                p: [190, 0, -346],
                s: [117, 58, 118]
            }, {
                p: [-195, 0, -17],
                s: [46, 18, 54],
                id: 9,
                t: 1,
                d: 1
            }, {
                p: [-134, 0, -191],
                s: [90, 77, 76]
            }, {
                p: [-278, 0, -191],
                s: [130, 77, 76]
            }, {
                p: [-227, -2, -254],
                s: [232, 2, 50],
                t: 1
            }, {
                p: [-210, -28, -323],
                s: [132, 90, 66]
            }, {
                p: [-128, -28, -300],
                s: [32, 28, 42],
                id: 9,
                t: 1,
                d: 1
            }, {
                p: [-233, -2, -419],
                s: [172, 2, 280],
                t: 1
            }, {
                p: [-326, -22, -321],
                s: [34, 84, 88]
            }, {
                p: [-370, -2, -253],
                s: [55, 155, 58]
            }, {
                p: [-158, -28, -274],
                s: [28, 90, 32]
            }, {
                p: [-263, -20, -322],
                s: [30, 94, 94]
            }, {
                p: [-330, -23, -394],
                s: [22, 81, 210]
            }, {
                p: [-88, -28, -429],
                s: [78, 28, 62],
                id: 9,
                t: 1,
                d: 2
            }, {
                p: [-103, -22, -497],
                s: [49, 84, 86]
            }, {
                p: [-137, -2, -463],
                s: [20, 2, 130],
                t: 1
            }, {
                p: [-164, 0, -547],
                s: [98, 86, 40]
            }, {
                p: [-283, 0, -506],
                s: [72, 10, 86],
                t: 1
            }, {
                p: [-261, 0, -452],
                s: [28, 10, 22],
                t: 1
            }, {
                p: [-298, 0, -450],
                s: [42, 10, 26],
                id: 9,
                t: 1,
                d: 3
            }, {
                p: [-347, 0, -535],
                s: [72, 72, 76]
            }, {
                p: [-262, 0, -567],
                s: [98, 52, 40]
            }, {
                p: [-319, 0, -587],
                s: [48, 139, 54],
                c: 11645361
            }, {
                p: [-1, -28, -377],
                s: [4, 34, 20]
            }, {
                p: [-41, -28, -377],
                s: [4, 34, 20]
            }, {
                p: [-63, -28, -506],
                s: [52, 118, 92]
            }, {
                p: [85, -28, -498],
                s: [32, 112, 88]
            }, {
                p: [173, 8, -503],
                s: [148, 2, 84],
                t: 1
            }, {
                p: [39, -29, -544],
                s: [218, 94, 46]
            }, {
                p: [182, 10, -540],
                s: [72, 87, 60]
            }, {
                p: [292, -4, -329],
                s: [104, 4, 264],
                t: 1
            }, {
                p: [280, 0, -485],
                s: [58, 10, 48],
                id: 9,
                t: 1,
                d: 3
            }, {
                p: [278, 8, -527],
                s: [62, 2, 36],
                t: 1
            }, {
                p: [264, 9, -558],
                s: [94, 36, 26]
            }, {
                p: [331, -23, -552],
                s: [54, 135, 110],
                c: "#aaaaaa"
            }, {
                p: [332, 0, -499],
                s: [48, 55, 110]
            }, {
                p: [342, 1, -411],
                s: [20, 31, 110],
                col: 1
            }, {
                p: [336, 0, -303],
                s: [54, 61, 110]
            }, {
                p: [127, -28, -425],
                s: [64, 35, 4]
            }, {
                p: [196, -28, -461],
                s: [110, 44, 4]
            }, {
                p: [249, 0, -486],
                s: [4, 16, 46]
            }, {
                p: [204, -28, -440],
                s: [72, 28, 38],
                id: 9,
                t: 1,
                d: 0
            }, {
                p: [156, 0, -188],
                s: [32, 70, 82]
            }, {
                p: [228, 0, -188],
                s: [32, 86, 82]
            }, {
                p: [367, 0, -146],
                s: [58, 50, 118],
                c: "#a2a2a2"
            }, {
                p: [335, 81, -62],
                s: [60, 58, 60]
            }, {
                p: [348, 0, -227],
                s: [8, 44, 52]
            }, {
                p: [393, 0, -420],
                s: [88, 64, 197]
            }, {
                p: [396, 0, -196],
                s: [58, 81, 186]
            }, {
                p: [-356, 0, -369],
                s: [42, 98, 50]
            }, {
                p: [-264, 0, -84],
                s: [42, 124, 50],
                c: 11316396
            }, {
                p: [1, 0, 0],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-42, 0, -79],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-42, 12, -79],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-42, 0, -67],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [0, -28, -325],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [0, -28, -337],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [0, -16, -333],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-76, -28, -327],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-76, -16, -327],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [237, 10, -473],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [224, 10, -520],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [155, 10, -504],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [167, 10, -504],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [163, 22, -504],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [214, 10, -466],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [312, 0, -399],
                s: [2, 2, 92]
            }, {
                p: [318, 0, -242],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [227, 0, -281],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [215, 0, -281],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [224, 12, -281],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-59, 18, 19],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-110, 18, -36],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-110, 0, -52],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-122, 0, -52],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-165, 18, -39],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-215, 18, 13],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-154, 0, -252],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-313, 0, -235],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-133, 0, -469],
                s: [12, 12, 12],
                id: 8
            }, {
                p: [-190, 0, -485],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [206, 0, -207],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [206, 0, -195],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [98, 0, -61],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [98, 0, -73],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [95, 0, -52],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [133, 0, -150],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [192, 34, -188],
                s: [40, 24, 82]
            }, {
                p: [128, -4, -415],
                s: [68, 12, 20],
                t: 1
            }, {
                p: [93, -28, -422],
                s: [4, 42, 10]
            }, {
                p: [337, -4, -150],
                s: [22, 4, 94],
                t: 1
            }, {
                p: [-11, -28, -384],
                s: [20, 34, 2],
                pe: 1,
                t: 2
            }, {
                p: [-32, -28, -370],
                s: [18, 34, 2],
                pe: 1,
                t: 2
            }, {
                p: [173, 0, -233],
                s: [2, 34, 24],
                pe: 1,
                t: 2
            }, {
                p: [202, 0, -226],
                s: [20, 34, 2],
                pe: 1,
                t: 2
            }, {
                p: [182, 0, -150],
                s: [20, 34, 2],
                pe: 1,
                t: 2
            }, {
                p: [211, 0, -162],
                s: [2, 34, 24],
                t: 2
            }, {
                p: [20, -28, -438],
                s: [28, 76, 40]
            }, {
                p: [114, 0, -388],
                s: [36, 8, 34],
                id: 9,
                t: 1,
                d: 3
            }, {
                p: [-337, 139, -563],
                s: [12, 4, 6],
                col: 1,
                c: 11184810
            }, {
                p: [-299, 139, -566],
                s: [8, 4, 12],
                col: 1,
                c: 11644847
            }, {
                p: [-297, 139, -586],
                s: [4, 4, 12],
                col: 1,
                c: 11842740
            }, {
                p: [-300, 139, -608],
                s: [10, 4, 12],
                col: 1,
                c: 10855845
            }, {
                p: [-316, 139, -563],
                s: [12, 2, 6],
                col: 1,
                c: 11184810
            }, {
                p: [-206, 86, -535],
                s: [14, 4, 16],
                col: 1
            }, {
                p: [-126, 86, -535],
                s: [22, 4, 16],
                col: 1
            }, {
                p: [-165, 86, -530],
                s: [22, 4, 6],
                col: 1
            }, {
                p: [-209, 86, -560],
                s: [8, 4, 14],
                col: 1
            }, {
                p: [-230, 52, -550],
                s: [24, 2, 6],
                col: 1
            }, {
                p: [-264, 52, -550],
                s: [18, 2, 6],
                col: 1
            }, {
                p: [-295, 52, -550],
                s: [14, 4, 6],
                col: 1
            }, {
                p: [-316, 70, -502],
                s: [6, 12, 6],
                col: 1,
                t: 2
            }, {
                p: [-378, 73, -502],
                s: [6, 8, 6],
                col: 1,
                t: 2
            }, {
                p: [-318, 72, -504],
                s: [14, 4, 14],
                col: 1
            }, {
                p: [-378, 72, -504],
                s: [10, 2, 14],
                col: 1
            }, {
                p: [-358, 72, -499],
                s: [14, 2, 4],
                col: 1
            }, {
                p: [-314, 72, -536],
                s: [6, 4, 16],
                col: 1
            }, {
                p: [-321, 58, -480],
                s: [4, 2, 24],
                col: 1
            }, {
                p: [-321, 58, -384],
                s: [4, 4, 16],
                col: 1
            }, {
                p: [-321, 58, -413],
                s: [4, 3, 21],
                col: 1
            }, {
                p: [-321, 58, -446],
                s: [4, 3, 19],
                col: 1
            }, {
                p: [-53, 60, -392],
                s: [20, 6, 12],
                col: 1
            }, {
                p: [-166, 60, -364],
                s: [14, 4, 16],
                col: 1
            }, {
                p: [233, 45, -548],
                s: [12, 2, 6],
                col: 1
            }, {
                p: [262, 45, -548],
                s: [11, 2, 6],
                col: 1,
                c: 13290186
            }, {
                p: [288, 45, -548],
                s: [16, 2, 6],
                col: 1
            }, {
                p: [-82, 90, -466],
                s: [14, 4, 12],
                col: 1
            }, {
                p: [-43, 90, -467],
                s: [12, 4, 14],
                col: 1
            }, {
                p: [-44, 90, -519],
                s: [14, 6, 30],
                col: 1
            }, {
                p: [-60, 90, -463],
                s: [14, 2, 6],
                col: 1
            }, {
                p: [-39, 90, -490],
                s: [4, 2, 16],
                col: 1
            }, {
                p: [-84, 90, -524],
                s: [10, 3, 26],
                col: 1
            }, {
                p: [-87, 90, -492],
                s: [4, 2, 10],
                col: 1
            }, {
                p: [-63, 71, -450],
                s: [4, 4, 20],
                t: 2
            }, {
                p: [-122, 55, -459],
                s: [6, 16, 6],
                t: 2
            }, {
                p: [-124, 62, -507],
                s: [6, 3, 16],
                col: 1,
                c: 14474460
            }, {
                p: [-124, 62, -476],
                s: [6, 2, 14],
                col: 1,
                c: 14935011
            }, {
                p: [-88, 62, -457],
                s: [18, 3, 6],
                col: 1
            }, {
                p: [-116, 60, -396],
                s: [26, 4, 4],
                col: 1
            }, {
                p: [-164, 60, -392],
                s: [18, 6, 12],
                col: 1
            }, {
                p: [-82, 60, -396],
                s: [14, 3, 4],
                col: 1
            }, {
                p: [85, 66, -447],
                s: [4, 4, 16],
                t: 2
            }, {
                p: [-31, 44, -377],
                s: [9, 4, 20]
            }, {
                p: [-14, 44, -377],
                s: [10, 2, 20]
            }, {
                p: [-341, 98, -387],
                s: [12, 4, 14],
                col: 1
            }, {
                p: [-341, 98, -350],
                s: [12, 6, 12],
                col: 1
            }, {
                p: [-338, 98, -369],
                s: [6, 2, 12],
                col: 1
            }, {
                p: [-371, 98, -389],
                s: [12, 4, 10],
                col: 1
            }, {
                p: [-356, 98, -392],
                s: [8, 2, 4],
                col: 1
            }, {
                p: [53, 65, -523],
                s: [18, 4, 4],
                col: 1
            }, {
                p: [135, 65, -523],
                s: [12, 4, 4],
                col: 1
            }, {
                p: [114, 65, -523],
                s: [12, 4, 4],
                col: 1
            }, {
                p: [211, 97, -517],
                s: [14, 6, 14],
                col: 1
            }, {
                p: [153, 97, -518],
                s: [14, 4, 16],
                col: 1
            }, {
                p: [184, 97, -514],
                s: [12, 2, 8],
                col: 1
            }, {
                p: [215, 97, -539],
                s: [6, 2, 18],
                col: 1
            }, {
                p: [211, 97, -564],
                s: [14, 6, 12],
                col: 1
            }, {
                p: [153, 97, -562],
                s: [14, 6, 16],
                col: 1
            }, {
                p: [149, 97, -539],
                s: [6, 2, 12],
                col: 1
            }, {
                p: [148, 16, -461],
                s: [14, 1, 4]
            }, {
                p: [242, 16, -461],
                s: [18, 2, 4]
            }, {
                p: [249, 16, -497],
                s: [4, 2, 10]
            }, {
                p: [96, 84, -459],
                s: [6, 12, 6],
                col: 1,
                t: 2
            }, {
                p: [74, 84, -459],
                s: [6, 10, 6],
                col: 1,
                t: 2
            }, {
                p: [97, 84, -537],
                s: [6, 20, 6],
                col: 1,
                t: 2
            }, {
                p: [94, 84, -463],
                s: [14, 4, 18],
                col: 1
            }, {
                p: [74, 84, -463],
                s: [10, 4, 18],
                col: 1
            }, {
                p: [76, 84, -533],
                s: [14, 4, 18],
                col: 1
            }, {
                p: [96, 84, -533],
                s: [10, 4, 18],
                col: 1
            }, {
                p: [98, 84, -498],
                s: [6, 4, 20],
                col: 1
            }, {
                p: [72, 84, -498],
                s: [6, 4, 26],
                col: 1
            }, {
                p: [91, 76, -414],
                s: [6, 16, 6],
                col: 1,
                t: 2
            }, {
                p: [85, 76, -410],
                s: [24, 6, 18],
                col: 1
            }, {
                p: [13, 76, -410],
                s: [24, 6, 18],
                col: 1
            }, {
                p: [48, 76, -416],
                s: [20, 4, 6],
                col: 1
            }, {
                p: [12, 76, -358],
                s: [22, 6, 14],
                col: 1
            }, {
                p: [5, 76, -382],
                s: [8, 4, 14],
                col: 1
            }, {
                p: [53, 76, -354],
                s: [22, 4, 6],
                col: 1
            }, {
                p: [85, 76, -360],
                s: [24, 6, 18],
                col: 1
            }, {
                p: [93, 76, -387],
                s: [8, 4, 14],
                col: 1
            }, {
                p: [6, 76, -414],
                s: [6, 20, 6],
                col: 1,
                t: 2
            }, {
                p: [6, 76, -356],
                s: [6, 14, 6],
                col: 1,
                t: 2
            }, {
                p: [334, 32, -432],
                s: [4, 2, 18],
                col: 1
            }, {
                p: [334, 32, -376],
                s: [4, 3, 18],
                col: 1
            }, {
                p: [334, 32, -406],
                s: [4, 2, 22],
                col: 1
            }, {
                p: [147, 58, -402],
                s: [31, 9, 6],
                col: 1
            }, {
                p: [136, 58, -378],
                s: [9, 12, 42],
                col: 1
            }, {
                p: [198, 58, -418],
                s: [10, 4, 6],
                col: 1
            }, {
                p: [245, 58, -375],
                s: [7, 4, 20],
                col: 1
            }, {
                p: [234, 58, -413],
                s: [29, 5, 16],
                col: 1
            }, {
                p: [236, 58, -299],
                s: [25, 4, 24],
                col: 1
            }, {
                p: [245, 58, -341],
                s: [7, 4, 20],
                col: 1
            }, {
                p: [243, 58, -416],
                s: [6, 19, 6],
                t: 2
            }, {
                p: [314, 61, -349],
                s: [10, 4, 18],
                col: 1
            }, {
                p: [333, 61, -356],
                s: [11, 3, 4],
                col: 1
            }, {
                p: [354, 61, -349],
                s: [18, 4, 18],
                col: 1
            }, {
                p: [312, 61, -306],
                s: [6, 4, 28],
                col: 1
            }, {
                p: [316, 61, -259],
                s: [14, 4, 22],
                col: 1
            }, {
                p: [334, 61, -250],
                s: [11, 3, 4],
                col: 1
            }, {
                p: [356, 61, -257],
                s: [14, 3, 18],
                col: 1
            }, {
                p: [285, 58, -88],
                s: [2, 40, 2],
                col: 1,
                t: 2
            }, {
                p: [285, 58, -40],
                s: [2, 40, 2],
                col: 1,
                t: 2
            }, {
                p: [294, 93, -64],
                s: [22, 2, 53],
                t: 2
            }, {
                p: [193, 58, -290],
                s: [24, 4, 6],
                col: 1
            }, {
                p: [136, 58, -332],
                s: [9, 6, 24],
                col: 1
            }, {
                p: [348, 44, -236],
                s: [8, 4, 16],
                col: 1,
                c: 15132390
            }, {
                p: [348, 44, -216],
                s: [8, 2, 8],
                col: 1
            }, {
                p: [352, 64, -379],
                s: [6, 4, 20],
                col: 1
            }, {
                p: [352, 64, -415],
                s: [6, 3, 14],
                col: 1
            }, {
                p: [310, 55, -490],
                s: [4, 4, 14],
                col: 1
            }, {
                p: [315, 55, -451],
                s: [14, 4, 14],
                col: 1
            }, {
                p: [310, 55, -473],
                s: [4, 2, 10],
                col: 1
            }, {
                p: [342, 55, -446],
                s: [14, 4, 4],
                col: 1
            }, {
                p: [307, 112, -576],
                s: [6, 4, 22],
                col: 1,
                c: "#b1b1b1"
            }, {
                p: [335, 139, -89],
                s: [12, 4, 6],
                col: 1
            }, {
                p: [313, 139, -84],
                s: [16, 6, 16],
                col: 1
            }, {
                p: [357, 139, -84],
                s: [16, 6, 16],
                col: 1
            }, {
                p: [313, 139, -40],
                s: [16, 6, 16],
                col: 1
            }, {
                p: [308, 139, -62],
                s: [6, 4, 12],
                col: 1
            }, {
                p: [228, 48, -102],
                s: [10, 2, 14],
                col: 1
            }, {
                p: [-293, 40, -321],
                s: [32, 22, 88]
            }, {
                p: [-192, 62, -323],
                s: [20, 4, 66],
                col: 1
            }, {
                p: [-328, 62, -361],
                s: [20, 4, 8],
                col: 1
            }, {
                p: [-296, 62, -361],
                s: [20, 4, 8],
                col: 1
            }, {
                p: [-253, 73, -364],
                s: [6, 10, 6],
                col: 1,
                t: 2
            }, {
                p: [-274, 73, -364],
                s: [6, 14, 6],
                col: 1,
                t: 2
            }, {
                p: [-274, 74, -322],
                s: [8, 4, 94],
                col: 1
            }, {
                p: [-252, 74, -283],
                s: [8, 4, 16],
                col: 1
            }, {
                p: [9, 6, -313],
                s: [6, 2, 18]
            }, {
                p: [9, 6, -199],
                s: [6, 2, 18]
            }, {
                p: [9, 6, -252],
                s: [6, 2, 10]
            }, {
                p: [164, 0, -61],
                s: [4, 62, 4],
                t: 2
            }, {
                p: [154, 54, -61],
                s: [16, 4, 4],
                t: 2
            }, {
                p: [158, 51, -61],
                s: [16, 2, 2],
                col: 1,
                r: [0, 0, -.7],
                t: 2
            }, {
                p: [-263, 0, -273],
                s: [4, 54, 4],
                t: 2
            }, {
                p: [-263, 47, -263],
                s: [4, 4, 16],
                t: 2
            }, {
                p: [-263, 43, -268],
                s: [2, 2, 16],
                col: 1,
                r: [-.7, 0, 0],
                t: 2
            }, {
                p: [238, 86, -224],
                s: [12, 4, 10],
                col: 1
            }, {
                p: [240, 86, -152],
                s: [8, 4, 10],
                col: 1
            }, {
                p: [217, 86, -222],
                s: [10, 4, 14],
                col: 1
            }, {
                p: [242, 86, -189],
                s: [4, 4, 28],
                col: 1
            }, {
                p: [251, 92, -82],
                s: [18, 6, 18],
                col: 1,
                c: 11184810
            }, {
                p: [176, 92, -84],
                s: [20, 4, 14],
                col: 1,
                c: 11645361
            }, {
                p: [173, 92, -38],
                s: [14, 4, 14],
                col: 1,
                c: 12303291
            }, {
                p: [207, 92, -88],
                s: [20, 4, 6],
                col: 1,
                c: 12171705
            }, {
                p: [168, 92, -61],
                s: [4, 2, 12],
                col: 1,
                c: 10987431
            }, {
                p: [254, 92, -41],
                s: [12, 4, 20],
                col: 1,
                c: 11974326
            }, {
                p: [214, 92, -34],
                s: [24, 4, 6],
                col: 1,
                c: 11513775
            }, {
                p: [145, 70, -158],
                s: [10, 4, 22],
                col: 1
            }, {
                p: [168, 70, -154],
                s: [8, 4, 14],
                col: 1
            }, {
                p: [145, 70, -218],
                s: [10, 4, 22],
                col: 1
            }, {
                p: [168, 70, -222],
                s: [8, 4, 14],
                col: 1
            }, {
                p: [214, 86, -184],
                s: [4, 2, 24],
                col: 1
            }, {
                p: [216, 86, -152],
                s: [8, 4, 10],
                col: 1
            }, {
                p: [179, 67, 0],
                s: [4, 2, 10],
                col: 1
            }, {
                p: [179, 67, 17],
                s: [4, 6, 15],
                col: 1
            }, {
                p: [136, 44, -157],
                s: [4, 38, 4],
                t: 2
            }, {
                p: [45, 44, -157],
                s: [4, 38, 4],
                t: 2
            }, {
                p: [45, 44, -193],
                s: [4, 38, 4],
                t: 2
            }, {
                p: [136, 44, -193],
                s: [4, 42, 4],
                t: 2
            }, {
                p: [91, 58, -175],
                s: [100, 2, 44],
                t: 2
            }, {
                p: [127, 44, -155],
                s: [26, 4, 4],
                col: 1
            }, {
                p: [48, 44, -159],
                s: [14, 4, 12],
                col: 1
            }, {
                p: [46, 44, -191],
                s: [10, 4, 12],
                col: 1
            }, {
                p: [90, 44, -155],
                s: [18, 2, 4],
                col: 1
            }, {
                p: [195, 58, -226],
                s: [18, 4, 6],
                col: 1
            }, {
                p: [186, 58, -150],
                s: [18, 4, 6],
                col: 1
            }, {
                p: [-3, 54, -100],
                s: [30, 6, 16],
                col: 1
            }, {
                p: [77, 54, -98],
                s: [30, 6, 20],
                col: 1
            }, {
                p: [79, 54, -35],
                s: [26, 6, 14],
                col: 1
            }, {
                p: [-5, 54, -35],
                s: [26, 6, 14],
                col: 1
            }, {
                p: [89, 54, -66],
                s: [6, 4, 20],
                col: 1
            }, {
                p: [37, 54, -105],
                s: [30, 4, 6],
                col: 1
            }, {
                p: [-15, 54, -66],
                s: [6, 4, 20],
                col: 1
            }, {
                p: [38, 54, -31],
                s: [18, 4, 6],
                col: 1
            }, {
                p: [-53, 60, -364],
                s: [20, 4, 16],
                col: 1
            }, {
                p: [-237, 50, 35],
                s: [5, 2, 10],
                col: 1,
                c: 13158600
            }, {
                p: [164, 92, 31],
                s: [28, 6, 16],
                col: 1,
                c: 11842740
            }, {
                p: [205, 92, 31],
                s: [10, 4, 16],
                col: 1,
                c: 13816530
            }, {
                p: [156, 92, 60],
                s: [12, 6, 14],
                col: 1,
                c: 13158600
            }, {
                p: [-260, 47, 19],
                s: [4, 54, 158]
            }, {
                p: [-197, 47, 97],
                s: [158, 54, 4]
            }, {
                p: [-178, 13, 51],
                s: [4, 74, 4],
                t: 2
            }, {
                p: [-254, 13, 51],
                s: [4, 74, 4],
                t: 2
            }, {
                p: [-216, 80, 72],
                s: [84, 2, 50],
                t: 2
            }, {
                p: [-55, 74, 2],
                s: [14, 6, 22],
                col: 1
            }, {
                p: [-97, 74, 1],
                s: [14, 6, 24],
                col: 1
            }, {
                p: [-102, 74, -42],
                s: [4, 4, 24],
                col: 1
            }, {
                p: [-102, 74, -75],
                s: [4, 4, 14],
                col: 1
            }, {
                p: [-77, 74, 11],
                s: [14, 4, 4],
                col: 1
            }, {
                p: [-50, 74, -45],
                s: [4, 4, 24],
                col: 1
            }, {
                p: [-54, 74, -97],
                s: [12, 4, 24],
                col: 1
            }, {
                p: [-236, 50, -131],
                s: [7, 4, 24],
                col: 1,
                c: 13158086
            }, {
                p: [-236, 50, -96],
                s: [7, 4, 22],
                col: 1,
                c: 11974326
            }, {
                p: [-221, 60, 14],
                s: [6, 2, 15],
                col: 1
            }, {
                p: [-244, 60, 13],
                s: [12, 2, 17],
                col: 1
            }, {
                p: [-224, 60, -61],
                s: [12, 2, 29],
                col: 1
            }, {
                p: [-220, 60, -17],
                s: [4, 2, 8],
                col: 1
            }, {
                p: [-251, 124, -64],
                s: [16, 4, 10],
                col: 1,
                c: 12171191
            }, {
                p: [-279, 124, -66],
                s: [12, 4, 14],
                col: 1,
                c: 12829635
            }, {
                p: [-278, 124, -105],
                s: [14, 3, 8],
                col: 1
            }, {
                p: [-109, 60, -359],
                s: [34, 4, 6],
                col: 1
            }, {
                p: [-130, 77, -156],
                s: [14, 3, 6],
                col: 1
            }, {
                p: [357, 139, -40],
                s: [16, 6, 16],
                col: 1
            }, {
                p: [-296, 62, -281],
                s: [20, 4, 8],
                col: 1
            }, {
                p: [-323, 62, -281],
                s: [14, 4, 8],
                col: 1
            }, {
                p: [9, 0, -180],
                s: [4, 54, 4],
                t: 2
            }, {
                p: [9, 44, -175],
                s: [2, 2, 12],
                col: 1,
                r: [-.7, 0, 0],
                t: 2
            }, {
                p: [-106, 84, -96],
                s: [14, 6, 24],
                col: 1
            }, {
                p: [-110, 84, -137],
                s: [6, 4, 24],
                col: 1
            }, {
                p: [-64, 84, -96],
                s: [14, 6, 24],
                col: 1
            }, {
                p: [-64, 84, -184],
                s: [14, 6, 24],
                col: 1
            }, {
                p: [-60, 84, -137],
                s: [6, 4, 16],
                col: 1
            }, {
                p: [-182, 51, 55],
                s: [16, 4, 16],
                col: 1
            }, {
                p: [-250, 51, 50],
                s: [16, 4, 6],
                col: 1
            }, {
                p: [-212, 51, 50],
                s: [16, 2, 6],
                col: 1
            }, {
                p: [-252, 51, 60],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [343, 32, -364],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [243, 56, -292],
                s: [6, 28, 6],
                t: 2
            }, {
                p: [10, 24, 8],
                s: [18, 2, 4]
            }, {
                p: [82, 24, 8],
                s: [20, 2, 4]
            }, {
                p: [-35, 24, 8],
                s: [9, 1, 4]
            }, {
                p: [-129, 24, -44],
                s: [16, 2, 4]
            }, {
                p: [-164, 24, -44],
                s: [16, 2, 4]
            }, {
                p: [-170, 24, -31],
                s: [4, 2, 22]
            }, {
                p: [-170, 24, 4],
                s: [4, 2, 12]
            }, {
                p: [-227, 62, -323],
                s: [20, 4, 66],
                col: 1
            }, {
                p: [-108, 83, -89],
                s: [6, 26, 6],
                t: 2
            }, {
                p: [-250, 44, -124],
                s: [4, 41, 4],
                t: 2
            }, {
                p: [-280, 44, -124],
                s: [4, 40, 4],
                t: 2
            }, {
                p: [-265, 74, -117],
                s: [38, 2, 22],
                t: 2
            }, {
                p: [-57, 66, -201],
                s: [10, 6, 36],
                col: 1
            }, {
                p: [-57, 66, -260],
                s: [10, 4, 26],
                col: 1
            }, {
                p: [-61, 66, -308],
                s: [18, 4, 26],
                col: 1
            }, {
                p: [-103, 66, -308],
                s: [18, 4, 26],
                col: 1
            }, {
                p: [-107, 66, -251],
                s: [10, 4, 22],
                col: 1
            }, {
                p: [-168, 62, -268],
                s: [8, 2, 20],
                col: 1
            }, {
                p: [-150, 62, -268],
                s: [12, 4, 20],
                col: 1
            }, {
                p: [-148, 62, -304],
                s: [8, 4, 20],
                col: 1
            }, {
                p: [-148, 62, -342],
                s: [8, 4, 28],
                col: 1
            }, {
                p: [335, 100, -92],
                s: [6, 20, 2],
                col: 1,
                c: 0
            }, {
                p: [196, 51, -91],
                s: [6, 20, 2],
                col: 1,
                c: 0
            }, {
                p: [-243, 94, -84],
                s: [2, 16, 6],
                col: 1,
                c: 0
            }, {
                p: [-295, 112, -587],
                s: [2, 14, 6],
                col: 1,
                c: 0
            }, {
                p: [-319, 112, -560],
                s: [5, 14, 2],
                col: 1,
                c: 0
            }, {
                p: [305, 100, -62],
                s: [2, 20, 6],
                col: 1,
                c: 0
            }, {
                p: [304, 78, -518],
                s: [2, 14, 6],
                col: 1,
                c: 0
            }, {
                p: [203, 70, -510],
                s: [5, 14, 2],
                col: 1,
                c: 0
            }, {
                p: [183, 70, -510],
                s: [5, 14, 2],
                col: 1,
                c: 0
            }, {
                p: [162, 70, -510],
                s: [5, 14, 2],
                col: 1,
                c: 0
            }, {
                p: [38, 18, 52],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [300, 49, -301],
                s: [18, 4, 4],
                t: 2
            }, {
                p: [-210, 0, -155],
                s: [4, 1, 6],
                col: 1
            }, {
                p: [-177, 0, -258],
                s: [4, 2, 6],
                col: 1
            }, {
                p: [-271, 0, -270],
                s: [6, 2, 4],
                col: 1
            }, {
                p: [-242, 0, -431],
                s: [8, 2, 4],
                col: 1
            }, {
                p: [-174, 0, -403],
                s: [4, 1, 4],
                col: 1
            }, {
                p: [-154, -1, -404],
                s: [8, 2, 8],
                col: 1
            }, {
                p: [-5, -28, -393],
                s: [6, 2, 4],
                col: 1
            }, {
                p: [307, 0, -439],
                s: [4, 1, 6],
                col: 1
            }, {
                p: [338, 0, -212],
                s: [4, 2, 8],
                col: 1
            }, {
                p: [305, 0, -254],
                s: [4, 2, 6],
                col: 1
            }, {
                p: [223, 0, -232],
                s: [8, 2, 4],
                col: 1
            }, {
                p: [203, 0, -284],
                s: [8, 2, 4],
                c: 11316396
            }, {
                p: [101, 0, -355],
                s: [4, 2, 8],
                col: 1
            }, {
                p: [15, 0, -345],
                s: [4, 2, 8],
                col: 1
            }, {
                p: [15, 0, -211],
                s: [4, 2, 8]
            }, {
                p: [-50, 0, -175],
                s: [6, 2, 8],
                col: 1
            }, {
                p: [97, 0, -87],
                s: [6, 2, 8],
                col: 1
            }, {
                p: [94, 0, 0],
                s: [10, 2, 4],
                col: 1
            }, {
                p: [-43, 0, -1],
                s: [6, 2, 8],
                col: 1
            }, {
                p: [-11, 18, 15],
                s: [10, 2, 4],
                col: 1
            }, {
                p: [-154, 18, -38],
                s: [6, 1, 3],
                col: 1
            }, {
                p: [-108, 18, -7],
                s: [4, 2, 10],
                col: 1
            }, {
                p: [-136, 0, -52],
                s: [8, 2, 6],
                col: 1
            }, {
                p: [162, 0, -52],
                s: [3, 2, 5],
                col: 1
            }, {
                p: [46, 0, -149],
                s: [6, 1, 5],
                col: 1
            }, {
                p: [-306, 0, -349],
                s: [4, 1, 7],
                col: 1
            }, {
                p: [-332, 0, -270],
                s: [4, 2, 8],
                col: 1
            }, {
                p: [-59, -28, -325],
                s: [4, 2, 4]
            }, {
                p: [-141, -28, -351],
                s: [4, 2, 8]
            }, {
                p: [-182, 0, -218],
                s: [4, 2, 8],
                col: 1
            }, {
                p: [-218, 18, 43],
                s: [8, 1, 4],
                col: 1
            }, {
                p: [-40, 18, 52],
                s: [6, 2, 8],
                col: 1
            }, {
                p: [119, 0, -149],
                s: [6, 2, 6],
                col: 1
            }, {
                p: [-196, 0, -524],
                s: [5, 1, 4],
                col: 1
            }, {
                p: [160, 0, -70],
                s: [4, 2, 4],
                col: 1
            }, {
                p: [-52, 0, -163],
                s: [4, 2, 4],
                col: 1
            }, {
                p: [251, 0, -407],
                s: [4, 2, 6],
                col: 1
            }, {
                p: [-5, -28, -408],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [251, 0, -288],
                s: [3, 1, 5],
                col: 1,
                c: 12829635
            }, {
                p: [313, 0, -344],
                s: [3, 1, 4]
            }, {
                p: [321, 0, -364],
                s: [4, 2, 4],
                col: 1
            }, {
                p: [202, 0, -94],
                s: [4, 1, 4]
            }, {
                p: [16, 0, -264],
                s: [4, 1, 6]
            }, {
                p: [37, 0, -307],
                s: [4, 6, 38]
            }, {
                p: [94, 0, -325],
                s: [22, 6, 4]
            }, {
                p: [107, 0, -314],
                s: [4, 6, 26]
            }, {
                p: [37, 6, -316],
                s: [4, 2, 10]
            }, {
                p: [107, 6, -321],
                s: [4, 2, 12]
            }, {
                p: [99, 6, -325],
                s: [12, 4, 4]
            }, {
                p: [76, 0, -325],
                s: [14, 2, 4]
            }, {
                p: [9, 47, -171],
                s: [4, 4, 14],
                t: 2
            }, {
                p: [85, -1, -226],
                s: [6, 2, 4],
                col: 1
            }, {
                p: [65, -1, -200],
                s: [6, 2, 4],
                col: 1
            }, {
                p: [-124, 61, -114],
                s: [22, 4, 4],
                t: 2
            }, {
                p: [22, 45, -351],
                s: [6, 14, 2],
                col: 1,
                c: 0
            }, {
                p: [51, 45, -351],
                s: [6, 14, 2],
                col: 1,
                c: 0
            }, {
                p: [79, 45, -351],
                s: [6, 14, 2],
                col: 1,
                c: 0
            }, {
                p: [-63, 68, -456],
                s: [2, 2, 14],
                col: 1,
                r: [-.7, 0, 0],
                t: 2
            }, {
                p: [-115, 57, -114],
                s: [14, 2, 2],
                col: 1,
                r: [0, 0, -.7],
                t: 2
            }, {
                p: [91, 77, -175],
                s: [100, 2, 44],
                t: 2
            }, {
                p: [107, 10, -469],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [203, -28, -413],
                s: [91, 86, 16]
            }, {
                p: [165, 58, -413],
                s: [11, 6, 16],
                col: 1
            }, {
                p: [179, 16, -461],
                s: [20, 2, 4]
            }, {
                p: [344, 50, -196],
                s: [12, 3, 18],
                col: 1,
                c: "#b1b1b1"
            }, {
                p: [340, 50, -160],
                s: [4, 2, 18],
                col: 1,
                c: "#b9b9b9"
            }, {
                p: [340, 50, -123],
                s: [4, 4, 22],
                col: 1,
                c: "#b9b9b9"
            }, {
                p: [322, -1, -401],
                s: [20, 2, 96],
                c: 10987431,
                t: 1
            }, {
                p: [144, 58, -294],
                s: [25, 4, 14],
                col: 1
            }, {
                p: [305, 45, -301],
                s: [14, 2, 2],
                col: 1,
                r: [0, 0, -.7],
                t: 2
            }, {
                p: [85, 62, -453],
                s: [2, 2, 14],
                col: 1,
                r: [-.7, 0, 0],
                t: 2
            }, {
                p: [-22, 65, -523],
                s: [18, 4, 4],
                col: 1
            }, {
                p: [16, 65, -523],
                s: [20, 2, 4],
                col: 1
            }, {
                p: [-146, 0, -475],
                s: [8, 26, 2],
                id: 3,
                t: 2,
                d: 1
            }, {
                p: [-210, 0, -276],
                s: [76, 5, 2],
                c: 13158600
            }, {
                p: [-210, 0, -284],
                s: [76, 4, 14],
                col: 1,
                c: 1916250,
                o: .8,
                t: 5
            }, {
                p: [-253, 0, -269],
                s: [4, 2, 6],
                col: 1
            }, {
                p: [-175, 0, -270],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-302, 0, -232],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-128, 0, -115],
                s: [6, 2, 66],
                t: 2
            }, {
                p: [-121, 0, -114],
                s: [6, 2, 66],
                c: 13290186,
                t: 2
            }, {
                p: [-132, 2, -113],
                s: [6, 2, 66],
                t: 2
            }, {
                p: [-125, 2, -114],
                s: [6, 2, 66],
                t: 2
            }, {
                p: [-128, 4, -112],
                s: [6, 2, 66],
                c: 12632256,
                t: 2
            }, {
                p: [-135, 0, -112],
                s: [6, 2, 66],
                c: 12303291,
                t: 2
            }, {
                p: [-132, 38, -114],
                s: [1, 25, 1],
                col: 1,
                c: 11645361,
                t: 2
            }, {
                p: [-196, 46, -191],
                s: [34, 31, 76]
            }, {
                p: [-183, 40, -157],
                s: [2, 6, 2],
                col: 1,
                c: 3421236,
                t: 5
            }, {
                p: [-192, 42, -157],
                s: [2, 6, 2],
                col: 1,
                c: 3421236,
                t: 5
            }, {
                p: [-201, 41, -157],
                s: [2, 6, 2],
                col: 1,
                c: 3421236,
                t: 5
            }, {
                p: [-209, 40, -157],
                s: [2, 6, 2],
                col: 1,
                c: 3421236,
                t: 5
            }, {
                p: [-192, 41, -227],
                s: [2, 6, 2],
                col: 1,
                c: 3421236,
                t: 5
            }, {
                p: [-183, 40, -227],
                s: [2, 6, 2],
                col: 1,
                c: 3421236,
                t: 5
            }, {
                p: [-201, 42, -227],
                s: [2, 4, 2],
                col: 1,
                c: 3421236,
                t: 5
            }, {
                p: [-209, 40, -227],
                s: [2, 6, 2],
                col: 1,
                c: 3421236,
                t: 5
            }, {
                p: [-442, 0, 157],
                s: [62, 206, 72],
                col: 1
            }, {
                p: [-418, 206, 129],
                s: [14, 6, 16],
                col: 1
            }, {
                p: [-414, 206, 157],
                s: [6, 6, 22],
                col: 1
            }, {
                p: [-414, 206, 186],
                s: [6, 4, 14],
                col: 1
            }, {
                p: [-444, 206, 123],
                s: [20, 6, 4],
                col: 1
            }, {
                p: [-468, 206, 123],
                s: [10, 6, 4],
                col: 1
            }, {
                p: [-442, 163, 121],
                s: [8, 20, 2],
                col: 1,
                c: 0
            }, {
                p: [-178, 13, 93],
                s: [4, 74, 4],
                t: 2
            }, {
                p: [-254, 13, 93],
                s: [4, 74, 4],
                t: 2
            }, {
                p: [-19, 64, 74],
                s: [60, 12, 38]
            }, {
                p: [123, 76, 57],
                s: [28, 4, 4],
                col: 1
            }, {
                p: [70, 76, 57],
                s: [34, 2, 4],
                col: 1
            }, {
                p: [21, 76, 57],
                s: [26, 4, 4],
                col: 1
            }, {
                p: [-41, 76, 57],
                s: [12, 2, 4],
                col: 1
            }, {
                p: [-75, 76, 57],
                s: [16, 2, 4],
                col: 1
            }, {
                p: [-127, 76, 57],
                s: [26, 4, 4],
                col: 1
            }, {
                p: [-19, 0, 73],
                s: [60, 64, 2],
                t: 2
            }, {
                p: [-46, 18, 61],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-13, 32, 71],
                s: [4, 4, 2],
                c: 3092271,
                t: 5
            }, {
                p: [-26, 32, 71],
                s: [4, 4, 2],
                c: 3092271,
                t: 5
            }, {
                p: [19, 63, 48],
                s: [4, 4, 16],
                t: 2
            }, {
                p: [-56, 63, 48],
                s: [4, 4, 16],
                t: 2
            }, {
                p: [-56, 59, 53],
                s: [2, 2, 12],
                col: 1,
                r: [.87, 0, 0],
                t: 2
            }, {
                p: [19, 59, 53],
                s: [2, 2, 12],
                col: 1,
                r: [.87, 0, 0],
                t: 2
            }, {
                p: [-139, 301, 405],
                s: [110, 66, 86],
                t: 5
            }, {
                p: [-73, 281, 361],
                s: [70, 42, 56],
                t: 5
            }, {
                p: [-527, 412, 373],
                s: [146, 90, 116],
                t: 5
            }, {
                p: [-571, 369, 297],
                s: [118, 72, 94],
                t: 5
            }, {
                p: [673, 319, 120],
                s: [110, 66, 86],
                t: 5
            }, {
                p: [485, 337, 226],
                s: [146, 88, 198],
                t: 5
            }, {
                p: [334, 337, 95],
                s: [58, 30, 97],
                col: 1,
                t: 5
            }, {
                p: [-866, 323, -277],
                s: [146, 90, 196],
                col: 1,
                t: 5
            }, {
                p: [-926, 303, -516],
                s: [122, 76, 160],
                col: 1,
                t: 5
            }, {
                p: [-1998, 360, -35],
                s: [260, 76, 368],
                col: 1,
                t: 5
            }, {
                p: [1593, 397, -140],
                s: [218, 132, 256],
                t: 5
            }, {
                p: [1593, 377, -267],
                s: [118, 72, 92],
                t: 5
            }, {
                p: [-130, 234, -914],
                s: [146, 90, 116],
                t: 5
            }, {
                p: [-46, 204, -952],
                s: [118, 74, 94],
                t: 5
            }, {
                p: [98, 204, -952],
                s: [96, 38, 48],
                col: 1,
                t: 5
            }, {
                p: [735, 363, -1249],
                s: [224, 104, 178],
                t: 5
            }, {
                p: [186, 263, 500],
                s: [104, 58, 112],
                col: 1,
                t: 5
            }, {
                p: [81, 263, 500],
                s: [48, 28, 52],
                col: 1,
                t: 5
            }, {
                p: [-561, 204, -851],
                s: [118, 74, 94],
                t: 5
            }, {
                p: [-22, -28, -518],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-34, -16, -518],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-31, -28, -515],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [60, -28, -425],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [63, -28, -515],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [63, -28, -503],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [54, -28, -518],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [218, 70, -541],
                s: [2, 14, 6],
                col: 1,
                c: 0
            }, {
                p: [-13, 76, 57],
                s: [10, 4, 4],
                col: 1
            }, {
                p: [-19, 70, 102],
                s: [220, 40, 58],
                c: 12303291
            }, {
                p: [89, 110, 108],
                s: [4, 4, 18],
                col: 1,
                c: 13814731
            }, {
                p: [-119, 110, 80],
                s: [20, 4, 14],
                col: 1,
                c: 12303291
            }, {
                p: [36, 110, 75],
                s: [16, 4, 4],
                col: 1,
                c: 12500156
            }, {
                p: [-2, 110, 75],
                s: [24, 2, 4],
                col: 1,
                c: 12631228
            }, {
                p: [-78, 110, 75],
                s: [14, 2, 4],
                col: 1,
                c: 10329501
            }, {
                p: [-44, 110, 75],
                s: [14, 4, 4],
                col: 1,
                c: 12961221
            }, {
                p: [81, 110, 80],
                s: [20, 4, 14],
                col: 1,
                c: 12303291
            }, {
                p: [-127, 110, 108],
                s: [4, 4, 18],
                col: 1,
                c: 11645361
            }, {
                p: [-121, 99, 70],
                s: [4, 4, 8],
                t: 2
            }, {
                p: [82, 99, 70],
                s: [4, 4, 8],
                t: 2
            }, {
                p: [92, 99, 82],
                s: [12, 4, 4],
                t: 2
            }, {
                p: [-131, 99, 82],
                s: [10, 4, 4],
                t: 2
            }, {
                p: [292, 45, -113],
                s: [60, 2, 20],
                t: 2
            }, {
                p: [264, 0, -121],
                s: [2, 49, 2],
                t: 2
            }, {
                p: [12, -28, -461],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [138, -28, -456],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [20, 48, -433],
                s: [28, 4, 14],
                col: 1
            }, {
                p: [20, 48, -453],
                s: [28, 2, 10],
                col: 1
            }, {
                p: [161, -28, -424],
                s: [4, 42, 6]
            }, {
                p: [-109, 40, -404],
                s: [4, 4, 14],
                t: 2
            }, {
                p: [-109, 37, -400],
                s: [2, 2, 14],
                col: 1,
                r: [.7, 0, 0],
                t: 2
            }, {
                p: [20, 34, -461],
                s: [4, 4, 20],
                t: 2
            }, {
                p: [20, 32, -461],
                s: [2, 2, 12],
                col: 1,
                r: [.87, 0, 0],
                t: 2
            }, {
                p: [21, -28, -464],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [21, -16, -464],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-253, 57, -559],
                s: [74, 32, 2],
                c: 6904648,
                t: 5
            }, {
                p: [-286, 52, -562],
                s: [4, 40, 4],
                t: 2
            }, {
                p: [-221, 52, -562],
                s: [4, 40, 4],
                t: 2
            }, {
                p: [260, 51, -568],
                s: [74, 32, 2],
                c: 7363405,
                t: 5
            }, {
                p: [260, 67, -566],
                s: [69, 0, 29],
                id: 11,
                col: 1,
                r: [1.57, 0, 0]
            }, {
                p: [-258, 69, -18],
                s: [2, 26, 62],
                c: 6903619,
                t: 5
            }, {
                p: [-256, 82, -18],
                s: [57, 0, 23],
                id: 11,
                col: 1,
                r: [1.57, 0, 1.57]
            }, {
                p: [72, 0, -277],
                s: [64, 41, 90],
                id: 14,
                col: 1
            }, {
                p: [-283, 10, -505],
                s: [69, 41, 78],
                id: 14,
                col: 1
            }, {
                p: [174, 10, -504],
                s: [142, 41, 78],
                id: 14,
                col: 1
            }, {
                p: [-136, 18, -16],
                s: [59, 41, 49],
                id: 14,
                col: 1
            }, {
                p: [336, 79, -303],
                s: [54, 2, 110],
                t: 2
            }, {
                p: [312, 60, -251],
                s: [4, 25, 4],
                t: 2
            }, {
                p: [312, 62, -355],
                s: [4, 25, 4],
                t: 2
            }, {
                p: [360, 61, -355],
                s: [4, 24, 4],
                t: 2
            }, {
                p: [360, 61, -251],
                s: [4, 26, 4],
                t: 2
            }, {
                p: [257, 47, -352],
                s: [18, 4, 4],
                t: 2
            }, {
                p: [252, 44, -352],
                s: [14, 2, 2],
                col: 1,
                r: [0, 0, .7],
                t: 2
            }, {
                p: [213, 0, -97],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [210, 56, -292],
                s: [6, 30, 6],
                t: 2
            }, {
                p: [243, 56, -326],
                s: [6, 29, 6],
                t: 2
            }, {
                p: [210, 56, -326],
                s: [6, 26, 6],
                t: 2
            }, {
                p: [227, 77, -309],
                s: [42, 2, 43],
                t: 2
            }, {
                p: [137, 56, -292],
                s: [6, 22, 6],
                t: 2
            }, {
                p: [-11, -28, -514],
                s: [6, 2, 4],
                col: 1
            }, {
                p: [277, 10, -540],
                s: [8, 1, 4],
                col: 1
            }, {
                p: [2, -28, -448],
                s: [6, 2, 4],
                col: 1
            }, {
                p: [-147, 62, -261],
                s: [4, 12, 4],
                t: 2
            }, {
                p: [-169, 62, -261],
                s: [4, 15, 4],
                t: 2
            }, {
                p: [-169, 62, -286],
                s: [4, 11, 4],
                t: 2
            }, {
                p: [-147, 62, -287],
                s: [4, 13, 4],
                t: 2
            }, {
                p: [-158, 70, -274],
                s: [28, 1, 32],
                t: 2
            }, {
                p: [-118, 61, -197],
                s: [48, 87, 47],
                c: 10987431
            }, {
                p: [-119, 96, -197],
                s: [85, 2, 46],
                t: 2
            }, {
                p: [-159, 72, -218],
                s: [3, 30, 3],
                t: 2
            }, {
                p: [-143, 72, -218],
                s: [3, 28, 3],
                t: 2
            }, {
                p: [-143, 72, -176],
                s: [3, 29, 3],
                t: 2
            }, {
                p: [-159, 72, -176],
                s: [3, 28, 3],
                t: 2
            }, {
                p: [263, 35, -352],
                s: [1, 13, 1],
                col: 1,
                c: 11645361,
                t: 2
            }, {
                p: [-109, 28, -409],
                s: [1, 13, 1],
                col: 1,
                c: 11645361,
                t: 2
            }, {
                p: [-174, 0, -472],
                s: [6, 1, 4],
                col: 1
            }, {
                p: [-147, 18, 52],
                s: [6, 1, 5],
                col: 1
            }, {
                p: [200, 220, -911],
                s: [174, 74, 155],
                t: 5
            }, {
                p: [92, 76, -356],
                s: [6, 17, 6],
                col: 1,
                t: 2
            }, {
                p: [-48, 59, -361],
                s: [6, 14, 6],
                col: 1,
                t: 2
            }, {
                p: [228, 48, -137],
                s: [10, 3, 11],
                col: 1
            }, {
                p: [37, 0, -160],
                s: [8, 13, 4]
            }, {
                p: [29, 0, -160],
                s: [8, 6, 4]
            }, {
                p: [7, 0, -173],
                s: [4, 1, 4],
                col: 1
            }, {
                p: [-79, 66, -218],
                s: [3, 33, 3],
                t: 2
            }, {
                p: [-79, 84, -177],
                s: [3, 17, 3],
                t: 2
            }, {
                p: [-93, 84, -177],
                s: [3, 17, 3],
                t: 2
            }, {
                p: [-93, 66, -218],
                s: [3, 35, 3],
                t: 2
            }, {
                p: [-96, 148, -197],
                s: [4, 3, 11],
                col: 1,
                c: 10987431
            }, {
                p: [-140, 148, -202],
                s: [4, 3, 15],
                col: 1,
                c: 9013641
            }, {
                p: [-137, 148, -178],
                s: [10, 3, 9],
                col: 1,
                c: 11513775
            }, {
                p: [-99, 148, -178],
                s: [10, 3, 9],
                col: 1,
                c: 11973298
            }, {
                p: [-99, 148, -216],
                s: [10, 4, 9],
                col: 1,
                c: 10987431
            }, {
                p: [-117, 148, -218],
                s: [12, 2, 5],
                col: 1,
                c: 11974326
            }, {
                p: [-138, 148, -217],
                s: [8, 3, 7],
                col: 1,
                c: 10197915
            }, {
                p: [-120, 148, -176],
                s: [9, 2, 5],
                col: 1,
                c: 11513775
            }, {
                p: [-118, 117, -197],
                s: [50, 16, 5],
                col: 1,
                c: 0
            }, {
                p: [-118, 117, -197],
                s: [5, 16, 49],
                col: 1,
                c: 0
            }, {
                p: [-43, 43, -298],
                s: [18, 4, 4],
                t: 2
            }, {
                p: [-48, 39, -298],
                s: [14, 2, 2],
                col: 1,
                r: [0, 0, .7],
                c: 15132390,
                t: 2
            }, {
                p: [-37, 31, -298],
                s: [1, 13, 1],
                col: 1,
                c: 11645361,
                t: 2
            }, {
                p: [-212, 50, -63],
                s: [14, 4, 4],
                t: 2
            }, {
                p: [-166, 0, -150],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [22, 42, -350],
                s: [9, 3, 3],
                c: 14935011
            }, {
                p: [51, 42, -350],
                s: [9, 3, 3]
            }, {
                p: [79, 42, -350],
                s: [9, 3, 3]
            }, {
                p: [183, 67, -509],
                s: [9, 3, 3]
            }, {
                p: [203, 67, -509],
                s: [9, 3, 3]
            }, {
                p: [162, 67, -509],
                s: [9, 3, 3]
            }, {
                p: [-54, 0, -115],
                s: [4, 7, 4],
                id: 16
            }, {
                p: [-54, 0, -121],
                s: [4, 7, 4],
                id: 16
            }, {
                p: [8, 18, 69],
                s: [4, 7, 4],
                id: 16
            }, {
                p: [306, 0, -321],
                s: [4, 7, 4],
                id: 16
            }, {
                p: [251, 0, -352],
                s: [4, 7, 4],
                id: 16
            }, {
                p: [-160, 0, -150],
                s: [4, 7, 4],
                id: 16
            }, {
                p: [-154, 0, -150],
                s: [4, 7, 4],
                id: 16
            }, {
                p: [71, 0, -345],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-119, 18, -39],
                s: [4, 7, 4],
                id: 16
            }, {
                p: [-73, 17, 16],
                s: [5, 2, 4],
                col: 1
            }, {
                p: [-116, 0, -233],
                s: [4, 2, 6],
                col: 1
            }, {
                p: [-169, 62, -393],
                s: [6, 12, 6],
                col: 1,
                t: 2
            }, {
                p: [174, 0, -28],
                s: [4, 7, 4],
                id: 16
            }, {
                p: [174, 0, -23],
                s: [4, 7, 4],
                id: 16
            }, {
                p: [176, 0, -16],
                s: [2, 19, 4],
                t: 2
            }, {
                p: [112, 0, -209],
                s: [57, 26, 25],
                id: 17
            }, {
                p: [55, -1, -255],
                s: [6, 3, 4],
                col: 1
            }, {
                p: [56, 0, -249],
                s: [4, 7, 4],
                id: 16
            }, {
                p: [62, 0, -348],
                s: [4, 7, 4],
                id: 16
            }, {
                p: [86, 0, -297],
                s: [4, 7, 4],
                id: 16
            }, {
                p: [86, 0, -292],
                s: [4, 7, 4],
                id: 16
            }, {
                p: [-220, 0, -104],
                s: [57, 26, 25],
                id: 17,
                col: 1,
                r: [0, 1.57, 0]
            }, {
                p: [-227, 0, -139],
                s: [12, 12, 12],
                id: 8
            }, {
                p: [78, 0, -203],
                s: [12, 12, 12],
                id: 8
            }, {
                p: [-173, 0, -70],
                s: [4, 1, 4],
                col: 1
            }, {
                p: [169, 0, 17],
                s: [6, 2, 8],
                col: 1
            }, {
                p: [147, 0, 28],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [289, 10, -542],
                s: [4, 7, 4],
                id: 16
            }, {
                p: [295, 10, -542],
                s: [4, 7, 4],
                id: 16
            }, {
                p: [-181, 0, -473],
                s: [4, 7, 4],
                id: 16
            }, {
                p: [-52, 21, -269],
                s: [1, 15, 6],
                col: 1,
                c: 0
            }, {
                p: [-52, 29, -218],
                s: [1, 15, 6],
                col: 1,
                c: 0
            }, {
                p: [-53, 18, -269],
                s: [6, 3, 9],
                col: 1,
                c: 14935011
            }, {
                p: [-53, 26, -218],
                s: [6, 3, 9],
                col: 1,
                c: 14935011
            }, {
                p: [217, 67, -541],
                s: [6, 3, 9],
                c: 14935011
            }, {
                p: [304, 76, -518],
                s: [6, 3, 9],
                c: 11645361
            }, {
                p: [90, 44, -195],
                s: [16, 2, 4],
                col: 1
            }, {
                p: [127, 44, -195],
                s: [26, 4, 4],
                col: 1
            }, {
                p: [66, 44, -195],
                s: [12, 3, 4],
                col: 1
            }, {
                p: [-317, 0, -415],
                s: [4, 7, 4],
                id: 16
            }, {
                p: [-53, 0, -159],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-54, 0, -169],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [-3.14, 1.04, -3.14]
            }, {
                p: [36, 0, -165],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.87, 0]
            }, {
                p: [37, 0, -175],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, .18, 0]
            }, {
                p: [5, 0, -188],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, .18, 0]
            }, {
                p: [-42, 0, -57],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, .18, 0]
            }, {
                p: [-9, 0, 2],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, .18, 0]
            }, {
                p: [-19, 0, -26],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, .18, 0]
            }, {
                p: [21, 0, -346],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.87, 0]
            }, {
                p: [59, 0, -344],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.17, 0]
            }, {
                p: [80, 0, -212],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.17, 0]
            }, {
                p: [29, 0, -346],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.52, 0]
            }, {
                p: [129, 0, -286],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.17, 0]
            }, {
                p: [101, 0, -318],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.17, 0]
            }, {
                p: [59, 0, -243],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -1.04, 0]
            }, {
                p: [139, 0, -231],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.17, 0]
            }, {
                p: [-42, -28, -355],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, .18, 0]
            }, {
                p: [-5, -28, -347],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.52, 0]
            }, {
                p: [-86, -28, -325],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.34, 0]
            }, {
                p: [-260, 0, -269],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-298, 0, -236],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-307, 0, -275],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-182, 0, -271],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, .52, 0]
            }, {
                p: [-176, 0, -264],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-217, 0, -136],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.7, 0]
            }, {
                p: [-214, 0, -72],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.7, 0]
            }, {
                p: [-147, 0, -149],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.7, 0]
            }, {
                p: [-109, 0, -62],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.7, 0]
            }, {
                p: [-109, 18, -25],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.7, 0]
            }, {
                p: [-215, 18, 19],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.7, 0]
            }, {
                p: [-230, 18, 43],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, .7, 0]
            }, {
                p: [-46, 18, 54],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [-3.14, 1.22, -3.14]
            }, {
                p: [10, 18, 54],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, 1.57, 0]
            }, {
                p: [-48, 18, 16],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, .7, 0]
            }, {
                p: [160, 0, -62],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, .53, 0]
            }, {
                p: [169, 0, -27],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.86, 0]
            }, {
                p: [162, 0, 20],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.86, 0]
            }, {
                p: [173, 0, 11],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -1.38, 0]
            }, {
                p: [166, 0, -92],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.34, 0]
            }, {
                p: [126, 0, -150],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.34, 0]
            }, {
                p: [127, 0, -65],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, .53, 0]
            }, {
                p: [134, 0, -70],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.52, 0]
            }, {
                p: [128, 0, -77],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [3.14, -1.23, 3.14]
            }, {
                p: [96, 0, -46],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, .53, 0]
            }, {
                p: [130, 0, -71],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [174, 0, 20],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.86, 0]
            }, {
                p: [11, 0, 3],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, .53, 0]
            }, {
                p: [206, 0, -218],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.34, 0]
            }, {
                p: [208, 0, -186],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.51, 0]
            }, {
                p: [174, 0, -156],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.51, 0]
            }, {
                p: [101, 0, 2],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, .53, 0]
            }, {
                p: [205, 0, -279],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.17, 0]
            }, {
                p: [237, 0, -283],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, .88, 0]
            }, {
                p: [309, 0, -245],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, .71, 0]
            }, {
                p: [253, 0, -108],
                s: [6, 1, 6],
                col: 1
            }, {
                p: [306, 0, -316],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, .71, 0]
            }, {
                p: [274, 0, -350],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [-3.13, -1.41, -3.13]
            }, {
                p: [320, 1, -440],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [-3.14, -.71, -3.14]
            }, {
                p: [320, 1, -420],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.86, 0]
            }, {
                p: [319, 1, -430],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -1.56, 0]
            }, {
                p: [322, 1, -372],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -1.04, 0]
            }, {
                p: [318, 1, -385],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -1.39, 0]
            }, {
                p: [326, 1, -389],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.69, 0]
            }, {
                p: [329, 1, -361],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.69, 0]
            }, {
                p: [251, 0, -357],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [-3.14, -.71, -3.14]
            }, {
                p: [327, 1, -422],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -1.39, 0]
            }, {
                p: [318, 1, -395],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [3.14, -.18, 3.14]
            }, {
                p: [326, 1, -434],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [-.1, -1.56, -.1]
            }, {
                p: [301, 10, -541],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [-3.14, -.71, -3.14]
            }, {
                p: [222, 10, -511],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [-3.14, -.71, -3.14]
            }, {
                p: [221, 10, -467],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [-3.14, -.71, -3.14]
            }, {
                p: [-40, -28, -362],
                s: [4, 1, 6]
            }, {
                p: [-214, 0, -68],
                s: [2, 1, 2],
                col: 1
            }, {
                p: [-280, 0, -296],
                s: [3, 1, 4],
                col: 1
            }, {
                p: [195, 0, -284],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.69, 0]
            }, {
                p: [305, 0, -307],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, .88, 0]
            }, {
                p: [164, -28, -429],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [-3.14, -.36, -3.14]
            }, {
                p: [105, -28, -456],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [-3.14, -.88, -3.14]
            }, {
                p: [129, -28, -455],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [-3.14, -.88, -3.14]
            }, {
                p: [222, 10, -529],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [-3.14, -.71, -3.14]
            }, {
                p: [220, 10, -543],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [3.14, .51, -3.14]
            }, {
                p: [61, -29, -435],
                s: [6, 2, 4],
                col: 1
            }, {
                p: [276, 0, -346],
                s: [2, 1, 3],
                col: 1
            }, {
                p: [134, 0, -77],
                s: [2, 1, 3],
                col: 1
            }, {
                p: [-157, 0, -147],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -1.57, 0]
            }, {
                p: [-247, 0, -271],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, .52, 0]
            }, {
                p: [50, -28, -423],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [-3.14, -.88, -3.14]
            }, {
                p: [53, -28, -511],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [-3.14, -.71, -3.14]
            }, {
                p: [49, -28, -517],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.51, 0]
            }, {
                p: [-15, -28, -517],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, 1.06, 0]
            }, {
                p: [-21, -28, -512],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.16, 0]
            }, {
                p: [-32, -28, -505],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [-3.14, 1.56, -3.14]
            }, {
                p: [6, -28, -462],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [-3.14, 1.21, -3.14]
            }, {
                p: [11, 0, -186],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [-3.14, 1.04, -3.14]
            }, {
                p: [3, -28, -315],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.52, 0]
            }, {
                p: [-6, -28, -318],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -1.39, 0]
            }, {
                p: [2, -28, -347],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -1.22, 0]
            }, {
                p: [-67, -28, -325],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.34, 0]
            }, {
                p: [3, -28, -422],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [-3.14, 1.21, -3.14]
            }, {
                p: [-187, 0, -477],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.7, 0]
            }, {
                p: [-316, 0, -368],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.7, 0]
            }, {
                p: [-316, 0, -376],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -1.57, 0]
            }, {
                p: [-315, 0, -410],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [-3.14, -.7, -3.14]
            }, {
                p: [-175, 0, -398],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [3.14, -.7, 3.14]
            }, {
                p: [-186, 0, -499],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [3.14, -.7, 3.14]
            }, {
                p: [-245, 0, -360],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [3.14, -.7, 3.14]
            }, {
                p: [-2, -28, -417],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [-3.14, .16, -3.14]
            }, {
                p: [-249, 0, -434],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [-3.14, -.7, -3.14]
            }, {
                p: [-194, 0, -476],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [3.14, -.52, 3.14]
            }, {
                p: [133, 0, -224],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.87, 0]
            }, {
                p: [293, 39, -301],
                s: [1, 10, 1],
                col: 1,
                c: 11645361,
                t: 2
            }, {
                p: [-165, 18, -33],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.7, 0]
            }, {
                p: [71, 0, -274],
                s: [57, 26, 25],
                id: 19,
                col: 1,
                r: [0, 1.57, 0]
            }, {
                p: [71, 0, -274],
                s: [25, 2, 57],
                v: 1,
                t: 5
            }, {
                p: [71, 24, -274],
                s: [25, 2, 57],
                v: 1,
                t: 5
            }, {
                p: [59, 2, -274],
                s: [1, 22, 57],
                pe: 1,
                v: 1,
                t: 5
            }, {
                p: [83, 2, -274],
                s: [1, 22, 57],
                pe: 1,
                v: 1,
                t: 5
            }, {
                p: [71, -1, -274],
                s: [22, 2, 54],
                c: 7677719,
                t: 5
            }, {
                p: [-52, -28, -322],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, .53, 0]
            }, {
                p: [-48, -28, -315],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [3.14, -.7, 3.14]
            }, {
                p: [87, 0, -287],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.87, 0]
            }, {
                p: [251, 0, -414],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [-3.14, -.71, -3.14]
            }, {
                p: [68, 0, -114],
                s: [12, 12, 12],
                id: 8
            }, {
                p: [228, 48, -124],
                s: [10, 2, 6],
                col: 1
            }, {
                p: [223, 0, -143],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.34, 0]
            }, {
                p: [261, 0, -321],
                s: [57, 26, 25],
                id: 19,
                col: 1,
                r: [0, 1.57, 0]
            }, {
                p: [261, 0, -321],
                s: [25, 2, 57],
                v: 1,
                t: 5
            }, {
                p: [261, 24, -321],
                s: [25, 2, 57],
                pe: 1,
                v: 1,
                t: 5
            }, {
                p: [273, 2, -321],
                s: [1, 22, 57],
                pe: 1,
                v: 1,
                t: 5
            }, {
                p: [249, 2, -321],
                s: [1, 22, 55],
                pe: 1,
                t: 5
            }, {
                p: [261, 0, -321],
                s: [23, 1, 54],
                c: 9518129,
                t: 5
            }, {
                p: [275, 0, -291],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [-3.14, -.19, -3.14]
            }, {
                p: [-202, 0, -485],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-190, 12, -485],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-187, 0, -494],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-156, 0, -514],
                s: [57, 26, 25],
                id: 19,
                col: 1
            }, {
                p: [-156, 0, -527],
                s: [57, 52, 2],
                c: 1776411,
                t: 5
            }, {
                p: [-153, 0, -514],
                s: [63, 1, 23],
                c: 1776411,
                t: 5
            }, {
                p: [-217, 0, -544],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [3.14, -.52, 3.14]
            }, {
                p: [-187, 0, -524],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [3.14, -.52, 3.14]
            }, {
                p: [-155, 1, -502],
                s: [54, 24, 2],
                v: 1,
                c: 1776411,
                t: 5
            }, {
                p: [-155, 24, -514],
                s: [57, 2, 25],
                pe: 1,
                v: 1,
                c: 1776411,
                t: 5
            }, {
                p: [-245, 0, -453],
                s: [4, 11, 23]
            }, {
                p: [324, -18, -158],
                s: [4, 25, 80]
            }, {
                p: [260, -18, -158],
                s: [4, 25, 80]
            }, {
                p: [292, -14, -175],
                s: [61, 14, 44],
                id: 9,
                c: "#ffffff",
                t: 1,
                d: 3
            }, {
                p: [-305, 10, -521],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-270, 10, -445],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-265, 0, -375],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-165, 0, -404],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-275, 0, -453],
                s: [4, 16, 24]
            }, {
                p: [324, 7, -150],
                s: [4, 2, 22]
            }, {
                p: [324, 7, -182],
                s: [4, 2, 16]
            }, {
                p: [-245, 16, -522],
                s: [4, 2, 12]
            }, {
                p: [-245, 16, -479],
                s: [4, 2, 12]
            }, {
                p: [-245, 0, -507],
                s: [4, 16, 80]
            }, {
                p: [-245, 0, -467],
                s: [5, 17, 5]
            }, {
                p: [-275, 16, -451],
                s: [4, 2, 12]
            }, {
                p: [228, 0, -98],
                s: [10, 48, 18]
            }, {
                p: [292, -1, -112],
                s: [68, 1, 22],
                t: 1
            }, {
                p: [292, -18, -121],
                s: [60, 19, 6],
                c: "#525252",
                t: 5
            }, {
                p: [228, 20, -109],
                s: [10, 28, 4]
            }, {
                p: [292, 36, -64],
                s: [50, 2, 80],
                c: "#3e3e3e",
                t: 5
            }, {
                p: [292, -3, -73],
                s: [50, 4, 90],
                c: "#525252",
                t: 5
            }, {
                p: [259, 0, -63],
                s: [18, 37, 80]
            }, {
                p: [380, 0, -63],
                s: [128, 37, 80]
            }, {
                p: [305, 10, -69],
                s: [66, 22, 2],
                col: 1,
                r: [0, -1.57, 0],
                c: "#2c3f55",
                t: 5
            }, {
                p: [292, 10, -69],
                s: [66, 2, 24],
                col: 1,
                r: [0, -1.57, 0],
                c: 2899797,
                t: 5
            }, {
                p: [292, 32, -69],
                s: [66, 2, 28],
                col: 1,
                r: [0, -1.57, 0],
                c: "#2c3f55",
                t: 5
            }, {
                p: [292, 3, -78],
                s: [4, 4, 27],
                r: [0, -1.57, 0],
                c: 8551805,
                t: 5
            }, {
                p: [303, 1, -78],
                s: [8, 8, 4],
                r: [0, -1.57, 0],
                c: 1447446,
                t: 5
            }, {
                p: [298, 1, -78],
                s: [8, 8, 4],
                r: [0, -1.57, 0],
                c: 1447446,
                t: 5
            }, {
                p: [281, 1, -78],
                s: [8, 8, 4],
                r: [0, -1.57, 0],
                c: 1447446,
                t: 5
            }, {
                p: [286, 1, -78],
                s: [8, 8, 4],
                r: [0, -1.57, 0],
                c: 1447446,
                t: 5
            }, {
                p: [292, 6, -67],
                s: [66, 4, 5],
                col: 1,
                r: [0, -1.57, 0],
                c: 8551805,
                t: 5
            }, {
                p: [292, 6, -101],
                s: [3, 4, 24],
                col: 1,
                r: [0, -1.57, 0],
                c: 8551805,
                t: 5
            }, {
                p: [285, 12, -102],
                s: [2, 20, 12],
                col: 1,
                r: [0, -1.57, 0],
                c: "#6b6b6b",
                t: 5
            }, {
                p: [306, 12, -97],
                s: [12, 20, 2],
                col: 1,
                r: [0, -1.57, 0],
                c: "#6b6b6b",
                t: 5
            }, {
                p: [292, 5, -101],
                s: [4, 1, 27],
                col: 1,
                r: [0, -1.57, 0],
                c: 8551805,
                t: 5
            }, {
                p: [282, 7, -102],
                s: [2, 2, 2],
                col: 1,
                r: [0, -1.57, 0],
                c: 16730880,
                e: 16711680,
                o: .8,
                t: 5
            }, {
                p: [302, 7, -102],
                s: [2, 2, 2],
                col: 1,
                r: [0, -1.57, 0],
                c: "#ff4b00",
                e: 16711680,
                o: .8,
                t: 5
            }, {
                p: [316, 0, -64],
                s: [2, 36, 80],
                c: "#3e3e3e",
                t: 5
            }, {
                p: [292, 0, -38],
                s: [46, 36, 1],
                c: 0,
                t: 5
            }, {
                p: [292, 0, -57],
                s: [46, 36, 1],
                c: 0,
                o: .4,
                t: 5
            }, {
                p: [292, 0, -73],
                s: [46, 36, 1],
                c: 0,
                o: .4,
                t: 5
            }, {
                p: [292, 0, -73],
                s: [46, 36, 1],
                c: 0,
                o: .4,
                t: 5
            }, {
                p: [292, -18, -139],
                s: [60, 4, 30],
                c: "#b6b6b6",
                t: 1
            }, {
                p: [292, 0, -103],
                s: [46, 36, 1],
                c: 0,
                o: .4,
                t: 5
            }, {
                p: [292, 0, -91],
                s: [46, 36, 1],
                c: 0,
                o: .4,
                t: 5
            }, {
                p: [228, 0, -142],
                s: [10, 48, 14]
            }, {
                p: [228, 19, -133],
                s: [10, 29, 4]
            }, {
                p: [228, 26, -121],
                s: [10, 22, 20]
            }, {
                p: [222, 0, -131],
                s: [7, 1, 4],
                col: 1
            }, {
                p: [-156, 0, -488],
                s: [57, 26, 25],
                id: 17
            }, {
                p: [-265, 10, -443],
                s: [4, 7, 4],
                id: 16
            }, {
                p: [320, 0, -121],
                s: [2, 50, 2],
                t: 2
            }, {
                p: [317, -14, -130],
                s: [4, 1, 4],
                col: 1,
                c: "#c5c5c5"
            }, {
                p: [313, 1, -100],
                s: [4, 7, 4],
                id: 16
            }, {
                p: [315, 1, -119],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-54, 0, -118],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.87, 0]
            }, {
                p: [236, 0, -94],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [236, 0, -144],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.86, 0]
            }, {
                p: [-253, 73, -557],
                s: [69, 0, 28],
                id: 11,
                col: 1,
                r: [1.57, 0, 0]
            }, {
                p: [-250, 10, -544],
                s: [4, 7, 4],
                id: 16
            }, {
                p: [-129, 2, -514],
                s: [1, 24, 23],
                col: 1,
                c: 0,
                o: .7000000000000001,
                t: 5
            }, {
                p: [-122, 58, -524],
                s: [6, 14, 6],
                t: 2
            }, {
                p: [-83, 62, -459],
                s: [6, 16, 6],
                t: 2
            }, {
                p: [-156, 26, -514],
                s: [57, 26, 25],
                id: 17
            }, {
                p: [-136, -28, -350],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, .7, 0]
            }, {
                p: [176, 0, -10],
                s: [2, 18, 4],
                c: 14145495,
                t: 2
            }, {
                p: [-56, 0, -128],
                s: [2, 18, 4],
                c: 14145495,
                t: 2
            }, {
                p: [138, 0, -286],
                s: [5, 19, 2],
                t: 2
            }, {
                p: [145, 0, -286],
                s: [5, 18, 2],
                t: 2
            }, {
                p: [26, 0, -350],
                s: [5, 18, 2],
                t: 2
            }, {
                p: [309, 0, -306],
                s: [2, 19, 4],
                t: 2
            }, {
                p: [308, 0, -316],
                s: [2, 19, 4],
                t: 2
            }, {
                p: [-260, 0, -439],
                s: [26, 16, 4]
            }, {
                p: [-269, 10, -452],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [3.14, .7, -3.14]
            }, {
                p: [-212, 0, -385],
                s: [51, 15, 20],
                id: 7,
                col: 1,
                r: [-3.14, 0, -3.14]
            }, {
                p: [-212, 0, -384],
                s: [49, 8, 16],
                v: 1
            }, {
                p: [-217, 8, -384],
                s: [24, 7, 16],
                v: 1
            }, {
                p: [-155, 0, -412],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [3.14, -.87, 3.14]
            }, {
                p: [-241, 0, -388],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [3.14, -.7, 3.14]
            }, {
                p: [-192, 0, -371],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [3.14, -.7, 3.14]
            }, {
                p: [279, 10, -69],
                s: [66, 22, 2],
                col: 1,
                r: [0, -1.57, 0],
                c: "#2c3f55",
                t: 5
            }, {
                p: [343, 32, -376],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [343, 44, -369],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [183, 88, -4],
                s: [4, 2, 54],
                t: 2
            }, {
                p: [199, 88, -4],
                s: [4, 2, 54],
                t: 2
            }, {
                p: [190, 90, -27],
                s: [26, 1, 4],
                c: 14277081,
                t: 2
            }, {
                p: [190, 90, -20],
                s: [25, 1, 4],
                t: 2
            }, {
                p: [191, 90, -12],
                s: [26, 1, 4],
                c: 13158600,
                t: 2
            }, {
                p: [191, 90, 19],
                s: [26, 1, 4],
                t: 2
            }, {
                p: [190, 90, -5],
                s: [24, 1, 4],
                t: 2
            }, {
                p: [190, 90, 12],
                s: [23, 1, 4],
                t: 2
            }, {
                p: [190, 90, 4],
                s: [23, 1, 4],
                c: 12303291,
                t: 2
            }, {
                p: [170, 87, -87],
                s: [6, 19, 6],
                t: 2
            }, {
                p: [177, 43, -5],
                s: [2, 13, 4],
                col: 1,
                c: 0
            }, {
                p: [318, 1, -403],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.86, 0]
            }, {
                p: [324, 1, -410],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.69, 0]
            }, {
                p: [146, 0, 51],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.86, 0]
            }, {
                p: [18, 28, -520],
                s: [11, 3, 3]
            }, {
                p: [-17, 31, -520],
                s: [11, 3, 3]
            }, {
                p: [51, 31, -520],
                s: [11, 3, 3]
            }, {
                p: [18, 31, -521],
                s: [7, 16, 2],
                col: 1,
                c: 0
            }, {
                p: [51, 34, -521],
                s: [7, 16, 2],
                col: 1,
                c: 0
            }, {
                p: [-17, 34, -521],
                s: [7, 16, 2],
                col: 1,
                c: 0
            }, {
                p: [150, 7, -425],
                s: [18, 7, 4]
            }, {
                p: [100, 7, -425],
                s: [10, 7, 4]
            }, {
                p: [101, 10, -461],
                s: [8, 6, 4]
            }, {
                p: [112, -28, -461],
                s: [58, 36, 4]
            }, {
                p: [123, 4, -443],
                s: [36, 1, 32]
            }, {
                p: [143, 4, -443],
                s: [4, 10, 32]
            }, {
                p: [103, 4, -443],
                s: [4, 10, 32]
            }, {
                p: [143, 14, -435],
                s: [4, 2, 9]
            }, {
                p: [103, 14, -449],
                s: [4, 2, 9]
            }, {
                p: [103, 14, -433],
                s: [4, 2, 9]
            }, {
                p: [123, 8, -443],
                s: [36, 2, 36],
                id: 9,
                t: 1,
                d: 3
            }, {
                p: [152, 14, -425],
                s: [8, 2, 4]
            }, {
                p: [139, 1, -444],
                s: [4, 3, 34],
                t: 2
            }, {
                p: [107, 1, -444],
                s: [4, 3, 34],
                t: 2
            }, {
                p: [139, -1, -455],
                s: [2, 2, 14],
                col: 1,
                r: [-.7, 0, 0],
                c: 13948116,
                t: 2
            }, {
                p: [107, -1, -455],
                s: [2, 2, 14],
                col: 1,
                r: [-.7, 0, 0],
                c: 14277081,
                t: 2
            }, {
                p: [107, -1, -429],
                s: [2, 2, 14],
                col: 1,
                r: [.7, 0, 0],
                c: 15132390,
                t: 2
            }, {
                p: [139, -1, -430],
                s: [2, 2, 14],
                col: 1,
                r: [.7, 0, 0],
                c: 14803425,
                t: 2
            }, {
                p: [154, 8, -408],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.87, 0]
            }, {
                p: [101, 8, -419],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.87, 0]
            }, {
                p: [-241, 0, -453],
                s: [4, 8, 25],
                col: 1
            }, {
                p: [-237, 0, -453],
                s: [4, 5, 25],
                col: 1
            }, {
                p: [-233, 0, -453],
                s: [4, 2, 25]
            }, {
                p: [-236, 0, -453],
                s: [14, 11, 23],
                id: 9,
                v: 1,
                t: 1,
                d: 2
            }, {
                p: [-193, 0, -494],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [-3.14, .53, 3.14]
            }, {
                p: [369, 81, -121],
                s: [4, 3, 17],
                col: 1
            }, {
                p: [-148, 101, 97],
                s: [20, 2, 4],
                col: 1
            }, {
                p: [-238, -1, -586],
                s: [175, 90, 11]
            }, {
                p: [-280, 89, -586],
                s: [22, 4, 11],
                col: 1
            }, {
                p: [-252, 50, 27],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [248, 15, -574],
                s: [129, 75, 11]
            }, {
                p: [223, 90, -574],
                s: [21, 3, 11],
                col: 1
            }, {
                p: [253, 90, -574],
                s: [21, 2, 11],
                col: 1
            }, {
                p: [287, 90, -574],
                s: [17, 4, 11],
                col: 1
            }, {
                p: [-249, 124, -103],
                s: [12, 4, 12],
                col: 1,
                c: 12499642
            }, {
                p: [-246, 124, -84],
                s: [6, 2, 12],
                col: 1,
                c: 14145495
            }, {
                p: [-178, 101, 97],
                s: [13, 2, 4],
                col: 1
            }, {
                p: [-207, 101, 97],
                s: [13, 3, 4],
                col: 1
            }, {
                p: [-237, 101, 97],
                s: [16, 2, 4],
                col: 1
            }, {
                p: [-260, 101, 73],
                s: [4, 2, 17],
                col: 1
            }, {
                p: [-260, 101, 41],
                s: [4, 2, 13],
                col: 1
            }, {
                p: [-260, 101, 12],
                s: [4, 3, 11],
                col: 1
            }, {
                p: [-260, 101, -21],
                s: [4, 2, 23],
                col: 1
            }, {
                p: [-243, 91, -84],
                s: [6, 3, 10],
                c: 12171705
            }, {
                p: [-159, 77, -156],
                s: [14, 4, 6],
                col: 1
            }, {
                p: [-185, 77, -156],
                s: [11, 3, 6],
                col: 1
            }, {
                p: [-220, 77, -158],
                s: [14, 3, 10],
                col: 1
            }, {
                p: [-278, 77, -226],
                s: [23, 4, 6],
                col: 1
            }, {
                p: [-310, 77, -156],
                s: [27, 2, 6],
                col: 1
            }, {
                p: [357, 98, -450],
                s: [16, 3, 16],
                col: 1
            }, {
                p: [352, 98, -487],
                s: [6, 4, 12],
                col: 1
            }, {
                p: [369, 81, -235],
                s: [4, 3, 17],
                col: 1
            }, {
                p: [369, 81, -202],
                s: [4, 2, 11],
                col: 1
            }, {
                p: [369, 81, -165],
                s: [4, 2, 21],
                col: 1
            }, {
                p: [328, 37, -63],
                s: [156, 44, 80]
            }, {
                p: [347, 81, -101],
                s: [13, 2, 4],
                col: 1
            }, {
                p: [257, 81, -100],
                s: [14, 3, 6],
                col: 1
            }, {
                p: [318, 81, -101],
                s: [16, 3, 4],
                col: 1
            }, {
                p: [285, 81, -101],
                s: [14, 3, 4],
                col: 1
            }, {
                p: [361, 50, -188],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [361, 50, -176],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-242, 89, -586],
                s: [22, 3, 11],
                col: 1
            }, {
                p: [-200, 89, -586],
                s: [18, 4, 11],
                col: 1
            }, {
                p: [-256, 77, -156],
                s: [17, 4, 6],
                col: 1
            }, {
                p: [-234, 77, -226],
                s: [16, 4, 6],
                col: 1
            }, {
                p: [-319, 77, -226],
                s: [20, 3, 6],
                col: 1
            }, {
                p: [-193, 77, -226],
                s: [19, 2, 6],
                col: 1
            }, {
                p: [-151, 77, -226],
                s: [19, 3, 6],
                col: 1
            }, {
                p: [-171, 18, 51],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.7, 0]
            }, {
                p: [-118, 116, -197],
                s: [9, 3, 52],
                c: 11513775
            }, {
                p: [-118, 116, -197],
                s: [52, 3, 9],
                c: 9868950
            }, {
                p: [-143, 0, -49],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [-3.14, -1.05, -3.14]
            }, {
                p: [-348, 153, -230],
                s: [11, 4, 12],
                col: 1
            }, {
                p: [-349, 153, -276],
                s: [13, 4, 12],
                col: 1
            }, {
                p: [-392, 153, -230],
                s: [11, 4, 12],
                col: 1
            }, {
                p: [-390, 153, -276],
                s: [15, 4, 12],
                col: 1
            }, {
                p: [-370, 110, -253],
                s: [72, 2, 76],
                t: 2
            }, {
                p: [-370, 106, -253],
                s: [67, 4, 4],
                t: 2
            }, {
                p: [-370, 106, -235],
                s: [67, 4, 4],
                t: 2
            }, {
                p: [-370, 106, -272],
                s: [67, 4, 4],
                t: 2
            }, {
                p: [-370, 106, -253],
                s: [4, 4, 72],
                t: 2
            }, {
                p: [-354, 106, -253],
                s: [4, 4, 72],
                t: 2
            }, {
                p: [-387, 106, -253],
                s: [4, 4, 72],
                t: 2
            }, {
                p: [-343, 123, -254],
                s: [2, 16, 6],
                col: 1,
                c: 0
            }, {
                p: [-345, 153, -252],
                s: [5, 3, 12],
                col: 1
            }, {
                p: [-368, 153, -226],
                s: [14, 2, 4],
                col: 1
            }, {
                p: [-368, 153, -280],
                s: [11, 3, 4],
                col: 1
            }, {
                p: [-319, 103, -587],
                s: [62, 2, 67],
                c: 12500670,
                t: 2
            }, {
                p: [-319, 100, -587],
                s: [4, 3, 63],
                c: 14802654,
                t: 2
            }, {
                p: [-334, 100, -587],
                s: [4, 3, 63],
                c: 14276053,
                t: 2
            }, {
                p: [-303, 100, -587],
                s: [4, 3, 63],
                c: 14474460,
                t: 2
            }, {
                p: [-319, 100, -587],
                s: [58, 3, 3],
                c: 12829635,
                t: 2
            }, {
                p: [-319, 100, -569],
                s: [58, 3, 3],
                c: 13158600,
                t: 2
            }, {
                p: [-319, 100, -603],
                s: [58, 3, 3],
                c: 13619151,
                t: 2
            }, {
                p: [183, 85, -28],
                s: [2, 2, 11],
                col: 1,
                r: [-.7, 0, 0],
                t: 2
            }, {
                p: [199, 85, -28],
                s: [2, 2, 11],
                col: 1,
                r: [-.7, 0, 0],
                t: 2
            }, {
                p: [199, 85, 20],
                s: [2, 2, 11],
                col: 1,
                r: [.7, 0, 0],
                t: 2
            }, {
                p: [183, 85, 20],
                s: [2, 2, 11],
                col: 1,
                r: [.7, 0, 0],
                t: 2
            }, {
                p: [270, -14, -130],
                s: [12, 12, 12],
                id: 8
            }, {
                p: [-231, 0, -398],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -1.05, 0]
            }, {
                p: [-202, 0, -397],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -1.05, 0]
            }, {
                p: [-260, 16, -439],
                s: [12, 2, 4]
            }, {
                p: [-245, 0, -439],
                s: [5, 17, 5]
            }, {
                p: [-275, 0, -439],
                s: [5, 17, 5]
            }, {
                p: [-236, 0, -467],
                s: [14, 13, 3]
            }, {
                p: [-236, 0, -439],
                s: [14, 13, 3]
            }, {
                p: [-239, 0, -472],
                s: [6, 8, 6],
                id: 2,
                r: [-3.14, 0, -3.14]
            }, {
                p: [-229, 0, -439],
                s: [4, 14, 4]
            }, {
                p: [-229, 0, -467],
                s: [4, 14, 4]
            }, {
                p: [-178, 0, -361],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [3.14, -.7, 3.14]
            }, {
                p: [-203, 0, -372],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [.01, -1.39, .01]
            }, {
                p: [-221, 0, -371],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [.01, -1.39, .01]
            }, {
                p: [-232, 1, -372],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, 1.23, .01]
            }, {
                p: [-184, 0, -388],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.52, 0]
            }, {
                p: [-185, 0, -378],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [-3.14, -.88, -3.14]
            }, {
                p: [-227, 0, -357],
                s: [4, 19, 2],
                t: 2
            }, {
                p: [-217, 0, -356],
                s: [4, 19, 2],
                t: 2
            }, {
                p: [-222, 0, -357],
                s: [4, 14, 2],
                t: 2
            }, {
                p: [144, -28, -455],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -1.21, 0]
            }, {
                p: [-239, 0, -479],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -.88, 0]
            }, {
                p: [260, 7, -182],
                s: [4, 2, 16]
            }, {
                p: [260, 7, -150],
                s: [4, 2, 22]
            }, {
                p: [335, 139, -35],
                s: [12, 4, 6],
                col: 1
            }, {
                p: [362, 139, -62],
                s: [6, 4, 12],
                col: 1
            }, {
                p: [212, 16, -461],
                s: [20, 2, 4]
            }, {
                p: [143, 14, -450],
                s: [4, 2, 9]
            }, {
                p: [268, 0, -64],
                s: [2, 36, 80],
                c: "#3e3e3e",
                t: 5
            }, {
                p: [-69, -32, -345],
                s: [150, 4, 76],
                t: 1
            }, {
                p: [-196, -2, -213],
                s: [34, 2, 32],
                t: 1
            }, {
                p: [-210, 42, -361],
                s: [76, 1, 12],
                t: 2
            }, {
                p: [-247, 38, -360],
                s: [2, 2, 12],
                col: 1,
                r: [.7, 0, 0],
                t: 2
            }, {
                p: [-210, 38, -360],
                s: [2, 2, 12],
                col: 1,
                r: [.7, 0, 0],
                t: 2
            }, {
                p: [-174, 38, -360],
                s: [2, 2, 12],
                col: 1,
                r: [.7, 0, 0],
                t: 2
            }, {
                p: [-178, 43, -362],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-184, 43, -360],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-180, 51, -360],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-228, 28, -368],
                s: [1, 13, 1],
                col: 1,
                c: 11645361,
                t: 2
            }, {
                p: [-215, 0, -395],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -1.05, 0]
            }, {
                p: [-415, 0, -444],
                s: [58, 127, 90],
                c: 10986917
            }, {
                p: [-394, 127, -406],
                s: [16, 3, 14],
                col: 1,
                c: 11645361
            }, {
                p: [-394, 127, -481],
                s: [16, 4, 16],
                col: 1,
                c: 11645361
            }, {
                p: [-394, 127, -444],
                s: [16, 3, 16],
                col: 1,
                c: 11184810
            }, {
                p: [-434, 127, -407],
                s: [20, 3, 16],
                col: 1,
                c: 10855331
            }, {
                p: [-436, 127, -481],
                s: [16, 3, 16],
                col: 1,
                c: 11645361
            }, {
                p: [-210, 41, -368],
                s: [76, 2, 2],
                t: 2
            }, {
                p: [-345, 72, -526],
                s: [40, 3, 3],
                c: "#ffffff",
                t: 2
            }, {
                p: [-345, 72, -540],
                s: [40, 3, 3],
                c: "#ffffff",
                t: 2
            }, {
                p: [-345, 72, -533],
                s: [3, 3, 40],
                c: "#ffffff",
                t: 2
            }, {
                p: [-352, 90, -526],
                s: [40, 3, 3],
                col: 1,
                r: [0, 0, 1.05],
                c: "#ffffff",
                t: 2
            }, {
                p: [-345, 72, -526],
                s: [3, 42, 3],
                c: "#ffffff",
                t: 2
            }, {
                p: [-337, 90, -526],
                s: [40, 3, 3],
                col: 1,
                r: [0, 0, -1.05],
                c: "#ffffff",
                t: 2
            }, {
                p: [-337, 90, -540],
                s: [40, 3, 3],
                col: 1,
                r: [0, 0, -1.05],
                c: "#ffffff",
                t: 2
            }, {
                p: [-352, 90, -540],
                s: [40, 3, 3],
                col: 1,
                r: [0, 0, 1.05],
                c: "#ffffff",
                t: 2
            }, {
                p: [-345, 72, -540],
                s: [3, 38, 3],
                c: "#ffffff",
                t: 2
            }, {
                p: [-345, 86, -533],
                s: [3, 3, 33],
                c: "#ffffff",
                t: 2
            }, {
                p: [-345, 86, -540],
                s: [21, 3, 3],
                c: "#ffffff",
                t: 2
            }, {
                p: [-345, 86, -526],
                s: [21, 3, 3],
                c: "#ffffff",
                t: 2
            }, {
                p: [-345, 72, -514],
                s: [3, 17, 3],
                col: 1,
                r: [-.26, 0, 0],
                c: "#ffffff",
                t: 2
            }, {
                p: [-345, 72, -552],
                s: [3, 17, 3],
                col: 1,
                r: [.26, 0, 0],
                c: "#ffffff",
                t: 2
            }, {
                p: [-356, 98, -362],
                s: [40, 3, 3],
                c: "#ffffff",
                t: 2
            }, {
                p: [-356, 98, -376],
                s: [40, 3, 3],
                c: "#ffffff",
                t: 2
            }, {
                p: [-356, 98, -369],
                s: [3, 3, 40],
                c: "#ffffff",
                t: 2
            }, {
                p: [-363, 116, -362],
                s: [40, 3, 3],
                col: 1,
                r: [0, 0, 1.05],
                c: "#ffffff",
                t: 2
            }, {
                p: [-356, 98, -362],
                s: [3, 42, 3],
                c: "#ffffff",
                t: 2
            }, {
                p: [-348, 116, -362],
                s: [40, 3, 3],
                col: 1,
                r: [0, 0, -1.05],
                c: "#ffffff",
                t: 2
            }, {
                p: [-348, 116, -376],
                s: [40, 3, 3],
                col: 1,
                r: [0, 0, -1.05],
                c: "#ffffff",
                t: 2
            }, {
                p: [-363, 116, -376],
                s: [40, 3, 3],
                col: 1,
                r: [0, 0, 1.05],
                c: "#ffffff",
                t: 2
            }, {
                p: [-356, 98, -376],
                s: [3, 42, 3],
                c: "#ffffff",
                t: 2
            }, {
                p: [-356, 112, -369],
                s: [3, 3, 33],
                c: "#ffffff",
                t: 2
            }, {
                p: [-356, 112, -376],
                s: [21, 3, 3],
                c: "#ffffff",
                t: 2
            }, {
                p: [-356, 112, -362],
                s: [21, 3, 3],
                c: "#ffffff",
                t: 2
            }, {
                p: [-356, 140, -369],
                s: [3, 3, 20],
                c: "#ffffff",
                t: 2
            }, {
                p: [-359, 125, -369],
                s: [9, 11, 6],
                c: "#757575"
            }, {
                p: [-346, 151, -369],
                s: [41, 3, 3],
                col: 1,
                r: [0, 0, -2.45],
                c: "#ffffff",
                t: 2
            }, {
                p: [-327, 164, -369],
                s: [5, 2, 2],
                col: 1,
                r: [0, 0, .7],
                c: "#ffffff",
                t: 2
            }, {
                p: [-326, 132, -369],
                s: [1, 34, 1],
                c: "#ffffff",
                t: 2
            }, {
                p: [-326, 129, -369],
                s: [2, 3, 2],
                c: "#343434",
                t: 5
            }, {
                p: [-356, 98, -350],
                s: [3, 17, 3],
                col: 1,
                r: [-.26, 0, 0],
                c: "#ffffff",
                t: 2
            }, {
                p: [-356, 98, -388],
                s: [3, 17, 3],
                col: 1,
                r: [.26, 0, 0],
                c: "#ffffff",
                t: 2
            }, {
                p: [-360, 136, -369],
                s: [5, 3, 6],
                c: "#757575"
            }, {
                p: [-386, 90, -445],
                s: [2, 19, 6],
                col: 1,
                c: 0
            }, {
                p: [-386, 88, -445],
                s: [6, 4, 12],
                c: 11183011
            }, {
                p: [-216, 48, -63],
                s: [8, 2, 2],
                col: 1,
                r: [0, 0, .7],
                t: 2
            }, {
                p: [-207, 34, -63],
                s: [1, 18, 1],
                col: 1,
                c: 11645361,
                t: 2
            }, {
                p: [378, 98, -463],
                s: [40, 3, 3],
                c: "#ffffff",
                t: 2
            }, {
                p: [378, 98, -477],
                s: [40, 3, 3],
                c: "#ffffff",
                t: 2
            }, {
                p: [378, 98, -470],
                s: [3, 3, 40],
                c: "#ffffff",
                t: 2
            }, {
                p: [371, 116, -463],
                s: [40, 3, 3],
                r: [0, 0, 1.05],
                c: "#ffffff",
                t: 2
            }, {
                p: [378, 98, -463],
                s: [3, 42, 3],
                c: "#ffffff",
                t: 2
            }, {
                p: [386, 116, -463],
                s: [40, 3, 3],
                r: [0, 0, -1.05],
                c: "#ffffff",
                t: 2
            }, {
                p: [386, 116, -477],
                s: [40, 3, 3],
                r: [0, 0, -1.05],
                c: "#ffffff",
                t: 2
            }, {
                p: [371, 116, -477],
                s: [40, 3, 3],
                r: [0, 0, 1.05],
                c: "#ffffff",
                t: 2
            }, {
                p: [378, 98, -477],
                s: [3, 42, 3],
                c: "#ffffff",
                t: 2
            }, {
                p: [378, 112, -470],
                s: [3, 3, 33],
                c: "#ffffff",
                t: 2
            }, {
                p: [378, 112, -477],
                s: [21, 3, 3],
                c: "#ffffff",
                t: 2
            }, {
                p: [378, 112, -463],
                s: [21, 3, 3],
                c: "#ffffff",
                t: 2
            }, {
                p: [378, 140, -470],
                s: [3, 3, 20],
                c: "#ffffff",
                t: 2
            }, {
                p: [383, 125, -470],
                s: [9, 11, 6],
                c: "#757575"
            }, {
                p: [367, 150, -470],
                s: [41, 3, 3],
                col: 1,
                r: [0, 0, -.7],
                c: "#ffffff",
                t: 2
            }, {
                p: [353, 165, -470],
                s: [5, 2, 2],
                col: 1,
                r: [0, 0, 2.45],
                c: "#522505",
                t: 5
            }, {
                p: [351, 131, -470],
                s: [1, 34, 1],
                c: "#522505",
                t: 5
            }, {
                p: [351, 128, -470],
                s: [2, 3, 2],
                c: "#343434",
                t: 5
            }, {
                p: [378, 98, -451],
                s: [3, 17, 3],
                r: [-.26, 0, 0],
                c: "#ffffff",
                t: 2
            }, {
                p: [378, 98, -489],
                s: [3, 17, 3],
                r: [.26, 0, 0],
                c: "#ffffff",
                t: 2
            }, {
                p: [383, 136, -470],
                s: [5, 3, 6],
                c: "#757575"
            }, {
                p: [311, 112, -508],
                s: [14, 4, 22],
                col: 1,
                c: "#b1b1b1"
            }, {
                p: [347, 112, -500],
                s: [22, 3, 6],
                col: 1,
                c: "#b1b1b1"
            }, {
                p: [307, 112, -539],
                s: [6, 3, 18],
                col: 1,
                c: "#b1b1b1"
            }, {
                p: [253, 0, -457],
                s: [12, 6, 12],
                id: 18,
                col: 1,
                r: [0, -1.04, 0]
            }, {
                p: [219, 0, -106],
                s: [4, 2, 3],
                col: 1
            }, {
                p: [234, 0, -112],
                s: [3, 1, 4],
                col: 1
            }, {
                p: [219, 0, -142],
                s: [3, 1, 4],
                col: 1
            }, {
                p: [313, 58, -449],
                s: [6, 10, 6],
                col: 1,
                t: 2
            }, {
                p: [393, 64, -477],
                s: [88, 34, 70]
            }, {
                p: [385, 98, -444],
                s: [18, 3, 4],
                col: 1
            }, {
                p: [411, 98, -444],
                s: [16, 3, 4],
                col: 1
            }, {
                p: [432, 98, -447],
                s: [10, 3, 10],
                col: 1
            }, {
                p: [388, 89, -435],
                s: [4, 4, 16],
                t: 2
            }, {
                p: [388, 85, -441],
                s: [2, 2, 14],
                col: 1,
                r: [-.7, 0, 0],
                t: 2
            }, {
                p: [282, -14, -128],
                s: [7, 1, 4],
                col: 1,
                c: "#c5c5c5"
            }, {
                p: [179, 67, -24],
                s: [4, 5, 15],
                col: 1
            }, {
                p: [-224, 0, -104],
                s: [31, 24, 54],
                c: 4276545,
                t: 5
            }, {
                p: [-18, 18, 36],
                s: [24, 36, 24],
                id: 23,
                col: 1,
                tm: 0
            }, {
                p: [-276, 10, -518],
                s: [24, 36, 24],
                id: 23,
                col: 1,
                tm: "1"
            }, {
                p: [96, 8, -421],
                s: [2, 6, 4],
                pe: 1,
                v: 1
            }, {
                p: [96, 0, -175],
                s: [110, 58, 44],
                v: 1
            }, {
                p: [342, 1, -411],
                s: [20, 54, 110],
                v: 1
            }, {
                p: [221, 0, -97],
                s: [4, 12, 12],
                pe: 1,
                v: 1
            }, {
                p: [320, 0, -120],
                s: [4, 7, 4],
                pe: 1,
                v: 1
            }, {
                p: [138, 0, -150],
                s: [4, 8, 6],
                pe: 1,
                v: 1
            }]
        }, {
            name: "Littletown",
            modURL: "",
            terrainSeed: "",
            terrainWidth: 2048,
            terrainHeight: 2048,
            terrainMntMlt: 1,
            terrainMntCol: "#a0a0a0",
            terrainGrsCol: "#4a6904",
            terrainDrtCol: "#8c6835",
            skyDome: !1,
            skyDomeCol0: "#3fb1b7",
            skyDomeCol1: "#00cffc",
            skyDomeCol2: "#1faedc",
            sizeMlt: 2,
            shadowR: 1024,
            ambient: 8093324,
            light: 5461350,
            sky: 6716054,
            fog: 7832738,
            fogD: 722.1829102596926,
            dthY: -100,
            camPos: [36, 53, 252],
            spawns: [
                [414, 0, -102],
                [-276, 0, 12],
                [-274, 0, 186],
                [270, 38, 32],
                [-156, 38, 33],
                [-95, 38, -4],
                [371, 0, 87],
                [141, 0, 337]
            ],
            objects: [{
                p: [138, 2, 6],
                s: [4, 36, 60],
                c: 12927811,
                t: 5
            }, {
                p: [205, 36, 30],
                s: [62, 2, 108],
                c: 7368816,
                t: 5
            }, {
                p: [238, 38, 45],
                s: [4, 38, 74],
                c: 16767158,
                t: 5
            }, {
                p: [170, 2, 123],
                s: [30, 116, 18],
                c: 7368816,
                t: 11
            }, {
                p: [-65, 2, 69],
                s: [4, 30, 10],
                c: 5799880,
                t: 5
            }, {
                p: [304, 2, -7],
                s: [2, 52, 12],
                id: 3,
                t: 2,
                d: 0
            }, {
                p: [138, 38, 3],
                s: [4, 6, 38],
                c: 12927811,
                t: 5
            }, {
                p: [138, 38, 81],
                s: [4, 6, 34],
                c: 12927811,
                t: 5
            }, {
                p: [138, 38, 43],
                s: [4, 46, 42],
                c: 12927811,
                t: 5
            }, {
                p: [138, 38, 104],
                s: [4, 40, 12],
                c: 12927811,
                t: 5
            }, {
                p: [138, 38, -20],
                s: [4, 51, 8],
                c: 12927811,
                t: 5
            }, {
                p: [138, 66, 3],
                s: [4, 21, 38],
                c: 12927811,
                t: 5
            }, {
                p: [138, 2, 81],
                s: [4, 36, 58],
                c: 12927811,
                t: 5
            }, {
                p: [138, 26, 44],
                s: [4, 12, 16],
                c: 12927811,
                t: 5
            }, {
                p: [220, 2, 112],
                s: [168, 74, 4],
                c: 12927811,
                t: 5
            }, {
                p: [205, 2, -26],
                s: [138, 88, 4],
                c: 12927811,
                t: 5
            }, {
                p: [297, 2, -26],
                s: [14, 88, 4],
                c: 12927811,
                t: 5
            }, {
                p: [282, 26, -26],
                s: [16, 64, 4],
                c: 12927811,
                t: 5
            }, {
                p: [302, 38, 16],
                s: [4, 46, 80],
                c: 12927811,
                t: 5
            }, {
                p: [302, 79, 74],
                s: [4, 3, 4],
                c: 12927811,
                t: 5
            }, {
                p: [302, 62, 64],
                s: [4, 20, 16],
                c: 12927811,
                t: 5
            }, {
                p: [302, 2, 25],
                s: [4, 36, 98],
                c: 12927811,
                t: 5
            }, {
                p: [302, 2, 100],
                s: [4, 36, 20],
                c: 12927811,
                t: 5
            }, {
                p: [302, 26, 82],
                s: [4, 12, 16],
                c: 12927811,
                t: 5
            }, {
                p: [238, 38, -16],
                s: [4, 38, 16],
                c: 16767158,
                t: 5
            }, {
                p: [238, 64, 0],
                s: [4, 12, 16],
                c: 16767158,
                t: 5
            }, {
                p: [176, 34, 98],
                s: [4, 42, 24],
                c: 16767158,
                t: 5
            }, {
                p: [291, 38, 84],
                s: [18, 38, 4],
                c: 16767158,
                t: 5
            }, {
                p: [262, 38, 84],
                s: [8, 38, 4],
                c: 16767158,
                t: 5
            }, {
                p: [274, 62, 84],
                s: [16, 14, 4],
                c: 16767158,
                t: 5
            }, {
                p: [216, 2, 84],
                s: [84, 74, 4],
                c: 16767158,
                t: 5
            }, {
                p: [256, 2, 98],
                s: [4, 36, 24],
                c: 16767158,
                t: 5
            }, {
                p: [238, 2, 67],
                s: [4, 24, 30],
                c: 16767158,
                t: 5
            }, {
                p: [238, 2, -5],
                s: [4, 24, 38],
                c: 16767158,
                t: 5
            }, {
                p: [238, 26, 29],
                s: [4, 12, 107],
                c: 16767158,
                t: 5
            }, {
                p: [157, 36, 43],
                s: [34, 2, 134],
                c: 7368816,
                t: 5
            }, {
                p: [270, 36, 30],
                s: [60, 2, 108],
                c: 7368816,
                t: 5
            }, {
                p: [279, 36, 97],
                s: [42, 2, 26],
                c: 7368816,
                t: 5
            }, {
                p: [220, 0, 43],
                s: [172, 2, 146],
                c: 7368816,
                t: 5
            }, {
                p: [183, 0, -75],
                s: [150, 2, 98],
                c: 7368816,
                t: 5
            }, {
                p: [158, 2, -31],
                s: [4, 30, 6],
                c: 12927811,
                t: 5
            }, {
                p: [158, 2, -74],
                s: [4, 30, 4],
                c: 12927811,
                t: 5
            }, {
                p: [158, 2, -117],
                s: [4, 30, 2],
                c: 12927811,
                t: 5
            }, {
                p: [158, 32, -73],
                s: [4, 12, 90],
                c: 12927811,
                t: 5
            }, {
                p: [254, 2, -60],
                s: [4, 42, 64],
                c: 12927811,
                t: 5
            }, {
                p: [254, 2, -113],
                s: [4, 42, 10],
                c: 12927811,
                t: 5
            }, {
                p: [254, 26, -100],
                s: [4, 18, 16],
                c: 12927811,
                t: 5
            }, {
                p: [206, 2, -120],
                s: [100, 42, 4],
                c: 12927811,
                t: 5
            }, {
                p: [158, 2, -96],
                s: [2, 30, 42],
                pe: 1,
                c: "#ffffff",
                t: 10
            }, {
                p: [170, 0, 125],
                s: [34, 2, 18],
                c: 7368816,
                t: 5
            }, {
                p: [260, 0, -100],
                s: [4, 2, 20],
                c: 7368816,
                t: 5
            }, {
                p: [308, 0, 82],
                s: [4, 2, 20],
                c: 7368816,
                t: 5
            }, {
                p: [-41, 0, -24],
                s: [4, 2, 20],
                c: 7368816,
                t: 5
            }, {
                p: [282, 0, -32],
                s: [20, 2, 4],
                c: 7368816,
                t: 5
            }, {
                p: [29, -1, 323],
                s: [106, 2, 845],
                c: 3750201,
                t: 5
            }, {
                p: [-65, 32, 115],
                s: [4, 12, 102],
                c: 5799880,
                t: 5
            }, {
                p: [-65, 2, 115],
                s: [4, 30, 10],
                c: 5799880,
                t: 5
            }, {
                p: [-65, 2, 161],
                s: [4, 30, 10],
                c: 5799880,
                t: 5
            }, {
                p: [-145, 2, 161],
                s: [4, 42, 10],
                c: 5799880,
                t: 5
            }, {
                p: [-145, 2, 102],
                s: [4, 42, 76],
                c: 5799880,
                t: 5
            }, {
                p: [-105, 2, 168],
                s: [84, 42, 4],
                c: 5799880,
                t: 5
            }, {
                p: [-145, 26, 148],
                s: [4, 18, 16],
                c: 5799880,
                t: 5
            }, {
                p: [-65, 2, 139],
                s: [2, 30, 42],
                pe: 1,
                t: 10
            }, {
                p: [-91, 0, 118],
                s: [116, 2, 108],
                c: 7368816,
                t: 5
            }, {
                p: [-113, 0, -16],
                s: [140, 2, 164],
                c: 7368816,
                t: 5
            }, {
                p: [-142, 2, 62],
                s: [30, 74, 4],
                c: 5799880,
                t: 5
            }, {
                p: [-78, 2, 62],
                s: [66, 74, 4],
                c: 5799880,
                t: 5
            }, {
                p: [-113, 2, -94],
                s: [136, 74, 4],
                c: 5799880,
                t: 5
            }, {
                p: [-47, 66, -16],
                s: [4, 10, 152],
                c: 5799880,
                t: 5
            }, {
                p: [-47, 38, -77],
                s: [4, 28, 30],
                c: 5799880,
                t: 5
            }, {
                p: [-47, 38, -3],
                s: [4, 28, 42],
                c: 5799880,
                t: 5
            }, {
                p: [-47, 38, 35],
                s: [4, 6, 34],
                c: 5799880,
                t: 5
            }, {
                p: [-47, 38, -43],
                s: [4, 6, 38],
                c: 5799880,
                t: 5
            }, {
                p: [-47, 38, 56],
                s: [4, 28, 8],
                c: 5799880,
                t: 5
            }, {
                p: [-47, 2, -62],
                s: [4, 36, 60],
                c: 5799880,
                t: 5
            }, {
                p: [-47, 26, -24],
                s: [4, 12, 16],
                c: 5799880,
                t: 5
            }, {
                p: [-177, 2, 62],
                s: [8, 74, 4],
                c: 5799880,
                t: 5
            }, {
                p: [-179, 2, 5],
                s: [4, 74, 110],
                c: 5799880,
                t: 5
            }, {
                p: [-179, 2, -79],
                s: [4, 74, 26],
                c: 5799880,
                t: 5
            }, {
                p: [-119, 26, 62],
                s: [16, 50, 4],
                c: 5799880,
                t: 5
            }, {
                p: [-165, 26, 62],
                s: [16, 50, 4],
                c: 5799880,
                t: 5
            }, {
                p: [-140, 2, -80],
                s: [4, 36, 24],
                c: 16767158,
                t: 5
            }, {
                p: [-105, 2, -66],
                s: [74, 74, 4],
                c: 16767158,
                t: 5
            }, {
                p: [-70, 34, -80],
                s: [4, 42, 24],
                c: 16767158,
                t: 5
            }, {
                p: [-179, 26, -58],
                s: [4, 12, 16],
                c: 5799880,
                t: 5
            }, {
                p: [-58, 36, -16],
                s: [20, 2, 152],
                c: 7368816,
                t: 5
            }, {
                p: [-134, 2, 32],
                s: [4, 28, 56],
                c: 16767158,
                t: 5
            }, {
                p: [-134, 2, -49],
                s: [4, 28, 30],
                c: 16767158,
                t: 5
            }, {
                p: [-134, 30, -2],
                s: [4, 8, 124],
                c: 16767158,
                t: 5
            }, {
                p: [-100, 36, -2],
                s: [64, 2, 124],
                c: 7368816,
                t: 5
            }, {
                p: [-157, 36, -3],
                s: [42, 2, 126],
                c: 7368816,
                t: 5
            }, {
                p: [-160, 36, -79],
                s: [36, 2, 26],
                c: 7368816,
                t: 5
            }, {
                p: [-179, 62, -58],
                s: [4, 14, 16],
                c: 5799880,
                t: 5
            }, {
                p: [-134, 38, -57],
                s: [4, 38, 14],
                c: 16767158,
                t: 5
            }, {
                p: [-134, 38, 13],
                s: [4, 38, 94],
                c: 16767158,
                t: 5
            }, {
                p: [-134, 60, -42],
                s: [4, 16, 16],
                c: 16767158,
                t: 5
            }, {
                p: [337, -2, 99],
                s: [4, 40, 4],
                c: 7692103,
                t: 5
            }, {
                p: [306, -2, 99],
                s: [4, 40, 4],
                c: 7692103,
                t: 5
            }, {
                p: [337, -2, 5],
                s: [4, 40, 4],
                c: 7692103,
                t: 5
            }, {
                p: [306, -2, 5],
                s: [4, 40, 4],
                c: 7692103,
                t: 5
            }, {
                p: [322, 34, 52],
                s: [36, 2, 100],
                c: 7692103,
                t: 5
            }, {
                p: [-199, 34, -47],
                s: [36, 2, 82],
                c: 7692103,
                t: 5
            }, {
                p: [-214, -1, -9],
                s: [4, 38, 4],
                c: 7692103,
                t: 5
            }, {
                p: [-214, -1, -85],
                s: [4, 38, 4],
                c: 7692103,
                t: 5
            }, {
                p: [-183, -1, -85],
                s: [4, 38, 4],
                c: 7692103,
                t: 5
            }, {
                p: [-183, -1, -9],
                s: [4, 38, 4],
                c: 7692103,
                t: 5
            }, {
                p: [132, 0, 44],
                s: [4, 2, 20],
                c: 7368816,
                t: 5
            }, {
                p: [-185, 0, -58],
                s: [4, 2, 20],
                c: 7368816,
                t: 5
            }, {
                p: [-151, 0, 148],
                s: [4, 2, 20],
                c: 7368816,
                t: 5
            }, {
                p: [-165, 0, 68],
                s: [18, 2, 4],
                c: 7368816,
                t: 5
            }, {
                p: [-113, 76, -16],
                s: [146, 4, 170],
                c: 5263440,
                t: 5
            }, {
                p: [-105, 44, 119],
                s: [94, 4, 112],
                c: 5263440,
                t: 5
            }, {
                p: [220, 75, 42],
                s: [165, 4, 137],
                c: 5263440,
                t: 5
            }, {
                p: [206, 44, -77],
                s: [108, 4, 98],
                col: 1,
                c: 5263440,
                t: 5
            }, {
                p: [-79, 2, -105],
                s: [30, 118, 18],
                c: 7368816,
                t: 11
            }, {
                p: [-79, 0, -107],
                s: [34, 2, 18],
                c: 7368816,
                t: 5
            }, {
                p: [32, 2, -207],
                s: [124, 74, 150],
                c: 12958048,
                t: 5
            }, {
                p: [32, 74, -207],
                s: [136, 4, 162],
                c: 5263440,
                t: 5
            }, {
                p: [32, 0, -207],
                s: [128, 2, 154],
                c: 7368816,
                t: 5
            }, {
                p: [94, -1, 159],
                s: [4, 26, 4],
                c: 7692103,
                t: 5
            }, {
                p: [94, -1, 217],
                s: [2, 24, 113],
                pe: 1,
                c: 7692103,
                t: 10
            }, {
                p: [246, -1, 159],
                s: [302, 24, 2],
                pe: 1,
                c: 7692103,
                t: 10
            }, {
                p: [-37, -1, 235],
                s: [2, 24, 58],
                c: 7692103,
                t: 10
            }, {
                p: [-37, -1, 205],
                s: [4, 26, 4],
                c: 7692103,
                t: 5
            }, {
                p: [-163, -1, 205],
                s: [254, 24, 2],
                c: 7692103,
                t: 10
            }, {
                p: [398, -1, 159],
                s: [4, 26, 4],
                c: 7692103,
                t: 5
            }, {
                p: [399, -1, 59],
                s: [2, 24, 206],
                c: 7692103,
                t: 10
            }, {
                p: [399, -1, -156],
                s: [4, 26, 4],
                c: 7692103,
                t: 5
            }, {
                p: [260, -1, -157],
                s: [340, 24, 2],
                c: 7692103,
                t: 10
            }, {
                p: [-161, -1, -157],
                s: [262, 24, 2],
                c: 7692103,
                t: 10
            }, {
                p: [-290, -1, 204],
                s: [4, 26, 4],
                c: 7692103,
                t: 5
            }, {
                p: [-291, -1, 24],
                s: [2, 24, 358],
                c: 7692103,
                t: 10
            }, {
                p: [-290, -1, -156],
                s: [4, 26, 4],
                c: 7692103,
                t: 5
            }, {
                p: [-181, 2, 3],
                s: [2, 52, 12],
                id: 3,
                t: 2,
                d: 2
            }, {
                p: [32, 0, -121],
                s: [48, 2, 18],
                c: 7368816,
                t: 5
            }, {
                p: [32, 39, -123],
                s: [46, 3, 19],
                col: 1,
                c: 5263440,
                t: 5
            }, {
                p: [-251, -1, 173],
                s: [2, 24, 63],
                pe: 1,
                c: 7692103,
                t: 10
            }, {
                p: [-267, 0, 73],
                s: [46, 30, 42],
                c: 5799880,
                t: 5
            }, {
                p: [-267, 30, 73],
                s: [54, 2, 50],
                c: 5395026,
                t: 5
            }, {
                p: [343, 0, -138],
                s: [52, 32, 36],
                c: 12927811,
                t: 5
            }, {
                p: [343, 32, -138],
                s: [56, 2, 40],
                c: 5263440,
                t: 5
            }, {
                p: [399, -1, -46],
                s: [4, 26, 4],
                c: 7692103,
                t: 5
            }, {
                p: [416, -1, -45],
                s: [30, 24, 2],
                c: 7692103,
                t: 10
            }, {
                p: [431, -1, -46],
                s: [4, 26, 4],
                c: 7692103,
                t: 5
            }, {
                p: [432, -1, -101],
                s: [2, 24, 110],
                c: 7692103,
                t: 10
            }, {
                p: [431, -1, -156],
                s: [4, 26, 4],
                c: 7692103,
                t: 5
            }, {
                p: [-250, -1, 16],
                s: [8, 24, 72],
                pe: 1,
                c: 6984507,
                t: 5
            }, {
                p: [-213, -1, -120],
                s: [8, 10, 20],
                pe: 1,
                c: 6984507,
                t: 5
            }, {
                p: [-232, 26, -143],
                s: [58, 2, 32],
                c: 7039851,
                t: 5
            }, {
                p: [-232, 0, -143],
                s: [52, 26, 26],
                c: 5799880,
                t: 5
            }, {
                p: [-233, -1, 86],
                s: [22, 10, 8],
                c: 6984507,
                t: 5
            }, {
                p: [313, -1, -134],
                s: [8, 10, 44],
                c: 6984507,
                t: 5
            }, {
                p: [-144, -1, -154],
                s: [124, 10, 5],
                c: 6984507,
                t: 5
            }, {
                p: [435, 0, -16],
                s: [52, 32, 36],
                c: 12927811,
                t: 5
            }, {
                p: [435, 32, -16],
                s: [56, 2, 40],
                c: 5263440,
                t: 5
            }, {
                p: [399, -2, -100],
                s: [8, 20, 56],
                pe: 1,
                c: 6984507,
                t: 5
            }, {
                p: [342, -1, 52],
                s: [6, 10, 104],
                c: 6984507,
                t: 5
            }, {
                p: [-251, -1, 205],
                s: [4, 26, 4],
                c: 7692103,
                t: 5
            }, {
                p: [-251, -1, 106],
                s: [2, 24, 25],
                pe: 1,
                c: 7692103,
                t: 10
            }, {
                p: [151, 2, -99],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [340, 0, -114],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [108, 0, 152],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [108, 12, 152],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [191, 2, -112],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [246, 2, -50],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-137, 2, 116],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-104, 2, 160],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-56, 0, 198],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-56, 12, 198],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-140, 2, 106],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [249, 2, -59],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-202, 0, -148],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-92, 2, 160],
                s: [12, 12, 12],
                id: 8
            }, {
                p: [203, 2, -112],
                s: [12, 12, 12],
                id: 8
            }, {
                p: [130, 34, 79],
                s: [12, 2, 42],
                pe: 1,
                c: 7692103,
                t: 5
            }, {
                p: [136, 2, 105],
                s: [2, 42, 8],
                id: 3,
                t: 2,
                d: 2
            }, {
                p: [-47, 44, 35],
                s: [1, 22, 34],
                pe: 1,
                c: 9533019,
                t: 10
            }, {
                p: [-219, -1, 176],
                s: [4, 32, 4],
                c: 6574655,
                t: 5
            }, {
                p: [-219, 30, 176],
                s: [26, 26, 28],
                c: 6193707,
                t: 5
            }, {
                p: [-219, 20, 181],
                s: [2, 2, 8],
                c: 6574655,
                t: 5
            }, {
                p: [-219, 19, 188],
                s: [6, 6, 8],
                col: 1,
                c: 6193707,
                t: 5
            }, {
                p: [-224, 18, 176],
                s: [6, 2, 2],
                c: 6574655,
                t: 5
            }, {
                p: [-229, 17, 176],
                s: [6, 4, 6],
                col: 1,
                c: 6193707,
                t: 5
            }, {
                p: [375, -1, 138],
                s: [4, 32, 4],
                c: 6574655,
                t: 5
            }, {
                p: [375, 29, 138],
                s: [26, 26, 28],
                c: 6193707,
                t: 5
            }, {
                p: [375, 19, 133],
                s: [2, 2, 8],
                c: 6574655,
                t: 5
            }, {
                p: [375, 18, 127],
                s: [6, 6, 8],
                col: 1,
                c: 6193707,
                t: 5
            }, {
                p: [371, 15, 138],
                s: [6, 2, 2],
                c: 6574655,
                t: 5
            }, {
                p: [365, 14, 138],
                s: [6, 4, 6],
                col: 1,
                c: 6193707,
                t: 5
            }, {
                p: [37, 1, -78],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [49, 1, -78],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [44, 1, -66],
                s: [12, 12, 12],
                id: 8
            }, {
                p: [41, 13, -78],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [130, 2, 51],
                s: [16, 24, 2],
                pe: 1,
                c: 7692103,
                t: 5
            }, {
                p: [-39, 2, -31],
                s: [16, 24, 2],
                pe: 1,
                c: 7692103,
                t: 5
            }, {
                p: [29, 1, 225],
                s: [51, 15, 20],
                id: 7,
                col: 1
            }, {
                p: [-125, -1, 175],
                s: [4, 22, 2],
                col: 1,
                r: [-.17, 0, 0],
                c: 7692103,
                t: 5
            }, {
                p: [-113, 0, 175],
                s: [4, 22, 2],
                col: 1,
                r: [-.17, 0, 0],
                c: 7692103,
                t: 5
            }, {
                p: [154, 2, -46],
                s: [51, 15, 20],
                id: 7,
                col: 1,
                r: [-3.14, 0, -3.14]
            }, {
                p: [-60, 2, 115],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [169, 0, -150],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [90, 0, 175],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [395, 0, 28],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-246, 0, 112],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [29, 1, 225],
                s: [48, 8, 16],
                v: 1,
                t: 5
            }, {
                p: [34, 8, 225],
                s: [24, 8, 16],
                v: 1,
                t: 5
            }, {
                p: [148, 9, -45],
                s: [24, 8, 16],
                v: 1,
                t: 5
            }, {
                p: [154, 3, -45],
                s: [48, 8, 16],
                v: 1,
                t: 5
            }, {
                p: [138, 44, 3],
                s: [1, 22, 38],
                pe: 1,
                c: 7692103,
                t: 10
            }, {
                p: [117, 21, 180],
                s: [26, 28, 28],
                col: 1,
                c: 5204775,
                t: 5
            }, {
                p: [117, -1, 180],
                s: [4, 28, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [-64, -1, 235],
                s: [4, 31, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [-64, 21, 235],
                s: [26, 28, 28],
                col: 1,
                c: 7709238,
                t: 5
            }, {
                p: [-42, 23, 288],
                s: [27, 28, 24],
                pe: 1,
                c: 6193707,
                t: 5
            }, {
                p: [-37, -1, 265],
                s: [4, 26, 4],
                c: 7692103,
                t: 5
            }, {
                p: [94, -1, 275],
                s: [4, 26, 4],
                c: 7692103,
                t: 5
            }, {
                p: [-42, -1, 289],
                s: [4, 31, 4],
                pe: 1,
                c: 6574655,
                t: 5
            }, {
                p: [-315, -1, 13],
                s: [4, 31, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [-321, -1, -132],
                s: [4, 31, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [459, 14, -62],
                s: [26, 27, 35],
                col: 1,
                c: 6324784,
                t: 5
            }, {
                p: [207, 17, -188],
                s: [26, 25, 28],
                col: 1,
                c: 5204775,
                t: 5
            }, {
                p: [-102, 16, -181],
                s: [26, 28, 28],
                col: 1,
                c: 5204775,
                t: 5
            }, {
                p: [-320, 19, 175],
                s: [26, 28, 28],
                col: 1,
                c: 7709238,
                t: 5
            }, {
                p: [85, 0, 188],
                s: [2, 73, 2],
                c: 7368816,
                t: 5
            }, {
                p: [79, 71, 188],
                s: [10, 2, 2],
                c: 7368816,
                t: 5
            }, {
                p: [75, 70, 498],
                s: [10, 2, 4],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [75, 69, 188],
                s: [9, 1, 3],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [-27, 0, 332],
                s: [2, 73, 2],
                c: 7368816,
                t: 5
            }, {
                p: [-21, 71, 332],
                s: [10, 2, 2],
                c: 7368816,
                t: 5
            }, {
                p: [-17, 70, 332],
                s: [10, 2, 4],
                c: 7368816,
                t: 5
            }, {
                p: [-17, 69, 332],
                s: [9, 1, 3],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [-9, 0, -104],
                s: [2, 73, 2],
                c: 7368816,
                t: 5
            }, {
                p: [-9, 71, -99],
                s: [2, 2, 8],
                c: 7368816,
                t: 5
            }, {
                p: [-9, 69, -96],
                s: [2, 1, 8],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [-9, 70, -96],
                s: [3, 2, 9],
                c: 7368816,
                t: 5
            }, {
                p: [279, 15, 184],
                s: [26, 28, 28],
                col: 1,
                c: 6193707,
                t: 5
            }, {
                p: [131, -1, -22],
                s: [1, 7, 1],
                col: 1,
                c: 6984507,
                t: 5
            }, {
                p: [-321, 11, -132],
                s: [26, 30, 28],
                col: 1,
                c: 7709238,
                t: 5
            }, {
                p: [230, 2, 2],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [246, 2, 62],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [246, 38, 28],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [190, 38, 76],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-126, 38, 36],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-171, 38, -16],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-126, 2, -58],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-55, 2, -1],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-84, 38, 56],
                s: [4, 22, 2],
                col: 1,
                r: [.17, 0, 0],
                c: 7692103,
                t: 5
            }, {
                p: [-76, 38, 56],
                s: [4, 22, 2],
                col: 1,
                r: [.17, 0, 0],
                c: 7692103,
                t: 5
            }, {
                p: [-96, 38, 56],
                s: [4, 22, 2],
                col: 1,
                r: [.17, 0, 0],
                c: 7692103,
                t: 5
            }, {
                p: [-114, 39, 29],
                s: [4, 0, 5],
                id: 4,
                col: 1,
                r: [0, .52, 0],
                c: 10987431,
                t: 5
            }, {
                p: [-81, 39, 47],
                s: [4, 0, 5],
                id: 4,
                col: 1,
                r: [0, -.53, 0],
                c: 11645361,
                t: 5
            }, {
                p: [-144, 39, -57],
                s: [4, 0, 5],
                id: 4,
                col: 1,
                r: [0, -.53, 0],
                c: 10658466,
                t: 5
            }, {
                p: [-109, 3, -53],
                s: [4, 0, 5],
                id: 4,
                col: 1,
                r: [0, -.53, 0],
                c: 11184810,
                t: 5
            }, {
                p: [60, 2, -62],
                s: [4, 0, 5],
                id: 4,
                col: 1,
                r: [0, -.53, 0],
                c: 9671571,
                t: 5
            }, {
                p: [8, 2, 178],
                s: [4, 0, 5],
                id: 4,
                col: 1,
                r: [0, -.53, 0],
                c: 10329501,
                t: 5
            }, {
                p: [-120, 38, 28],
                s: [2, 4, 2],
                col: 1,
                pe: 1,
                c: 5211204,
                t: 5
            }, {
                p: [-67, 39, -59],
                s: [4, 0, 5],
                id: 4,
                col: 1,
                r: [-3.14, 1.05, -3.14],
                c: 10987431,
                t: 5
            }, {
                p: [-120, 40, 28],
                s: [1, 4, 1],
                col: 1,
                pe: 1,
                c: 5211204,
                t: 5
            }, {
                p: [-53, 38, 55],
                s: [2, 4, 2],
                col: 1,
                pe: 1,
                c: 5211204,
                t: 5
            }, {
                p: [-53, 40, 55],
                s: [1, 4, 1],
                col: 1,
                pe: 1,
                c: 5211204,
                t: 5
            }, {
                p: [-80, 38, -62],
                s: [2, 4, 2],
                col: 1,
                pe: 1,
                c: 5211204,
                t: 5
            }, {
                p: [-80, 40, -62],
                s: [1, 4, 1],
                col: 1,
                pe: 1,
                c: 5211204,
                t: 5
            }, {
                p: [-138, 38, -11],
                s: [2, 4, 2],
                col: 1,
                pe: 1,
                c: 5211204,
                t: 5
            }, {
                p: [-138, 40, -11],
                s: [1, 4, 1],
                col: 1,
                pe: 1,
                c: 5211204,
                t: 5
            }, {
                p: [-142, 39, -5],
                s: [4, 0, 5],
                id: 4,
                col: 1,
                r: [3.14, -1.04, 3.14],
                c: 10658466,
                t: 5
            }, {
                p: [-89, 38, -58],
                s: [12, 12, 12],
                id: 8
            }, {
                p: [-70, 3, 108],
                s: [4, 0, 5],
                id: 4,
                col: 1,
                r: [-3.14, 1.05, -3.14],
                c: 10987431,
                t: 5
            }, {
                p: [-86, 2, 66],
                s: [2, 4, 2],
                col: 1,
                pe: 1,
                c: 5211204,
                t: 5
            }, {
                p: [-86, 4, 66],
                s: [1, 4, 1],
                col: 1,
                pe: 1,
                c: 5211204,
                t: 5
            }, {
                p: [-106, 3, 127],
                s: [4, 0, 5],
                id: 4,
                col: 1,
                r: [-3.14, 1.05, -3.14],
                c: 10987431,
                t: 5
            }, {
                p: [-103, 3, 119],
                s: [4, 0, 5],
                id: 4,
                col: 1,
                r: [0, .7, 0],
                c: 10987431,
                t: 5
            }, {
                p: [-92, 4, 58],
                s: [1, 4, 1],
                col: 1,
                pe: 1,
                c: 5211204,
                t: 5
            }, {
                p: [-92, 2, 58],
                s: [2, 4, 2],
                col: 1,
                pe: 1,
                c: 5211204,
                t: 5
            }, {
                p: [173, 2, -20],
                s: [1, 8, 7],
                pe: 1,
                c: 7692103,
                t: 5
            }, {
                p: [195, 2, -20],
                s: [1, 8, 7],
                pe: 1,
                c: 7692103,
                t: 5
            }, {
                p: [184, 9, -20],
                s: [11, 1, 4],
                pe: 1,
                c: 3421236,
                t: 5
            }, {
                p: [184, 8, -20],
                s: [21, 1, 6],
                pe: 1,
                c: 7692103,
                t: 5
            }, {
                p: [184, 10, -20],
                s: [2, 1, 1],
                pe: 1,
                c: 3421236,
                t: 5
            }, {
                p: [184, 11, -20],
                s: [22, 11, 1],
                pe: 1,
                c: 3421236,
                t: 5
            }, {
                p: [184, 12, -19],
                s: [20, 9, 1],
                pe: 1,
                c: 3421236,
                e: 16777215,
                t: 5
            }, {
                p: [164, 3, -13],
                s: [4, 0, 5],
                id: 4,
                col: 1,
                r: [0, -.53, 0],
                c: 9671571,
                t: 5
            }, {
                p: [235, 3, 48],
                s: [4, 0, 5],
                id: 4,
                col: 1,
                r: [-3.14, 1.4, -3.14],
                c: 9671571,
                t: 5
            }, {
                p: [143, 2, 84],
                s: [1, 17, 3],
                col: 1,
                r: [0, 0, .17],
                c: 7692103,
                t: 5
            }, {
                p: [143, 2, 80],
                s: [1, 17, 3],
                col: 1,
                r: [0, 0, .17],
                c: 7692103,
                t: 5
            }, {
                p: [225, 3, 68],
                s: [4, 0, 5],
                id: 4,
                col: 1,
                r: [0, -.53, 0],
                c: 9671571,
                t: 5
            }, {
                p: [258, 30, -100],
                s: [8, 1, 1],
                col: 1,
                c: 9012870,
                t: 5
            }, {
                p: [261, 28, -100],
                s: [5, 2, 3],
                col: 1,
                c: 9012870,
                t: 5
            }, {
                p: [261, 27, -100],
                s: [4, 1, 2],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [-152, 27, 148],
                s: [5, 2, 3],
                col: 1,
                c: 9012870,
                t: 5
            }, {
                p: [-150, 29, 148],
                s: [6, 1, 1],
                col: 1,
                c: 9012870,
                t: 5
            }, {
                p: [-152, 26, 148],
                s: [4, 1, 2],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [-242, 26, 73],
                s: [4, 1, 1],
                col: 1,
                c: 9012870,
                t: 5
            }, {
                p: [-240, 24, 73],
                s: [4, 2, 3],
                col: 1,
                c: 9012870,
                t: 5
            }, {
                p: [-240, 23, 73],
                s: [3, 1, 2],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [-234, 22, -128],
                s: [1, 1, 4],
                col: 1,
                c: 9012870,
                t: 5
            }, {
                p: [-234, 20, -126],
                s: [3, 2, 4],
                col: 1,
                c: 9012870,
                t: 5
            }, {
                p: [-234, 19, -126],
                s: [2, 1, 3],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [306, 65, 63],
                s: [8, 1, 1],
                col: 1,
                c: 9012870,
                t: 5
            }, {
                p: [309, 63, 63],
                s: [5, 2, 3],
                col: 1,
                c: 9012870,
                t: 5
            }, {
                p: [309, 62, 63],
                s: [4, 1, 2],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [198, 0, 242],
                s: [123, 42, 120],
                c: 5799880,
                t: 5
            }, {
                p: [198, 42, 242],
                s: [130, 2, 128],
                c: 8553090,
                t: 5
            }, {
                p: [167, 0, 311],
                s: [30, 61, 18],
                c: 7368816,
                t: 5
            }, {
                p: [303, 6, 186],
                s: [23, 27, 23],
                col: 1,
                c: 4743462,
                t: 5
            }, {
                p: [331, 10, 205],
                s: [31, 30, 30],
                col: 1,
                c: 7576379,
                t: 5
            }, {
                p: [-121, 0, 322],
                s: [123, 60, 120],
                c: 12951902,
                t: 5
            }, {
                p: [-121, 60, 322],
                s: [130, 2, 126],
                c: 6908265,
                t: 5
            }, {
                p: [-58, 35, 356],
                s: [3, 1, 14],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-58, 36, 356],
                s: [1, 12, 1],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-59, 36, 362],
                s: [2, 12, 1],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-59, 36, 350],
                s: [2, 12, 1],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-59, 48, 356],
                s: [3, 1, 14],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-59, 36, 356],
                s: [1, 12, 11],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [-112, 35, 261],
                s: [14, 1, 3],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-112, 36, 262],
                s: [1, 12, 2],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-106, 36, 262],
                s: [1, 12, 2],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-118, 36, 262],
                s: [1, 12, 2],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-112, 48, 262],
                s: [14, 1, 3],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-112, 36, 262],
                s: [11, 12, 1],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [77, 49, -131],
                s: [14, 1, 3],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [77, 50, -132],
                s: [11, 12, 1],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [71, 50, -132],
                s: [1, 12, 2],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [83, 50, -132],
                s: [1, 12, 2],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [77, 62, -132],
                s: [14, 1, 3],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [77, 50, -132],
                s: [1, 12, 2],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [95, 47, -163],
                s: [3, 1, 14],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [94, 48, -163],
                s: [1, 12, 11],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [93, 48, -157],
                s: [4, 13, 1],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [94, 60, -163],
                s: [3, 1, 14],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [93, 48, -169],
                s: [4, 13, 1],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [93, 48, -163],
                s: [4, 13, 1],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [32, 0, -109],
                s: [23, 2, 6],
                c: 7368816,
                t: 5
            }, {
                p: [113, -1, 298],
                s: [4, 28, 4],
                c: 6574655,
                t: 5
            }, {
                p: [114, 22, 298],
                s: [26, 28, 28],
                c: 5204775,
                t: 5
            }, {
                p: [-121, 0, 322],
                s: [135, 8, 133],
                c: 6193707,
                t: 5
            }, {
                p: [124, 11, -198],
                s: [26, 28, 28],
                col: 1,
                c: 5204775,
                t: 5
            }, {
                p: [418, 15, -183],
                s: [26, 33, 28],
                col: 1,
                c: 7247414,
                t: 5
            }, {
                p: [163, 2, 422],
                s: [113, 78, 116],
                c: 12927811,
                t: 5
            }, {
                p: [165, 0, 419],
                s: [134, 8, 126],
                c: 6193707,
                t: 5
            }, {
                p: [85, 0, 498],
                s: [2, 73, 2],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [79, 71, 498],
                s: [10, 2, 2],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [75, 70, 188],
                s: [10, 2, 4],
                c: 7368816,
                t: 5
            }, {
                p: [75, 69, 498],
                s: [9, 1, 3],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [163, 80, 422],
                s: [123, 3, 125],
                col: 1,
                c: 5921370,
                t: 5
            }, {
                p: [106, 54, 387],
                s: [1, 12, 11],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [105, 53, 387],
                s: [3, 1, 14],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [105, 66, 387],
                s: [3, 1, 14],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [106, 54, 393],
                s: [2, 12, 1],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [106, 54, 381],
                s: [2, 12, 1],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [106, 54, 387],
                s: [2, 12, 1],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [106, 54, 452],
                s: [1, 12, 11],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [105, 53, 452],
                s: [3, 1, 14],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [105, 66, 452],
                s: [3, 1, 14],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [106, 54, 446],
                s: [2, 12, 1],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [106, 54, 458],
                s: [2, 12, 1],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [106, 54, 452],
                s: [2, 12, 1],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [253, -1, 376],
                s: [4, 28, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [253, 22, 376],
                s: [26, 28, 28],
                col: 1,
                c: 5204775,
                t: 5
            }, {
                p: [-224, 19, 248],
                s: [26, 28, 28],
                col: 1,
                c: 7709238,
                t: 5
            }, {
                p: [-224, -1, 248],
                s: [4, 23, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [-89, 0, 470],
                s: [104, 135, 116],
                c: 10658466,
                t: 5
            }, {
                p: [-30, -1, 392],
                s: [4, 31, 4],
                c: 6574655,
                t: 5
            }, {
                p: [-30, 23, 392],
                s: [27, 28, 24],
                c: 6193707,
                t: 5
            }, {
                p: [-89, 135, 470],
                s: [110, 3, 122],
                col: 1,
                c: 5921370,
                t: 5
            }, {
                p: [-89, 65, 470],
                s: [111, 5, 124],
                c: 5921370,
                t: 5
            }, {
                p: [-27, 0, 651],
                s: [2, 73, 2],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [-21, 71, 651],
                s: [10, 2, 2],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [-17, 70, 651],
                s: [10, 2, 4],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [-17, 69, 651],
                s: [9, 1, 3],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [107, -1, 504],
                s: [4, 31, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [107, 21, 504],
                s: [27, 28, 24],
                col: 1,
                c: 6193707,
                t: 5
            }, {
                p: [156, 0, 621],
                s: [123, 84, 120],
                col: 1,
                c: 12951902,
                t: 5
            }, {
                p: [-97, 0, 686],
                s: [123, 52, 120],
                col: 1,
                c: 5799880,
                t: 5
            }, {
                p: [-97, 52, 686],
                s: [131, 4, 132],
                col: 1,
                c: 5723991,
                t: 5
            }, {
                p: [156, 84, 621],
                s: [131, 5, 132],
                col: 1,
                c: 5723991,
                t: 5
            }, {
                p: [489, 22, 19],
                s: [26, 28, 28],
                col: 1,
                c: 6324784,
                t: 5
            }, {
                p: [424, 18, 101],
                s: [26, 28, 28],
                col: 1,
                c: 6324784,
                t: 5
            }, {
                p: [427, 15, 26],
                s: [27, 30, 30],
                col: 1,
                c: 7576379,
                t: 5
            }, {
                p: [387, 13, 187],
                s: [23, 27, 23],
                col: 1,
                c: 4743462,
                t: 5
            }, {
                p: [458, 18, 69],
                s: [23, 24, 27],
                col: 1,
                c: 4743462,
                t: 5
            }, {
                p: [727, 0, -41],
                s: [104, 74, 79],
                col: 1,
                c: 10658466,
                t: 5
            }, {
                p: [687, 74, -41],
                s: [24, 48, 26],
                col: 1,
                c: 10658466,
                t: 5
            }, {
                p: [727, 74, -41],
                s: [105, 6, 76],
                col: 1,
                c: 10658466,
                t: 5
            }, {
                p: [687, 121, -41],
                s: [31, 6, 32],
                col: 1,
                c: 7890002,
                t: 5
            }, {
                p: [687, 127, -41],
                s: [22, 13, 19],
                col: 1,
                c: 7890002,
                t: 5
            }, {
                p: [727, 80, -41],
                s: [105, 6, 54],
                col: 1,
                c: 10658466,
                t: 5
            }, {
                p: [727, 84, -61],
                s: [115, 6, 53],
                col: 1,
                r: [-.52, 0, 0],
                c: 7890002,
                t: 5
            }, {
                p: [681, 154, -41],
                s: [2, 25, 2],
                col: 1,
                c: 7890002,
                t: 5
            }, {
                p: [681, 171, -41],
                s: [2, 2, 14],
                col: 1,
                c: 7890002,
                t: 5
            }, {
                p: [687, 124, -30],
                s: [22, 33, 11],
                col: 1,
                r: [-.35, 0, 0],
                c: 7890002,
                t: 5
            }, {
                p: [687, 124, -52],
                s: [22, 33, 11],
                col: 1,
                r: [.35, 0, 0],
                c: 7890002,
                t: 5
            }, {
                p: [727, 84, -22],
                s: [115, 6, 51],
                col: 1,
                r: [.53, 0, 0],
                c: 7890002,
                t: 5
            }, {
                p: [727, 80, -41],
                s: [105, 12, 34],
                col: 1,
                c: 10658466,
                t: 5
            }, {
                p: [674, 0, -41],
                s: [2, 57, 32],
                col: 1,
                c: 7890002,
                t: 5
            }, {
                p: [692, 16, -106],
                s: [26, 31, 28],
                col: 1,
                c: 6324784,
                t: 5
            }, {
                p: [691, -1, -106],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [648, 17, 8],
                s: [26, 34, 28],
                col: 1,
                c: 6324784,
                t: 5
            }, {
                p: [648, -1, 9],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [458, 17, -140],
                s: [26, 31, 28],
                col: 1,
                c: 6324784,
                t: 5
            }, {
                p: [621, 18, -154],
                s: [26, 28, 28],
                col: 1,
                c: 6324784,
                t: 5
            }, {
                p: [621, -1, -154],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [208, 0, -376],
                s: [121, 69, 83],
                col: 1,
                c: 10658466,
                t: 5
            }, {
                p: [674, 108, -41],
                s: [1, 9, 9],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [673, 113, -41],
                s: [1, 4, 1],
                col: 1,
                c: 2960685,
                t: 5
            }, {
                p: [673, 113, -41],
                s: [1, 4, 1],
                col: 1,
                r: [2.09, 0, 0],
                c: 2960685,
                t: 5
            }, {
                p: [674, 64, -41],
                s: [2, 19, 4],
                col: 1,
                c: 2105376,
                t: 5
            }, {
                p: [752, 18, 167],
                s: [39, 24, 1182],
                col: 1,
                c: 4743462,
                t: 5
            }, {
                p: [611, 18, -401],
                s: [257, 31, 27],
                col: 1,
                c: 6060596,
                t: 5
            }, {
                p: [592, 31, -395],
                s: [38, 34, 28],
                col: 1,
                c: 6324784,
                t: 5
            }, {
                p: [737, 15, -383],
                s: [47, 36, 49],
                col: 1,
                c: 6324784,
                t: 5
            }, {
                p: [746, 22, -200],
                s: [38, 28, 38],
                col: 1,
                c: 6324784,
                t: 5
            }, {
                p: [746, 22, -292],
                s: [38, 33, 38],
                col: 1,
                c: 6324784,
                t: 5
            }, {
                p: [748, 0, -142],
                s: [4, 23, 132],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [758, 0, -298],
                s: [4, 23, 219],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [735, -1, -287],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [27, 0, 172],
                s: [1506, 0, 1212],
                id: 4,
                c: 7504967,
                t: 5
            }, {
                p: [640, 0, -405],
                s: [307, 23, 5],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [542, -1, -391],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [610, 18, -235],
                s: [26, 28, 28],
                col: 1,
                c: 6324784,
                t: 5
            }, {
                p: [610, -1, -235],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [460, -1, -324],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [460, 18, -324],
                s: [26, 28, 28],
                col: 1,
                c: 6324784,
                t: 5
            }, {
                p: [748, 0, 331],
                s: [4, 23, 852],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [501, 17, -113],
                s: [26, 28, 28],
                col: 1,
                c: 6324784,
                t: 5
            }, {
                p: [459, 9, -102],
                s: [25, 26, 25],
                col: 1,
                c: 5732402,
                t: 5
            }, {
                p: [451, 22, 93],
                s: [26, 24, 25],
                col: 1,
                c: 6984507,
                t: 5
            }, {
                p: [427, 10, 60],
                s: [26, 28, 29],
                col: 1,
                c: 6324784,
                t: 5
            }, {
                p: [424, 15, 135],
                s: [30, 28, 27],
                col: 1,
                c: 4743462,
                t: 5
            }, {
                p: [501, 16, -8],
                s: [29, 25, 29],
                col: 1,
                c: 4941357,
                t: 5
            }, {
                p: [530, 9, -52],
                s: [29, 25, 29],
                col: 1,
                c: 5732402,
                t: 5
            }, {
                p: [595, 9, 107],
                s: [29, 25, 29],
                col: 1,
                c: 5732402,
                t: 5
            }, {
                p: [418, 13, 183],
                s: [29, 25, 29],
                col: 1,
                c: 5732402,
                t: 5
            }, {
                p: [477, 20, 166],
                s: [27, 30, 30],
                col: 1,
                c: 7576379,
                t: 5
            }, {
                p: [746, 22, 77],
                s: [38, 28, 44],
                col: 1,
                c: 6324784,
                t: 5
            }, {
                p: [746, 22, 140],
                s: [38, 29, 41],
                col: 1,
                c: 6588720,
                t: 5
            }, {
                p: [439, 8, 46],
                s: [29, 25, 29],
                col: 1,
                c: 5732402,
                t: 5
            }, {
                p: [746, 23, 254],
                s: [38, 28, 34],
                col: 1,
                c: 6324784,
                t: 5
            }, {
                p: [746, 18, 349],
                s: [38, 29, 74],
                col: 1,
                c: 6324784,
                t: 5
            }, {
                p: [450, 14, -177],
                s: [25, 30, 25],
                col: 1,
                c: 5732402,
                t: 5
            }, {
                p: [166, 0, -429],
                s: [1786, 23, 5],
                col: 1,
                c: 5917499,
                t: 5
            }, {
                p: [-81, 19, -418],
                s: [1233, 31, 27],
                col: 1,
                c: 6060596,
                t: 5
            }, {
                p: [436, 16, -407],
                s: [38, 37, 28],
                col: 1,
                c: 5665581,
                t: 5
            }, {
                p: [319, 17, -407],
                s: [38, 37, 28],
                col: 1,
                c: 5665581,
                t: 5
            }, {
                p: [437, -1, -401],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [318, -1, -401],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [291, -1, -412],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [371, -1, -412],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [376, 31, -439],
                s: [38, 33, 28],
                col: 1,
                c: 5665581,
                t: 5
            }, {
                p: [291, -1, -234],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [291, 8, -237],
                s: [31, 33, 28],
                col: 1,
                c: 6324784,
                t: 5
            }, {
                p: [208, 69, -376],
                s: [128, 3, 89],
                col: 1,
                c: 6381921,
                t: 5
            }, {
                p: [399, -1, 45],
                s: [4, 26, 4],
                c: 7692103,
                t: 5
            }, {
                p: [408, -1, -415],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [242, 47, -334],
                s: [11, 12, 1],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [173, 47, -334],
                s: [11, 12, 1],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [173, 46, -333],
                s: [14, 1, 3],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [173, 59, -333],
                s: [14, 1, 3],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [242, 59, -333],
                s: [14, 1, 3],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [242, 46, -333],
                s: [14, 1, 3],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [167, 47, -334],
                s: [1, 12, 2],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [179, 47, -334],
                s: [1, 12, 2],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [236, 47, -334],
                s: [1, 12, 2],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [248, 47, -334],
                s: [1, 12, 2],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [242, 47, -334],
                s: [1, 12, 2],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [173, 47, -334],
                s: [1, 12, 2],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-24, 112, 468],
                s: [2, 9, 1],
                col: 1,
                c: 5723991,
                e: 16711680,
                t: 5
            }, {
                p: [-27, 66, 470],
                s: [14, 57, 3],
                col: 1,
                c: 5921370,
                t: 5
            }, {
                p: [-30, 112, 468],
                s: [2, 9, 1],
                col: 1,
                c: 5723991,
                e: 16711680,
                t: 5
            }, {
                p: [-27, 116, 468],
                s: [4, 2, 1],
                col: 1,
                c: 5723991,
                e: 16711680,
                t: 5
            }, {
                p: [-24, 101, 468],
                s: [2, 9, 1],
                col: 1,
                c: 5723991,
                e: 16711680,
                t: 5
            }, {
                p: [-30, 101, 468],
                s: [2, 9, 1],
                col: 1,
                c: 5723991,
                e: 16711680,
                t: 5
            }, {
                p: [-27, 101, 468],
                s: [4, 2, 1],
                col: 1,
                c: 5723991,
                e: 16711680,
                t: 5
            }, {
                p: [-27, 108, 468],
                s: [4, 2, 1],
                col: 1,
                c: 5723991,
                e: 16711680,
                t: 5
            }, {
                p: [-27, 90, 468],
                s: [2, 9, 1],
                col: 1,
                c: 5723991,
                e: 16711680,
                t: 5
            }, {
                p: [-27, 97, 468],
                s: [8, 2, 1],
                col: 1,
                c: 5723991,
                e: 16711680,
                t: 5
            }, {
                p: [-25, 79, 468],
                s: [2, 9, 1],
                col: 1,
                c: 5723991,
                e: 16711680,
                t: 5
            }, {
                p: [-27, 86, 468],
                s: [6, 2, 1],
                col: 1,
                c: 5723991,
                e: 16711680,
                t: 5
            }, {
                p: [-27, 79, 468],
                s: [6, 2, 1],
                col: 1,
                c: 5723991,
                e: 16711680,
                t: 5
            }, {
                p: [-27, 82, 468],
                s: [6, 2, 1],
                col: 1,
                c: 5723991,
                e: 16711680,
                t: 5
            }, {
                p: [-25, 68, 468],
                s: [2, 9, 1],
                col: 1,
                c: 5723991,
                e: 16711680,
                t: 5
            }, {
                p: [-28, 68, 468],
                s: [6, 2, 1],
                col: 1,
                c: 5723991,
                e: 16711680,
                t: 5
            }, {
                p: [-37, 108, 470],
                s: [6, 3, 3],
                col: 1,
                c: 5921370,
                t: 5
            }, {
                p: [-37, 77, 470],
                s: [6, 3, 3],
                col: 1,
                c: 5921370,
                t: 5
            }, {
                p: [65, 1, 654],
                s: [51, 15, 20],
                id: 7,
                col: 1,
                r: [0, -1.57, 0]
            }, {
                p: [32, 0, 814],
                s: [79, 135, 116],
                col: 1,
                c: 10658466,
                t: 5
            }, {
                p: [32, 135, 814],
                s: [87, 3, 124],
                col: 1,
                c: 6052956,
                t: 5
            }, {
                p: [88, -1, 709],
                s: [4, 31, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [90, 17, 708],
                s: [27, 28, 24],
                col: 1,
                c: 6193707,
                t: 5
            }, {
                p: [-33, -1, 770],
                s: [4, 31, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [-34, 16, 770],
                s: [27, 28, 24],
                col: 1,
                c: 6193707,
                t: 5
            }, {
                p: [115, -2, 958],
                s: [113, 65, 116],
                col: 1,
                c: 12927811,
                t: 5
            }, {
                p: [115, 63, 958],
                s: [124, 5, 126],
                col: 1,
                c: 5066061,
                t: 5
            }, {
                p: [-63, -18, 928],
                s: [123, 112, 120],
                col: 1,
                c: 12951902,
                t: 5
            }, {
                p: [-63, 93, 928],
                s: [131, 4, 127],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [-155, -75, 1251],
                s: [79, 289, 61],
                col: 1,
                c: 10658466,
                t: 5
            }, {
                p: [151, -31, 1120],
                s: [108, 142, 61],
                col: 1,
                c: 10658466,
                t: 5
            }, {
                p: [308, 0, 1120],
                s: [79, 220, 61],
                col: 1,
                c: 10658466,
                t: 5
            }, {
                p: [-269, -31, 1008],
                s: [108, 142, 113],
                col: 1,
                c: 10658466,
                t: 5
            }, {
                p: [437, 0, 747],
                s: [677, 23, 5],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [609, 21, 751],
                s: [315, 24, 44],
                col: 1,
                c: 4743462,
                t: 5
            }, {
                p: [269, 21, 751],
                s: [374, 27, 53],
                col: 1,
                c: 4743462,
                t: 5
            }, {
                p: [525, 20, 744],
                s: [38, 29, 41],
                col: 1,
                c: 6588720,
                t: 5
            }, {
                p: [744, 18, 739],
                s: [43, 35, 46],
                col: 1,
                c: 6588720,
                t: 5
            }, {
                p: [333, 22, 743],
                s: [38, 32, 41],
                col: 1,
                c: 6588720,
                t: 5
            }, {
                p: [636, 20, 744],
                s: [38, 29, 41],
                col: 1,
                c: 6588720,
                t: 5
            }, {
                p: [746, 23, 557],
                s: [38, 28, 34],
                col: 1,
                c: 6324784,
                t: 5
            }, {
                p: [443, 24, 258],
                s: [23, 24, 23],
                col: 1,
                c: 4743462,
                t: 5
            }, {
                p: [359, 11, 197],
                s: [24, 24, 30],
                col: 1,
                c: 6390324,
                t: 5
            }, {
                p: [313, 13, 245],
                s: [26, 28, 28],
                col: 1,
                c: 5204775,
                t: 5
            }, {
                p: [369, 60, 323],
                s: [132, 3, 130],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [369, -4, 323],
                s: [123, 64, 120],
                col: 1,
                c: 12951902,
                t: 5
            }, {
                p: [252, 12, -209],
                s: [26, 28, 28],
                col: 1,
                c: 4940075,
                t: 5
            }, {
                p: [208, -1, -370],
                s: [137, 10, 89],
                c: 6984507,
                t: 5
            }, {
                p: [373, 18, -259],
                s: [26, 28, 28],
                col: 1,
                c: 6324784,
                t: 5
            }, {
                p: [247, 24, 743],
                s: [38, 32, 41],
                col: 1,
                c: 6588720,
                t: 5
            }, {
                p: [571, -57, 1262],
                s: [79, 220, 61],
                col: 1,
                c: 10658466,
                t: 5
            }, {
                p: [563, 13, 53],
                s: [29, 25, 29],
                col: 1,
                c: 5732402,
                t: 5
            }, {
                p: [439, 5, 10],
                s: [29, 25, 29],
                col: 1,
                c: 5732402,
                t: 5
            }, {
                p: [288, 9, -185],
                s: [25, 26, 25],
                col: 1,
                c: 5732402,
                t: 5
            }, {
                p: [337, 14, -183],
                s: [25, 26, 25],
                col: 1,
                c: 6720572,
                t: 5
            }, {
                p: [164, 6, -221],
                s: [25, 30, 25],
                col: 1,
                c: 5732402,
                t: 5
            }, {
                p: [213, 12, -250],
                s: [21, 25, 21],
                col: 1,
                c: 5732402,
                t: 5
            }, {
                p: [368, 15, -183],
                s: [26, 27, 28],
                col: 1,
                c: 6324784,
                t: 5
            }, {
                p: [392, 11, -194],
                s: [25, 26, 25],
                col: 1,
                c: 5666099,
                t: 5
            }, {
                p: [316, 5, -203],
                s: [25, 26, 25],
                col: 1,
                c: 5666099,
                t: 5
            }, {
                p: [439, 8, 83],
                s: [29, 25, 29],
                col: 1,
                c: 5732402,
                t: 5
            }, {
                p: [212, 18, -319],
                s: [26, 28, 28],
                col: 1,
                c: 6324784,
                t: 5
            }, {
                p: [51, 31, -439],
                s: [38, 33, 28],
                col: 1,
                c: 5665581,
                t: 5
            }, {
                p: [111, 17, -407],
                s: [38, 37, 28],
                col: 1,
                c: 5665581,
                t: 5
            }, {
                p: [25, -1, -412],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [111, -1, -401],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [73, -1, -407],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [-92, 17, -407],
                s: [38, 37, 28],
                col: 1,
                c: 5665581,
                t: 5
            }, {
                p: [-175, 27, -427],
                s: [38, 33, 28],
                col: 1,
                c: 5665581,
                t: 5
            }, {
                p: [-175, 27, -427],
                s: [38, 33, 28],
                col: 1,
                c: 5665581,
                t: 5
            }, {
                p: [-90, -1, -400],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [-174, -1, -418],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [-67, 22, -274],
                s: [26, 28, 28],
                col: 1,
                c: 5204775,
                t: 5
            }, {
                p: [-66, -1, -273],
                s: [4, 31, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [-12, 50, -132],
                s: [11, 12, 1],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [-12, 49, -131],
                s: [14, 1, 3],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-12, 62, -132],
                s: [14, 1, 3],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-18, 50, -132],
                s: [1, 12, 2],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-6, 50, -132],
                s: [1, 12, 2],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-12, 50, -132],
                s: [1, 12, 2],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-63, 10, -181],
                s: [25, 30, 25],
                col: 1,
                c: 6851648,
                t: 5
            }, {
                p: [32, 26, -126],
                s: [16, 13, 22],
                c: 12958048,
                t: 5
            }, {
                p: [125, -1, 2],
                s: [4, 2, 6],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [128, 0, 89],
                s: [4, 2, 6],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [88, -1, 82],
                s: [4, 2, 6],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [142, -1, 128],
                s: [4, 2, 6],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [-37, -1, -55],
                s: [4, 2, 6],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [239, 3, -66],
                s: [4, 0, 5],
                id: 4,
                col: 1,
                r: [0, -.53, 0],
                c: 9671571,
                t: 5
            }, {
                p: [-38, 3, 157],
                s: [4, 0, 5],
                id: 4,
                col: 1,
                r: [0, -.53, 0],
                c: 9671571,
                t: 5
            }, {
                p: [-247, -1, -414],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [-341, -1, -413],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [-252, 15, -427],
                s: [51, 58, 28],
                col: 1,
                c: 5665581,
                t: 5
            }, {
                p: [-372, 15, -411],
                s: [48, 41, 35],
                col: 1,
                c: 5665581,
                t: 5
            }, {
                p: [-212, 10, -177],
                s: [26, 28, 28],
                col: 1,
                c: 5204775,
                t: 5
            }, {
                p: [-156, -1, 235],
                s: [4, 31, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [-157, 15, 235],
                s: [26, 28, 28],
                col: 1,
                c: 7709238,
                t: 5
            }, {
                p: [165, -1, -213],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [203, -1, -186],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [124, -1, -188],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [285, -1, -185],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [250, -1, -202],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [-125, -1, -105],
                s: [4, 2, 6],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [-262, -1, -17],
                s: [4, 2, 6],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [-245, -1, 190],
                s: [4, 2, 6],
                c: 7368816,
                t: 5
            }, {
                p: [392, -1, 40],
                s: [4, 2, 6],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [265, -1, -65],
                s: [4, 2, 6],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [109, -1, -146],
                s: [4, 2, 6],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [213, -1, -318],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [213, -1, -248],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [55, -1, -407],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [24, 1, 395],
                s: [51, 15, 20],
                id: 7,
                col: 1,
                r: [3.14, -1.22, 3.14]
            }, {
                p: [-259, 17, 231],
                s: [26, 28, 28],
                col: 1,
                c: 7709238,
                t: 5
            }, {
                p: [-203, 18, 291],
                s: [26, 26, 28],
                col: 1,
                c: 6193707,
                t: 5
            }, {
                p: [-203, -1, 292],
                s: [4, 23, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [-155, -75, 1251],
                s: [4, 341, 4],
                col: 1,
                c: 10658466,
                t: 5
            }, {
                p: [308, 85, 1120],
                s: [4, 189, 2],
                col: 1,
                c: 10658466,
                t: 5
            }, {
                p: [-102, -1, -180],
                s: [4, 31, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [-64, -1, -180],
                s: [4, 31, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [-285, -1, -78],
                s: [4, 2, 4],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [-39, -1, -141],
                s: [4, 2, 4],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [350, -1, 5],
                s: [4, 2, 4],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [427, -1, -136],
                s: [4, 2, 4],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [327, -1, 154],
                s: [4, 2, 4],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [200, -1, 121],
                s: [4, 2, 4],
                c: 7368816,
                t: 5
            }, {
                p: [-11, 0, -75],
                s: [4, 2, 6],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [133, 0, 15],
                s: [1, 15, 3],
                col: 1,
                r: [0, 0, -.17],
                c: 7692103,
                t: 5
            }, {
                p: [133, 0, 11],
                s: [1, 15, 3],
                col: 1,
                r: [0, 0, -.17],
                c: 7692103,
                t: 5
            }, {
                p: [-47, 2, 22],
                s: [4, 36, 76],
                c: 5799880,
                t: 5
            }, {
                p: [-253, 16, -176],
                s: [26, 28, 28],
                col: 1,
                c: 5204775,
                t: 5
            }, {
                p: [-182, 0, -245],
                s: [121, 51, 83],
                c: 13619151,
                t: 5
            }, {
                p: [-209, -1, -176],
                s: [4, 31, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [-183, 66, -58],
                s: [4, 1, 1],
                col: 1,
                c: 9012870,
                t: 5
            }, {
                p: [-185, 64, -58],
                s: [4, 2, 3],
                col: 1,
                c: 9012870,
                t: 5
            }, {
                p: [-185, 63, -58],
                s: [3, 1, 2],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [-182, 51, -245],
                s: [130, 3, 95],
                c: 7039851,
                t: 5
            }, {
                p: [-173, 31, -203],
                s: [11, 12, 1],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [-179, 31, -203],
                s: [1, 12, 2],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-167, 31, -203],
                s: [1, 12, 2],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-173, 31, -203],
                s: [1, 12, 2],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-173, 30, -203],
                s: [14, 1, 4],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-173, 43, -203],
                s: [14, 1, 3],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-392, 0, 747],
                s: [677, 23, 5],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [-385, 21, 751],
                s: [691, 27, 53],
                col: 1,
                c: 4743462,
                t: 5
            }, {
                p: [-405, 0, -51],
                s: [123, 60, 120],
                c: 12951902,
                t: 5
            }, {
                p: [-403, 60, -51],
                s: [130, 2, 130],
                c: 5263440,
                t: 5
            }, {
                p: [-316, 15, 11],
                s: [26, 30, 28],
                col: 1,
                c: 7709238,
                t: 5
            }, {
                p: [-320, -1, 173],
                s: [4, 31, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [-707, 19, 165],
                s: [44, 31, 1300],
                col: 1,
                c: 6060596,
                t: 5
            }, {
                p: [-694, 0, 183],
                s: [1, 23, 1208],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [-343, 40, -83],
                s: [1, 12, 11],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [-344, 52, -83],
                s: [4, 1, 13],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-343, 39, -83],
                s: [4, 1, 14],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-344, 40, -89],
                s: [4, 12, 1],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-344, 40, -77],
                s: [4, 12, 1],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-344, 40, -83],
                s: [4, 12, 1],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-315, 5, -45],
                s: [26, 30, 28],
                col: 1,
                c: 6786608,
                t: 5
            }, {
                p: [-371, -25, 16],
                s: [27, 105, 15],
                c: 6579300,
                t: 5
            }, {
                p: [-310, 16, -166],
                s: [26, 28, 28],
                col: 1,
                c: 5204775,
                t: 5
            }, {
                p: [-310, -1, -167],
                s: [4, 31, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [-290, 11, -213],
                s: [26, 30, 28],
                col: 1,
                c: 7709238,
                t: 5
            }, {
                p: [-270, 16, -274],
                s: [26, 28, 28],
                col: 1,
                c: 5204775,
                t: 5
            }, {
                p: [-269, -1, -271],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [-334, 16, -216],
                s: [26, 28, 28],
                col: 1,
                c: 5204775,
                t: 5
            }, {
                p: [-328, -1, -219],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [-42, 0, 25],
                s: [6, 9, 78],
                c: 6984507,
                t: 5
            }, {
                p: [17, 2, -126],
                s: [14, 37, 22],
                c: 12958048,
                t: 5
            }, {
                p: [32, 2, -119],
                s: [16, 24, 2],
                pe: 1,
                c: 7692103,
                t: 5
            }, {
                p: [47, 2, -126],
                s: [14, 37, 22],
                c: 12958048,
                t: 5
            }, {
                p: [-255, -1, 230],
                s: [4, 23, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [275, -1, 183],
                s: [4, 28, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [32, 42, -132],
                s: [29, 18, 1],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [17, 42, -132],
                s: [1, 18, 2],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [32, 42, -132],
                s: [1, 18, 2],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [32, 60, -132],
                s: [31, 1, 3],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [11, 42, -116],
                s: [2, 8, 2],
                col: 1,
                c: 5263440,
                t: 5
            }, {
                p: [53, 42, -116],
                s: [2, 8, 2],
                col: 1,
                c: 5263440,
                t: 5
            }, {
                p: [53, 42, -131],
                s: [2, 8, 2],
                col: 1,
                c: 5263440,
                t: 5
            }, {
                p: [11, 42, -131],
                s: [2, 8, 2],
                col: 1,
                c: 5263440,
                t: 5
            }, {
                p: [11, 42, -123],
                s: [1, 7, 1],
                col: 1,
                c: 5263440,
                t: 5
            }, {
                p: [53, 42, -124],
                s: [1, 7, 1],
                col: 1,
                c: 5263440,
                t: 5
            }, {
                p: [46, 42, -116],
                s: [1, 7, 1],
                col: 1,
                c: 5263440,
                t: 5
            }, {
                p: [18, 42, -116],
                s: [1, 7, 1],
                col: 1,
                c: 5263440,
                t: 5
            }, {
                p: [27, 42, -116],
                s: [1, 7, 1],
                col: 1,
                c: 5263440,
                t: 5
            }, {
                p: [36, 42, -116],
                s: [1, 7, 1],
                col: 1,
                c: 5263440,
                t: 5
            }, {
                p: [32, 49, -116],
                s: [42, 1, 2],
                col: 1,
                c: 5263440,
                t: 5
            }, {
                p: [53, 49, -124],
                s: [2, 1, 14],
                col: 1,
                c: 5263440,
                t: 5
            }, {
                p: [11, 49, -123],
                s: [2, 1, 14],
                col: 1,
                c: 5263440,
                t: 5
            }, {
                p: [-183, 36, -58],
                s: [4, 2, 20],
                c: 7368816,
                t: 5
            }, {
                p: [306, 36, 64],
                s: [4, 2, 20],
                c: 7368816,
                t: 5
            }, {
                p: [47, 42, -132],
                s: [1, 18, 2],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [340, -1, -182],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [369, -1, -182],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [419, -1, -183],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [391, -1, -193],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [-70, 2, 160],
                s: [3, 6, 6],
                col: 1,
                c: 12927811,
                t: 5
            }, {
                p: [-70, 7, 162],
                s: [1, 3, 1],
                col: 1,
                c: 8882055,
                t: 5
            }, {
                p: [98, 2, -212],
                s: [14, 100, 25],
                c: 7368816,
                t: 11
            }, {
                p: [-397, 16, -128],
                s: [26, 28, 28],
                col: 1,
                c: 5204775,
                t: 5
            }, {
                p: [-389, -1, -128],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [-689, 15, -307],
                s: [48, 41, 58],
                col: 1,
                c: 5665581,
                t: 5
            }, {
                p: [-689, 17, -208],
                s: [48, 41, 41],
                col: 1,
                c: 5665581,
                t: 5
            }, {
                p: [-574, 17, -413],
                s: [48, 41, 35],
                col: 1,
                c: 5665581,
                t: 5
            }, {
                p: [-404, 17, -176],
                s: [26, 31, 28],
                col: 1,
                c: 5204775,
                t: 5
            }, {
                p: [-405, -1, -177],
                s: [4, 34, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [-460, 15, -411],
                s: [36, 43, 35],
                col: 1,
                c: 5665581,
                t: 5
            }, {
                p: [369, 39, 263],
                s: [11, 12, 1],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [369, 38, 262],
                s: [14, 1, 3],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [369, 51, 263],
                s: [14, 1, 3],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [375, 39, 263],
                s: [1, 12, 3],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [363, 39, 263],
                s: [1, 12, 3],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [369, 39, 263],
                s: [1, 12, 3],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-372, 0, 98],
                s: [104, 106, 116],
                col: 1,
                c: 10658466,
                t: 5
            }, {
                p: [-372, 105, 98],
                s: [115, 3, 126],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [-366, 17, 737],
                s: [48, 41, 41],
                col: 1,
                c: 5665581,
                t: 5
            }, {
                p: [-489, 17, 737],
                s: [66, 36, 41],
                col: 1,
                c: 5665581,
                t: 5
            }, {
                p: [-205, 17, 737],
                s: [66, 36, 41],
                col: 1,
                c: 5665581,
                t: 5
            }, {
                p: [-624, 17, 737],
                s: [66, 39, 41],
                col: 1,
                c: 5665581,
                t: 5
            }, {
                p: [-689, 17, 202],
                s: [48, 41, 41],
                col: 1,
                c: 5665581,
                t: 5
            }, {
                p: [-689, 17, 318],
                s: [48, 41, 41],
                col: 1,
                c: 5665581,
                t: 5
            }, {
                p: [-306, 23, 205],
                s: [26, 26, 28],
                col: 1,
                c: 6193707,
                t: 5
            }, {
                p: [-306, -1, 205],
                s: [4, 31, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [-290, 12, 243],
                s: [26, 28, 28],
                col: 1,
                c: 8695624,
                t: 5
            }, {
                p: [-288, -1, 249],
                s: [4, 23, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [126, 0, 60],
                s: [2, 37, 2],
                pe: 1,
                c: 7692103,
                t: 5
            }, {
                p: [126, 0, 98],
                s: [2, 37, 2],
                pe: 1,
                c: 7692103,
                t: 5
            }, {
                p: [-161, -1, 205],
                s: [4, 26, 4],
                c: 7692103,
                t: 5
            }, {
                p: [-290, -1, -49],
                s: [4, 26, 4],
                c: 7692103,
                t: 5
            }, {
                p: [238, -1, -156],
                s: [4, 26, 4],
                c: 7692103,
                t: 5
            }, {
                p: [182, -1, 159],
                s: [4, 26, 4],
                c: 7692103,
                t: 5
            }, {
                p: [296, -1, 159],
                s: [4, 26, 4],
                c: 7692103,
                t: 5
            }, {
                p: [1009, 10, 134],
                s: [65, 76, 76],
                col: 1,
                c: 6324784,
                t: 5
            }, {
                p: [995, 21, -386],
                s: [65, 53, 76],
                col: 1,
                c: 6324784,
                t: 5
            }, {
                p: [555, 21, -559],
                s: [137, 54, 76],
                col: 1,
                c: 6324784,
                t: 5
            }, {
                p: [924, 10, 606],
                s: [74, 74, 87],
                col: 1,
                c: 6324784,
                t: 5
            }, {
                p: [-289, -7, 309],
                s: [82, 106, 86],
                col: 1,
                c: 10658466,
                t: 5
            }, {
                p: [849, -8, -520],
                s: [65, 84, 76],
                col: 1,
                c: 6324784,
                t: 5
            }, {
                p: [661, -4, 165],
                s: [123, 64, 120],
                col: 1,
                c: 12951902,
                t: 5
            }, {
                p: [661, 60, 165],
                s: [132, 4, 131],
                col: 1,
                c: 6381921,
                t: 5
            }, {
                p: [-289, 99, 309],
                s: [89, 4, 93],
                col: 1,
                c: 7895160,
                t: 5
            }, {
                p: [-345, 18, 247],
                s: [26, 26, 28],
                col: 1,
                c: 6193707,
                t: 5
            }, {
                p: [-431, 14, 166],
                s: [26, 26, 28],
                col: 1,
                c: 6193707,
                t: 5
            }, {
                p: [-269, 74, 266],
                s: [11, 12, 1],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [-269, 73, 265],
                s: [14, 1, 3],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-269, 86, 266],
                s: [14, 1, 3],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-263, 74, 266],
                s: [1, 12, 2],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-275, 74, 266],
                s: [1, 12, 2],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-269, 74, 266],
                s: [1, 12, 2],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [995, 17, -153],
                s: [65, 68, 47],
                col: 1,
                c: 6324784,
                t: 5
            }, {
                p: [-136, 3, -80],
                s: [7, 32, 23],
                c: 8355711,
                t: 5
            }, {
                p: [-130, 3, -80],
                s: [7, 29, 23],
                c: 8355711,
                t: 5
            }, {
                p: [-124, 3, -80],
                s: [7, 26, 23],
                c: 8355711,
                t: 5
            }, {
                p: [-118, 3, -80],
                s: [7, 23, 23],
                c: 8355711,
                t: 5
            }, {
                p: [-112, 3, -80],
                s: [7, 20, 23],
                c: 8355711,
                t: 5
            }, {
                p: [-106, 3, -80],
                s: [7, 17, 23],
                c: 8355711,
                t: 5
            }, {
                p: [-100, 3, -80],
                s: [7, 14, 23],
                c: 8355711,
                t: 5
            }, {
                p: [-94, 3, -80],
                s: [7, 11, 23],
                c: 8355711,
                t: 5
            }, {
                p: [-88, 3, -80],
                s: [7, 8, 23],
                c: 8355711,
                t: 5
            }, {
                p: [-82, 3, -80],
                s: [7, 5, 23],
                c: 8355711,
                t: 5
            }, {
                p: [-76, 2, -80],
                s: [7, 3, 23],
                c: 8355711,
                t: 5
            }, {
                p: [-102, 2, -80],
                s: [72, 36, 24],
                id: 9,
                v: 1,
                t: 5,
                d: 2
            }, {
                p: [-125, 3, 54],
                s: [4, 0, 5],
                id: 4,
                col: 1,
                r: [0, 1.04, 0],
                c: 11184810,
                t: 5
            }, {
                p: [251, 3, 98],
                s: [7, 32, 23],
                c: 8355711,
                t: 5
            }, {
                p: [244, 3, 98],
                s: [7, 29, 23],
                c: 8355711,
                t: 5
            }, {
                p: [237, 3, 98],
                s: [7, 26, 23],
                c: 8355711,
                t: 5
            }, {
                p: [230, 3, 98],
                s: [7, 23, 23],
                c: 8355711,
                t: 5
            }, {
                p: [223, 3, 98],
                s: [7, 20, 23],
                c: 8355711,
                t: 5
            }, {
                p: [216, 3, 98],
                s: [7, 17, 23],
                c: 8355711,
                t: 5
            }, {
                p: [209, 3, 98],
                s: [7, 14, 23],
                c: 8355711,
                t: 5
            }, {
                p: [202, 3, 98],
                s: [7, 11, 23],
                c: 8355711,
                t: 5
            }, {
                p: [195, 3, 98],
                s: [7, 8, 23],
                c: 8355711,
                t: 5
            }, {
                p: [188, 3, 98],
                s: [7, 5, 23],
                c: 8355711,
                t: 5
            }, {
                p: [181, 2, 98],
                s: [7, 3, 23],
                c: 8355711,
                t: 5
            }, {
                p: [212, 2, 98],
                s: [84, 36, 24],
                id: 9,
                v: 1,
                t: 5,
                d: 0
            }, {
                p: [-320, 72, 67],
                s: [1, 20, 23],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [-320, 72, 125],
                s: [1, 20, 23],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [-319, 71, 67],
                s: [3, 1, 27],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-320, 92, 67],
                s: [2, 1, 27],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-320, 72, 55],
                s: [2, 20, 1],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-320, 72, 79],
                s: [2, 20, 1],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-320, 72, 67],
                s: [2, 20, 1],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-319, 71, 125],
                s: [3, 1, 27],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-320, 92, 125],
                s: [2, 1, 27],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-320, 72, 137],
                s: [2, 20, 1],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-320, 72, 113],
                s: [2, 20, 1],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [-320, 72, 125],
                s: [2, 20, 1],
                col: 1,
                c: 6250335,
                t: 5
            }, {
                p: [137, -1, -156],
                s: [4, 26, 4],
                c: 7692103,
                t: 5
            }, {
                p: [119, 0, -15],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-47, -1, 357],
                s: [38, 24, 2],
                c: 7692103,
                t: 10
            }, {
                p: [116, -1, 275],
                s: [41, 24, 2],
                pe: 1,
                c: 7692103,
                t: 10
            }, {
                p: [70, 2, 357],
                s: [4, 0, 5],
                id: 4,
                col: 1,
                r: [0, -1.23, 0],
                c: 10329501,
                t: 5
            }, {
                p: [-12, 2, 249],
                s: [4, 0, 5],
                id: 4,
                col: 1,
                r: [0, -.53, 0],
                c: 10329501,
                t: 5
            }, {
                p: [-49, -1, 265],
                s: [21, 24, 2],
                c: 7692103,
                t: 10
            }, {
                p: [-29, -1, 357],
                s: [4, 26, 4],
                c: 7692103,
                t: 5
            }, {
                p: [41, -1, 365],
                s: [3, 12, 1],
                col: 1,
                r: [.35, 0, 0],
                c: 13158600,
                t: 5
            }, {
                p: [58, 9, 369],
                s: [40, 3, 1],
                col: 1,
                c: 13158600,
                t: 5
            }, {
                p: [41, -1, 373],
                s: [3, 12, 1],
                col: 1,
                r: [-.35, 0, 0],
                c: 13158600,
                t: 5
            }, {
                p: [75, -1, 365],
                s: [3, 12, 1],
                col: 1,
                r: [.35, 0, 0],
                c: 13158600,
                t: 5
            }, {
                p: [75, -1, 373],
                s: [3, 12, 1],
                col: 1,
                r: [-.35, 0, 0],
                c: 13158600,
                t: 5
            }, {
                p: [3, 9, 369],
                s: [40, 3, 1],
                col: 1,
                c: 13158600,
                t: 5
            }, {
                p: [-14, -1, 365],
                s: [3, 12, 1],
                col: 1,
                r: [.35, 0, 0],
                c: 13158600,
                t: 5
            }, {
                p: [20, -1, 365],
                s: [3, 12, 1],
                col: 1,
                r: [.35, 0, 0],
                c: 13158600,
                t: 5
            }, {
                p: [-14, -1, 373],
                s: [3, 12, 1],
                col: 1,
                r: [-.35, 0, 0],
                c: 13158600,
                t: 5
            }, {
                p: [20, -1, 373],
                s: [3, 12, 1],
                col: 1,
                r: [-.35, 0, 0],
                c: 13158600,
                t: 5
            }, {
                p: [58, 1, 382],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-31, 0, 369],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-5, 1, 377],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [47, 1, 378],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [34, 1, 368],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [89, 0, 373],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [73, 2, 406],
                s: [4, 0, 5],
                id: 4,
                col: 1,
                r: [3.14, -1.39, 3.14],
                c: 10329501,
                t: 5
            }, {
                p: [75, 2, 282],
                s: [4, 0, 5],
                id: 4,
                col: 1,
                r: [0, -1.4, 0],
                c: 10329501,
                t: 5
            }, {
                p: [90, 0, 266],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [100, -1, 348],
                s: [4, 2, 6],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [164, -1, 342],
                s: [2, 27, 48],
                pe: 1,
                c: 7692103,
                t: 10
            }, {
                p: [133, 0, 292],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-178, -1, 235],
                s: [284, 74, 62],
                pe: 1,
                v: 1,
                t: 5
            }, {
                p: [-314, -1, 29],
                s: [48, 74, 463],
                v: 1,
                t: 5
            }, {
                p: [63, -1, -187],
                s: [870, 74, 62],
                v: 1,
                t: 5
            }, {
                p: [422, -1, 80],
                s: [48, 74, 252],
                v: 1,
                t: 5
            }, {
                p: [455, -1, -98],
                s: [48, 74, 116],
                v: 1,
                t: 5
            }, {
                p: [253, -1, 217],
                s: [320, 74, 118],
                pe: 1,
                v: 1,
                t: 5
            }, {
                p: [24, -1, 428],
                s: [168, 74, 119],
                v: 1,
                t: 5
            }, {
                p: [-47, -1, 363],
                s: [37, 74, 14],
                v: 1,
                t: 5
            }, {
                p: [182, -1, 326],
                s: [38, 86, 111],
                v: 1,
                t: 5
            }, {
                p: [-20, 1, 372],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [188, -1, 339],
                s: [4, 28, 4],
                col: 1,
                c: 6574655,
                t: 5
            }, {
                p: [189, 22, 341],
                s: [26, 28, 28],
                col: 1,
                c: 5204775,
                t: 5
            }, {
                p: [221, -1, 351],
                s: [1, 7, 1],
                col: 1,
                c: 6984507,
                t: 5
            }, {
                p: [289, -1, 366],
                s: [1, 7, 1],
                col: 1,
                c: 6984507,
                t: 5
            }, {
                p: [113, 3, -37],
                s: [4, 0, 5],
                id: 4,
                col: 1,
                r: [0, -.53, 0],
                c: 9671571,
                t: 5
            }, {
                p: [167, 3, -75],
                s: [4, 0, 5],
                id: 4,
                col: 1,
                r: [0, -.53, 0],
                c: 9671571,
                t: 5
            }, {
                p: [164, 39, -13],
                s: [4, 0, 5],
                id: 4,
                col: 1,
                r: [0, -.53, 0],
                c: 9671571,
                t: 5
            }, {
                p: [249, 39, 47],
                s: [4, 0, 5],
                id: 4,
                col: 1,
                r: [0, -.53, 0],
                c: 9671571,
                t: 5
            }, {
                p: [-142, 2, 25],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-175, 2, -28],
                s: [2, 4, 2],
                col: 1,
                pe: 1,
                c: 5211204,
                t: 5
            }, {
                p: [-175, 4, -28],
                s: [1, 4, 1],
                col: 1,
                pe: 1,
                c: 5211204,
                t: 5
            }, {
                p: [243, 2, 8],
                s: [1, 17, 3],
                col: 1,
                r: [0, 0, .17],
                c: 7692103,
                t: 5
            }, {
                p: [-129, 2, 12],
                s: [1, 17, 3],
                col: 1,
                r: [0, 0, .17],
                c: 7692103,
                t: 5
            }, {
                p: [-139, 2, 74],
                s: [1, 17, 3],
                col: 1,
                r: [0, 0, .17],
                c: 7692103,
                t: 5
            }, {
                p: [-139, 2, 81],
                s: [1, 17, 3],
                col: 1,
                r: [0, 0, .17],
                c: 7692103,
                t: 5
            }, {
                p: [158, 38, -22],
                s: [2, 4, 2],
                col: 1,
                pe: 1,
                c: 5211204,
                t: 5
            }, {
                p: [158, 40, -22],
                s: [1, 4, 1],
                col: 1,
                pe: 1,
                c: 5211204,
                t: 5
            }, {
                p: [202, 38, 77],
                s: [4, 22, 2],
                col: 1,
                r: [.17, 0, 0],
                c: 7692103,
                t: 5
            }, {
                p: [209, 38, 77],
                s: [4, 22, 2],
                col: 1,
                r: [.17, 0, 0],
                c: 7692103,
                t: 5
            }, {
                p: [145, 2, -22],
                s: [2, 4, 2],
                col: 1,
                pe: 1,
                c: 5211204,
                t: 5
            }, {
                p: [145, 4, -22],
                s: [1, 4, 1],
                col: 1,
                pe: 1,
                c: 5211204,
                t: 5
            }, {
                p: [188, 8, 88],
                s: [2, 4, 2],
                col: 1,
                pe: 1,
                c: 5211204,
                t: 5
            }, {
                p: [188, 10, 88],
                s: [1, 4, 1],
                col: 1,
                pe: 1,
                c: 5211204,
                t: 5
            }, {
                p: [-93, 14, -70],
                s: [2, 4, 2],
                col: 1,
                pe: 1,
                c: 5211204,
                t: 5
            }, {
                p: [-93, 16, -70],
                s: [1, 4, 1],
                col: 1,
                pe: 1,
                c: 5211204,
                t: 5
            }, {
                p: [145, 39, 105],
                s: [4, 0, 5],
                id: 4,
                col: 1,
                r: [0, 1.39, 0],
                c: 9671571,
                t: 5
            }, {
                p: [168, 38, 106],
                s: [4, 22, 2],
                col: 1,
                r: [.17, 0, 0],
                c: 7692103,
                t: 5
            }, {
                p: [35, 1, 304],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [23, 1, 304],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [29, 13, 304],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-92, 32, -2],
                s: [7, 2, 7],
                c: 9012870,
                t: 5
            }, {
                p: [-92, 34, -2],
                s: [3, 2, 3],
                c: 9012870,
                t: 5
            }, {
                p: [-92, 31, -2],
                s: [3, 1, 3],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [-92, 74, -2],
                s: [3, 2, 3],
                c: 9012870,
                t: 5
            }, {
                p: [-92, 72, -2],
                s: [7, 2, 7],
                c: 9012870,
                t: 5
            }, {
                p: [-92, 71, -2],
                s: [3, 1, 3],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [183, 74, 39],
                s: [3, 2, 3],
                c: 9012870,
                t: 5
            }, {
                p: [183, 72, 39],
                s: [7, 2, 7],
                c: 9012870,
                t: 5
            }, {
                p: [183, 71, 39],
                s: [3, 1, 3],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [183, 34, 39],
                s: [3, 2, 3],
                c: 9012870,
                t: 5
            }, {
                p: [272, 32, 39],
                s: [7, 2, 7],
                c: 9012870,
                t: 5
            }, {
                p: [183, 31, 39],
                s: [3, 1, 3],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [272, 34, 39],
                s: [3, 2, 3],
                c: 9012870,
                t: 5
            }, {
                p: [183, 32, 39],
                s: [7, 2, 7],
                c: 9012870,
                t: 5
            }, {
                p: [272, 31, 39],
                s: [3, 1, 3],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [294, 2, 23],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [288, 3, 9],
                s: [4, 0, 5],
                id: 4,
                col: 1,
                r: [-3.14, 1.4, -3.14],
                c: 9671571,
                t: 5
            }, {
                p: [-163, 32, -2],
                s: [7, 2, 7],
                c: 9012870,
                t: 5
            }, {
                p: [-163, 34, -2],
                s: [3, 2, 3],
                c: 9012870,
                t: 5
            }, {
                p: [-163, 31, -2],
                s: [3, 1, 3],
                col: 1,
                c: 0,
                e: 16767098,
                t: 5
            }, {
                p: [28, 1, 305],
                s: [72, 50, 63],
                id: 14,
                col: 1
            }, {
                p: [-89, 38, -8],
                s: [61, 38, 65],
                id: 14,
                col: 1
            }, {
                p: [184, 2, 37],
                s: [61, 33, 59],
                id: 14,
                col: 1
            }, {
                p: [367, 0, 32],
                s: [24, 36, 24],
                id: 23,
                col: 1,
                tm: 0
            }, {
                p: [-215, 0, 35],
                s: [24, 36, 24],
                id: 23,
                col: 1,
                tm: "1"
            }, {
                p: [365, 14, 138],
                s: [6, 41, 6],
                pe: 1,
                v: 1,
                c: 6193707,
                t: 5
            }, {
                p: [206, 44, -77],
                s: [108, 35, 98],
                pe: 1,
                v: 1,
                c: 5263440,
                t: 5
            }, {
                p: [-229, 17, 176],
                s: [6, 39, 6],
                pe: 1,
                v: 1,
                c: 6193707,
                t: 5
            }, {
                p: [375, 18, 128],
                s: [6, 37, 8],
                pe: 1,
                v: 1,
                c: 6193707,
                t: 5
            }, {
                p: [-219, 19, 186],
                s: [6, 37, 8],
                pe: 1,
                v: 1,
                c: 6193707,
                t: 5
            }, {
                p: [206, 48, -77],
                s: [107, 5, 97],
                id: 12,
                col: 1
            }, {
                p: [-105, 48, 120],
                s: [92, 8, 109],
                id: 12,
                col: 1
            }, {
                p: [-113, 80, -16],
                s: [146, 1, 170],
                id: 12,
                col: 1
            }, {
                p: [32, 39, -123],
                s: [46, 28, 19],
                pe: 1,
                v: 1,
                c: 5263440,
                t: 5
            }, {
                p: [375, 55, 138],
                s: [27, 26, 29],
                pe: 1,
                v: 1,
                c: 6193707,
                t: 5
            }, {
                p: [-100, 14, 70],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-100, 2, 70],
                s: [12, 12, 12],
                id: 8
            }, {
                p: [-35, -1, -18],
                s: [3, 2, 3],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [-35, -1, -28],
                s: [3, 2, 3],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [-35, -1, -23],
                s: [4, 2, 5],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [-29, -1, -28],
                s: [5, 2, 4],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [-29, -1, -18],
                s: [5, 2, 4],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [-29, -1, -23],
                s: [3, 2, 3],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [127, -1, 39],
                s: [4, 2, 3],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [127, -1, 49],
                s: [4, 2, 3],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [127, -1, 44],
                s: [4, 2, 5],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [109, -1, 40],
                s: [4, 2, 6],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [121, -1, 48],
                s: [4, 2, 6],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [115, -1, 44],
                s: [4, 2, 5],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [103, -1, 44],
                s: [4, 2, 5],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [121, -1, 40],
                s: [4, 2, 6],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [109, -1, 48],
                s: [4, 2, 6],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [115, -1, 49],
                s: [4, 2, 3],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [115, -1, 39],
                s: [4, 2, 3],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [97, -1, 48],
                s: [4, 2, 6],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [97, -1, 40],
                s: [4, 2, 6],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [91, -1, 44],
                s: [4, 2, 5],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [85, -1, 40],
                s: [4, 2, 6],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [85, -1, 48],
                s: [4, 2, 6],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [103, -1, 49],
                s: [4, 2, 3],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [91, -1, 49],
                s: [4, 2, 3],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [91, -1, 39],
                s: [4, 2, 3],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [103, -1, 39],
                s: [4, 2, 3],
                col: 1,
                c: 7368816,
                t: 5
            }, {
                p: [-79, 120, -105],
                s: [30, 35, 18],
                id: 13,
                col: 1,
                pr: "2"
            }, {
                p: [-79, 155, -123],
                s: [30, 35, 18],
                id: 13,
                col: 1,
                pr: "2"
            }, {
                p: [-79, 190, -141],
                s: [30, 35, 18],
                id: 13,
                col: 1,
                pr: "2"
            }, {
                p: [170, 118, 123],
                s: [30, 35, 18],
                id: 13,
                col: 1,
                pr: "2"
            }, {
                p: [170, 153, 141],
                s: [30, 35, 18],
                id: 13,
                col: 1,
                pr: "2"
            }, {
                p: [170, 188, 159],
                s: [30, 35, 18],
                id: 13,
                col: 1,
                pr: "2"
            }, {
                p: [98, 102, -212],
                s: [14, 35, 25],
                id: 13,
                col: 1,
                pr: "2"
            }, {
                p: [112, 137, -212],
                s: [14, 35, 25],
                id: 13,
                col: 1,
                pr: "2"
            }, {
                p: [126, 172, -212],
                s: [14, 35, 25],
                id: 13,
                col: 1,
                pr: "2"
            }, {
                p: [-251, -1, 141],
                s: [4, 26, 4],
                c: 7692103,
                t: 5
            }, {
                p: [-251, -1, 118],
                s: [4, 26, 4],
                c: 7692103,
                t: 5
            }, {
                p: [220, 82, 43],
                s: [178, 4, 152],
                r: [.09, 0, 0],
                c: 5263440,
                t: 5
            }, {
                p: [302, 84, -1],
                s: [4, 3, 46],
                c: 12927811,
                t: 5
            }, {
                p: [302, 87, -13],
                s: [4, 3, 22],
                c: 12927811,
                t: 5
            }, {
                p: [302, 38, 91],
                s: [4, 38, 38],
                c: 12927811,
                t: 5
            }, {
                p: [302, 76, 91],
                s: [4, 3, 38],
                c: 12927811,
                t: 5
            }, {
                p: [138, 66, 81],
                s: [4, 15, 34],
                c: 12927811,
                t: 5
            }, {
                p: [138, 87, -14],
                s: [4, 1, 4],
                c: 12927811,
                t: 5
            }, {
                p: [56, 1, 115],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [56, 6, 111],
                s: [1, 3, 1],
                c: 8882055,
                t: 5
            }, {
                p: [56, 1, 109],
                s: [3, 6, 6],
                c: 12927811,
                t: 5
            }, {
                p: [40, 10, 48],
                s: [24, 2, 100],
                pe: 1,
                c: 2899797,
                t: 5
            }, {
                p: [40, 37, 48],
                s: [28, 2, 100],
                pe: 1,
                c: "#2c3f55",
                t: 5
            }, {
                p: [40, 3, 38],
                s: [27, 4, 4],
                c: 8551805,
                t: 5
            }, {
                p: [40, 3, 22],
                s: [27, 4, 4],
                c: 8551805,
                t: 5
            }, {
                p: [29, 1, 22],
                s: [4, 8, 8],
                c: 1447446,
                t: 5
            }, {
                p: [29, 1, 38],
                s: [4, 8, 8],
                c: 1447446,
                t: 5
            }, {
                p: [34, 1, 38],
                s: [4, 8, 8],
                c: 1447446,
                t: 5
            }, {
                p: [34, 1, 22],
                s: [4, 8, 8],
                c: 1447446,
                t: 5
            }, {
                p: [51, 1, 38],
                s: [4, 8, 8],
                c: 1447446,
                t: 5
            }, {
                p: [46, 1, 38],
                s: [4, 8, 8],
                c: 1447446,
                t: 5
            }, {
                p: [51, 1, 22],
                s: [4, 8, 8],
                c: 1447446,
                t: 5
            }, {
                p: [46, 1, 22],
                s: [4, 8, 8],
                c: 1447446,
                t: 5
            }, {
                p: [40, 12, 97],
                s: [24, 25, 2],
                pe: 1,
                c: "#2c3f55",
                t: 5
            }, {
                p: [40, 6, 59],
                s: [5, 4, 85],
                c: 8551805,
                t: 5
            }, {
                p: [40, 6, -1],
                s: [24, 4, 3],
                c: 8551805,
                t: 5
            }, {
                p: [47, 12, -2],
                s: [12, 25, 2],
                c: "#6b6b6b",
                t: 5
            }, {
                p: [26, 12, 3],
                s: [2, 25, 12],
                c: "#6b6b6b",
                t: 5
            }, {
                p: [40, 5, -1],
                s: [27, 1, 4],
                c: 8551805,
                t: 5
            }, {
                p: [40, 3, 110],
                s: [27, 4, 4],
                c: 8551805,
                t: 5
            }, {
                p: [51, 1, 110],
                s: [4, 8, 8],
                c: 1447446,
                t: 5
            }, {
                p: [29, 1, 110],
                s: [4, 8, 8],
                c: 1447446,
                t: 5
            }, {
                p: [50, 7, -2],
                s: [2, 2, 2],
                col: 1,
                c: 16730880,
                e: 16711680,
                o: .8,
                t: 5
            }, {
                p: [30, 7, -2],
                s: [2, 2, 2],
                col: 1,
                c: "#ff4b00",
                e: 16711680,
                o: .8,
                t: 5
            }, {
                p: [40, 5, 102],
                s: [24, 28, 4],
                c: "#bbbbbb",
                t: 5
            }, {
                p: [40, 5, 118],
                s: [24, 24, 4],
                c: "#bbbbbb",
                t: 5
            }, {
                p: [40, 6, 111],
                s: [17, 6, 14],
                c: "#595959",
                t: 5
            }, {
                p: [40, 5, 121],
                s: [25, 6, 3],
                c: "#5c5c5c",
                t: 5
            }, {
                p: [40, 17, 122],
                s: [22, 10, 1],
                col: 1,
                c: "#22272d",
                t: 5
            }, {
                p: [40, 11, 121],
                s: [24, 6, 2],
                c: "#bbbbbb",
                t: 5
            }, {
                p: [40, 17, 121],
                s: [24, 11, 2],
                col: 1,
                c: "#bbbbbb",
                t: 5
            }, {
                p: [40, 17, 121],
                s: [24, 11, 2],
                v: 1,
                c: "#213041",
                t: 5
            }, {
                p: [50, 12, 122],
                s: [2, 2, 2],
                col: 1,
                e: 16765184,
                o: .8,
                t: 5
            }, {
                p: [30, 12, 122],
                s: [2, 2, 2],
                col: 1,
                e: 16765184,
                o: .8,
                t: 5
            }, {
                p: [40, 12, 122],
                s: [14, 4, 2],
                c: "#6e6e6e",
                t: 5
            }, {
                p: [40, 20, 118],
                s: [28, 4, 1],
                c: "#6e6e6e",
                t: 5
            }, {
                p: [40, 3, 86],
                s: [22, 6, 22],
                c: 8551805,
                t: 5
            }, {
                p: [30, 12, 100],
                s: [1, 25, 1],
                c: "#666666",
                e: 1579032,
                t: 5
            }, {
                p: [50, 12, 100],
                s: [1, 25, 1],
                c: "#666666",
                e: 1579032,
                t: 5
            }, {
                p: [40, 8, 49],
                s: [28, 2, 98],
                pe: 1,
                v: 1,
                c: 2899797,
                t: 5
            }, {
                p: [40, 20, 113],
                s: [25, 8, 8],
                c: "#22272d",
                t: 5
            }, {
                p: [40, 12, 111],
                s: [24, 18, 14],
                c: "#bbbbbb",
                t: 5
            }, {
                p: [45, 12, 46],
                s: [6, 2, 92],
                col: 1,
                c: 7035206,
                t: 2
            }, {
                p: [47, 12, -3],
                s: [4, 25, 2],
                id: 3,
                t: 2,
                d: 3
            }, {
                p: [11, 1, 22],
                s: [4, 7, 4],
                id: 16,
                col: 1
            }, {
                p: [56, 1, -12],
                s: [4, 7, 4],
                id: 16,
                col: 1
            }, {
                p: [23, 1, -12],
                s: [4, 7, 4],
                id: 16,
                col: 1
            }, {
                p: [35, 12, 87],
                s: [12, 12, 12],
                id: 8
            }, {
                p: [27, 10, 78],
                s: [2, 27, 40],
                pe: 1,
                c: "#2c3f55",
                t: 5
            }, {
                p: [27, 10, 19],
                s: [2, 27, 42],
                pe: 1,
                c: "#2c3f55",
                t: 5
            }, {
                p: [53, 10, 89],
                s: [2, 27, 18],
                pe: 1,
                c: "#2c3f55",
                t: 5
            }, {
                p: [53, 10, 30],
                s: [2, 27, 64],
                pe: 1,
                c: "#2c3f55",
                t: 5
            }, {
                p: [53, 32, 71],
                s: [1, 5, 18],
                c: "#ffffff",
                t: 10
            }, {
                p: [27, 32, 49],
                s: [1, 5, 18],
                c: "#ffffff",
                t: 10
            }, {
                p: [53, 10, 71],
                s: [2, 2, 18],
                c: "#2c3f55",
                t: 5
            }, {
                p: [27, 10, 49],
                s: [2, 2, 18],
                c: "#2c3f55",
                t: 5
            }, {
                p: [18, 1, 75],
                s: [6, 2, 92],
                c: 8678483,
                t: 2
            }, {
                p: [11, 1, 74],
                s: [6, 2, 92],
                c: 7692103,
                t: 2
            }, {
                p: [4, 1, 76],
                s: [6, 2, 92],
                c: 5259054,
                t: 2
            }, {
                p: [6, 3, 75],
                s: [6, 2, 92],
                c: 7692103,
                t: 2
            }, {
                p: [14, 3, 76],
                s: [6, 2, 92],
                c: 7692103,
                t: 2
            }, {
                p: [10, 5, 76],
                s: [6, 2, 92],
                c: 7035206,
                t: 2
            }, {
                p: [11, 1, 125],
                s: [4, 7, 4],
                id: 16,
                col: 1
            }, {
                p: [-34, 0, 61],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-37, 0, -3],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-26, 0, 37],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-26, 0, -44],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-39, 0, -96],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-14, 0, -105],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-5, 0, -102],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [6, 0, -127],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [36, 0, -101],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [60, 0, -124],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [90, 0, -128],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [98, 0, -135],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [106, 0, -118],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [106, 0, -84],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [85, 0, -29],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [131, -1, -22],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [84, 0, 12],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [131, 0, 27],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [83, 0, 59],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [86, 0, 119],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [158, 0, -153],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [90, 0, 166],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [173, 0, 91],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [87, 0, 238],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-27, 0, 237],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-33, 0, 202],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-31, 0, 149],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-25, 0, 122],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-69, 0, 174],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-96, 0, 201],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-67, 0, 201],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-170, 0, 201],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-147, 0, 174],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-216, 0, 180],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-216, 0, 172],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-247, 0, 198],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-247, 0, 118],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-180, 0, 68],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-151, 0, 69],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-151, 0, 125],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-243, 0, 50],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-241, 0, 79],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-215, 0, -5],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-184, 0, -46],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-257, 0, -12],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-254, 0, -128],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-218, 0, -88],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-196, 0, -147],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-204, 0, -143],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-134, 0, -149],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-99, 0, -113],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-158, 0, -100],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-35, 0, -153],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-65, 0, -118],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-28, 0, 308],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [103, 0, 279],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [109, 0, 302],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [85, 0, 338],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [94, 0, 362],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [144, 0, 353],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [160, 0, 323],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-26, -1, 381],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-33, -1, 413],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [84, -1, 414],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [133, 0, 69],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [132, 0, 112],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [151, 0, 131],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [189, 0, 132],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [229, 0, 156],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [271, 0, 118],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [286, 0, 156],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [334, 0, 156],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [308, 0, 114],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [308, 0, 59],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [349, 0, 38],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [371, 0, 135],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [395, 0, 116],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [391, 0, 22],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [396, 0, -1],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [307, 0, -18],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [296, 0, -34],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [260, 0, -35],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [260, 0, -72],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [394, 0, -43],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [404, 0, -49],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [429, 0, -60],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [405, 0, -153],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [292, 0, -154],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [206, 0, -125],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [177, 0, -154],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [177, 0, -147],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-10, 0, -108],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [64, 0, -126],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-287, 0, -54],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [108, 0, 118],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [99, 0, 152],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [124, 0, 151],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [110, 0, 144],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [90, 0, 179],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [88, 0, 264],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-31, 0, 265],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-32, 0, 255],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-33, 0, 223],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [105, 0, 82],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [109, 0, 10],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [95, 0, -62],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [74, 0, -113],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [96, 0, -103],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [136, 0, -148],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [98, 0, -155],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [170, 0, -126],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [211, 0, -154],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [243, 0, -126],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [262, 0, -152],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [308, 0, -118],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [287, 0, -89],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [325, 0, -36],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [333, 0, -105],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [307, 0, -64],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [359, 0, -76],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [364, 0, -30],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [376, 0, 55],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [358, 0, 113],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [386, 0, 155],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [363, 0, -118],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [378, 0, -148],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [423, 0, -148],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [429, 0, -105],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [405, 0, -98],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [392, 0, -121],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [391, 0, -99],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [391, 0, -79],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [340, 0, 0],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [339, 0, 55],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [338, 0, 86],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-131, 0, 200],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-213, 0, 200],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-171, 0, 172],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-202, 0, 131],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-180, 0, 107],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-211, 0, 70],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-215, 0, 18],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-284, 0, 102],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-260, 0, 102],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-288, 0, 142],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-289, 0, 191],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-264, 0, 202],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-254, 0, 179],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-258, 0, 153],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-183, 2, 46],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-185, 0, 6],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-256, 0, 15],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-255, 0, 38],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-288, 0, 36],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-287, 0, 1],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-287, 0, -30],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-258, 0, -81],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-234, 0, -43],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-208, 0, -44],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-197, 0, -88],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-268, 0, -113],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-278, 0, -139],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-165, 0, -124],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-91, 0, -134],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }, {
                p: [-47, 0, 350],
                s: [12, 6, 12],
                id: 18,
                col: 1
            }]
        }, {
            name: "Sandstorm",
            modURL: "",
            terrainSeed: "",
            terrainWidth: 2048,
            terrainHeight: 2048,
            terrainMntMlt: 1,
            terrainMntCol: "#a0a0a0",
            terrainGrsCol: "#4a6904",
            terrainDrtCol: "#8c6835",
            skyDome: !1,
            skyDomeCol0: "#ffffff",
            skyDomeCol1: "#7196a2",
            skyDomeCol2: "#184452",
            sizeMlt: 2,
            shadowR: 1024,
            ambient: 9937064,
            light: 15923452,
            sky: 11180929,
            fog: 10654834,
            fogD: 633.4396002067896,
            dthY: -100,
            camPos: [-124, 62, -269],
            spawns: [
                [0, 15, -3],
                [-77, 40, -347],
                [278, 38, 122],
                [-105, 52, 86],
                [241, 38, -322],
                [-42, 52, 48],
                [-39, 40, -210]
            ],
            ambO: .7,
            objects: [{
                p: [-5, 12, 0],
                s: [94, 1, 114],
                t: 1
            }, {
                p: [-67, 12, 0],
                s: [30, 1, 44],
                t: 1
            }, {
                p: [-178, 32, 0],
                s: [122, 1, 150],
                t: 1
            }, {
                p: [-163, 14, 157],
                s: [154, 34, 56],
                t: 1
            }, {
                p: [-28, 9, 104],
                s: [312, 39, 50],
                t: 1
            }, {
                p: [1, 47, -26],
                s: [104, 1, 210],
                t: 1
            }, {
                p: [194, -4, 56],
                s: [216, 37, 221],
                t: 1
            }, {
                p: [-175, 19, -138],
                s: [53, 25, 62],
                t: 1
            }, {
                p: [64, 13, 0],
                s: [44, 20, 46],
                id: 9,
                t: 1,
                d: 0
            }, {
                p: [-209, 33, 101],
                s: [38, 15, 56],
                id: 9,
                t: 1,
                d: 1
            }, {
                p: [-175, 33, -91],
                s: [53, 11, 32],
                id: 9,
                t: 1,
                d: 3
            }, {
                p: [-175, 33, -185],
                s: [53, 11, 32],
                id: 9,
                t: 1,
                d: 1
            }, {
                p: [80, 33, -106],
                s: [54, 15, 49],
                id: 9,
                t: 1,
                d: 2
            }, {
                p: [110, 33, 54],
                s: [36, 15, 50],
                id: 9,
                t: 1,
                d: 1
            }, {
                p: [-138, 24, 76],
                s: [104, 31, 6],
                c: 12497300,
                e: 3746078
            }, {
                p: [-187, 24, 104],
                s: [6, 31, 50],
                c: 12497300,
                e: 3746078
            }, {
                p: [159, 32, 103],
                s: [38, 1, 55],
                t: 1
            }, {
                p: [-50, 16, -219],
                s: [6, 22, 37],
                c: 12497300,
                e: 3746078
            }, {
                p: [-50, 14, -246],
                s: [6, 38, 7],
                c: 12497300,
                e: 3746078
            }, {
                p: [-50, 38, -207],
                s: [6, 12, 14],
                c: 12497300,
                e: 3746078
            }, {
                p: [-50, 38, -217],
                s: [6, 4, 6],
                c: 12497300,
                e: 3746078
            }, {
                p: [220, 33, 125],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-103, 32, -128],
                s: [96, 2, 111],
                col: 1,
                c: 4408131,
                t: 2
            }, {
                p: [-103, 109, -129],
                s: [100, 5, 117],
                c: 4408131,
                t: 2
            }, {
                p: [61, 87, -245],
                s: [87, 4, 77],
                c: 4868682,
                t: 2
            }, {
                p: [20, 87, -167],
                s: [169, 4, 79],
                c: 4868682,
                t: 2
            }, {
                p: [61, 30, -242],
                s: [82, 4, 79],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [20, 30, -166],
                s: [164, 4, 73],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [20, 32, -166],
                s: [162, 55, 71],
                c: 8349264,
                e: 2432793
            }, {
                p: [42, 32, -284],
                s: [15, 72, 7],
                c: 3091496,
                e: 3616548
            }, {
                p: [-33, 51, -202],
                s: [15, 1, 1],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [-40, 34, -202],
                s: [1, 17, 1],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [-26, 34, -202],
                s: [1, 17, 1],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [42, 33, -285],
                s: [17, 1, 7],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [-33, 34, -201],
                s: [13, 17, 2],
                col: 1,
                c: 8221547,
                t: 2
            }, {
                p: [-147, 114, -120],
                s: [35, 3, 15],
                c: 5263440,
                t: 2
            }, {
                p: [115, 73, -12],
                s: [2, 42, 2],
                col: 1,
                c: 12303291,
                t: 2
            }, {
                p: [-133, 33, -195],
                s: [36, 1, 19],
                col: 1,
                c: 4408131,
                t: 2
            }, {
                p: [-159, 40, -308],
                s: [87, 1, 57],
                t: 1
            }, {
                p: [-187, 33, -268],
                s: [31, 8, 23],
                id: 9,
                t: 1,
                d: 3
            }, {
                p: [-141, 40, -270],
                s: [51, 1, 19],
                t: 1
            }, {
                p: [-169, 17, -270],
                s: [5, 29, 19],
                c: 12497300,
                e: 3746078
            }, {
                p: [-141, 17, -258],
                s: [61, 29, 5],
                c: 12497300,
                e: 3746078
            }, {
                p: [-113, 17, -299],
                s: [5, 29, 77],
                c: 12497300,
                e: 3746078
            }, {
                p: [-103, 17, -129],
                s: [94, 92, 111],
                c: 10191214,
                e: 4077098
            }, {
                p: [-97, 33, -349],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-197, 44, -155],
                s: [1, 19, 6],
                col: 1,
                r: [0, 0, .17],
                c: 8684676,
                t: 2
            }, {
                p: [-229, 32, -162],
                s: [56, 45, 111],
                c: 10652266,
                e: 2432532
            }, {
                p: [-229, 77, -162],
                s: [61, 3, 115],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [-248, 32, -309],
                s: [94, 94, 111],
                c: 7691850,
                e: 3222046
            }, {
                p: [-248, 126, -309],
                s: [102, 5, 117],
                c: 5723991,
                t: 2
            }, {
                p: [-241, 32, -237],
                s: [56, 33, 111],
                c: 7038557,
                e: 5390122
            }, {
                p: [-241, 65, -237],
                s: [62, 3, 111],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [-241, 31, -236],
                s: [58, 3, 35],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [-229, 31, -162],
                s: [58, 3, 113],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [-250, 29, -309],
                s: [100, 5, 113],
                col: 1,
                c: 5723991,
                t: 2
            }, {
                p: [-204, 102, -267],
                s: [7, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-340, 32, -199],
                s: [91, 73, 116],
                c: 10519402,
                e: 7892309
            }, {
                p: [-340, 105, -199],
                s: [97, 6, 122],
                c: 6381921,
                t: 2
            }, {
                p: [-197, 44, -163],
                s: [1, 19, 6],
                col: 1,
                r: [0, 0, .17],
                c: 8684676,
                t: 2
            }, {
                p: [-63, 32, -411],
                s: [81, 85, 111],
                c: 16765069,
                e: 1973790
            }, {
                p: [-170, 97, -392],
                s: [140, 6, 121],
                c: 4408131,
                t: 2
            }, {
                p: [-110, 82, -335],
                s: [4, 4, 16],
                col: 1,
                pe: 1,
                c: 7039851,
                t: 2
            }, {
                p: [-170, 32, -392],
                s: [133, 65, 112],
                c: 9860174,
                e: 3749164
            }, {
                p: [-63, 117, -411],
                s: [87, 6, 119],
                c: 5066061,
                t: 2
            }, {
                p: [-63, 154, -411],
                s: [58, 5, 56],
                c: 4868682,
                t: 2
            }, {
                p: [22, 32, -381],
                s: [91, 57, 87],
                c: 10519402,
                e: 3616035
            }, {
                p: [-203, 134, -483],
                s: [97, 7, 94],
                c: 5395026,
                t: 2
            }, {
                p: [-204, 101, -267],
                s: [8, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-204, 102, -288],
                s: [7, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-204, 102, -309],
                s: [7, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-204, 101, -288],
                s: [8, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-204, 101, -309],
                s: [8, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-103, 84, -129],
                s: [95, 2, 113],
                col: 1,
                c: 4408131,
                t: 2
            }, {
                p: [-103, 59, -129],
                s: [96, 2, 113],
                col: 1,
                c: 4408131,
                t: 2
            }, {
                p: [-63, 123, -411],
                s: [52, 32, 49],
                c: 16765069,
                e: 1973790
            }, {
                p: [-203, 57, -204],
                s: [5, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-204, 56, -204],
                s: [8, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [61, 32, -241],
                s: [80, 55, 79],
                c: 8349264,
                e: 2432793
            }, {
                p: [-63, 89, -411],
                s: [83, 2, 112],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-63, 59, -411],
                s: [83, 2, 112],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-250, 82, -309],
                s: [100, 2, 113],
                col: 1,
                c: 5723991,
                t: 2
            }, {
                p: [61, 59, -242],
                s: [82, 2, 79],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [20, 59, -166],
                s: [164, 2, 73],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [-134, 67, -181],
                s: [9, 14, 8],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-37, 97, -359],
                s: [9, 14, 8],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-37, 96, -359],
                s: [10, 1, 9],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-63, 32, -411],
                s: [83, 2, 113],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-128, 82, -335],
                s: [4, 4, 16],
                col: 1,
                pe: 1,
                c: 7039851,
                t: 2
            }, {
                p: [-146, 82, -335],
                s: [4, 4, 16],
                col: 1,
                pe: 1,
                c: 7039851,
                t: 2
            }, {
                p: [-163, 82, -335],
                s: [4, 4, 16],
                col: 1,
                pe: 1,
                c: 7039851,
                t: 2
            }, {
                p: [-180, 82, -335],
                s: [4, 4, 16],
                col: 1,
                pe: 1,
                c: 7039851,
                t: 2
            }, {
                p: [-195, 82, -335],
                s: [4, 4, 16],
                col: 1,
                pe: 1,
                c: 7039851,
                t: 2
            }, {
                p: [-134, 66, -184],
                s: [10, 1, 3],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-75, 91, -184],
                s: [10, 1, 3],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-75, 92, -181],
                s: [9, 14, 8],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-133, 32, -194],
                s: [34, 27, 19],
                c: 10191214,
                e: 4077098
            }, {
                p: [88, 68, -277],
                s: [9, 14, 8],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [88, 67, -280],
                s: [10, 1, 3],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-58, 91, -94],
                s: [5, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-237, 81, 150],
                s: [9, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-197, 41, -333],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-187, 41, -332],
                s: [2, 7, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-199, 41, -319],
                s: [2, 4, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [15, 45, -208],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [15, 33, -220],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-204, 32, -485],
                s: [91, 102, 87],
                c: 10519402,
                e: 3616035
            }, {
                p: [22, 89, -381],
                s: [98, 5, 93],
                c: 5395026,
                t: 2
            }, {
                p: [22, 59, -381],
                s: [92, 2, 88],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [22, 32, -381],
                s: [93, 2, 89],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [-10, 68, -341],
                s: [9, 14, 8],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [11, 68, -341],
                s: [9, 14, 8],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-10, 67, -341],
                s: [10, 1, 9],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [11, 67, -341],
                s: [10, 1, 9],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [253, 32, -160],
                s: [64, 53, 72],
                c: 9860174,
                e: 3749164
            }, {
                p: [193, 95, -293],
                s: [74, 4, 121],
                c: 4868682,
                t: 2
            }, {
                p: [193, 65, -292],
                s: [69, 2, 114],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [193, 32, -285],
                s: [70, 2, 101],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [161, 75, -309],
                s: [5, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [161, 74, -309],
                s: [6, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [154, 59, -273],
                s: [20, 2, 44],
                c: 9539985,
                t: 2
            }, {
                p: [146, 33, -293],
                s: [2, 29, 2],
                c: 9539985,
                t: 2
            }, {
                p: [146, 33, -253],
                s: [2, 29, 2],
                c: 9539985,
                t: 2
            }, {
                p: [158, 33, -246],
                s: [1, 38, 4],
                id: 3,
                t: 2,
                d: 2
            }, {
                p: [-8, 55, -258],
                s: [9, 3, 3],
                pe: 1,
                c: 11316396,
                t: 2
            }, {
                p: [-2, 55, -258],
                s: [3, 8, 3],
                pe: 1,
                c: 11316396,
                t: 2
            }, {
                p: [-14, 75, -258],
                s: [30, 27, 31],
                c: 5988172,
                t: 5
            }, {
                p: [-2, 63, -258],
                s: [10, 9, 10],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [129, 32, -403],
                s: [124, 73, 93],
                c: 9860174,
                e: 3749164
            }, {
                p: [129, 105, -404],
                s: [132, 5, 121],
                c: 5395026,
                t: 2
            }, {
                p: [168, 33, -404],
                s: [44, 1, 115],
                col: 1,
                c: 985865,
                t: 5
            }, {
                p: [129, 33, -355],
                s: [37, 36, 6],
                c: 8553090,
                t: 2
            }, {
                p: [236, 32, -367],
                s: [90, 32, 61],
                c: 10652266,
                e: 2432532
            }, {
                p: [236, 64, -367],
                s: [97, 5, 68],
                c: 5395026,
                t: 2
            }, {
                p: [241, 44, -340],
                s: [9, 14, 8],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [241, 43, -340],
                s: [10, 1, 9],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [236, 29, -367],
                s: [92, 5, 63],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [74, 33, -341],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [57, 33, -288],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [261, 33, -330],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [273, 33, -330],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-213, 59, -249],
                s: [10, 3, 3],
                col: 1,
                pe: 1,
                c: 7039851,
                t: 2
            }, {
                p: [-213, 59, -231],
                s: [10, 3, 3],
                col: 1,
                pe: 1,
                c: 7039851,
                t: 2
            }, {
                p: [-213, 59, -240],
                s: [10, 3, 3],
                col: 1,
                pe: 1,
                c: 7039851,
                t: 2
            }, {
                p: [-213, 59, -222],
                s: [10, 3, 3],
                col: 1,
                pe: 1,
                c: 7039851,
                t: 2
            }, {
                p: [-14, 33, -258],
                s: [5, 42, 5],
                pe: 1,
                c: 11316396,
                t: 2
            }, {
                p: [-65, 33, -188],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-67, 28, -196],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-59, 33, -324],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-59, 33, -336],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-59, 33, -348],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-59, 45, -348],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-50, 16, -348],
                s: [6, 40, 67],
                c: 12497300,
                e: 3746078
            }, {
                p: [-50, 16, -270],
                s: [6, 40, 41],
                c: 12497300,
                e: 3746078
            }, {
                p: [-50, 14, -240],
                s: [6, 31, 5],
                c: 12497300,
                e: 3746078
            }, {
                p: [-50, 38, -233],
                s: [6, 2, 9],
                c: 12497300,
                e: 3746078
            }, {
                p: [-50, 50, -204],
                s: [6, 6, 5],
                c: 12497300,
                e: 3746078
            }, {
                p: [-50, 56, -286],
                s: [6, 3, 9],
                c: 12497300,
                e: 3746078
            }, {
                p: [-50, 56, -270],
                s: [6, 3, 9],
                c: 12497300,
                e: 3746078
            }, {
                p: [-50, 56, -254],
                s: [6, 3, 9],
                c: 12497300,
                e: 3746078
            }, {
                p: [-50, 56, -200],
                s: [6, 3, 9],
                c: 12497300,
                e: 3746078
            }, {
                p: [-50, 56, -319],
                s: [6, 3, 9],
                c: 12497300,
                e: 3746078
            }, {
                p: [-50, 56, -335],
                s: [6, 3, 9],
                c: 12497300,
                e: 3746078
            }, {
                p: [-50, 56, -351],
                s: [6, 3, 9],
                c: 12497300,
                e: 3746078
            }, {
                p: [15, 33, -208],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [3, 33, -208],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-9, 33, -208],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-71, 33, -352],
                s: [2, 7, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-76, 30, -350],
                s: [2, 7, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-82, 32, -354],
                s: [2, 6, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [16, 31, -235],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [18, 33, -242],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [17, 28, -251],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-158, 41, -330],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-146, 41, -330],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-124, 41, -269],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [169, 32, -352],
                s: [44, 73, 9],
                c: 9860174,
                e: 3749164
            }, {
                p: [90, 32, -352],
                s: [46, 73, 9],
                c: 9860174,
                e: 3749164
            }, {
                p: [130, 69, -352],
                s: [34, 36, 9],
                c: 9860174,
                e: 3749164
            }, {
                p: [-210, 33, -222],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-207, 29, -231],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-198, 31, -206],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-44, 33, -338],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-40, 29, -341],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [86, 33, -341],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [319, 32, -317],
                s: [79, 58, 183],
                c: 16765069,
                e: 1973790
            }, {
                p: [319, 90, -317],
                s: [87, 4, 189],
                c: 4868682,
                t: 2
            }, {
                p: [319, 60, -281],
                s: [80, 2, 112],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [319, 32, -281],
                s: [81, 2, 113],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [281, 70, -240],
                s: [4, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [281, 70, -270],
                s: [4, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [282, 69, -270],
                s: [7, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [282, 69, -240],
                s: [7, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [225, 77, -332],
                s: [5, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [225, 76, -332],
                s: [6, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [126, 43, -355],
                s: [3, 5, 8],
                c: "#464646",
                t: 5
            }, {
                p: [327, 32, -470],
                s: [142, 99, 87],
                c: 10519402,
                e: 3616035
            }, {
                p: [328, 130, -470],
                s: [152, 4, 96],
                c: 4868682,
                t: 2
            }, {
                p: [240, 64, -417],
                s: [23, 24, 21],
                c: 5988172,
                t: 5
            }, {
                p: [228, 65, -438],
                s: [30, 31, 31],
                c: 5988172,
                t: 5
            }, {
                p: [267, 63, -420],
                s: [20, 23, 23],
                c: 5988172,
                t: 5
            }, {
                p: [210, 54, -417],
                s: [30, 28, 31],
                c: 5988172,
                t: 5
            }, {
                p: [196, 67, -441],
                s: [21, 22, 26],
                c: 5988172,
                t: 5
            }, {
                p: [259, 52, -412],
                s: [23, 26, 21],
                c: 5988172,
                t: 5
            }, {
                p: [191, 32, -555],
                s: [109, 76, 87],
                c: 10519402,
                e: 3616035
            }, {
                p: [191, 105, -557],
                s: [113, 5, 100],
                c: 5395026,
                t: 2
            }, {
                p: [325, 32, -186],
                s: [80, 77, 79],
                c: 8349264,
                e: 2432793
            }, {
                p: [326, 109, -186],
                s: [88, 4, 86],
                c: 4868682,
                t: 2
            }, {
                p: [326, 86, -186],
                s: [83, 2, 80],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [326, 60, -186],
                s: [83, 2, 80],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [168, 62, -160],
                s: [20, 2, 44],
                c: 9539985,
                t: 2
            }, {
                p: [176, 64, -180],
                s: [2, 7, 2],
                c: 9539985,
                t: 2
            }, {
                p: [176, 71, -160],
                s: [3, 1, 44],
                c: 9539985,
                t: 2
            }, {
                p: [171, 71, -181],
                s: [7, 1, 2],
                c: 9539985,
                t: 2
            }, {
                p: [167, 64, -160],
                s: [1, 17, 13],
                col: 1,
                c: 8221547,
                t: 2
            }, {
                p: [167, 81, -160],
                s: [2, 1, 15],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [167, 64, -167],
                s: [2, 17, 1],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [299, 32, -100],
                s: [52, 40, 93],
                c: 10652266,
                e: 2432532
            }, {
                p: [326, 32, -185],
                s: [84, 2, 79],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [299, 72, -100],
                s: [57, 5, 97],
                c: 5395026,
                t: 2
            }, {
                p: [278, 29, -100],
                s: [12, 5, 95],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [265, 39, -256],
                s: [3, 1, 30],
                c: 9539985,
                t: 2
            }, {
                p: [265, 33, -256],
                s: [1, 6, 30],
                c: 9539985,
                t: 2
            }, {
                p: [241, 33, -281],
                s: [1, 6, 30],
                c: 9539985,
                t: 2
            }, {
                p: [241, 39, -281],
                s: [3, 1, 30],
                c: 9539985,
                t: 2
            }, {
                p: [233, 63, -265],
                s: [20, 2, 4],
                col: 1,
                r: [0, 0, -.18],
                c: 4399894,
                t: 5
            }, {
                p: [233, 63, -269],
                s: [20, 2, 4],
                col: 1,
                r: [0, 0, -.18],
                c: 6710886,
                t: 5
            }, {
                p: [233, 63, -277],
                s: [20, 2, 4],
                col: 1,
                r: [0, 0, -.18],
                c: 6710886,
                t: 5
            }, {
                p: [233, 63, -293],
                s: [20, 2, 4],
                col: 1,
                r: [0, 0, -.18],
                c: 6710886,
                t: 5
            }, {
                p: [233, 63, -273],
                s: [20, 2, 4],
                col: 1,
                r: [0, 0, -.18],
                c: 4399894,
                t: 5
            }, {
                p: [233, 63, -281],
                s: [20, 2, 4],
                col: 1,
                r: [0, 0, -.18],
                c: 4399894,
                t: 5
            }, {
                p: [233, 63, -289],
                s: [20, 2, 4],
                col: 1,
                r: [0, 0, -.18],
                c: 4399894,
                t: 5
            }, {
                p: [233, 63, -297],
                s: [20, 2, 4],
                col: 1,
                r: [0, 0, -.18],
                c: 4399894,
                t: 5
            }, {
                p: [-133, 59, -195],
                s: [36, 2, 19],
                col: 1,
                c: 4408131,
                t: 2
            }, {
                p: [-133, 34, -203],
                s: [13, 17, 2],
                col: 1,
                c: 8221547,
                t: 2
            }, {
                p: [-140, 34, -204],
                s: [1, 17, 1],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [-126, 34, -204],
                s: [1, 17, 1],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [-133, 51, -204],
                s: [15, 1, 1],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [-133, 60, -194],
                s: [34, 1, 19],
                pe: 1,
                v: 1,
                c: 4408131,
                t: 2
            }, {
                p: [-121, 41, -333],
                s: [2, 5, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-132, 41, -331],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [173, 64, -160],
                s: [10, 36, 44],
                pe: 1,
                v: 1,
                c: 9539985,
                t: 2
            }, {
                p: [215, 33, -179],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [215, 33, -167],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [199, 33, -86],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [173, 30, -341],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [325, 32, -14],
                s: [80, 55, 79],
                c: 8349264,
                e: 2432793
            }, {
                p: [319, 32, 135],
                s: [68, 76, 115],
                c: 9860174,
                e: 3749164
            }, {
                p: [325, 87, -14],
                s: [86, 5, 85],
                c: 5395026,
                t: 2
            }, {
                p: [325, 29, -14],
                s: [82, 5, 81],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [304, 32, 30],
                s: [13, 43, 9],
                c: 10191214,
                e: 4077098
            }, {
                p: [304, 32, 73],
                s: [13, 43, 9],
                c: 10191214,
                e: 4077098
            }, {
                p: [304, 75, 51],
                s: [13, 9, 53],
                c: 10191214,
                e: 4077098
            }, {
                p: [302, 43, 47],
                s: [3, 8, 3],
                c: "#4d4d4d",
                t: 5
            }, {
                p: [302, 33, 51],
                s: [1, 42, 39],
                c: 8553090,
                t: 2
            }, {
                p: [325, 60, -14],
                s: [81, 2, 80],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [304, 77, 51],
                s: [26, 4, 4],
                pe: 1,
                c: 7039851,
                t: 2
            }, {
                p: [304, 77, 62],
                s: [26, 4, 4],
                pe: 1,
                c: 7039851,
                t: 2
            }, {
                p: [304, 77, 72],
                s: [26, 4, 4],
                pe: 1,
                c: 7039851,
                t: 2
            }, {
                p: [304, 77, 40],
                s: [26, 4, 4],
                pe: 1,
                c: 7039851,
                t: 2
            }, {
                p: [304, 77, 30],
                s: [26, 4, 4],
                pe: 1,
                c: 7039851,
                t: 2
            }, {
                p: [431, 12, -96],
                s: [92, 102, 160],
                c: 10519402,
                e: 3616035
            }, {
                p: [431, 113, -96],
                s: [99, 4, 165],
                c: 4868682,
                t: 2
            }, {
                p: [319, 108, 135],
                s: [74, 5, 121],
                c: 5395026,
                t: 2
            }, {
                p: [319, 83, 135],
                s: [69, 2, 116],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [319, 56, 135],
                s: [69, 2, 116],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [287, 68, -35],
                s: [5, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [287, 67, -35],
                s: [6, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [287, 65, 94],
                s: [5, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [287, 64, 94],
                s: [6, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [287, 64, 94],
                s: [6, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [94, -2, -52],
                s: [80, 114, 59],
                c: 9860174,
                e: 3749164
            }, {
                p: [180, 32, -48],
                s: [92, 40, 63],
                c: 8349264,
                e: 2432793
            }, {
                p: [180, 72, -48],
                s: [95, 4, 66],
                c: 4868682,
                t: 2
            }, {
                p: [94, 111, -52],
                s: [88, 4, 67],
                c: 4868682,
                t: 2
            }, {
                p: [94, 32, -52],
                s: [82, 2, 61],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [180, 32, -48],
                s: [94, 2, 65],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [319, 32, 135],
                s: [70, 2, 117],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [92, 33, -404],
                s: [44, 1, 115],
                col: 1,
                c: 985865,
                t: 5
            }, {
                p: [-144, 32, -345],
                s: [83, 2, 20],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [275, 49, -103],
                s: [5, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [275, 48, -103],
                s: [6, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [271, 32, -76],
                s: [8, 54, 15],
                c: 3091496,
                e: 3616548
            }, {
                p: [269, 29, -76],
                s: [6, 5, 17],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [-156, 44, -136],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-148, 91, -88],
                s: [5, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-147, 90, -88],
                s: [8, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [280, 33, 0],
                s: [1, 23, 6],
                col: 1,
                r: [0, 0, -.18],
                c: 8684676,
                t: 2
            }, {
                p: [281, 33, 10],
                s: [1, 18, 6],
                col: 1,
                r: [0, 0, -.18],
                c: 8684676,
                t: 2
            }, {
                p: [240, 32, 163],
                s: [92, 51, 64],
                c: 10191214,
                e: 4077098
            }, {
                p: [240, 83, 163],
                s: [97, 5, 70],
                c: 5395026,
                t: 2
            }, {
                p: [239, 56, 163],
                s: [91, 2, 65],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [240, 32, 163],
                s: [90, 2, 66],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [235, 57, 123],
                s: [49, 2, 17],
                c: 9539985,
                t: 2
            }, {
                p: [213, 32, 117],
                s: [2, 28, 2],
                c: 9539985,
                t: 2
            }, {
                p: [257, 32, 117],
                s: [2, 28, 2],
                c: 9539985,
                t: 2
            }, {
                p: [205, 33, 130],
                s: [5, 34, 1],
                id: 3,
                t: 2,
                d: 3
            }, {
                p: [94, 59, -52],
                s: [81, 2, 60],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [94, 86, -52],
                s: [81, 2, 60],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [132, 93, -33],
                s: [5, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [132, 92, -33],
                s: [6, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [226, 34, -67],
                s: [1, 17, 13],
                col: 1,
                c: 8221547,
                t: 2
            }, {
                p: [226, 34, -60],
                s: [2, 17, 1],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [226, 51, -67],
                s: [2, 1, 15],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [226, 34, -74],
                s: [2, 17, 1],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [115, 115, -24],
                s: [15, 3, 37],
                c: 5263440,
                t: 2
            }, {
                p: [-159, 76, -120],
                s: [2, 38, 2],
                col: 1,
                c: 12303291,
                t: 2
            }, {
                p: [158, 32, 72],
                s: [60, 68, 93],
                c: 10191214,
                e: 4077098
            }, {
                p: [158, 67, 72],
                s: [61, 2, 94],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [142, 75, 31],
                s: [5, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [142, 74, 31],
                s: [6, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [213, 84, -278],
                s: [9, 14, 8],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [213, 83, -281],
                s: [10, 1, 3],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [194, 33, 34],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [154, 32, 158],
                s: [80, 43, 79],
                c: 8349264,
                e: 2432793
            }, {
                p: [154, 75, 154],
                s: [85, 5, 75],
                c: 5395026,
                t: 2
            }, {
                p: [77, 32, 169],
                s: [74, 69, 79],
                c: 10652266,
                e: 2432532
            }, {
                p: [192, 33, 125],
                s: [6, 1, 15],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [271, 64, 134],
                s: [9, 14, 7],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [271, 63, 131],
                s: [10, 1, 2],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [77, 101, 169],
                s: [81, 5, 87],
                c: 5395026,
                t: 2
            }, {
                p: [77, 76, 169],
                s: [74, 2, 80],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [77, 47, 169],
                s: [74, 2, 81],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [102, 84, 132],
                s: [9, 14, 6],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [102, 83, 130],
                s: [10, 1, 3],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [154, 33, 115],
                s: [47, 1, 5],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [215, 30, -157],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [218, 32, -142],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [250, 28, -117],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [282, 30, -50],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [280, 32, -42],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [269, 31, -60],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [191, 32, 51],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [194, 29, 58],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [191, 29, 76],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [243, 32, -333],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [251, 30, -329],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [152, 47, -19],
                s: [9, 14, 6],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [152, 46, -16],
                s: [10, 1, 1],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [115, 33, -16],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [127, 33, -16],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [69, 94, -78],
                s: [9, 14, 8],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [69, 93, -81],
                s: [10, 1, 3],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [119, 34, -81],
                s: [13, 17, 2],
                col: 1,
                c: 8221547,
                t: 2
            }, {
                p: [112, 34, -82],
                s: [1, 17, 1],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [119, 51, -82],
                s: [15, 1, 1],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [126, 34, -82],
                s: [1, 17, 1],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [67, 94, -25],
                s: [9, 14, 6],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [142, 79, 28],
                s: [9, 14, 6],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [79, 61, 14],
                s: [10, 1, 2],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [142, 78, 26],
                s: [10, 1, 3],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [67, 93, -23],
                s: [10, 1, 3],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [182, 79, 32],
                s: [5, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [182, 78, 32],
                s: [6, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-97, 33, -199],
                s: [30, 6, 1],
                c: 9539985,
                t: 2
            }, {
                p: [-113, 33, -199],
                s: [2, 25, 2],
                c: 9539985,
                t: 2
            }, {
                p: [-81, 33, -199],
                s: [2, 25, 2],
                c: 9539985,
                t: 2
            }, {
                p: [-97, 39, -199],
                s: [30, 1, 3],
                c: 9539985,
                t: 2
            }, {
                p: [-81, 58, -193],
                s: [4, 2, 20],
                col: 1,
                r: [-.17, 0, 0],
                c: 4081241,
                t: 5
            }, {
                p: [-113, 58, -193],
                s: [4, 2, 20],
                col: 1,
                r: [-.17, 0, 0],
                c: 4081241,
                t: 5
            }, {
                p: [-85, 58, -193],
                s: [4, 2, 20],
                col: 1,
                r: [-.17, 0, 0],
                c: 8026746,
                t: 5
            }, {
                p: [-109, 58, -193],
                s: [4, 2, 20],
                col: 1,
                r: [-.17, 0, 0],
                c: 8026746,
                t: 5
            }, {
                p: [-105, 58, -193],
                s: [4, 2, 20],
                col: 1,
                r: [-.17, 0, 0],
                c: 4081241,
                t: 5
            }, {
                p: [-101, 58, -193],
                s: [4, 2, 20],
                col: 1,
                r: [-.17, 0, 0],
                c: 8026746,
                t: 5
            }, {
                p: [-97, 58, -193],
                s: [4, 2, 20],
                col: 1,
                r: [-.17, 0, 0],
                c: 4081241,
                t: 5
            }, {
                p: [-89, 58, -193],
                s: [4, 2, 20],
                col: 1,
                r: [-.17, 0, 0],
                c: 4081241,
                t: 5
            }, {
                p: [-93, 58, -193],
                s: [4, 2, 20],
                col: 1,
                r: [-.17, 0, 0],
                c: 8026746,
                t: 5
            }, {
                p: [-75, 29, -187],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [65, 82, 51],
                s: [58, 4, 80],
                c: 4868682,
                t: 2
            }, {
                p: [143, 33, 22],
                s: [4, 17, 1],
                col: 1,
                r: [.17, 0, 0],
                c: 8684676,
                t: 2
            }, {
                p: [149, 33, 22],
                s: [4, 17, 1],
                col: 1,
                r: [.17, 0, 0],
                c: 8684676,
                t: 2
            }, {
                p: [65, 54, 51],
                s: [55, 2, 75],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [79, 62, 16],
                s: [9, 14, 5],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-102, -3, -17],
                s: [42, 96, 62],
                c: 9860174,
                e: 3749164
            }, {
                p: [-102, 92, -17],
                s: [47, 4, 67],
                c: 4868682,
                t: 2
            }, {
                p: [-102, 32, -18],
                s: [44, 2, 62],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [240, 32, -120],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [206, 13, -15],
                s: [15, 74, 7],
                c: 3091496,
                e: 3616548
            }, {
                p: [206, 32, -13],
                s: [17, 2, 5],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [180, 30, 115],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [191, 27, 115],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [282, 28, -13],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [189, 31, -14],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [175, 28, -12],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [166, 29, -14],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [102, 29, -17],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [132, 31, 22],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [275, 31, -311],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [276, 32, -287],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [274, 29, -274],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [276, 30, -268],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-119, 40, -278],
                s: [2, 8, 2],
                col: 1,
                pe: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-121, 37, -286],
                s: [2, 8, 2],
                col: 1,
                pe: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-87, -3, 47],
                s: [62, 104, 66],
                c: 10191214,
                e: 4077098
            }, {
                p: [-87, 100, 47],
                s: [67, 4, 72],
                c: 4868682,
                t: 2
            }, {
                p: [-87, 102, 48],
                s: [45, 10, 55],
                c: 10191214,
                e: 4077098
            }, {
                p: [-87, 112, 48],
                s: [51, 4, 61],
                c: 4868682,
                t: 2
            }, {
                p: [-87, 76, 47],
                s: [63, 2, 67],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [-87, 52, 47],
                s: [63, 2, 67],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [-67, 84, 26],
                s: [9, 14, 7],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-67, 83, 23],
                s: [10, 1, 2],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-120, 71, -35],
                s: [7, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-120, 70, -35],
                s: [8, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-116, 59, 68],
                s: [5, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-115, 58, 68],
                s: [8, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-87, 32, 47],
                s: [64, 2, 64],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [73, 32, 52],
                s: [40, 2, 78],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [65, 13, 51],
                s: [54, 69, 74],
                c: 9860174,
                e: 3749164
            }, {
                p: [28, 12, -46],
                s: [169, 2, 54],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [27, 12, 37],
                s: [167, 2, 52],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [-67, 83, 16],
                s: [9, 14, 5],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-67, 82, 15],
                s: [10, 1, 4],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [13, 32, 155],
                s: [55, 54, 63],
                c: 10191214,
                e: 4077098
            }, {
                p: [-52, 46, -28],
                s: [8, 31, 218],
                col: 1,
                c: 10652266,
                e: 2432532
            }, {
                p: [50, 46, -28],
                s: [8, 31, 117],
                col: 1,
                c: 10652266,
                e: 2432532
            }, {
                p: [50, 77, -80],
                s: [8, 5, 13],
                c: 10652266,
                e: 2432532
            }, {
                p: [50, 77, -58],
                s: [8, 5, 13],
                c: 10652266,
                e: 2432532
            }, {
                p: [50, 77, -36],
                s: [8, 5, 13],
                c: 10652266,
                e: 2432532
            }, {
                p: [50, 77, -14],
                s: [8, 5, 13],
                c: 10652266,
                e: 2432532
            }, {
                p: [50, 77, 8],
                s: [8, 5, 13],
                c: 10652266,
                e: 2432532
            }, {
                p: [-52, 77, 8],
                s: [8, 5, 13],
                c: 10652266,
                e: 2432532
            }, {
                p: [-52, 77, 30],
                s: [8, 5, 13],
                c: 10652266,
                e: 2432532
            }, {
                p: [-52, 77, 53],
                s: [8, 5, 14],
                c: 10652266,
                e: 2432532
            }, {
                p: [-52, 77, 75],
                s: [8, 5, 12],
                c: 10652266,
                e: 2432532
            }, {
                p: [-52, 77, -14],
                s: [8, 5, 13],
                c: 10652266,
                e: 2432532
            }, {
                p: [-52, 77, -36],
                s: [8, 5, 13],
                c: 10652266,
                e: 2432532
            }, {
                p: [-52, 77, -58],
                s: [8, 5, 13],
                c: 10652266,
                e: 2432532
            }, {
                p: [-52, 77, -80],
                s: [8, 5, 13],
                c: 10652266,
                e: 2432532
            }, {
                p: [-52, 77, -102],
                s: [8, 5, 13],
                c: 10652266,
                e: 2432532
            }, {
                p: [-52, 77, -124],
                s: [8, 5, 13],
                c: 10652266,
                e: 2432532
            }, {
                p: [-1, 14, 19],
                s: [110, 32, 14],
                c: 10652266,
                e: 2432532
            }, {
                p: [-1, 14, -51],
                s: [110, 32, 62],
                c: 10652266,
                e: 2432532
            }, {
                p: [-1, 46, -2],
                s: [94, 1, 57],
                c: 10652266,
                e: 2432532
            }, {
                p: [2, 10, -17],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-26, 8, -16],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-12, 10, 9],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-36, 11, -17],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [19, 12, 10],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [34, 10, -18],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [89, 80, -351],
                s: [9, 14, 8],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [89, 79, -351],
                s: [10, 1, 9],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-51, 32, 188],
                s: [73, 76, 116],
                c: 8349264,
                e: 2432793
            }, {
                p: [-124, 32, 215],
                s: [73, 76, 61],
                c: 8349264,
                e: 2432793
            }, {
                p: [-197, 32, 217],
                s: [73, 52, 79],
                c: 10652266,
                e: 2432532
            }, {
                p: [13, 86, 160],
                s: [61, 5, 79],
                c: 5395026,
                t: 2
            }, {
                p: [13, 47, 163],
                s: [57, 2, 81],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [-52, 47, 157],
                s: [73, 2, 56],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [-126, 47, 211],
                s: [75, 2, 55],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [-265, -3, 183],
                s: [63, 104, 108],
                c: 10191214,
                e: 4077098
            }, {
                p: [-268, 32, 74],
                s: [84, 85, 111],
                c: 16765069,
                e: 1973790
            }, {
                p: [-268, 32, -10],
                s: [73, 46, 60],
                c: 10652266,
                e: 2432532
            }, {
                p: [-232, 32, -73],
                s: [68, 77, 67],
                c: 10191214,
                e: 4077098
            }, {
                p: [-51, 108, 187],
                s: [81, 5, 121],
                c: 5395026,
                t: 2
            }, {
                p: [-128, 108, 214],
                s: [73, 5, 68],
                c: 5395026,
                t: 2
            }, {
                p: [-70, 32, 127],
                s: [15, 93, 10],
                c: 3091496,
                e: 3616548
            }, {
                p: [-70, 47, 125],
                s: [17, 2, 8],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [0, 63, 126],
                s: [9, 14, 6],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [0, 62, 124],
                s: [10, 1, 3],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-29, 89, 132],
                s: [9, 14, 5],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-51, 89, 132],
                s: [9, 14, 5],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-29, 88, 131],
                s: [10, 1, 4],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-51, 88, 131],
                s: [10, 1, 4],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-52, 77, 157],
                s: [73, 2, 56],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [-126, 77, 211],
                s: [75, 2, 55],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [-117, 50, 154],
                s: [25, 1, 25],
                t: 1
            }, {
                p: [-14, 24, -245],
                s: [29, 13, 3],
                c: 12497300,
                e: 3746078
            }, {
                p: [-117, 24, 168],
                s: [31, 28, 3],
                c: 12497300,
                e: 3746078
            }, {
                p: [-103, 24, 154],
                s: [3, 28, 25],
                c: 12497300,
                e: 3746078
            }, {
                p: [-131, 24, 154],
                s: [3, 28, 25],
                c: 12497300,
                e: 3746078
            }, {
                p: [-117, 48, 154],
                s: [5, 45, 5],
                pe: 1,
                c: 11316396,
                t: 2
            }, {
                p: [-117, 92, 154],
                s: [30, 27, 30],
                c: 5988172,
                t: 5
            }, {
                p: [-123, 69, 154],
                s: [10, 4, 4],
                col: 1,
                pe: 1,
                c: 11316396,
                t: 2
            }, {
                p: [-130, 69, 154],
                s: [4, 9, 4],
                pe: 1,
                c: 11316396,
                t: 2
            }, {
                p: [-130, 78, 154],
                s: [10, 11, 10],
                c: 5988172,
                t: 5
            }, {
                p: [-145, 89, 187],
                s: [9, 14, 6],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-145, 88, 185],
                s: [10, 1, 3],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-196, 47, 180],
                s: [73, 2, 7],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [-242, 47, 154],
                s: [19, 2, 57],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [-242, 73, 154],
                s: [19, 2, 57],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [-196, 84, 214],
                s: [80, 5, 81],
                c: 5395026,
                t: 2
            }, {
                p: [67, 33, -285],
                s: [6, 8, 6],
                id: 2,
                r: [0, -1.57, 0]
            }, {
                p: [-265, 101, 178],
                s: [70, 5, 124],
                c: 5395026,
                t: 2
            }, {
                p: [-228, 32, 49],
                s: [5, 2, 62],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [-234, 32, -9],
                s: [7, 2, 63],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [-214, 32, -71],
                s: [34, 2, 65],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [-236, 82, 150],
                s: [6, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-59, 90, -94],
                s: [8, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-265, 117, 74],
                s: [86, 5, 119],
                c: 5395026,
                t: 2
            }, {
                p: [431, 40, -96],
                s: [66, 102, 125],
                c: 10519402,
                e: 3616035
            }, {
                p: [431, 141, -96],
                s: [77, 4, 135],
                c: 4868682,
                t: 2
            }, {
                p: [-266, 78, -11],
                s: [78, 5, 59],
                c: 5395026,
                t: 2
            }, {
                p: [-232, 109, -73],
                s: [74, 5, 72],
                c: 5395026,
                t: 2
            }, {
                p: [-239, 62, 74],
                s: [27, 2, 112],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [-268, 88, 74],
                s: [85, 2, 112],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [-232, 60, -73],
                s: [69, 2, 68],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [-232, 84, -73],
                s: [69, 2, 68],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [-278, 78, -70],
                s: [54, 5, 59],
                c: 5395026,
                t: 2
            }, {
                p: [-227, 48, 171],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-215, 48, 171],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-78, 48, 86],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-176, 48, 87],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-125, 33, 67],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-137, 33, 67],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-90, 48, 86],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-225, 33, -34],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-213, 33, -34],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-129, 33, -33],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-116, 83, 28],
                s: [5, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-115, 82, 28],
                s: [8, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-179, 48, 174],
                s: [6, 19, 1],
                col: 1,
                r: [.17, 0, 0],
                c: 8684676,
                t: 2
            }, {
                p: [-189, 48, 174],
                s: [6, 19, 1],
                col: 1,
                r: [.17, 0, 0],
                c: 8684676,
                t: 2
            }, {
                p: [-228, 122, 42],
                s: [35, 3, 15],
                c: 5263440,
                t: 2
            }, {
                p: [-217, 69, 42],
                s: [2, 53, 2],
                col: 1,
                c: 12303291,
                t: 2
            }, {
                p: [-232, 34, 3],
                s: [2, 17, 13],
                col: 1,
                c: 8221547,
                t: 2
            }, {
                p: [-231, 34, -4],
                s: [1, 17, 1],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [-231, 34, 10],
                s: [1, 17, 1],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [-231, 51, 3],
                s: [1, 1, 15],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [-211, 92, -43],
                s: [9, 14, 8],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-211, 91, -40],
                s: [10, 1, 3],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-232, 72, 14],
                s: [10, 3, 3],
                col: 1,
                pe: 1,
                c: 7039851,
                t: 2
            }, {
                p: [-232, 72, -11],
                s: [10, 3, 3],
                col: 1,
                pe: 1,
                c: 7039851,
                t: 2
            }, {
                p: [-232, 72, 1],
                s: [10, 3, 3],
                col: 1,
                pe: 1,
                c: 7039851,
                t: 2
            }, {
                p: [-232, 72, -24],
                s: [10, 3, 3],
                col: 1,
                pe: 1,
                c: 7039851,
                t: 2
            }, {
                p: [-232, 72, -35],
                s: [10, 3, 3],
                col: 1,
                pe: 1,
                c: 7039851,
                t: 2
            }, {
                p: [-229, 98, 112],
                s: [7, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-229, 98, 89],
                s: [7, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-229, 97, 112],
                s: [8, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-229, 97, 89],
                s: [8, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-222, 32, 59],
                s: [1, 23, 4],
                col: 1,
                r: [0, 0, .17],
                c: 8684676,
                t: 2
            }, {
                p: [-222, 33, 52],
                s: [1, 16, 4],
                col: 1,
                r: [0, 0, .17],
                c: 8684676,
                t: 2
            }, {
                p: [-1, 45, -4],
                s: [2, 1, 29],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [-30, 45, -4],
                s: [2, 1, 28],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [-56, 13, -19],
                s: [2, 34, 2],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [-56, 13, 11],
                s: [2, 34, 2],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [-56, 45, -4],
                s: [2, 2, 28],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [54, 13, 11],
                s: [2, 34, 2],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [54, 45, -4],
                s: [2, 2, 28],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [280, 77, -122],
                s: [19, 22, 53],
                pe: 1,
                v: 1,
                c: 9539985,
                t: 2
            }, {
                p: [47, 48, 123],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [110, 48, 125],
                s: [6, 8, 6],
                id: 2,
                r: [0, 1.57, 0]
            }, {
                p: [40, 48, -78],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [29, 47, -28],
                s: [2, 31, 2],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [29, 47, 4],
                s: [2, 31, 2],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [36, 78, 4],
                s: [21, 2, 4],
                col: 1,
                r: [0, 0, .17],
                c: 5385783,
                t: 5
            }, {
                p: [36, 78, -4],
                s: [21, 2, 4],
                col: 1,
                r: [0, 0, .17],
                c: 5385783,
                t: 5
            }, {
                p: [36, 78, 0],
                s: [21, 2, 4],
                col: 1,
                r: [0, 0, .17],
                c: 7237230,
                t: 5
            }, {
                p: [36, 78, -8],
                s: [21, 2, 4],
                col: 1,
                r: [0, 0, .17],
                c: 7237230,
                t: 5
            }, {
                p: [36, 78, -12],
                s: [21, 2, 4],
                col: 1,
                r: [0, 0, .17],
                c: 5385783,
                t: 5
            }, {
                p: [36, 78, -16],
                s: [21, 2, 4],
                col: 1,
                r: [0, 0, .17],
                c: 7237230,
                t: 5
            }, {
                p: [36, 78, -20],
                s: [21, 2, 4],
                col: 1,
                r: [0, 0, .17],
                c: 5385783,
                t: 5
            }, {
                p: [36, 78, -24],
                s: [21, 2, 4],
                col: 1,
                r: [0, 0, .17],
                c: 7237230,
                t: 5
            }, {
                p: [36, 78, -28],
                s: [21, 2, 4],
                col: 1,
                r: [0, 0, .17],
                c: 5385783,
                t: 5
            }, {
                p: [29, 47, -12],
                s: [1, 7, 30],
                c: 9539985,
                t: 2
            }, {
                p: [29, 54, -12],
                s: [3, 1, 30],
                c: 9539985,
                t: 2
            }, {
                p: [40, 48, -66],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [46, 47, 4],
                s: [2, 33, 2],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [46, 47, -28],
                s: [2, 33, 2],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [-30, 47, 8],
                s: [2, 31, 2],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [-38, 78, 8],
                s: [22, 2, 4],
                col: 1,
                r: [0, 0, -.18],
                c: 3030610,
                t: 5
            }, {
                p: [-38, 78, 12],
                s: [22, 2, 4],
                col: 1,
                r: [0, 0, -.18],
                c: 7895160,
                t: 5
            }, {
                p: [-38, 78, 20],
                s: [22, 2, 4],
                col: 1,
                r: [0, 0, -.18],
                c: 7895160,
                t: 5
            }, {
                p: [-38, 78, 16],
                s: [22, 2, 4],
                col: 1,
                r: [0, 0, -.18],
                c: 3030610,
                t: 5
            }, {
                p: [-38, 78, 24],
                s: [22, 2, 4],
                col: 1,
                r: [0, 0, -.18],
                c: 3030610,
                t: 5
            }, {
                p: [-38, 78, 28],
                s: [22, 2, 4],
                col: 1,
                r: [0, 0, -.18],
                c: 7895160,
                t: 5
            }, {
                p: [-38, 78, 32],
                s: [22, 2, 4],
                col: 1,
                r: [0, 0, -.18],
                c: 3030610,
                t: 5
            }, {
                p: [-38, 78, 36],
                s: [22, 2, 4],
                col: 1,
                r: [0, 0, -.18],
                c: 7895160,
                t: 5
            }, {
                p: [-38, 78, 40],
                s: [22, 2, 4],
                col: 1,
                r: [0, 0, -.18],
                c: 3030610,
                t: 5
            }, {
                p: [-30, 47, 40],
                s: [2, 31, 2],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [-30, 47, 24],
                s: [1, 7, 30],
                c: 9539985,
                t: 2
            }, {
                p: [-30, 54, 24],
                s: [3, 1, 30],
                c: 9539985,
                t: 2
            }, {
                p: [-48, 47, 8],
                s: [2, 33, 2],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [-48, 47, 40],
                s: [2, 33, 2],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [54, 13, -19],
                s: [2, 34, 2],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [-30, 13, -19],
                s: [2, 34, 2],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [-30, 13, 11],
                s: [2, 34, 2],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [-1, 13, 11],
                s: [2, 34, 2],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [28, 13, 11],
                s: [2, 34, 2],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [28, 13, -19],
                s: [2, 34, 2],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [-1, 13, -19],
                s: [2, 34, 2],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [28, 45, -4],
                s: [2, 2, 28],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [-30, 47, -59],
                s: [2, 31, 2],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [-38, 78, -59],
                s: [22, 2, 4],
                col: 1,
                r: [0, 0, -.18],
                c: 5849386,
                t: 5
            }, {
                p: [-38, 78, -63],
                s: [22, 2, 4],
                col: 1,
                r: [0, 0, -.18],
                c: 7895160,
                t: 5
            }, {
                p: [-38, 78, -67],
                s: [22, 2, 4],
                col: 1,
                r: [0, 0, -.18],
                c: 5849386,
                t: 5
            }, {
                p: [-38, 78, -71],
                s: [22, 2, 4],
                col: 1,
                r: [0, 0, -.18],
                c: 7895160,
                t: 5
            }, {
                p: [-38, 78, -75],
                s: [22, 2, 4],
                col: 1,
                r: [0, 0, -.18],
                c: 5849386,
                t: 5
            }, {
                p: [-38, 78, -79],
                s: [22, 2, 4],
                col: 1,
                r: [0, 0, -.18],
                c: 7895160,
                t: 5
            }, {
                p: [-38, 78, -83],
                s: [22, 2, 4],
                col: 1,
                r: [0, 0, -.18],
                c: 5849386,
                t: 5
            }, {
                p: [-38, 78, -87],
                s: [22, 2, 4],
                col: 1,
                r: [0, 0, -.18],
                c: 7895160,
                t: 5
            }, {
                p: [-38, 78, -91],
                s: [22, 2, 4],
                col: 1,
                r: [0, 0, -.18],
                c: 5849386,
                t: 5
            }, {
                p: [-30, 47, -91],
                s: [2, 31, 2],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [-48, 47, -59],
                s: [2, 33, 2],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [-48, 47, -91],
                s: [2, 33, 2],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [-30, 47, -75],
                s: [1, 7, 30],
                c: 9539985,
                t: 2
            }, {
                p: [-30, 54, -75],
                s: [3, 1, 30],
                c: 9539985,
                t: 2
            }, {
                p: [-44, 47, -17],
                s: [1, 23, 5],
                col: 1,
                r: [0, 0, .17],
                c: 8684676,
                t: 2
            }, {
                p: [-44, 47, -8],
                s: [1, 23, 5],
                col: 1,
                r: [0, 0, .17],
                c: 8684676,
                t: 2
            }, {
                p: [-42, 48, -124],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [155, 33, -314],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [153, 30, -307],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [155, 31, -336],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [105, 30, -253],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [107, 29, -218],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [104, 33, -210],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [146, 30, -84],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [137, 33, -82],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [138, 33, -120],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [32, 48, 43],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [32, 48, 67],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [32, 48, 55],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-36, 46, 77],
                s: [24, 31, 8],
                col: 1,
                c: 10652266,
                e: 2432532
            }, {
                p: [26, 46, 77],
                s: [24, 31, 8],
                col: 1,
                c: 10652266,
                e: 2432532
            }, {
                p: [-46, 77, 77],
                s: [4, 5, 8],
                c: 10652266,
                e: 2432532
            }, {
                p: [-30, 77, 77],
                s: [8, 5, 12],
                r: [0, -1.57, 0],
                c: 10652266,
                e: 2432532
            }, {
                p: [20, 77, 77],
                s: [8, 5, 12],
                r: [0, -1.57, 0],
                c: 10652266,
                e: 2432532
            }, {
                p: [36, 77, 77],
                s: [4, 5, 8],
                c: 10652266,
                e: 2432532
            }, {
                p: [-42, 48, 67],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [1, 45, -129],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-7, 43, -127],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-31, 46, -129],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-46, 44, -107],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-44, 45, -100],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-33, 45, 71],
                s: [2, 10, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-32, 45, 65],
                s: [2, 6, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [41, 46, -57],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [43, 46, -49],
                s: [2, 5, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [32, 46, 34],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [36, 46, 29],
                s: [2, 5, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [34, 46, 18],
                s: [2, 6, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [126, 46, 104],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [125, 46, 115],
                s: [2, 6, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [69, 46, 126],
                s: [2, 6, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [58, 46, 124],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [35, 46, 84],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [29, 46, 86],
                s: [2, 6, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [44, 46, 90],
                s: [2, 7, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-11, 46, 120],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-26, 44, 128],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-111, 43, 87],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-100, 46, 85],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-159, 45, 82],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-181, 45, 111],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-178, 43, 122],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-206, 45, 172],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-197, 43, 174],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-83, 44, 127],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-123, 49, 161],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-125, 46, 148],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-108, 47, 151],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-229, 30, -13],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-227, 33, -22],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-221, 30, 43],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-222, 30, 33],
                s: [2, 10, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-124, 33, 58],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-121, 33, 40],
                s: [2, 5, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-123, 33, 31],
                s: [2, 6, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-125, 33, -42],
                s: [2, 7, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-128, 33, -15],
                s: [2, 4, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-126, 33, -24],
                s: [2, 5, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [227, 33, -297],
                s: [3, 32, 2],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [227, 33, -265],
                s: [3, 32, 2],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [280, 33, -240],
                s: [4, 32, 2],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [-8, 32, -265],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-16, 30, -251],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-22, 31, -260],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-159, 41, -307],
                s: [83, 50, 55],
                id: 14,
                col: 1
            }, {
                p: [240, 33, 106],
                s: [87, 50, 45],
                id: 14,
                col: 1
            }, {
                p: [-151, 48, 104],
                s: [64, 50, 48],
                id: 14,
                col: 1
            }, {
                p: [10, 48, -23],
                s: [69, 50, 72],
                id: 14,
                col: 1
            }, {
                p: [-1, 48, -35],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-1, 48, -23],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [3, 47, -44],
                s: [2, 7, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [8, 44, -33],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-195, 41, -309],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-195, 53, -309],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [158, 100, 72],
                s: [67, 4, 101],
                c: 4868682,
                t: 2
            }, {
                p: [158, 32, 72],
                s: [62, 2, 95],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [126, 41, 94],
                s: [6, 74, 12],
                c: 3091496,
                e: 3616548
            }, {
                p: [186, 79, 99],
                s: [5, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [186, 78, 99],
                s: [6, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [169, 32, -341],
                s: [22, 2, 11],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [153, 33, -325],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [188, 32, -222],
                s: [291, 1, 335],
                t: 1
            }, {
                p: [134, 32, -160],
                s: [66, 76, 72],
                c: 10191214,
                e: 4077098
            }, {
                p: [193, 32, -292],
                s: [68, 63, 113],
                c: 10191214,
                e: 4077098
            }, {
                p: [273, 63, -240],
                s: [20, 2, 4],
                col: 1,
                r: [0, 0, .17],
                c: 6116223,
                t: 1
            }, {
                p: [273, 63, -244],
                s: [20, 2, 4],
                col: 1,
                r: [0, 0, .17],
                c: 7895160,
                t: 5
            }, {
                p: [273, 63, -252],
                s: [20, 2, 4],
                col: 1,
                r: [0, 0, .17],
                c: 7895160,
                t: 5
            }, {
                p: [273, 63, -248],
                s: [20, 2, 4],
                col: 1,
                r: [0, 0, .17],
                c: 6116223,
                t: 1
            }, {
                p: [273, 63, -256],
                s: [20, 2, 4],
                col: 1,
                r: [0, 0, .17],
                c: 6116223,
                t: 1
            }, {
                p: [273, 63, -264],
                s: [20, 2, 4],
                col: 1,
                r: [0, 0, .17],
                c: 6116223,
                t: 1
            }, {
                p: [273, 63, -260],
                s: [20, 2, 4],
                col: 1,
                r: [0, 0, .17],
                c: 7895160,
                t: 5
            }, {
                p: [273, 63, -272],
                s: [20, 2, 4],
                col: 1,
                r: [0, 0, .17],
                c: 6116223,
                t: 1
            }, {
                p: [273, 63, -268],
                s: [20, 2, 4],
                col: 1,
                r: [0, 0, .17],
                c: 7895160,
                t: 5
            }, {
                p: [280, 33, -272],
                s: [4, 32, 2],
                col: 1,
                c: 9539985,
                t: 2
            }, {
                p: [134, 108, -160],
                s: [71, 4, 77],
                c: 4868682,
                t: 2
            }, {
                p: [56, 94, -68],
                s: [5, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [57, 93, -68],
                s: [8, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [130, 79, 44],
                s: [5, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [131, 78, 44],
                s: [8, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [130, 79, 69],
                s: [5, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [131, 78, 69],
                s: [8, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [246, 29, -160],
                s: [52, 5, 74],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [278, 29, -174],
                s: [12, 5, 46],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [252, 60, -160],
                s: [63, 2, 73],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [284, 60, -160],
                s: [1, 2, 73],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [253, 85, -160],
                s: [69, 4, 77],
                c: 4868682,
                t: 2
            }, {
                p: [135, 29, -160],
                s: [66, 5, 74],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [135, 59, -160],
                s: [66, 2, 73],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [101, 59, -126],
                s: [2, 2, 5],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [101, 59, -129],
                s: [2, 2, 1],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [134, 84, -160],
                s: [67, 2, 73],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [176, 64, -140],
                s: [2, 7, 2],
                c: 9539985,
                t: 2
            }, {
                p: [171, 71, -139],
                s: [7, 1, 2],
                c: 9539985,
                t: 2
            }, {
                p: [167, 64, -153],
                s: [2, 17, 1],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [161, 75, -333],
                s: [5, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [161, 74, -333],
                s: [6, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [171, 33, -155],
                s: [1, 20, 6],
                col: 1,
                r: [0, 0, .17],
                c: 8684676,
                t: 2
            }, {
                p: [171, 33, -142],
                s: [1, 20, 6],
                col: 1,
                r: [0, 0, .17],
                c: 8684676,
                t: 2
            }, {
                p: [170, 31, -163],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [172, 29, -173],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [235, 67, -127],
                s: [9, 14, 7],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [235, 66, -125],
                s: [10, 1, 4],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [223, 67, -179],
                s: [5, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [223, 66, -179],
                s: [6, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [211, 75, -239],
                s: [9, 14, 8],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [211, 74, -236],
                s: [10, 1, 3],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [144, 33, -202],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [144, 45, -202],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [181, 33, -229],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [268, 9, -199],
                s: [15, 93, 10],
                c: 3091496,
                e: 3616548
            }, {
                p: [268, 29, -201],
                s: [17, 5, 8],
                col: 1,
                c: 5395026,
                t: 2
            }, {
                p: [161, 47, -77],
                s: [9, 14, 6],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [161, 46, -80],
                s: [10, 1, 1],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [155, 67, -193],
                s: [9, 14, 7],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [155, 66, -196],
                s: [10, 1, 2],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [115, 91, -193],
                s: [9, 14, 7],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [115, 90, -196],
                s: [10, 1, 2],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [210, 29, -83],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [220, 30, -84],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [267, 33, -118],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [129, 30, -120],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [21, 33, -331],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [21, 45, -331],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-40, 33, -349],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [99, 68, -267],
                s: [5, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [99, 67, -267],
                s: [6, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [135, 29, -200],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [23, 68, -227],
                s: [5, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [23, 67, -227],
                s: [6, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [5, 29, -330],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-2, 29, -334],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [44, 29, -334],
                s: [2, 10, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [35, 28, -330],
                s: [2, 10, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [57, 28, -332],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [74, 29, -284],
                s: [2, 10, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [83, 27, -286],
                s: [2, 10, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [199, 29, -232],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [208, 29, -230],
                s: [2, 10, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [253, 29, -199],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [236, 29, -201],
                s: [2, 10, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [228, 29, -199],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-14, 35, -258],
                s: [23, 1, 23],
                t: 1
            }, {
                p: [-117, 24, 140],
                s: [31, 28, 3],
                c: 12497300,
                e: 3746078
            }, {
                p: [-27, 24, -258],
                s: [3, 13, 23],
                c: 12497300,
                e: 3746078
            }, {
                p: [-14, 24, -271],
                s: [29, 13, 3],
                c: 12497300,
                e: 3746078
            }, {
                p: [-1, 24, -258],
                s: [3, 13, 23],
                c: 12497300,
                e: 3746078
            }, {
                p: [270, 32, 80],
                s: [30, 15, 4],
                c: 10191214,
                e: 4077098
            }, {
                p: [218, 32, 80],
                s: [5, 16, 5],
                c: 10191214,
                e: 4077098
            }, {
                p: [200, 29, 75],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [200, 29, 86],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [192, 29, 95],
                s: [2, 10, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [282, 29, 87],
                s: [2, 10, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [269, 27, 85],
                s: [2, 10, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [281, 27, 99],
                s: [2, 9, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [245, 27, 126],
                s: [2, 11, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [115, 91, -127],
                s: [9, 14, 7],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [115, 90, -124],
                s: [10, 1, 2],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [148, 33, -118],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [152, 65, -124],
                s: [10, 1, 2],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [152, 66, -127],
                s: [9, 14, 7],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [62, 65, -130],
                s: [10, 1, 1],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [62, 66, -133],
                s: [9, 14, 6],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [27, 65, -130],
                s: [10, 1, 1],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [27, 66, -133],
                s: [9, 14, 6],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [233, 63, -285],
                s: [20, 2, 4],
                col: 1,
                r: [0, 0, -.18],
                c: 6710886,
                t: 5
            }, {
                p: [-156, 43, -111],
                s: [2, 5, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-157, 43, -146],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-153, 41, -156],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-196, 41, -143],
                s: [2, 7, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-199, 43, -120],
                s: [2, 7, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [279, 33, 108],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [203, 32, 80],
                s: [30, 15, 4],
                c: 10191214,
                e: 4077098
            }, {
                p: [255, 32, 80],
                s: [5, 16, 5],
                c: 10191214,
                e: 4077098
            }, {
                p: [279, 29, 76],
                s: [2, 10, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [293, 29, 73],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-166, 48, 85],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-229, 48, 134],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-229, 48, 141],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-229, 48, 148],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-147, 33, 69],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-41, 13, 8],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-34, 13, 8],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-92, 48, 180],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-92, 48, 173],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-154, 44, -126],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-134, 41, -267],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-198, 41, -299],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-208, 33, -249],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-208, 33, -242],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-29, 33, -350],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [11, 33, -333],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [96, 33, -343],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [154, 33, -282],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [154, 33, -274],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [191, 33, -231],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [280, 33, -201],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [280, 33, -208],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [257, 33, -120],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [189, 33, -84],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [230, 33, -36],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [230, 33, -29],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [193, 33, 44],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [230, 33, 127],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [237, 33, 127],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-68, 48, 84],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [22, 48, 69],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-44, 48, 57],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-44, 48, -26],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-44, 48, -114],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [9, 48, -24],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-257, 32, 309],
                s: [149, 84, 80],
                c: 10519402,
                e: 7892309
            }, {
                p: [-259, 116, 309],
                s: [160, 5, 87],
                c: 5395026,
                t: 2
            }, {
                p: [-149, 34, 320],
                s: [74, 69, 79],
                c: 10652266,
                e: 2432532
            }, {
                p: [-137, 103, 319],
                s: [91, 5, 87],
                c: 5395026,
                t: 2
            }, {
                p: [395, 7, 103],
                s: [80, 88, 59],
                c: 9860174,
                e: 3749164
            }, {
                p: [396, 95, 104],
                s: [88, 4, 67],
                c: 4868682,
                t: 2
            }, {
                p: [184, 32, 235],
                s: [102, 76, 49],
                c: 9860174,
                e: 3749164
            }, {
                p: [184, 108, 235],
                s: [109, 5, 57],
                c: 5395026,
                t: 2
            }, {
                p: [-89, 33, -137],
                s: [54, 1, 97],
                col: 1,
                c: 4408131,
                t: 2
            }, {
                p: [-200, 92, -91],
                s: [5, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-201, 91, -91],
                s: [8, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-121, 32, 14],
                s: [6, 2, 2],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [-68, 32, 47],
                s: [26, 2, 68],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [-69, 12, 47],
                s: [25, 2, 68],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [-102, 12, -18],
                s: [44, 2, 62],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [-102, 62, -17],
                s: [43, 2, 63],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [-120, 71, -18],
                s: [7, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-120, 70, -18],
                s: [8, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-123, 34, 0],
                s: [1, 17, 13],
                col: 1,
                c: 8221547,
                t: 2
            }, {
                p: [-122, 34, -7],
                s: [4, 17, 1],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [-122, 34, 7],
                s: [4, 17, 1],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [-122, 51, 0],
                s: [4, 1, 15],
                col: 1,
                c: 4868682,
                t: 2
            }, {
                p: [-60, 24, -69],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-68, 24, -69],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-75, 22, -71],
                s: [2, 7, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-137, 33, -68],
                s: [2, 7, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-130, 29, -70],
                s: [2, 7, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-84, 43, -34],
                s: [7, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-84, 42, -34],
                s: [8, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-84, 72, 1],
                s: [7, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-84, 71, 1],
                s: [8, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-66, 10, 11],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-77, 8, -5],
                s: [2, 8, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-78, 8, -11],
                s: [2, 11, 2],
                col: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-138, 91, -77],
                s: [9, 14, 8],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-138, 90, -74],
                s: [10, 1, 3],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-68, 65, -74],
                s: [10, 1, 3],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-68, 66, -77],
                s: [9, 14, 8],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-94, 66, -77],
                s: [9, 14, 8],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-94, 65, -74],
                s: [10, 1, 3],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-111, 10, -62],
                s: [12, 23, 43],
                t: 1
            }, {
                p: [-110, 71, -45],
                s: [9, 14, 7],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-110, 70, -47],
                s: [10, 1, 4],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [-93, 24, -62],
                s: [24, 9, 28],
                id: 9,
                t: 1,
                d: 2
            }, {
                p: [241, 33, -297],
                s: [2, 30, 2],
                c: 9539985,
                t: 2
            }, {
                p: [241, 33, -265],
                s: [2, 30, 2],
                c: 9539985,
                t: 2
            }, {
                p: [265, 33, -272],
                s: [2, 30, 2],
                c: 9539985,
                t: 2
            }, {
                p: [265, 33, -240],
                s: [2, 30, 2],
                c: 9539985,
                t: 2
            }, {
                p: [-61, 3, -61],
                s: [40, 21, 26],
                t: 1
            }, {
                p: [-68, 13, -35],
                s: [26, 11, 26],
                id: 9,
                t: 1,
                d: 3
            }, {
                p: [-85, 32, -318],
                s: [255, 1, 281],
                t: 1
            }, {
                p: [52, 33, -106],
                s: [2, 14, 50],
                t: 1
            }, {
                p: [302, 43, 57],
                s: [3, 8, 3],
                c: "#4d4d4d",
                t: 5
            }, {
                p: [134, 43, -355],
                s: [3, 5, 8],
                c: "#464646",
                t: 5
            }, {
                p: [-40, 33, -219],
                s: [4, 2, 3],
                col: 1,
                r: [0, .52, 0],
                c: 12497300,
                e: 3746078
            }, {
                p: [-59, 33, -230],
                s: [6, 2, 4],
                col: 1,
                r: [0, -.52, 0],
                c: 12497300,
                e: 3746078
            }, {
                p: [-64, 33, -223],
                s: [4, 2, 4],
                col: 1,
                c: 12497300,
                e: 3746078
            }, {
                p: [400, 123, -68],
                s: [5, 14, 9],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [400, 122, -68],
                s: [6, 1, 10],
                col: 1,
                c: 5066061,
                t: 2
            }, {
                p: [236, 33, 101],
                s: [24, 36, 24],
                id: 23,
                col: 1,
                tm: 0
            }, {
                p: [-144, 41, -301],
                s: [24, 36, 24],
                id: 23,
                col: 1,
                tm: "1"
            }, {
                p: [26, 46, 77],
                s: [24, 36, 8],
                v: 1,
                c: 10652266,
                e: 2432532
            }, {
                p: [-36, 46, 77],
                s: [24, 36, 8],
                v: 1,
                c: 10652266,
                e: 2432532
            }, {
                p: [-52, 46, -28],
                s: [8, 36, 218],
                v: 1,
                c: 10652266,
                e: 2432532
            }, {
                p: [50, 46, -28],
                s: [8, 36, 117],
                v: 1,
                c: 10652266,
                e: 2432532
            }, {
                p: [-229, 77, -162],
                s: [61, 32, 115],
                v: 1,
                c: 4868682,
                t: 2
            }, {
                p: [-241, 65, -237],
                s: [62, 43, 111],
                v: 1,
                c: 4868682,
                t: 2
            }, {
                p: [-4, 63, -258],
                s: [10, 39, 10],
                v: 1,
                c: 5988172,
                t: 5
            }, {
                p: [-30, 47, -91],
                s: [2, 48, 2],
                v: 1,
                c: 9539985,
                t: 2
            }, {
                p: [-30, 47, -59],
                s: [2, 48, 2],
                v: 1,
                c: 9539985,
                t: 2
            }, {
                p: [-30, 47, 8],
                s: [2, 48, 2],
                v: 1,
                c: 9539985,
                t: 2
            }, {
                p: [-30, 47, 40],
                s: [2, 48, 2],
                v: 1,
                c: 9539985,
                t: 2
            }, {
                p: [29, 47, -28],
                s: [2, 48, 2],
                v: 1,
                c: 9539985,
                t: 2
            }, {
                p: [29, 47, 4],
                s: [2, 48, 2],
                v: 1,
                c: 9539985,
                t: 2
            }, {
                p: [-123, 69, 154],
                s: [10, 20, 4],
                pe: 1,
                v: 1,
                c: 11316396,
                t: 2
            }]
        }, {
            name: "Subzero",
            modURL: "",
            terrainSeed: "",
            terrainWidth: 2048,
            terrainHeight: 2048,
            terrainMntMlt: 1,
            terrainMntCol: "#a0a0a0",
            terrainGrsCol: "#4a6904",
            terrainDrtCol: "#8c6835",
            skyDome: !1,
            skyDomeCol0: "#ffffff",
            skyDomeCol1: "#7196a2",
            skyDomeCol2: "#184452",
            sizeMlt: 2,
            shadowR: 1024,
            ambient: 8555670,
            light: 16120058,
            sky: 13883868,
            fog: 13030361,
            fogD: 601.943118216585,
            dthY: -100,
            camPos: [-13, 93, -6],
            spawns: [
                [-41, 67, -58],
                [-198, 54, -238],
                [-299, 54, 2],
                [131, 67, -203],
                [186, 67, -250],
                [338, 67, -260],
                [319, 86, -59],
                [178, 84, -49],
                [140, 84, -13],
                [-162, 67, 63]
            ],
            ambO: 1,
            ambS: 5,
            objects: [{
                p: [-1, 64, 0],
                s: [140, 2, 142],
                col: 1,
                t: 5
            }, {
                p: [-100, 64, 50],
                s: [58, 2, 42],
                col: 1,
                t: 5
            }, {
                p: [-149, 53, 8],
                s: [40, 13, 126],
                col: 1,
                t: 5
            }, {
                p: [-139, 51, -111],
                s: [172, 2, 130],
                col: 1,
                t: 5
            }, {
                p: [-277, 51, -77],
                s: [104, 2, 202],
                col: 1,
                t: 5
            }, {
                p: [5, 64, -123],
                s: [60, 2, 104],
                col: 1,
                t: 5
            }, {
                p: [-54, 51, -143],
                s: [58, 15, 42],
                col: 1,
                t: 5
            }, {
                p: [240, 65, -325],
                s: [132, 2, 38],
                c: 5723991,
                t: 11
            }, {
                p: [213, 64, -207],
                s: [40, 2, 63],
                col: 1,
                t: 5
            }, {
                p: [213, 64, -112],
                s: [39, 20, 37],
                col: 1,
                t: 5
            }, {
                p: [-124, 51, -285],
                s: [203, 2, 50],
                col: 1,
                t: 5
            }, {
                p: [-198, 50, -218],
                s: [38, 2, 84],
                c: 7566195,
                t: 1
            }, {
                p: [343, 64, -252],
                s: [77, 2, 43],
                col: 1,
                t: 5
            }, {
                p: [343, 64, -122],
                s: [82, 2, 217],
                col: 1,
                t: 5
            }, {
                p: [327, 64, -11],
                s: [140, 20, 129],
                col: 1,
                t: 5
            }, {
                p: [-326, 11, -77],
                s: [9, 47, 632],
                c: 10983566,
                t: 11
            }, {
                p: [-2731, 11, -77],
                s: [5362, 31, 11525],
                col: 1,
                c: 5203837,
                t: 5
            }, {
                p: [-290, 51, -217],
                s: [78, 56, 80],
                c: 9342330,
                t: 10
            }, {
                p: [-252, 51, -178],
                s: [4, 56, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-328, 56, -178],
                s: [4, 51, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-252, 51, -256],
                s: [4, 56, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-290, 76, -178],
                s: [72, 4, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-290, 103, -178],
                s: [72, 4, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-290, 51, -178],
                s: [4, 70, 5],
                c: 11513775,
                t: 2
            }, {
                p: [-252, 76, -217],
                s: [4, 4, 74],
                c: 11513775,
                t: 2
            }, {
                p: [-252, 103, -217],
                s: [4, 4, 74],
                c: 11513775,
                t: 2
            }, {
                p: [-268, 113, -217],
                s: [45, 2, 84],
                col: 1,
                r: [0, 0, -.35],
                c: 7039851,
                t: 2
            }, {
                p: [-312, 113, -217],
                s: [45, 2, 84],
                col: 1,
                r: [0, 0, .35],
                c: 7039851,
                t: 2
            }, {
                p: [-290, 107, -217],
                s: [77, 4, 80],
                c: 9342330,
                t: 10
            }, {
                p: [-290, 120, -217],
                s: [5, 5, 89],
                c: 11513775,
                t: 2
            }, {
                p: [-267, 115, -217],
                s: [45, 2, 84],
                col: 1,
                r: [0, 0, -.35],
                t: 5
            }, {
                p: [-313, 115, -217],
                s: [45, 2, 84],
                col: 1,
                r: [0, 0, .35],
                t: 5
            }, {
                p: [-290, 125, -217],
                s: [5, 2, 89],
                t: 5
            }, {
                p: [-276, 51, -178],
                s: [2, 20, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-264, 51, -178],
                s: [2, 20, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-270, 71, -178],
                s: [14, 2, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-290, 111, -217],
                s: [55, 4, 80],
                c: 9342330,
                t: 10
            }, {
                p: [-290, 115, -217],
                s: [34, 4, 80],
                c: 9342330,
                t: 10
            }, {
                p: [-290, 119, -217],
                s: [13, 2, 80],
                c: 9342330,
                t: 10
            }, {
                p: [-319, 56, -198],
                s: [9, 72, 20],
                c: 8355711,
                t: 11
            }, {
                p: [-234, 51, -212],
                s: [34, 40, 96],
                col: 1,
                c: 8882055,
                t: 11
            }, {
                p: [-151, 51, -212],
                s: [60, 40, 96],
                col: 1,
                c: 8355711,
                t: 11
            }, {
                p: [-199, 83, -212],
                s: [36, 8, 96],
                col: 1,
                c: 8355711,
                t: 11
            }, {
                p: [-186, 90, -212],
                s: [128, 31, 94],
                c: 8215901,
                t: 10
            }, {
                p: [-249, 91, -166],
                s: [4, 30, 4],
                c: 8684676,
                t: 2
            }, {
                p: [-207, 91, -166],
                s: [4, 26, 4],
                c: 8684676,
                t: 2
            }, {
                p: [-165, 91, -166],
                s: [4, 26, 4],
                c: 8684676,
                t: 2
            }, {
                p: [-123, 91, -166],
                s: [4, 30, 4],
                c: 8684676,
                t: 2
            }, {
                p: [-217, 53, -164],
                s: [3, 31, 3],
                c: 8684676,
                t: 2
            }, {
                p: [-181, 53, -164],
                s: [3, 31, 3],
                c: 8684676,
                t: 2
            }, {
                p: [-199, 81, -164],
                s: [33, 3, 3],
                c: 8684676,
                t: 2
            }, {
                p: [-221, 131, -212],
                s: [70, 3, 100],
                col: 1,
                r: [0, 0, .35],
                c: 7894903,
                t: 2
            }, {
                p: [-186, 141, -212],
                s: [7, 7, 108],
                c: 8684676,
                t: 2
            }, {
                p: [-150, 131, -212],
                s: [73, 3, 100],
                col: 1,
                r: [0, 0, -.35],
                c: 7894903,
                t: 2
            }, {
                p: [-149, 134, -212],
                s: [73, 3, 100],
                col: 1,
                r: [0, 0, -.35],
                t: 5
            }, {
                p: [-186, 148, -212],
                s: [7, 3, 108],
                t: 5
            }, {
                p: [-165, 121, -166],
                s: [4, 16, 4],
                c: 8684676,
                t: 2
            }, {
                p: [-207, 121, -166],
                s: [4, 17, 4],
                c: 8684676,
                t: 2
            }, {
                p: [-186, 121, -212],
                s: [125, 6, 94],
                c: 8215901,
                t: 10
            }, {
                p: [-186, 127, -212],
                s: [93, 6, 94],
                c: 8215901,
                t: 10
            }, {
                p: [-186, 133, -212],
                s: [60, 6, 94],
                c: 8215901,
                t: 10
            }, {
                p: [-186, 139, -212],
                s: [32, 4, 94],
                c: 8215901,
                t: 10
            }, {
                p: [-135, 76, -236],
                s: [9, 72, 20],
                c: 5723991,
                t: 11
            }, {
                p: [-258, 51, -286],
                s: [66, 58, 56],
                c: 8029580,
                t: 10
            }, {
                p: [-123, 91, -258],
                s: [4, 30, 4],
                c: 8684676,
                t: 2
            }, {
                p: [-249, 91, -258],
                s: [4, 30, 4],
                c: 8684676,
                t: 2
            }, {
                p: [-207, 91, -258],
                s: [4, 26, 4],
                c: 8684676,
                t: 2
            }, {
                p: [-165, 91, -258],
                s: [4, 26, 4],
                c: 8684676,
                t: 2
            }, {
                p: [-207, 121, -258],
                s: [4, 17, 4],
                c: 8684676,
                t: 2
            }, {
                p: [-165, 121, -258],
                s: [4, 17, 4],
                c: 8684676,
                t: 2
            }, {
                p: [-226, 53, -261],
                s: [4, 56, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-226, 77, -288],
                s: [4, 4, 50],
                c: 11513775,
                t: 2
            }, {
                p: [-226, 105, -288],
                s: [4, 4, 50],
                col: 1,
                c: 11513775,
                t: 2
            }, {
                p: [-257, 118, -287],
                s: [72, 4, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-257, 113, -303],
                s: [68, 2, 32],
                col: 1,
                r: [-.35, 0, 0],
                c: 5723991,
                t: 2
            }, {
                p: [-257, 112, -267],
                s: [68, 2, 40],
                col: 1,
                r: [.35, 0, 0],
                c: 5723991,
                t: 2
            }, {
                p: [-258, 109, -287],
                s: [66, 3, 56],
                c: 8029580,
                t: 10
            }, {
                p: [-257, 115, -303],
                s: [68, 2, 33],
                col: 1,
                r: [-.35, 0, 0],
                t: 5
            }, {
                p: [-257, 122, -287],
                s: [72, 2, 4],
                t: 5
            }, {
                p: [-258, 112, -286],
                s: [66, 4, 38],
                c: 8029580,
                t: 10
            }, {
                p: [-258, 116, -287],
                s: [66, 3, 21],
                c: 8029580,
                t: 10
            }, {
                p: [-257, 114, -266],
                s: [68, 2, 41],
                col: 1,
                r: [.35, 0, 0],
                t: 5
            }, {
                p: [-225, 51, -271],
                s: [2, 20, 2],
                c: 11513775,
                t: 2
            }, {
                p: [-225, 51, -283],
                s: [2, 20, 2],
                c: 11513775,
                t: 2
            }, {
                p: [-225, 71, -277],
                s: [2, 2, 14],
                c: 11513775,
                t: 2
            }, {
                p: [-193, 51, -329],
                s: [66, 38, 56],
                c: 7110518,
                t: 10
            }, {
                p: [-223, 53, -302],
                s: [4, 42, 4],
                c: 9013641,
                t: 2
            }, {
                p: [-161, 53, -302],
                s: [4, 42, 4],
                c: 9013641,
                t: 2
            }, {
                p: [-192, 87, -302],
                s: [58, 8, 4],
                col: 1,
                c: 9013641,
                t: 2
            }, {
                p: [-226, 53, -315],
                s: [4, 56, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-192, 96, -327],
                s: [68, 2, 57],
                col: 1,
                r: [.17, 0, 0],
                c: 5592405,
                t: 2
            }, {
                p: [-192, 98, -327],
                s: [68, 2, 57],
                col: 1,
                r: [.17, 0, 0],
                t: 5
            }, {
                p: [-193, 89, -329],
                s: [66, 6, 56],
                c: 7110518,
                t: 10
            }, {
                p: [-193, 92, -339],
                s: [66, 3, 36],
                c: 7110518,
                t: 5
            }, {
                p: [-193, 95, -347],
                s: [66, 3, 20],
                c: 7110518,
                t: 10
            }, {
                p: [-186, 51, -302],
                s: [2, 20, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-174, 51, -302],
                s: [2, 20, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-180, 71, -302],
                s: [14, 2, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-216, 51, -254],
                s: [19, 2, 12],
                col: 1,
                t: 5
            }, {
                p: [-195, 51, -257],
                s: [12, 2, 6],
                col: 1,
                t: 5
            }, {
                p: [-185, 51, -254],
                s: [8, 2, 12],
                col: 1,
                t: 5
            }, {
                p: [-211, 51, -183],
                s: [12, 2, 14],
                col: 1,
                t: 5
            }, {
                p: [-201, 51, -179],
                s: [8, 2, 6],
                col: 1,
                t: 5
            }, {
                p: [-183, 51, -182],
                s: [8, 2, 12],
                col: 1,
                t: 5
            }, {
                p: [-197, 51, -62],
                s: [56, 57, 80],
                c: 8878432,
                t: 10
            }, {
                p: [-224, 51, -101],
                s: [4, 58, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-224, 51, -23],
                s: [4, 58, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-170, 51, -23],
                s: [4, 58, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-170, 51, -101],
                s: [4, 58, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-197, 77, -101],
                s: [50, 4, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-197, 105, -101],
                s: [50, 4, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-197, 105, -62],
                s: [58, 4, 74],
                c: 11513775,
                t: 2
            }, {
                p: [-197, 121, -62],
                s: [65, 6, 6],
                c: 11513775,
                t: 2
            }, {
                p: [-197, 116, -84],
                s: [63, 2, 43],
                col: 1,
                r: [-.35, 0, 0],
                c: 6710886,
                t: 2
            }, {
                p: [-197, 116, -40],
                s: [63, 2, 44],
                col: 1,
                r: [.35, 0, 0],
                c: 6710886,
                t: 2
            }, {
                p: [-197, 118, -39],
                s: [63, 2, 44],
                col: 1,
                r: [.35, 0, 0],
                t: 5
            }, {
                p: [-197, 118, -85],
                s: [63, 2, 43],
                col: 1,
                r: [-.35, 0, 0],
                t: 5
            }, {
                p: [-197, 127, -62],
                s: [65, 2, 6],
                t: 5
            }, {
                p: [-197, 109, -62],
                s: [56, 3, 82],
                c: 8878432,
                t: 10
            }, {
                p: [-186, 117, -212],
                s: [122, 4, 96],
                c: 8684676,
                t: 2
            }, {
                p: [-197, 112, -62],
                s: [56, 3, 66],
                c: 8878432,
                t: 10
            }, {
                p: [-197, 115, -62],
                s: [56, 4, 50],
                c: 8878432,
                t: 10
            }, {
                p: [-197, 119, -62],
                s: [56, 4, 28],
                c: 8878432,
                t: 10
            }, {
                p: [-224, 51, -62],
                s: [5, 71, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-170, 51, -62],
                s: [5, 71, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-176, 92, -90],
                s: [7, 39, 12],
                c: 6250335,
                t: 11
            }, {
                p: [-225, 51, -36],
                s: [2, 22, 2],
                c: 11513775,
                t: 2
            }, {
                p: [-225, 51, -48],
                s: [2, 22, 2],
                c: 11513775,
                t: 2
            }, {
                p: [-225, 71, -42],
                s: [2, 2, 10],
                c: 11513775,
                t: 2
            }, {
                p: [-197, 51, 14],
                s: [74, 72, 70],
                c: 6320224,
                t: 10
            }, {
                p: [-233, 51, -20],
                s: [4, 73, 4],
                c: 7895160,
                t: 2
            }, {
                p: [-233, 51, 48],
                s: [4, 73, 4],
                c: 7895160,
                t: 2
            }, {
                p: [-161, 51, 48],
                s: [4, 73, 4],
                c: 7895160,
                t: 2
            }, {
                p: [-161, 51, -20],
                s: [4, 73, 4],
                c: 7895160,
                t: 2
            }, {
                p: [-197, 53, 14],
                s: [77, 12, 73],
                c: 6250335,
                t: 11
            }, {
                p: [-160, 91, 14],
                s: [2, 4, 64],
                col: 1,
                c: 7500402,
                t: 2
            }, {
                p: [-197, 120, 14],
                s: [76, 4, 64],
                c: 7500402,
                t: 2
            }, {
                p: [-160, 66, -9],
                s: [2, 20, 2],
                c: 11513775,
                t: 2
            }, {
                p: [-160, 66, 3],
                s: [2, 20, 2],
                c: 11513775,
                t: 2
            }, {
                p: [-160, 84, -3],
                s: [2, 2, 10],
                c: 11513775,
                t: 2
            }, {
                p: [-197, 120, -20],
                s: [68, 4, 4],
                c: 7500402,
                t: 2
            }, {
                p: [-197, 120, 48],
                s: [68, 4, 4],
                col: 1,
                c: 7500402,
                t: 2
            }, {
                p: [-197, 136, 14],
                s: [5, 5, 80],
                c: 9868950,
                t: 2
            }, {
                p: [-219, 130, 14],
                s: [42, 2, 77],
                col: 1,
                r: [0, 0, .35],
                c: 5395026,
                t: 2
            }, {
                p: [-176, 130, 14],
                s: [41, 2, 77],
                col: 1,
                r: [0, 0, -.35],
                c: 5395026,
                t: 2
            }, {
                p: [-197, 124, 14],
                s: [74, 4, 70],
                c: 6320224,
                t: 10
            }, {
                p: [-176, 132, 14],
                s: [43, 2, 77],
                col: 1,
                r: [0, 0, -.35],
                t: 5
            }, {
                p: [-219, 132, 14],
                s: [44, 2, 77],
                col: 1,
                r: [0, 0, .35],
                t: 5
            }, {
                p: [-197, 141, 14],
                s: [5, 2, 80],
                t: 5
            }, {
                p: [-197, 128, 14],
                s: [53, 4, 70],
                c: 6320224,
                t: 10
            }, {
                p: [-197, 136, 14],
                s: [11, 3, 70],
                c: 6320224,
                t: 10
            }, {
                p: [-197, 132, 14],
                s: [31, 4, 70],
                c: 6320224,
                t: 10
            }, {
                p: [-197, 91, -20],
                s: [68, 4, 4],
                c: 7500402,
                t: 2
            }, {
                p: [-281, 51, 64],
                s: [96, 58, 80],
                c: 7558742,
                t: 10
            }, {
                p: [-282, 78, 25],
                s: [88, 4, 4],
                c: 9013641,
                t: 2
            }, {
                p: [-282, 120, 64],
                s: [102, 7, 7],
                col: 1,
                c: 11513775,
                t: 2
            }, {
                p: [-282, 116, 43],
                s: [100, 2, 48],
                col: 1,
                r: [-.35, 0, 0],
                c: 5723991,
                t: 2
            }, {
                p: [-282, 115, 87],
                s: [100, 2, 49],
                col: 1,
                r: [.35, 0, 0],
                c: 5723991,
                t: 2
            }, {
                p: [-282, 118, 42],
                s: [100, 2, 48],
                col: 1,
                r: [-.35, 0, 0],
                t: 5
            }, {
                p: [-282, 117, 88],
                s: [100, 2, 49],
                col: 1,
                r: [.35, 0, 0],
                t: 5
            }, {
                p: [-282, 127, 64],
                s: [102, 2, 7],
                col: 1,
                t: 5
            }, {
                p: [-281, 109, 64],
                s: [96, 4, 80],
                c: 6903125,
                t: 10
            }, {
                p: [-281, 113, 64],
                s: [96, 4, 58],
                c: 6903125,
                t: 10
            }, {
                p: [-281, 117, 64],
                s: [96, 4, 35],
                c: 6903125,
                t: 10
            }, {
                p: [-281, 121, 64],
                s: [96, 3, 15],
                c: 6903125,
                t: 10
            }, {
                p: [-264, 51, 25],
                s: [2, 22, 4],
                c: 9013384,
                t: 2
            }, {
                p: [-252, 51, 25],
                s: [2, 22, 4],
                c: 9013641,
                t: 2
            }, {
                p: [-258, 71, 25],
                s: [10, 2, 4],
                c: 9539985,
                t: 2
            }, {
                p: [-326, 58, -77],
                s: [5, 7, 5],
                c: 8223868,
                t: 11
            }, {
                p: [-326, 58, -61],
                s: [5, 7, 5],
                c: 8223868,
                t: 11
            }, {
                p: [-326, 58, -93],
                s: [5, 7, 5],
                c: 8223868,
                t: 11
            }, {
                p: [-326, 58, -109],
                s: [5, 7, 5],
                c: 8223868,
                t: 11
            }, {
                p: [-326, 58, -126],
                s: [5, 7, 5],
                c: 8223868,
                t: 11
            }, {
                p: [-326, 58, -143],
                s: [5, 7, 5],
                c: 8223868,
                t: 11
            }, {
                p: [-326, 58, -160],
                s: [5, 7, 5],
                c: 8223868,
                t: 11
            }, {
                p: [-326, 58, -177],
                s: [5, 7, 5],
                c: 8223868,
                t: 11
            }, {
                p: [-326, 58, -44],
                s: [5, 7, 5],
                c: 8223868,
                t: 11
            }, {
                p: [-326, 58, -27],
                s: [5, 7, 5],
                c: 8223868,
                t: 11
            }, {
                p: [-326, 58, -10],
                s: [5, 7, 5],
                c: 8223868,
                t: 11
            }, {
                p: [-326, 58, 7],
                s: [5, 7, 5],
                c: 8223868,
                t: 11
            }, {
                p: [-326, 58, 24],
                s: [5, 7, 5],
                c: 8223868,
                t: 11
            }, {
                p: [-326, 61, -79],
                s: [2, 2, 205],
                c: 13619151,
                t: 2
            }, {
                p: [-326, 53, -77],
                s: [10, 97, 392],
                v: 1,
                c: 10983566,
                t: 5
            }, {
                p: [-120, 51, -159],
                s: [4, 55, 4],
                c: 9671571,
                t: 2
            }, {
                p: [-24, 51, -159],
                s: [4, 55, 4],
                c: 9013641,
                t: 2
            }, {
                p: [-24, 51, -265],
                s: [4, 55, 4],
                c: 7895160,
                t: 2
            }, {
                p: [-120, 51, -265],
                s: [4, 55, 4],
                c: 8026746,
                t: 2
            }, {
                p: [-72, 51, -265],
                s: [4, 72, 5],
                c: 9539985,
                t: 2
            }, {
                p: [-72, 51, -159],
                s: [4, 72, 5],
                c: 9211020,
                t: 2
            }, {
                p: [-100, 114, -212],
                s: [56, 3, 114],
                col: 1,
                r: [0, 0, .35],
                c: 5395026,
                t: 2
            }, {
                p: [-72, 122, -212],
                s: [6, 6, 119],
                c: 11513775,
                t: 2
            }, {
                p: [-45, 114, -212],
                s: [56, 3, 114],
                col: 1,
                r: [0, 0, -.35],
                c: 5395026,
                t: 2
            }, {
                p: [-72, 78, -265],
                s: [92, 4, 4],
                c: 7697781,
                t: 2
            }, {
                p: [-24, 78, -212],
                s: [4, 4, 102],
                c: 8355711,
                t: 2
            }, {
                p: [-72, 78, -159],
                s: [92, 4, 4],
                c: 9211020,
                t: 2
            }, {
                p: [-120, 78, -212],
                s: [4, 4, 102],
                col: 1,
                c: 8553090,
                t: 2
            }, {
                p: [-72, 102, -159],
                s: [92, 4, 4],
                c: 9539985,
                t: 2
            }, {
                p: [-72, 102, -265],
                s: [92, 4, 4],
                c: 9671571,
                t: 2
            }, {
                p: [-24, 51, -212],
                s: [5, 55, 4],
                c: 8355711,
                t: 2
            }, {
                p: [-24, 102, -212],
                s: [4, 4, 102],
                c: 7895160,
                t: 2
            }, {
                p: [-120, 102, -212],
                s: [4, 4, 102],
                col: 1,
                c: 9013641,
                t: 2
            }, {
                p: [-44, 117, -212],
                s: [56, 3, 114],
                col: 1,
                r: [0, 0, -.35],
                t: 5
            }, {
                p: [-101, 117, -212],
                s: [56, 3, 114],
                col: 1,
                r: [0, 0, .35],
                t: 5
            }, {
                p: [-72, 128, -212],
                s: [6, 2, 119],
                t: 5
            }, {
                p: [-111, 51, -265],
                s: [2, 23, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-99, 51, -265],
                s: [2, 23, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-105, 72, -265],
                s: [10, 2, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-108, 51, -356],
                s: [102, 60, 92],
                c: 8217957,
                t: 10
            }, {
                p: [-58, 53, -311],
                s: [4, 59, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-158, 53, -311],
                s: [4, 59, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-158, 53, -357],
                s: [4, 55, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-124, 53, -311],
                s: [4, 74, 5],
                c: 11513775,
                t: 2
            }, {
                p: [-92, 53, -311],
                s: [4, 75, 5],
                c: 11513775,
                t: 2
            }, {
                p: [-108, 79, -311],
                s: [96, 4, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-108, 108, -311],
                s: [96, 4, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-108, 129, -356],
                s: [6, 6, 105],
                c: 11513775,
                t: 2
            }, {
                p: [-136, 121, -356],
                s: [57, 3, 99],
                col: 1,
                r: [0, 0, .35],
                c: 5855577,
                t: 2
            }, {
                p: [-58, 108, -358],
                s: [4, 4, 90],
                c: 11513775,
                t: 2
            }, {
                p: [-158, 108, -355],
                s: [4, 4, 84],
                col: 1,
                c: 11513775,
                t: 2
            }, {
                p: [-137, 124, -356],
                s: [57, 2, 99],
                col: 1,
                r: [0, 0, .35],
                t: 5
            }, {
                p: [-108, 135, -356],
                s: [6, 2, 105],
                t: 5
            }, {
                p: [-79, 124, -356],
                s: [57, 2, 99],
                col: 1,
                r: [0, 0, -.35],
                t: 5
            }, {
                p: [-80, 121, -356],
                s: [57, 3, 99],
                col: 1,
                r: [0, 0, -.35],
                c: 6052956,
                t: 2
            }, {
                p: [-108, 112, -356],
                s: [102, 5, 92],
                c: 8217957,
                t: 10
            }, {
                p: [-108, 117, -356],
                s: [77, 5, 92],
                c: 8217957,
                t: 10
            }, {
                p: [-108, 122, -356],
                s: [49, 5, 92],
                c: 8217957,
                t: 10
            }, {
                p: [-108, 127, -356],
                s: [22, 5, 92],
                c: 8217957,
                t: 10
            }, {
                p: [-148, 51, -311],
                s: [2, 22, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-136, 51, -311],
                s: [2, 22, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-142, 71, -311],
                s: [10, 2, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-101, 51, -20],
                s: [60, 62, 100],
                c: 6973550,
                t: 10
            }, {
                p: [-101, 130, -20],
                s: [5, 5, 108],
                c: 9868950,
                t: 2
            }, {
                p: [-130, 51, 29],
                s: [4, 63, 4],
                c: 7895160,
                t: 2
            }, {
                p: [-72, 51, 29],
                s: [4, 63, 4],
                c: 7895160,
                t: 2
            }, {
                p: [-72, 51, -71],
                s: [4, 63, 4],
                c: 7895160,
                t: 2
            }, {
                p: [-26, 51, -71],
                s: [4, 70, 4],
                c: 7895160,
                t: 2
            }, {
                p: [-26, 51, -121],
                s: [4, 70, 4],
                c: 7895160,
                t: 2
            }, {
                p: [-128, 51, -121],
                s: [4, 70, 4],
                c: 7895160,
                t: 2
            }, {
                p: [-78, 51, -121],
                s: [4, 70, 5],
                c: 7895160,
                t: 2
            }, {
                p: [-72, 51, -19],
                s: [4, 63, 4],
                c: 7895160,
                t: 2
            }, {
                p: [-101, 87, 29],
                s: [54, 4, 4],
                c: 7500402,
                t: 2
            }, {
                p: [-101, 110, 29],
                s: [54, 4, 4],
                c: 7500402,
                t: 2
            }, {
                p: [-103, 91, -121],
                s: [46, 4, 4],
                col: 1,
                c: 7500402,
                t: 2
            }, {
                p: [-52, 91, -121],
                s: [48, 4, 4],
                col: 1,
                c: 7500402,
                t: 2
            }, {
                p: [-49, 91, -71],
                s: [42, 4, 4],
                c: 7500402,
                t: 2
            }, {
                p: [-52, 117, -121],
                s: [48, 4, 4],
                c: 7500402,
                t: 2
            }, {
                p: [-103, 117, -121],
                s: [46, 4, 4],
                c: 7500402,
                t: 2
            }, {
                p: [-101, 87, 5],
                s: [62, 4, 44],
                c: 7500402,
                t: 2
            }, {
                p: [-128, 91, -95],
                s: [4, 4, 48],
                col: 1,
                c: 7500402,
                t: 2
            }, {
                p: [-26, 117, -96],
                s: [4, 4, 46],
                c: 7500402,
                t: 2
            }, {
                p: [-26, 91, -96],
                s: [4, 4, 46],
                c: 7500402,
                t: 2
            }, {
                p: [-84, 122, -20],
                s: [39, 2, 105],
                col: 1,
                r: [0, 0, -.52],
                c: 4737096,
                t: 2
            }, {
                p: [-118, 122, -20],
                s: [39, 2, 105],
                col: 1,
                r: [0, 0, .53],
                c: 4737096,
                t: 2
            }, {
                p: [-52, 117, -71],
                s: [48, 4, 4],
                c: 7500402,
                t: 2
            }, {
                p: [-130, 51, -69],
                s: [4, 63, 4],
                c: 7895160,
                t: 2
            }, {
                p: [-130, 51, -19],
                s: [5, 63, 4],
                c: 7895160,
                t: 2
            }, {
                p: [-101, 114, -20],
                s: [61, 4, 100],
                c: 6973550,
                t: 10
            }, {
                p: [-101, 118, -20],
                s: [50, 4, 100],
                c: 6973550,
                t: 10
            }, {
                p: [-101, 122, -20],
                s: [35, 4, 100],
                c: 6973550,
                t: 10
            }, {
                p: [-101, 126, -20],
                s: [22, 4, 100],
                c: 6973550,
                t: 10
            }, {
                p: [-101, 130, -20],
                s: [9, 1, 100],
                c: 6973550,
                t: 5
            }, {
                p: [-119, 124, -20],
                s: [39, 2, 105],
                col: 1,
                r: [0, 0, .53],
                t: 5
            }, {
                p: [-83, 124, -20],
                s: [39, 2, 105],
                col: 1,
                r: [0, 0, -.52],
                t: 5
            }, {
                p: [-101, 135, -20],
                s: [5, 2, 108],
                t: 5
            }, {
                p: [-77, 51, -96],
                s: [104, 68, 52],
                c: 6254184,
                t: 10
            }, {
                p: [-128, 117, -95],
                s: [4, 4, 48],
                c: 7500402,
                t: 2
            }, {
                p: [-77, 119, -96],
                s: [104, 5, 52],
                c: 6254184,
                t: 10
            }, {
                p: [-77, 129, -96],
                s: [114, 5, 5],
                col: 1,
                c: 7500402,
                t: 2
            }, {
                p: [-77, 125, -112],
                s: [108, 2, 31],
                col: 1,
                r: [-.35, 0, 0],
                c: 5723991,
                t: 2
            }, {
                p: [-77, 125, -80],
                s: [108, 2, 31],
                col: 1,
                r: [.35, 0, 0],
                c: 5723991,
                t: 2
            }, {
                p: [-77, 127, -113],
                s: [108, 2, 31],
                col: 1,
                r: [-.35, 0, 0],
                t: 5
            }, {
                p: [-77, 127, -79],
                s: [108, 2, 31],
                col: 1,
                r: [.35, 0, 0],
                t: 5
            }, {
                p: [-77, 134, -96],
                s: [114, 2, 5],
                col: 1,
                t: 5
            }, {
                p: [-77, 124, -96],
                s: [104, 4, 38],
                c: 6254184,
                t: 10
            }, {
                p: [-77, 128, -96],
                s: [104, 4, 16],
                c: 6254184,
                t: 10
            }, {
                p: [-46, 65, -75],
                s: [12, 77, 6],
                c: 10658466,
                t: 11
            }, {
                p: [-25, 64, -102],
                s: [2, 22, 2],
                c: 11513775,
                t: 2
            }, {
                p: [-25, 64, -90],
                s: [2, 22, 2],
                c: 11513775,
                t: 2
            }, {
                p: [-25, 84, -96],
                s: [2, 2, 10],
                c: 11513775,
                t: 2
            }, {
                p: [-92, 53, -87],
                s: [77, 12, 73],
                c: 6250335,
                t: 11
            }, {
                p: [175, 66, -254],
                s: [6, 41, 46],
                c: 10983566,
                t: 11
            }, {
                p: [175, 103, -334],
                s: [6, 21, 27],
                c: 10983566,
                t: 11
            }, {
                p: [242, 66, -347],
                s: [128, 62, 7],
                c: 10983566,
                t: 11
            }, {
                p: [267, 66, -236],
                s: [78, 49, 9],
                c: 10983566,
                t: 11
            }, {
                p: [175, 66, -328],
                s: [6, 37, 46],
                c: 10983566,
                t: 11
            }, {
                p: [183, 66, -212],
                s: [38, 102, 38],
                c: 10983566,
                t: 11
            }, {
                p: [239, 65, -259],
                s: [125, 2, 38],
                c: 5723991,
                t: 11
            }, {
                p: [240, 65, -292],
                s: [123, 2, 28],
                c: 6694952,
                t: 5
            }, {
                p: [-102, 66, 118],
                s: [126, 38, 94],
                c: 8215901,
                t: 10
            }, {
                p: [-164, 66, 72],
                s: [4, 38, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-40, 66, 72],
                s: [4, 38, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-102, 66, 72],
                s: [4, 62, 5],
                c: 11513775,
                t: 2
            }, {
                p: [-102, 100, 72],
                s: [120, 4, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-102, 126, 117],
                s: [6, 6, 102],
                c: 11513775,
                t: 2
            }, {
                p: [-67, 115, 117],
                s: [71, 3, 99],
                col: 1,
                r: [0, 0, -.35],
                c: 5263440,
                t: 2
            }, {
                p: [-137, 115, 117],
                s: [69, 3, 99],
                col: 1,
                r: [0, 0, .35],
                c: 5263440,
                t: 2
            }, {
                p: [-137, 118, 117],
                s: [71, 2, 99],
                col: 1,
                r: [0, 0, .35],
                t: 5
            }, {
                p: [-102, 132, 117],
                s: [6, 2, 102],
                t: 5
            }, {
                p: [-66, 118, 117],
                s: [71, 2, 99],
                col: 1,
                r: [0, 0, -.35],
                t: 5
            }, {
                p: [-102, 104, 118],
                s: [130, 6, 94],
                c: 8215901,
                t: 10
            }, {
                p: [-102, 110, 118],
                s: [97, 5, 94],
                c: 8215901,
                t: 10
            }, {
                p: [-102, 115, 118],
                s: [70, 5, 94],
                c: 8215901,
                t: 10
            }, {
                p: [-102, 120, 118],
                s: [43, 5, 94],
                c: 8215901,
                t: 10
            }, {
                p: [-102, 125, 118],
                s: [17, 3, 94],
                c: 8215901,
                t: 10
            }, {
                p: [-127, 66, 72],
                s: [2, 21, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-139, 66, 72],
                s: [2, 21, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-133, 85, 72],
                s: [10, 2, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-194, 51, 77],
                s: [56, 49, 65],
                c: 8878432,
                t: 10
            }, {
                p: [-179, 105, 59],
                s: [39, 2, 105],
                col: 1,
                r: [0, 0, -.52],
                c: 4737096,
                t: 2
            }, {
                p: [-178, 107, 59],
                s: [39, 2, 105],
                col: 1,
                r: [0, 0, -.52],
                t: 5
            }, {
                p: [-167, 93, 60],
                s: [4, 4, 22],
                c: 11513775,
                t: 2
            }, {
                p: [76, 51, -141],
                s: [84, 62, 142],
                c: 8878432,
                t: 10
            }, {
                p: [158, 62, -129],
                s: [82, 50, 128],
                c: 8217957,
                t: 10
            }, {
                p: [-48, 92, 88],
                s: [7, 34, 12],
                c: 6710886,
                t: 11
            }, {
                p: [35, 66, -211],
                s: [4, 48, 4],
                c: 7895160,
                t: 2
            }, {
                p: [117, 66, -211],
                s: [4, 48, 4],
                c: 7895160,
                t: 2
            }, {
                p: [35, 66, -71],
                s: [4, 48, 4],
                c: 7895160,
                t: 2
            }, {
                p: [35, 66, -165],
                s: [5, 69, 4],
                c: 7895160,
                t: 2
            }, {
                p: [35, 66, -117],
                s: [5, 69, 4],
                c: 7895160,
                t: 2
            }, {
                p: [76, 66, -211],
                s: [4, 48, 5],
                c: 7895160,
                t: 2
            }, {
                p: [-197, 77, -62],
                s: [58, 4, 74],
                c: 11513775,
                t: 2
            }, {
                p: [76, 87, -211],
                s: [78, 4, 4],
                c: 7895160,
                t: 2
            }, {
                p: [76, 110, -211],
                s: [78, 4, 4],
                c: 7895160,
                t: 2
            }, {
                p: [35, 110, -141],
                s: [4, 4, 136],
                c: 7895160,
                t: 2
            }, {
                p: [35, 87, -141],
                s: [4, 4, 136],
                c: 7895160,
                t: 2
            }, {
                p: [76, 87, -71],
                s: [78, 4, 4],
                c: 7895160,
                t: 2
            }, {
                p: [76, 110, -71],
                s: [78, 4, 4],
                c: 7895160,
                t: 2
            }, {
                p: [76, 138, -141],
                s: [102, 6, 6],
                c: 7895160,
                t: 2
            }, {
                p: [76, 126, -179],
                s: [92, 3, 81],
                col: 1,
                r: [-.35, 0, 0],
                c: 4605253,
                t: 2
            }, {
                p: [76, 126, -103],
                s: [92, 3, 81],
                col: 1,
                r: [.35, 0, 0],
                c: 4605253,
                t: 2
            }, {
                p: [76, 129, -102],
                s: [92, 2, 81],
                col: 1,
                r: [.35, 0, 0],
                t: 5
            }, {
                p: [76, 144, -141],
                s: [102, 2, 6],
                col: 1,
                t: 5
            }, {
                p: [76, 114, -141],
                s: [84, 20, 47],
                c: 8878432,
                t: 10
            }, {
                p: [76, 134, -141],
                s: [84, 5, 33],
                c: 8878432,
                t: 10
            }, {
                p: [76, 129, -180],
                s: [92, 2, 81],
                col: 1,
                r: [-.35, 0, 0],
                t: 5
            }, {
                p: [-221, 134, -212],
                s: [72, 3, 100],
                col: 1,
                r: [0, 0, .35],
                t: 5
            }, {
                p: [117, 110, -141],
                s: [4, 4, 136],
                col: 1,
                c: 7895160,
                t: 2
            }, {
                p: [198, 66, -192],
                s: [4, 47, 4],
                c: 11513775,
                t: 2
            }, {
                p: [198, 66, -66],
                s: [4, 47, 4],
                col: 1,
                c: 11513775,
                t: 2
            }, {
                p: [159, 84, -66],
                s: [4, 51, 5],
                c: 11513775,
                t: 2
            }, {
                p: [198, 66, -129],
                s: [5, 47, 4],
                col: 1,
                c: 11513775,
                t: 2
            }, {
                p: [158, 66, -158],
                s: [85, 17, 74],
                c: 7235166,
                t: 11
            }, {
                p: [117, 87, -188],
                s: [4, 4, 42],
                c: 7895160,
                t: 2
            }, {
                p: [159, 134, -129],
                s: [5, 5, 140],
                c: 11513775,
                t: 2
            }, {
                p: [181, 124, -129],
                s: [50, 2, 135],
                col: 1,
                r: [0, 0, -.52],
                c: 6908265,
                t: 2
            }, {
                p: [159, 109, -66],
                s: [74, 4, 4],
                col: 1,
                c: 11513775,
                t: 2
            }, {
                p: [159, 83, -192],
                s: [4, 51, 5],
                c: 11513775,
                t: 2
            }, {
                p: [159, 109, -192],
                s: [74, 4, 4],
                c: 11513775,
                t: 2
            }, {
                p: [120, 66, -192],
                s: [4, 47, 4],
                c: 11513775,
                t: 2
            }, {
                p: [136, 126, -129],
                s: [51, 2, 135],
                col: 1,
                r: [0, 0, .52],
                t: 5
            }, {
                p: [136, 124, -129],
                s: [48, 2, 135],
                col: 1,
                r: [0, 0, .52],
                c: 6908265,
                t: 2
            }, {
                p: [182, 126, -129],
                s: [51, 2, 135],
                col: 1,
                r: [0, 0, -.52],
                t: 5
            }, {
                p: [159, 139, -129],
                s: [5, 2, 140],
                t: 5
            }, {
                p: [198, 109, -129],
                s: [4, 4, 122],
                col: 1,
                c: 11513775,
                t: 2
            }, {
                p: [158, 112, -129],
                s: [82, 5, 128],
                col: 1,
                c: 8217957,
                t: 10
            }, {
                p: [158, 117, -129],
                s: [69, 4, 128],
                col: 1,
                c: 8217957,
                t: 10
            }, {
                p: [158, 121, -129],
                s: [55, 4, 128],
                col: 1,
                c: 8217957,
                t: 10
            }, {
                p: [158, 125, -129],
                s: [40, 4, 128],
                col: 1,
                c: 8217957,
                t: 10
            }, {
                p: [158, 129, -129],
                s: [26, 4, 128],
                col: 1,
                c: 8217957,
                t: 10
            }, {
                p: [158, 133, -129],
                s: [13, 4, 128],
                col: 1,
                c: 8217957,
                t: 10
            }, {
                p: [34, 63, -135],
                s: [2, 22, 2],
                c: 11513775,
                t: 2
            }, {
                p: [34, 63, -147],
                s: [2, 22, 2],
                c: 11513775,
                t: 2
            }, {
                p: [34, 83, -141],
                s: [2, 2, 10],
                c: 11513775,
                t: 2
            }, {
                p: [102, 64, -212],
                s: [2, 22, 2],
                c: 11513775,
                t: 2
            }, {
                p: [96, 84, -212],
                s: [10, 2, 2],
                c: 11513775,
                t: 2
            }, {
                p: [90, 64, -212],
                s: [2, 22, 2],
                c: 11513775,
                t: 2
            }, {
                p: [183, 118, -212],
                s: [33, 102, 33],
                c: 13812408,
                t: 11
            }, {
                p: [183, 219, -212],
                s: [38, 7, 38],
                c: 10983566,
                t: 11
            }, {
                p: [183, 256, -212],
                s: [3, 3, 37],
                c: 10983566,
                t: 11
            }, {
                p: [183, 227, -231],
                s: [38, 39, 3],
                col: 1,
                r: [.52, 0, 0],
                c: 6908265,
                t: 2
            }, {
                p: [183, 227, -192],
                s: [38, 39, 3],
                col: 1,
                r: [-.52, 0, 0],
                c: 6908265,
                t: 2
            }, {
                p: [203, 227, -212],
                s: [3, 39, 38],
                col: 1,
                r: [0, 0, .52],
                c: 6908265,
                t: 2
            }, {
                p: [163, 227, -212],
                s: [3, 39, 38],
                col: 1,
                r: [0, 0, -.52],
                c: 6908265,
                t: 2
            }, {
                p: [183, 227, -212],
                s: [37, 11, 29],
                c: 10983566,
                t: 11
            }, {
                p: [183, 238, -212],
                s: [37, 6, 23],
                c: 10983566,
                t: 11
            }, {
                p: [183, 244, -212],
                s: [37, 6, 16],
                c: 10983566,
                t: 11
            }, {
                p: [183, 250, -212],
                s: [37, 6, 9],
                c: 10983566,
                t: 11
            }, {
                p: [183, 256, -212],
                s: [37, 5, 3],
                c: 10983566,
                t: 11
            }, {
                p: [183, 227, -212],
                s: [31, 11, 37],
                c: 10983566,
                t: 11
            }, {
                p: [183, 238, -212],
                s: [24, 6, 37],
                c: 10983566,
                t: 11
            }, {
                p: [183, 244, -212],
                s: [17, 6, 37],
                c: 10983566,
                t: 11
            }, {
                p: [183, 250, -212],
                s: [10, 6, 37],
                c: 10983566,
                t: 11
            }, {
                p: [183, 118, -212],
                s: [36, 102, 10],
                c: 9341833,
                t: 2
            }, {
                p: [183, 118, -212],
                s: [11, 102, 36],
                c: 9341833,
                t: 2
            }, {
                p: [183, 259, -212],
                s: [3, 3, 41],
                c: 5066061,
                t: 2
            }, {
                p: [183, 259, -212],
                s: [40, 3, 3],
                c: 5066061,
                t: 2
            }, {
                p: [161, 228, -212],
                s: [2, 39, 38],
                col: 1,
                r: [0, 0, -.52],
                t: 5
            }, {
                p: [205, 228, -212],
                s: [2, 39, 38],
                col: 1,
                r: [0, 0, .52],
                t: 5
            }, {
                p: [183, 228, -233],
                s: [38, 39, 2],
                col: 1,
                r: [.52, 0, 0],
                t: 5
            }, {
                p: [183, 228, -190],
                s: [38, 39, 2],
                col: 1,
                r: [-.52, 0, 0],
                t: 5
            }, {
                p: [183, 262, -212],
                s: [3, 2, 41],
                t: 5
            }, {
                p: [183, 262, -212],
                s: [40, 2, 3],
                t: 5
            }, {
                p: [183, 162, -212],
                s: [42, 7, 42],
                c: 8220776
            }, {
                p: [183, 169, -212],
                s: [42, 2, 42],
                t: 5
            }, {
                p: [183, 65, -212],
                s: [40, 69, 40],
                c: 8220776,
                t: 11
            }, {
                p: [175, 65, -347],
                s: [9, 68, 10],
                c: 6050122,
                t: 11
            }, {
                p: [175, 65, -237],
                s: [9, 67, 10],
                c: 6379345,
                t: 11
            }, {
                p: [175, 120, -329],
                s: [9, 5, 26],
                c: 8220776,
                t: 11
            }, {
                p: [199, 115, -236],
                s: [39, 9, 12],
                c: 6575952,
                t: 11
            }, {
                p: [239, 120, -347],
                s: [119, 9, 10],
                c: 7563104,
                t: 11
            }, {
                p: [303, 66, -304],
                s: [6, 44, 80],
                c: 10983566,
                t: 11
            }, {
                p: [303, 66, -245],
                s: [6, 40, 6],
                c: 10983566,
                t: 11
            }, {
                p: [287, 65, -292],
                s: [29, 10, 49],
                c: 9013641,
                t: 2
            }, {
                p: [271, 65, -292],
                s: [3, 8, 24],
                c: 9013641,
                t: 2
            }, {
                p: [265, 65, -292],
                s: [3, 4, 24],
                c: 9013641,
                t: 2
            }, {
                p: [268, 65, -292],
                s: [3, 6, 24],
                c: 9013641,
                t: 2
            }, {
                p: [273, 65, -316],
                s: [3, 11, 3],
                col: 1,
                c: 7039851,
                t: 2
            }, {
                p: [273, 65, -268],
                s: [3, 11, 3],
                col: 1,
                c: 7039851,
                t: 2
            }, {
                p: [234, 70, -260],
                s: [7, 1, 25],
                c: 3616550,
                t: 5
            }, {
                p: [234, 67, -273],
                s: [7, 6, 1],
                c: 3616550,
                t: 5
            }, {
                p: [234, 67, -247],
                s: [7, 6, 1],
                c: 3616550,
                t: 5
            }, {
                p: [239, 70, -324],
                s: [7, 1, 25],
                c: 3616550,
                t: 5
            }, {
                p: [207, 71, -324],
                s: [1, 5, 25],
                pe: 1,
                c: 3616550,
                t: 5
            }, {
                p: [231, 71, -260],
                s: [1, 5, 25],
                pe: 1,
                c: 3616550,
                t: 5
            }, {
                p: [239, 67, -311],
                s: [7, 6, 1],
                c: 3616550,
                t: 5
            }, {
                p: [239, 67, -337],
                s: [7, 6, 1],
                c: 3616550,
                t: 5
            }, {
                p: [210, 70, -324],
                s: [7, 1, 25],
                c: 3616550,
                t: 5
            }, {
                p: [210, 67, -311],
                s: [7, 6, 1],
                c: 3616550,
                t: 5
            }, {
                p: [210, 67, -337],
                s: [7, 6, 1],
                c: 3616550,
                t: 5
            }, {
                p: [236, 71, -324],
                s: [1, 5, 25],
                pe: 1,
                c: 3616550,
                t: 5
            }, {
                p: [195, 66, -236],
                s: [34, 52, 9],
                c: 10983566,
                t: 11
            }, {
                p: [303, 65, -347],
                s: [9, 69, 10],
                c: 5919310,
                t: 11
            }, {
                p: [303, 65, -236],
                s: [9, 63, 12],
                c: 6246729,
                t: 11
            }, {
                p: [304, 66, -256],
                s: [5, 1, 19],
                c: 8220776,
                t: 11
            }, {
                p: [220, 66, -235],
                s: [19, 1, 10],
                c: 8220776,
                t: 11
            }, {
                p: [175, 65, -305],
                s: [7, 34, 5],
                c: 7694689,
                t: 11
            }, {
                p: [175, 65, -279],
                s: [7, 34, 5],
                c: 7234139,
                t: 11
            }, {
                p: [175, 99, -302],
                s: [7, 5, 11],
                c: 7233881,
                t: 11
            }, {
                p: [175, 66, -292],
                s: [7, 1, 21],
                c: 8220776,
                t: 11
            }, {
                p: [336, 51, -302],
                s: [58, 71, 58],
                c: 6973550,
                t: 10
            }, {
                p: [364, 66, -274],
                s: [4, 56, 4],
                c: 11513775,
                t: 2
            }, {
                p: [336, 66, -274],
                s: [4, 65, 5],
                c: 11513775,
                t: 2
            }, {
                p: [308, 66, -274],
                s: [4, 56, 4],
                c: 11513775,
                t: 2
            }, {
                p: [336, 92, -274],
                s: [52, 4, 4],
                c: 11513775,
                t: 2
            }, {
                p: [344, 64, -273],
                s: [2, 22, 2],
                c: 11513775,
                t: 2
            }, {
                p: [336, 130, -302],
                s: [6, 6, 68],
                c: 11513775,
                t: 2
            }, {
                p: [320, 127, -302],
                s: [32, 2, 65],
                col: 1,
                r: [0, 0, .35],
                c: 5855577,
                t: 2
            }, {
                p: [336, 118, -274],
                s: [52, 4, 4],
                c: 11513775,
                t: 2
            }, {
                p: [356, 64, -273],
                s: [2, 22, 2],
                c: 11513775,
                t: 2
            }, {
                p: [350, 84, -273],
                s: [10, 2, 2],
                c: 11513775,
                t: 2
            }, {
                p: [336, 122, -302],
                s: [58, 3, 58],
                c: 6973550,
                t: 10
            }, {
                p: [336, 125, -302],
                s: [45, 3, 58],
                c: 6973550,
                t: 10
            }, {
                p: [336, 128, -302],
                s: [28, 3, 58],
                c: 6973550,
                t: 10
            }, {
                p: [336, 131, -302],
                s: [15, 3, 58],
                c: 6973550,
                t: 10
            }, {
                p: [319, 129, -302],
                s: [32, 2, 65],
                col: 1,
                r: [0, 0, .35],
                t: 5
            }, {
                p: [354, 129, -302],
                s: [32, 2, 65],
                col: 1,
                r: [0, 0, -.35],
                t: 5
            }, {
                p: [353, 127, -302],
                s: [32, 2, 65],
                col: 1,
                r: [0, 0, -.35],
                c: 5855577,
                t: 2
            }, {
                p: [336, 136, -302],
                s: [6, 2, 68],
                t: 5
            }, {
                p: [185, 84, -65],
                s: [2, 20, 2],
                col: 1,
                c: 11513775,
                t: 2
            }, {
                p: [173, 84, -65],
                s: [2, 20, 2],
                col: 1,
                c: 11513775,
                t: 2
            }, {
                p: [179, 102, -65],
                s: [10, 2, 2],
                col: 1,
                c: 11513775,
                t: 2
            }, {
                p: [277, 51, -190],
                s: [88, 63, 86],
                c: 6254184,
                t: 10
            }, {
                p: [320, 51, -232],
                s: [4, 63, 4],
                c: 7895160,
                t: 2
            }, {
                p: [281, 51, -110],
                s: [106, 72, 80],
                c: 8878432,
                t: 10
            }, {
                p: [333, 66, -149],
                s: [4, 58, 4],
                c: 11513775,
                t: 2
            }, {
                p: [320, 51, -152],
                s: [4, 63, 4],
                c: 7895160,
                t: 2
            }, {
                p: [320, 51, -192],
                s: [5, 77, 4],
                c: 7895160,
                t: 2
            }, {
                p: [234, 51, -192],
                s: [5, 77, 4],
                c: 7895160,
                t: 2
            }, {
                p: [234, 51, -152],
                s: [4, 63, 4],
                c: 7895160,
                t: 2
            }, {
                p: [234, 51, -232],
                s: [4, 63, 4],
                c: 7895160,
                t: 2
            }, {
                p: [229, 66, -149],
                s: [4, 58, 4],
                c: 11513775,
                t: 2
            }, {
                p: [280, 66, 38],
                s: [4, 65, 4],
                c: 11513775,
                t: 2
            }, {
                p: [229, 66, -71],
                s: [4, 58, 4],
                c: 11513775,
                t: 2
            }, {
                p: [333, 66, -110],
                s: [5, 72, 4],
                c: 11513775,
                t: 2
            }, {
                p: [320, 88, -192],
                s: [4, 4, 76],
                c: 7895160,
                t: 2
            }, {
                p: [320, 110, -192],
                s: [4, 4, 76],
                c: 7895160,
                t: 2
            }, {
                p: [234, 88, -192],
                s: [4, 4, 76],
                c: 7895160,
                t: 2
            }, {
                p: [234, 110, -192],
                s: [4, 4, 76],
                c: 7895160,
                t: 2
            }, {
                p: [301, 110, -232],
                s: [34, 4, 4],
                col: 1,
                c: 7895160,
                t: 2
            }, {
                p: [301, 88, -232],
                s: [34, 4, 4],
                col: 1,
                c: 7895160,
                t: 2
            }, {
                p: [277, 127, -192],
                s: [102, 5, 5],
                c: 7895160,
                t: 2
            }, {
                p: [277, 119, -166],
                s: [97, 2, 59],
                col: 1,
                r: [.35, 0, 0],
                c: 5395026,
                t: 2
            }, {
                p: [277, 121, -214],
                s: [97, 2, 47],
                col: 1,
                r: [-.35, 0, 0],
                c: 5395026,
                t: 2
            }, {
                p: [277, 114, -190],
                s: [88, 3, 86],
                c: 6254184,
                t: 10
            }, {
                p: [277, 117, -190],
                s: [88, 3, 68],
                c: 6254184,
                t: 10
            }, {
                p: [277, 120, -190],
                s: [88, 3, 50],
                c: 6254184,
                t: 10
            }, {
                p: [277, 123, -190],
                s: [88, 3, 30],
                c: 6254184,
                t: 10
            }, {
                p: [277, 126, -190],
                s: [88, 2, 16],
                c: 6254184,
                t: 10
            }, {
                p: [277, 121, -165],
                s: [97, 2, 59],
                col: 1,
                r: [.35, 0, 0],
                t: 5
            }, {
                p: [277, 123, -215],
                s: [97, 2, 47],
                col: 1,
                r: [-.35, 0, 0],
                t: 5
            }, {
                p: [277, 132, -192],
                s: [102, 2, 5],
                t: 5
            }, {
                p: [333, 93, -110],
                s: [4, 4, 74],
                c: 11513775,
                t: 2
            }, {
                p: [333, 120, -110],
                s: [4, 4, 74],
                c: 11513775,
                t: 2
            }, {
                p: [11, 137, -444],
                s: [100, 5, 5],
                c: 7895160,
                t: 2
            }, {
                p: [11, 142, -444],
                s: [100, 2, 5],
                t: 5
            }, {
                p: [10, 128, -416],
                s: [97, 2, 61],
                col: 1,
                r: [.35, 0, 0],
                c: 5395026,
                t: 2
            }, {
                p: [10, 130, -416],
                s: [97, 2, 62],
                col: 1,
                r: [.35, 0, 0],
                t: 5
            }, {
                p: [43, 69, -400],
                s: [13, 70, 7],
                c: 6381921,
                t: 11
            }, {
                p: [229, 66, -110],
                s: [5, 72, 4],
                c: 11513775,
                t: 2
            }, {
                p: [229, 93, -110],
                s: [4, 4, 74],
                c: 11513775,
                t: 2
            }, {
                p: [229, 120, -110],
                s: [4, 4, 74],
                c: 11513775,
                t: 2
            }, {
                p: [281, 120, -149],
                s: [100, 4, 4],
                col: 1,
                c: 11513775,
                t: 2
            }, {
                p: [281, 120, -71],
                s: [100, 4, 4],
                c: 11513775,
                t: 2
            }, {
                p: [281, 93, -149],
                s: [100, 4, 4],
                col: 1,
                c: 11513775,
                t: 2
            }, {
                p: [281, 137, -110],
                s: [120, 5, 5],
                c: 11513775,
                t: 2
            }, {
                p: [281, 131, -132],
                s: [113, 2, 50],
                col: 1,
                r: [-.35, 0, 0],
                c: 6579300,
                t: 2
            }, {
                p: [281, 133, -133],
                s: [113, 2, 50],
                col: 1,
                r: [-.35, 0, 0],
                t: 5
            }, {
                p: [281, 131, -89],
                s: [113, 2, 50],
                col: 1,
                r: [.35, 0, 0],
                c: 6579300,
                t: 2
            }, {
                p: [281, 133, -88],
                s: [113, 2, 50],
                col: 1,
                r: [.35, 0, 0],
                t: 5
            }, {
                p: [281, 142, -110],
                s: [120, 2, 5],
                t: 5
            }, {
                p: [281, 124, -110],
                s: [106, 4, 80],
                c: 8878432,
                t: 10
            }, {
                p: [281, 128, -110],
                s: [106, 3, 60],
                c: 8878432,
                t: 10
            }, {
                p: [281, 131, -110],
                s: [106, 4, 43],
                c: 8878432,
                t: 10
            }, {
                p: [281, 135, -110],
                s: [106, 3, 21],
                c: 8878432,
                t: 10
            }, {
                p: [263, 51, -43],
                s: [60, 62, 72],
                c: 6973550,
                t: 10
            }, {
                p: [263, 125, -40],
                s: [71, 2, 70],
                col: 1,
                r: [0, 0, .35],
                c: 6908265,
                t: 2
            }, {
                p: [262, 127, -40],
                s: [71, 2, 70],
                col: 1,
                r: [0, 0, .35],
                t: 5
            }, {
                p: [281, 93, -71],
                s: [100, 4, 4],
                c: 11513775,
                t: 2
            }, {
                p: [292, 66, -68],
                s: [4, 71, 4],
                c: 11513775,
                t: 2
            }, {
                p: [292, 66, -8],
                s: [4, 71, 4],
                c: 11513775,
                t: 2
            }, {
                p: [234, 66, -8],
                s: [4, 47, 4],
                c: 11513775,
                t: 2
            }, {
                p: [234, 66, -68],
                s: [4, 47, 4],
                c: 11513775,
                t: 2
            }, {
                p: [263, 109, -8],
                s: [54, 4, 4],
                c: 11513775,
                t: 2
            }, {
                p: [234, 109, -38],
                s: [4, 4, 56],
                c: 11513775,
                t: 2
            }, {
                p: [292, 109, -38],
                s: [4, 4, 56],
                col: 1,
                c: 11513775,
                t: 2
            }, {
                p: [262, 113, -43],
                s: [59, 4, 72],
                c: 6973550,
                t: 10
            }, {
                p: [267, 117, -43],
                s: [50, 4, 72],
                c: 6973550,
                t: 10
            }, {
                p: [272, 121, -43],
                s: [38, 4, 72],
                c: 6973550,
                t: 10
            }, {
                p: [277, 125, -38],
                s: [28, 4, 62],
                c: 6973550,
                t: 10
            }, {
                p: [283, 129, -38],
                s: [17, 4, 62],
                c: 6973550,
                t: 10
            }, {
                p: [288, 133, -38],
                s: [6, 3, 62],
                c: 6973550,
                t: 10
            }, {
                p: [292, 113, -37],
                s: [2, 23, 61],
                c: 6973550,
                t: 10
            }, {
                p: [233, 84, -32],
                s: [2, 20, 2],
                c: 11513775,
                t: 2
            }, {
                p: [233, 84, -44],
                s: [2, 20, 2],
                c: 11513775,
                t: 2
            }, {
                p: [233, 102, -38],
                s: [2, 2, 10],
                c: 11513775,
                t: 2
            }, {
                p: [321, 66, -166],
                s: [2, 20, 2],
                c: 11513775,
                t: 2
            }, {
                p: [321, 66, -178],
                s: [2, 20, 2],
                c: 11513775,
                t: 2
            }, {
                p: [321, 84, -172],
                s: [2, 2, 10],
                c: 11513775,
                t: 2
            }, {
                p: [411, 66, -212],
                s: [90, 38, 138],
                c: 8215901,
                t: 10
            }, {
                p: [413, 66, -6],
                s: [90, 50, 88],
                c: 8215901,
                t: 10
            }, {
                p: [208, 66, 90],
                s: [140, 80, 88],
                c: 8215901,
                t: 10
            }, {
                p: [20, 66, 96],
                s: [116, 53, 80],
                c: 9342330,
                t: 10
            }, {
                p: [425, 51, -96],
                s: [90, 71, 92],
                c: 6973550,
                t: 10
            }, {
                p: [334, 51, 80],
                s: [110, 79, 86],
                c: 6254184,
                t: 10
            }, {
                p: [-37, 51, 57],
                s: [4, 69, 4],
                c: 7895160,
                t: 2
            }, {
                p: [20, 51, 57],
                s: [4, 89, 5],
                c: 7895160,
                t: 2
            }, {
                p: [20, 91, 57],
                s: [110, 4, 4],
                c: 7895160,
                t: 2
            }, {
                p: [20, 139, 96],
                s: [5, 5, 92],
                c: 7895160,
                t: 2
            }, {
                p: [-11, 130, 96],
                s: [65, 2, 88],
                col: 1,
                r: [0, 0, .35],
                c: 4737096,
                t: 2
            }, {
                p: [51, 130, 96],
                s: [65, 2, 88],
                col: 1,
                r: [0, 0, -.35],
                c: 4737096,
                t: 2
            }, {
                p: [20, 144, 96],
                s: [5, 2, 92],
                t: 5
            }, {
                p: [-12, 132, 96],
                s: [65, 2, 88],
                col: 1,
                r: [0, 0, .35],
                t: 5
            }, {
                p: [52, 132, 96],
                s: [65, 2, 88],
                col: 1,
                r: [0, 0, -.35],
                t: 5
            }, {
                p: [20, 116, 57],
                s: [110, 4, 4],
                c: 7895160,
                t: 2
            }, {
                p: [-37, 91, 96],
                s: [4, 4, 74],
                c: 7895160,
                t: 2
            }, {
                p: [-37, 116, 96],
                s: [4, 4, 74],
                col: 1,
                c: 7895160,
                t: 2
            }, {
                p: [20, 119, 96],
                s: [113, 6, 80],
                c: 9342330,
                t: 10
            }, {
                p: [20, 125, 96],
                s: [91, 4, 80],
                c: 9342330,
                t: 10
            }, {
                p: [20, 129, 96],
                s: [69, 4, 80],
                c: 9342330,
                t: 10
            }, {
                p: [20, 133, 96],
                s: [46, 4, 80],
                c: 9342330,
                t: 10
            }, {
                p: [20, 137, 96],
                s: [25, 4, 80],
                c: 9342330,
                t: 10
            }, {
                p: [-15, 66, 57],
                s: [2, 21, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-3, 66, 57],
                s: [2, 21, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-9, 85, 57],
                s: [10, 2, 4],
                c: 11513775,
                t: 2
            }, {
                p: [367, 66, -144],
                s: [4, 38, 4],
                c: 7895160,
                t: 2
            }, {
                p: [367, 66, -212],
                s: [5, 62, 4],
                c: 7895160,
                t: 2
            }, {
                p: [367, 100, -212],
                s: [4, 4, 132],
                col: 1,
                c: 7895160,
                t: 2
            }, {
                p: [377, 100, -144],
                s: [16, 4, 4],
                c: 7895160,
                t: 2
            }, {
                p: [412, 127, -212],
                s: [106, 5, 5],
                c: 7895160,
                t: 2
            }, {
                p: [412, 116, -248],
                s: [98, 2, 75],
                col: 1,
                r: [-.35, 0, 0],
                c: 4605510,
                t: 2
            }, {
                p: [412, 118, -249],
                s: [98, 2, 75],
                col: 1,
                r: [-.35, 0, 0],
                t: 5
            }, {
                p: [412, 118, -174],
                s: [98, 2, 77],
                col: 1,
                r: [.35, 0, 0],
                t: 5
            }, {
                p: [412, 116, -175],
                s: [98, 2, 77],
                col: 1,
                r: [.35, 0, 0],
                c: 4605510,
                t: 2
            }, {
                p: [412, 132, -212],
                s: [106, 2, 5],
                t: 5
            }, {
                p: [411, 104, -212],
                s: [90, 4, 138],
                c: 8215901,
                t: 10
            }, {
                p: [411, 108, -212],
                s: [90, 4, 117],
                c: 8215901,
                t: 10
            }, {
                p: [411, 112, -212],
                s: [90, 4, 94],
                c: 8215901,
                t: 10
            }, {
                p: [411, 116, -212],
                s: [90, 4, 73],
                c: 8215901,
                t: 10
            }, {
                p: [411, 124, -212],
                s: [90, 4, 29],
                c: 8215901,
                t: 10
            }, {
                p: [411, 120, -212],
                s: [90, 4, 51],
                c: 8215901,
                t: 10
            }, {
                p: [411, 128, -212],
                s: [90, 1, 11],
                c: 8215901,
                t: 10
            }, {
                p: [366, 66, -237],
                s: [2, 20, 2],
                col: 1,
                c: 11513775,
                t: 2
            }, {
                p: [366, 66, -249],
                s: [2, 20, 2],
                col: 1,
                c: 11513775,
                t: 2
            }, {
                p: [366, 84, -243],
                s: [2, 2, 10],
                col: 1,
                c: 11513775,
                t: 2
            }, {
                p: [381, 66, -141],
                s: [4, 57, 4],
                c: 11513775,
                t: 2
            }, {
                p: [381, 66, -51],
                s: [4, 57, 4],
                c: 11513775,
                t: 2
            }, {
                p: [381, 66, -96],
                s: [5, 73, 4],
                c: 11513775,
                t: 2
            }, {
                p: [381, 119, -96],
                s: [4, 4, 86],
                c: 11513775,
                t: 2
            }, {
                p: [427, 119, -96],
                s: [88, 4, 94],
                col: 1,
                c: 11513775,
                t: 2
            }, {
                p: [427, 138, -96],
                s: [108, 6, 6],
                c: 11513775,
                t: 2
            }, {
                p: [427, 131, -121],
                s: [102, 2, 52],
                col: 1,
                r: [-.35, 0, 0],
                c: 6052956,
                t: 2
            }, {
                p: [427, 131, -70],
                s: [102, 2, 52],
                col: 1,
                r: [.35, 0, 0],
                c: 6052956,
                t: 2
            }, {
                p: [427, 133, -69],
                s: [102, 2, 52],
                col: 1,
                r: [.35, 0, 0],
                t: 5
            }, {
                p: [427, 133, -122],
                s: [102, 2, 52],
                col: 1,
                r: [-.35, 0, 0],
                t: 5
            }, {
                p: [427, 144, -96],
                s: [108, 2, 6],
                t: 5
            }, {
                p: [425, 123, -96],
                s: [90, 5, 91],
                c: 6973550,
                t: 10
            }, {
                p: [425, 128, -96],
                s: [90, 4, 69],
                c: 6973550,
                t: 10
            }, {
                p: [425, 132, -96],
                s: [90, 4, 47],
                c: 6973550,
                t: 10
            }, {
                p: [425, 136, -96],
                s: [90, 4, 25],
                c: 6973550,
                t: 10
            }, {
                p: [369, 66, -49],
                s: [4, 51, 4],
                col: 1,
                c: 7895160,
                t: 2
            }, {
                p: [369, 66, 35],
                s: [4, 51, 4],
                col: 1,
                c: 7895160,
                t: 2
            }, {
                p: [369, 66, -7],
                s: [5, 65, 4],
                c: 7895160,
                t: 2
            }, {
                p: [369, 113, -7],
                s: [4, 4, 80],
                col: 1,
                c: 7895160,
                t: 2
            }, {
                p: [376, 113, -49],
                s: [10, 4, 4],
                c: 7895160,
                t: 2
            }, {
                p: [333, 66, -71],
                s: [4, 58, 4],
                c: 11513775,
                t: 2
            }, {
                p: [388, 66, 38],
                s: [4, 65, 4],
                c: 11513775,
                t: 2
            }, {
                p: [334, 66, 38],
                s: [4, 83, 5],
                c: 11513775,
                t: 2
            }, {
                p: [334, 95, 38],
                s: [104, 4, 4],
                c: 11513775,
                t: 2
            }, {
                p: [334, 127, 38],
                s: [104, 4, 4],
                c: 11513775,
                t: 2
            }, {
                p: [280, 127, 49],
                s: [4, 4, 18],
                col: 1,
                c: 11513775,
                t: 2
            }, {
                p: [280, 95, 49],
                s: [4, 4, 18],
                c: 11513775,
                t: 2
            }, {
                p: [277, 66, 47],
                s: [4, 81, 4],
                c: 7895160,
                t: 2
            }, {
                p: [139, 66, 47],
                s: [4, 81, 4],
                c: 7895160,
                t: 2
            }, {
                p: [107, 66, -12],
                s: [92, 19, 145],
                c: 6250335,
                t: 11
            }, {
                p: [64, 85, 28],
                s: [2, 38, 59],
                pe: 1,
                c: 6254184,
                t: 10
            }, {
                p: [64, 85, -43],
                s: [2, 38, 53],
                pe: 1,
                c: 6254184,
                t: 10
            }, {
                p: [150, 85, -27],
                s: [2, 38, 77],
                pe: 1,
                c: 6254184,
                t: 10
            }, {
                p: [150, 85, 34],
                s: [2, 38, 19],
                pe: 1,
                c: 6254184,
                t: 10
            }, {
                p: [208, 66, 47],
                s: [4, 104, 5],
                c: 7895160,
                t: 2
            }, {
                p: [208, 112, 47],
                s: [134, 4, 4],
                col: 1,
                c: 7895160,
                t: 2
            }, {
                p: [208, 143, 47],
                s: [134, 4, 4],
                c: 7895160,
                t: 2
            }, {
                p: [252, 66, 81],
                s: [85, 17, 73],
                c: 6250335
            }, {
                p: [277, 143, 87],
                s: [4, 4, 76],
                col: 1,
                c: 7895160,
                t: 2
            }, {
                p: [413, 130, -7],
                s: [107, 5, 5],
                c: 7895160,
                t: 2
            }, {
                p: [413, 124, -29],
                s: [99, 2, 51],
                col: 1,
                r: [-.35, 0, 0],
                c: 5066061,
                t: 2
            }, {
                p: [413, 124, 16],
                s: [99, 2, 54],
                col: 1,
                r: [.35, 0, 0],
                c: 5066061,
                t: 2
            }, {
                p: [413, 126, 17],
                s: [99, 2, 54],
                col: 1,
                r: [.35, 0, 0],
                t: 5
            }, {
                p: [413, 126, -30],
                s: [99, 2, 51],
                col: 1,
                r: [-.35, 0, 0],
                t: 5
            }, {
                p: [413, 135, -7],
                s: [107, 2, 5],
                t: 5
            }, {
                p: [413, 117, -6],
                s: [90, 3, 88],
                c: 8215901,
                t: 10
            }, {
                p: [413, 120, -6],
                s: [90, 3, 71],
                c: 8215901,
                t: 10
            }, {
                p: [413, 123, -6],
                s: [90, 3, 58],
                c: 8215901,
                t: 10
            }, {
                p: [413, 126, -6],
                s: [90, 3, 37],
                c: 8215901,
                t: 10
            }, {
                p: [413, 129, -6],
                s: [90, 3, 22],
                c: 8215901,
                t: 10
            }, {
                p: [334, 149, 80],
                s: [5, 5, 106],
                c: 11513775,
                t: 2
            }, {
                p: [364, 140, 80],
                s: [61, 2, 97],
                col: 1,
                r: [0, 0, -.35],
                c: 7039851,
                t: 2
            }, {
                p: [303, 140, 80],
                s: [61, 2, 97],
                col: 1,
                r: [0, 0, .35],
                c: 7039851,
                t: 2
            }, {
                p: [334, 154, 80],
                s: [5, 2, 106],
                t: 5
            }, {
                p: [304, 143, 80],
                s: [63, 2, 97],
                col: 1,
                r: [0, 0, .35],
                t: 5
            }, {
                p: [364, 142, 80],
                s: [63, 2, 97],
                col: 1,
                r: [0, 0, -.35],
                t: 5
            }, {
                p: [334, 130, 80],
                s: [110, 5, 86],
                c: 6254184,
                t: 10
            }, {
                p: [334, 135, 80],
                s: [89, 4, 86],
                c: 6254184,
                t: 10
            }, {
                p: [334, 139, 80],
                s: [67, 4, 86],
                c: 6254184,
                t: 10
            }, {
                p: [334, 143, 80],
                s: [45, 4, 86],
                c: 6254184,
                t: 10
            }, {
                p: [334, 147, 80],
                s: [23, 4, 86],
                c: 6254184,
                t: 10
            }, {
                p: [208, 169, 90],
                s: [6, 6, 104],
                c: 7895160,
                t: 2
            }, {
                p: [246, 158, 90],
                s: [81, 2, 97],
                col: 1,
                r: [0, 0, -.35],
                c: 4605510,
                t: 2
            }, {
                p: [170, 159, 90],
                s: [81, 2, 97],
                col: 1,
                r: [0, 0, .35],
                c: 4605510,
                t: 2
            }, {
                p: [169, 161, 90],
                s: [81, 2, 97],
                col: 1,
                r: [0, 0, .35],
                t: 5
            }, {
                p: [247, 160, 90],
                s: [81, 2, 97],
                col: 1,
                r: [0, 0, -.35],
                t: 5
            }, {
                p: [208, 175, 90],
                s: [6, 2, 104],
                t: 5
            }, {
                p: [208, 147, 90],
                s: [140, 3, 88],
                c: 8215901,
                t: 10
            }, {
                p: [208, 150, 90],
                s: [124, 4, 88],
                c: 8215901,
                t: 10
            }, {
                p: [208, 154, 90],
                s: [102, 4, 88],
                c: 8215901,
                t: 10
            }, {
                p: [208, 158, 90],
                s: [81, 4, 88],
                c: 8215901,
                t: 10
            }, {
                p: [208, 162, 90],
                s: [58, 4, 88],
                c: 8215901,
                t: 10
            }, {
                p: [208, 166, 90],
                s: [36, 4, 88],
                c: 8215901,
                t: 10
            }, {
                p: [208, 170, 90],
                s: [15, 3, 88],
                c: 8215901,
                t: 10
            }, {
                p: [-72, 87, -45],
                s: [4, 4, 48],
                c: 7500402,
                t: 2
            }, {
                p: [-101, 110, 5],
                s: [62, 4, 44],
                c: 7500402,
                t: 2
            }, {
                p: [368, 84, -22],
                s: [2, 22, 2],
                c: 11513775,
                t: 2
            }, {
                p: [368, 84, -34],
                s: [2, 22, 2],
                c: 11513775,
                t: 2
            }, {
                p: [368, 104, -28],
                s: [2, 2, 10],
                c: 11513775,
                t: 2
            }, {
                p: [179, 84, 47],
                s: [2, 21, 4],
                col: 1,
                c: 11513775,
                t: 2
            }, {
                p: [167, 84, 47],
                s: [2, 21, 4],
                col: 1,
                c: 11513775,
                t: 2
            }, {
                p: [173, 103, 47],
                s: [10, 2, 4],
                col: 1,
                c: 11513775,
                t: 2
            }, {
                p: [107, 146, -9],
                s: [101, 5, 5],
                c: 7895160,
                t: 2
            }, {
                p: [107, 134, 26],
                s: [93, 2, 74],
                col: 1,
                r: [.35, 0, 0],
                c: 4868682,
                t: 2
            }, {
                p: [150, 66, -64],
                s: [4, 58, 4],
                c: 7895160,
                t: 2
            }, {
                p: [151, 66, -9],
                s: [3, 81, 4],
                pe: 1,
                c: 7895160,
                t: 2
            }, {
                p: [150, 66, 44],
                s: [4, 58, 4],
                c: 7895160,
                t: 2
            }, {
                p: [107, 85, 50],
                s: [84, 38, 19],
                c: 6254184,
                t: 10
            }, {
                p: [107, 85, -44],
                s: [84, 38, 51],
                c: 6254184,
                t: 10
            }, {
                p: [64, 66, -2],
                s: [5, 54, 2],
                col: 1,
                pe: 1,
                c: 7895160,
                t: 2
            }, {
                p: [64, 66, -16],
                s: [5, 54, 2],
                col: 1,
                pe: 1,
                c: 7895160,
                t: 2
            }, {
                p: [64, 105, -9],
                s: [5, 2, 12],
                col: 1,
                c: 7895160,
                t: 2
            }, {
                p: [150, 66, 11],
                s: [4, 54, 2],
                pe: 1,
                c: 7895160,
                t: 2
            }, {
                p: [150, 66, 25],
                s: [4, 54, 2],
                pe: 1,
                c: 7895160,
                t: 2
            }, {
                p: [150, 105, 18],
                s: [4, 2, 12],
                col: 1,
                c: 7895160,
                t: 2
            }, {
                p: [150, 106, 18],
                s: [2, 15, 13],
                pe: 1,
                c: 6254184,
                t: 10
            }, {
                p: [64, 107, -9],
                s: [2, 16, 15],
                pe: 1,
                c: 6254184,
                t: 10
            }, {
                p: [63, 123, -9],
                s: [2, 24, 4],
                c: 7895160,
                t: 2
            }, {
                p: [64, 85, -68],
                s: [5, 39, 4],
                c: 7895160,
                t: 2
            }, {
                p: [64, 85, 54],
                s: [5, 39, 4],
                c: 7895160,
                t: 2
            }, {
                p: [64, 120, -9],
                s: [5, 4, 114],
                col: 1,
                c: 7895160,
                t: 2
            }, {
                p: [64, 120, 50],
                s: [5, 4, 4],
                col: 1,
                c: 7895160,
                t: 2
            }, {
                p: [107, 135, -41],
                s: [93, 2, 70],
                col: 1,
                r: [-.35, 0, 0],
                c: 4868682,
                t: 2
            }, {
                p: [150, 120, -10],
                s: [4, 4, 104],
                c: 7895160,
                t: 2
            }, {
                p: [107, 115, 10],
                s: [85, 1, 71],
                c: 6250335,
                t: 2
            }, {
                p: [107, 124, -9],
                s: [88, 4, 122],
                c: 6254184,
                t: 10
            }, {
                p: [107, 136, 27],
                s: [93, 2, 74],
                col: 1,
                r: [.35, 0, 0],
                t: 5
            }, {
                p: [107, 151, -9],
                s: [101, 2, 5],
                col: 1,
                t: 5
            }, {
                p: [107, 137, -42],
                s: [93, 2, 70],
                col: 1,
                r: [-.35, 0, 0],
                t: 5
            }, {
                p: [107, 128, -9],
                s: [88, 4, 104],
                c: 6254184,
                t: 10
            }, {
                p: [107, 132, -9],
                s: [88, 4, 82],
                c: 6254184,
                t: 10
            }, {
                p: [107, 136, -9],
                s: [88, 4, 60],
                c: 6254184,
                t: 10
            }, {
                p: [107, 140, -9],
                s: [88, 4, 38],
                c: 6254184,
                t: 10
            }, {
                p: [107, 144, -9],
                s: [88, 3, 16],
                c: 6254184,
                t: 10
            }, {
                p: [50, 83, -9],
                s: [22, 2, 88],
                c: 7895160,
                t: 2
            }, {
                p: [41, 66, -51],
                s: [2, 20, 2],
                c: 7895160,
                t: 2
            }, {
                p: [41, 66, 33],
                s: [2, 20, 2],
                c: 7895160,
                t: 2
            }, {
                p: [92, 66, 40],
                s: [2, 39, 2],
                c: 7895160,
                t: 2
            }, {
                p: [80, 66, 40],
                s: [2, 39, 2],
                c: 7895160,
                t: 2
            }, {
                p: [121, 66, -18],
                s: [2, 39, 2],
                c: 7895160,
                t: 2
            }, {
                p: [133, 66, -18],
                s: [2, 39, 2],
                c: 7895160,
                t: 2
            }, {
                p: [127, 105, -18],
                s: [14, 2, 2],
                c: 7895160,
                t: 2
            }, {
                p: [86, 105, 40],
                s: [14, 2, 2],
                c: 7895160,
                t: 2
            }, {
                p: [10, 128, -471],
                s: [97, 2, 59],
                col: 1,
                r: [-.35, 0, 0],
                c: 5395026,
                t: 2
            }, {
                p: [10, 130, -472],
                s: [97, 2, 59],
                col: 1,
                r: [-.35, 0, 0],
                t: 5
            }, {
                p: [10, 51, -444],
                s: [92, 67, 107],
                c: 6254184,
                t: 10
            }, {
                p: [10, 118, -444],
                s: [92, 2, 107],
                c: 6254184,
                t: 10
            }, {
                p: [10, 123, -444],
                s: [92, 5, 75],
                c: 6254184,
                t: 10
            }, {
                p: [10, 128, -444],
                s: [92, 5, 49],
                c: 6254184,
                t: 10
            }, {
                p: [10, 133, -444],
                s: [92, 5, 22],
                c: 6254184,
                t: 10
            }, {
                p: [55, 114, -444],
                s: [4, 4, 107],
                c: 11513775,
                t: 2
            }, {
                p: [71, 51, -393],
                s: [4, 63, 4],
                c: 11513775,
                t: 2
            }, {
                p: [207, 51, -393],
                s: [4, 64, 4],
                c: 11513775,
                t: 2
            }, {
                p: [116, 51, -393],
                s: [4, 77, 5],
                c: 11513775,
                t: 2
            }, {
                p: [71, 51, -445],
                s: [4, 63, 4],
                c: 11513775,
                t: 2
            }, {
                p: [71, 51, -495],
                s: [4, 62, 4],
                c: 11513775,
                t: 2
            }, {
                p: [139, 111, -393],
                s: [132, 4, 4],
                c: 11513775,
                t: 2
            }, {
                p: [71, 110, -444],
                s: [4, 4, 98],
                col: 1,
                c: 11513775,
                t: 2
            }, {
                p: [139, 134, -443],
                s: [7, 7, 121],
                c: 11513775,
                t: 2
            }, {
                p: [101, 121, -443],
                s: [79, 3, 113],
                col: 1,
                r: [0, 0, .35],
                c: 4605510,
                t: 2
            }, {
                p: [100, 124, -443],
                s: [79, 2, 113],
                col: 1,
                r: [0, 0, .35],
                t: 5
            }, {
                p: [139, 141, -443],
                s: [7, 2, 121],
                col: 1,
                t: 5
            }, {
                p: [178, 124, -443],
                s: [78, 3, 113],
                col: 1,
                r: [0, 0, -.35],
                t: 5
            }, {
                p: [139, 66, -444],
                s: [136, 49, 104],
                c: 9342330,
                t: 10
            }, {
                p: [139, 115, -444],
                s: [107, 5, 104],
                c: 9342330,
                t: 10
            }, {
                p: [139, 120, -444],
                s: [83, 5, 104],
                c: 9342330,
                t: 10
            }, {
                p: [139, 125, -444],
                s: [55, 5, 104],
                c: 9342330,
                t: 10
            }, {
                p: [139, 130, -444],
                s: [28, 4, 104],
                c: 9342330,
                t: 10
            }, {
                p: [161, 51, -393],
                s: [4, 77, 5],
                c: 11513775,
                t: 2
            }, {
                p: [214, 113, -385],
                s: [48, 2, 70],
                col: 1,
                r: [0, 0, .52],
                c: 6908265,
                t: 2
            }, {
                p: [213, 115, -385],
                s: [48, 2, 70],
                col: 1,
                r: [0, 0, .52],
                t: 5
            }, {
                p: [233, 125, -386],
                s: [5, 5, 71],
                c: 11513775,
                t: 2
            }, {
                p: [233, 130, -386],
                s: [5, 2, 71],
                t: 5
            }, {
                p: [55, 65, 13],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [55, 65, -64],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-65, 65, -64],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-65, 65, -52],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-72, 110, -45],
                s: [4, 4, 48],
                c: 7500402,
                t: 2
            }, {
                p: [-130, 87, -44],
                s: [4, 4, 46],
                c: 7500402,
                t: 2
            }, {
                p: [-130, 110, -44],
                s: [4, 4, 46],
                c: 7500402,
                t: 2
            }, {
                p: [28, 65, -95],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-88, 65, 36],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [28, 65, 50],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [28, 77, 50],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [146, 85, 35],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [60, 85, -36],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [60, 85, -28],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-17, 65, -178],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-56, 65, -128],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-164, 52, -158],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-152, 52, -158],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-315, 52, -86],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-315, 52, -74],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-315, 52, 18],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-315, 52, 6],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-315, 64, 18],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-231, 52, -93],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-281, 52, -49],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-269, 52, -49],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-128, 52, -266],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-116, 52, -304],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-116, 64, -304],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-162, 65, -28],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-19, 65, -28],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [216, 83, 40],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [157, 83, -56],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [300, 83, -50],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [300, 83, -62],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [361, 83, 31],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [360, 65, -220],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [45, 65, -66],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-55, 65, -66],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-68, 65, 22],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-68, 65, 14],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-163, 65, 54],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-165, 65, -38],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-269, 52, -59],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-317, 52, -64],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-317, 52, -56],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-317, 52, -173],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-305, 52, 20],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-184, 52, -204],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-184, 52, -196],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [75, 71, -311],
                s: [31, 3, 7],
                c: 8220776
            }, {
                p: [94, 66, -292],
                s: [6, 7, 44],
                c: 10983566,
                t: 11
            }, {
                p: [56, 66, -292],
                s: [6, 7, 44],
                c: 10983566,
                t: 11
            }, {
                p: [75, 66, -273],
                s: [32, 7, 6],
                c: 10983566,
                t: 11
            }, {
                p: [75, 66, -311],
                s: [32, 7, 6],
                c: 10983566,
                t: 11
            }, {
                p: [75, 71, -273],
                s: [31, 3, 7],
                c: 8220776
            }, {
                p: [56, 71, -292],
                s: [7, 3, 45],
                c: 8220776,
                t: 11
            }, {
                p: [94, 71, -292],
                s: [7, 3, 45],
                c: 8220776
            }, {
                p: [75, 66, -292],
                s: [32, 1, 33],
                c: 10983566
            }, {
                p: [75, 66, -292],
                s: [9, 23, 9],
                c: 10983566,
                t: 11
            }, {
                p: [75, 77, -292],
                s: [20, 3, 20],
                c: 8220776,
                t: 11
            }, {
                p: [75, 86, -292],
                s: [14, 3, 14],
                c: 8220776,
                t: 11
            }, {
                p: [75, 74, -311],
                s: [31, 1, 7],
                col: 1,
                t: 5
            }, {
                p: [75, 74, -273],
                s: [31, 1, 7],
                col: 1,
                t: 5
            }, {
                p: [94, 74, -292],
                s: [7, 1, 45],
                col: 1,
                t: 5
            }, {
                p: [56, 74, -292],
                s: [7, 1, 45],
                col: 1,
                t: 5
            }, {
                p: [75, 80, -292],
                s: [20, 1, 20],
                col: 1,
                t: 5
            }, {
                p: [75, 89, -292],
                s: [14, 1, 14],
                col: 1,
                t: 5
            }, {
                p: [75, 67, -292],
                s: [32, 2, 33],
                c: 9165268,
                o: .7000000000000001,
                t: 5
            }, {
                p: [63, 62, -565],
                s: [173, 63, 128],
                c: 8217957,
                t: 10
            }, {
                p: [351, 83, 34],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [296, 83, -25],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [296, 83, -17],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [375, 65, -139],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [325, 65, -202],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [325, 65, -210],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [206, 65, -227],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [206, 65, -220],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-222, 52, -295],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-17, 65, -190],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [157, 65, -201],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [157, 65, -213],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-1, 65, -362],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [11, 65, -362],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [23, 65, -362],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-1, 77, -363],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [77, 65, -362],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [89, 65, -362],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [135, 65, -362],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [135, 77, -363],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [104, 65, -301],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [65, 65, -218],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-11, 66, -365],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [145, 65, -365],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [152, 65, -365],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [102, 65, -291],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [147, 65, -198],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [55, 65, -215],
                s: [6, 8, 6],
                id: 2
            }, {
                p: [-67, 65, -9],
                s: [1, 18, 4],
                col: 1,
                r: [0, 0, .17],
                c: 7895160,
                t: 2
            }, {
                p: [-31, 65, -28],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [-31, 65, -16],
                s: [12, 12, 12],
                id: 1
            }, {
                p: [39, 66, -35],
                s: [1, 19, 5],
                pe: 1,
                v: 1,
                c: 7895160,
                t: 2
            }, {
                p: [39, 66, -35],
                s: [1, 19, 3],
                id: 3,
                t: 2,
                d: 2
            }, {
                p: [-161, 87, -309],
                s: [4, 8, 10],
                c: 9013641,
                t: 2
            }, {
                p: [381, 91, -96],
                s: [4, 4, 86],
                c: 11513775,
                t: 2
            }, {
                p: [202, 82, -11],
                s: [110, 2, 165],
                col: 1,
                t: 5
            }, {
                p: [177, 121, -443],
                s: [79, 3, 113],
                col: 1,
                r: [0, 0, -.35],
                c: 4605510,
                t: 2
            }, {
                p: [383, 65, 26],
                s: [12, 70, 6],
                c: 11293523
            }, {
                p: [63, 121, -502],
                s: [174, 4, 4],
                c: 6381921,
                t: 2
            }, {
                p: [-22, 96, -502],
                s: [4, 34, 4],
                c: 6381921,
                t: 2
            }, {
                p: [63, 156, -568],
                s: [6, 6, 145],
                c: 6381921,
                t: 2
            }, {
                p: [18, 140, -568],
                s: [97, 3, 138],
                col: 1,
                r: [0, 0, .35],
                c: 6381921,
                t: 2
            }, {
                p: [108, 140, -568],
                s: [102, 3, 138],
                col: 1,
                r: [0, 0, -.35],
                c: 6381921,
                t: 2
            }, {
                p: [63, 162, -568],
                s: [6, 2, 145],
                t: 5
            }, {
                p: [109, 143, -568],
                s: [102, 2, 138],
                col: 1,
                r: [0, 0, -.35],
                t: 5
            }, {
                p: [17, 143, -568],
                s: [97, 2, 138],
                col: 1,
                r: [0, 0, .35],
                t: 5
            }, {
                p: [93, 96, -502],
                s: [4, 50, 4],
                c: 6381921,
                t: 2
            }, {
                p: [63, 125, -565],
                s: [173, 4, 128],
                c: 8217957,
                t: 10
            }, {
                p: [63, 133, -565],
                s: [131, 4, 128],
                c: 8217957,
                t: 10
            }, {
                p: [63, 129, -565],
                s: [153, 4, 128],
                c: 8217957,
                t: 10
            }, {
                p: [63, 137, -565],
                s: [109, 4, 128],
                c: 8217957,
                t: 10
            }, {
                p: [63, 141, -565],
                s: [86, 4, 128],
                c: 8217957,
                t: 10
            }, {
                p: [63, 145, -565],
                s: [65, 4, 128],
                c: 8217957,
                t: 10
            }, {
                p: [63, 149, -565],
                s: [43, 4, 128],
                c: 8217957,
                t: 10
            }, {
                p: [63, 153, -565],
                s: [22, 3, 128],
                c: 8217957,
                t: 10
            }, {
                p: [-108, 107, -447],
                s: [97, 2, 59],
                col: 1,
                r: [.35, 0, 0],
                c: 5395026,
                t: 2
            }, {
                p: [-108, 108, -446],
                s: [97, 2, 59],
                col: 1,
                r: [.35, 0, 0],
                t: 5
            }, {
                p: [-108, 116, -475],
                s: [100, 5, 5],
                c: 7895160,
                t: 2
            }, {
                p: [-108, 121, -475],
                s: [100, 2, 5],
                t: 5
            }, {
                p: [-161, 87, -309],
                s: [5, 22, 20],
                pe: 1,
                v: 1,
                c: 9013641,
                t: 2
            }, {
                p: [10, 114, -392],
                s: [94, 4, 4],
                c: 11513775,
                t: 2
            }, {
                p: [55, 51, -392],
                s: [4, 63, 4],
                c: 11513775,
                t: 2
            }, {
                p: [-35, 51, -392],
                s: [4, 63, 4],
                c: 11513775,
                t: 2
            }, {
                p: [11, 51, -392],
                s: [4, 63, 4],
                c: 11513775,
                t: 2
            }, {
                p: [30, 96, -502],
                s: [4, 52, 4],
                c: 6381921,
                t: 2
            }, {
                p: [63, 109, -502],
                s: [174, 4, 4],
                c: 6381921,
                t: 2
            }, {
                p: [10, 120, -444],
                s: [92, 3, 102],
                c: 6254184,
                t: 10
            }, {
                p: [55, 51, -444],
                s: [4, 86, 4],
                c: 11513775,
                t: 2
            }, {
                p: [296, 66, -292],
                s: [9, 19, 34],
                c: 7891810,
                t: 11
            }, {
                p: [298, 101, -292],
                s: [3, 9, 12],
                c: 6051153,
                t: 11
            }, {
                p: [298, 85, -301],
                s: [4, 22, 6],
                c: 6051153,
                t: 11
            }, {
                p: [298, 85, -283],
                s: [4, 23, 6],
                c: 6051153,
                t: 11
            }, {
                p: [300, 85, -292],
                s: [1, 22, 23],
                c: 5590860,
                t: 11
            }, {
                p: [293, 85, -297],
                s: [1, 3, 1],
                col: 1,
                c: 9997922,
                t: 5
            }, {
                p: [294, 85, -301],
                s: [1, 2, 1],
                col: 1,
                r: [0, -.35, 0],
                c: 9997922,
                t: 5
            }, {
                p: [293, 85, -306],
                s: [1, 3, 1],
                col: 1,
                r: [0, .35, 0],
                c: 9997922,
                t: 5
            }, {
                p: [294, 85, -288],
                s: [1, 2, 1],
                col: 1,
                r: [0, -.17, 0],
                c: 9997922,
                t: 5
            }, {
                p: [293, 85, -283],
                s: [1, 2, 1],
                col: 1,
                r: [0, 1.05, 0],
                c: 9997922,
                t: 5
            }, {
                p: [294, 85, -278],
                s: [1, 3, 1],
                col: 1,
                r: [0, .35, 0],
                c: 9997922,
                t: 5
            }, {
                p: [296, 85, -292],
                s: [1, 1, 3],
                col: 1,
                r: [0, 0, -.35],
                c: 12630166,
                t: 5
            }, {
                p: [297, 85, -292],
                s: [3, 4, 4],
                col: 1,
                r: [0, 0, -.35],
                c: 12630166,
                t: 5
            }, {
                p: [297, 86, -293],
                s: [3, 1, 1],
                col: 1,
                r: [0, 0, -.35],
                c: 0,
                t: 5
            }, {
                p: [297, 86, -291],
                s: [3, 1, 1],
                col: 1,
                r: [0, 0, -.35],
                c: 0,
                t: 5
            }, {
                p: [-224, 53, -74],
                s: [216, 0, 229],
                id: 4,
                col: 1,
                en: 1.8,
                t: 5
            }, {
                p: [-277, 51, -77],
                s: [104, 2, 202],
                v: 1,
                t: 5
            }, {
                p: [-139, 51, -111],
                s: [172, 2, 130],
                v: 1,
                t: 5
            }, {
                p: [-211, 51, -183],
                s: [12, 2, 14],
                v: 1,
                t: 5
            }, {
                p: [-201, 51, -179],
                s: [8, 2, 6],
                v: 1,
                t: 5
            }, {
                p: [-183, 51, -182],
                s: [8, 2, 12],
                v: 1,
                t: 5
            }, {
                p: [22, 66, -48],
                s: [210, 0, 258],
                id: 4,
                col: 1,
                en: 1.8,
                t: 5
            }, {
                p: [-1, 64, 0],
                s: [140, 2, 142],
                v: 1,
                t: 5
            }, {
                p: [-100, 64, 50],
                s: [58, 2, 42],
                v: 1,
                t: 5
            }, {
                p: [-149, 53, 8],
                s: [40, 13, 126],
                v: 1,
                t: 5
            }, {
                p: [-54, 51, -143],
                s: [58, 15, 42],
                v: 1,
                t: 5
            }, {
                p: [5, 64, -123],
                s: [60, 2, 104],
                v: 1,
                t: 5
            }, {
                p: [-124, 51, -285],
                s: [203, 2, 50],
                v: 1,
                t: 5
            }, {
                p: [343, 64, -252],
                s: [77, 2, 43],
                v: 1,
                t: 5
            }, {
                p: [343, 64, -122],
                s: [82, 2, 217],
                v: 1,
                t: 5
            }, {
                p: [327, 64, -11],
                s: [140, 20, 129],
                v: 1,
                t: 5
            }, {
                p: [202, 82, -11],
                s: [110, 2, 165],
                v: 1,
                t: 5
            }, {
                p: [213, 64, -112],
                s: [39, 20, 37],
                v: 1,
                t: 5
            }, {
                p: [213, 64, -207],
                s: [40, 2, 63],
                v: 1,
                t: 5
            }, {
                p: [-131, 66, 50],
                s: [119, 0, 210],
                id: 4,
                col: 1,
                en: 1.8,
                t: 5
            }, {
                p: [74, 66, -271],
                s: [214, 0, 223],
                id: 4,
                col: 1,
                en: 1.8,
                t: 5
            }, {
                p: [80, 51, -272],
                s: [226, 15, 194],
                v: 1,
                t: 5
            }, {
                p: [80, 51, -272],
                s: [226, 15, 194],
                col: 1,
                t: 5
            }, {
                p: [-185, 51, -254],
                s: [8, 2, 12],
                v: 1,
                t: 5
            }, {
                p: [-195, 51, -257],
                s: [12, 2, 6],
                v: 1,
                t: 5
            }, {
                p: [-216, 51, -254],
                s: [19, 2, 12],
                v: 1,
                t: 5
            }, {
                p: [-195, 53, -304],
                s: [201, 0, 97],
                id: 4,
                col: 1,
                en: 1.8,
                t: 5
            }, {
                p: [-65, 53, -289],
                s: [64, 13, 195],
                id: 9,
                t: 5,
                d: 0
            }, {
                p: [-149, 53, -78],
                s: [145, 13, 46],
                id: 9,
                t: 5,
                d: 1
            }, {
                p: [-101, 53, -140],
                s: [36, 13, 182],
                id: 9,
                t: 5,
                d: 0
            }, {
                p: [216, 66, -157],
                s: [197, 18, 53],
                id: 9,
                t: 5,
                d: 1
            }, {
                p: [357, 66, -103],
                s: [244, 18, 55],
                id: 9,
                t: 5,
                d: 1
            }, {
                p: [344, 66, -246],
                s: [82, 0, 234],
                id: 4,
                col: 1,
                en: 1.8,
                t: 5
            }, {
                p: [220, 66, -208],
                s: [88, 0, 52],
                id: 4,
                col: 1,
                en: 1.8,
                t: 5
            }, {
                p: [342, 84, 36],
                s: [170, 0, 223],
                id: 4,
                col: 1,
                en: 1.8,
                t: 5
            }, {
                p: [208, 84, -10],
                s: [131, 0, 240],
                id: 4,
                col: 1,
                en: 1.8,
                t: 5
            }, {
                p: [-72, 52, -212],
                s: [98, 50, 108],
                c: 8548950,
                t: 10
            }, {
                p: [65, 77, -218],
                s: [12, 1, 12],
                col: 1,
                t: 5
            }, {
                p: [157, 77, -207],
                s: [12, 1, 24],
                col: 1,
                t: 5
            }, {
                p: [83, 77, -363],
                s: [24, 1, 14],
                col: 1,
                t: 5
            }, {
                p: [17, 77, -363],
                s: [24, 1, 14],
                col: 1,
                t: 5
            }, {
                p: [-1, 89, -363],
                s: [12, 1, 12],
                col: 1,
                t: 5
            }, {
                p: [135, 89, -363],
                s: [12, 1, 12],
                col: 1,
                t: 5
            }, {
                p: [104, 77, -301],
                s: [12, 1, 12],
                col: 1,
                t: 5
            }, {
                p: [-17, 77, -184],
                s: [12, 1, 24],
                col: 1,
                t: 5
            }, {
                p: [28, 77, -95],
                s: [12, 1, 12],
                col: 1,
                t: 5
            }, {
                p: [55, 77, -64],
                s: [12, 1, 12],
                col: 1,
                t: 5
            }, {
                p: [-31, 77, -22],
                s: [12, 1, 24],
                col: 1,
                t: 5
            }, {
                p: [-19, 77, -28],
                s: [12, 1, 12],
                col: 1,
                t: 5
            }, {
                p: [-65, 77, -58],
                s: [12, 1, 24],
                col: 1,
                t: 5
            }, {
                p: [28, 89, 50],
                s: [12, 1, 12],
                col: 1,
                t: 5
            }, {
                p: [-88, 77, 36],
                s: [12, 1, 12],
                col: 1,
                t: 5
            }, {
                p: [-162, 77, -28],
                s: [12, 1, 12],
                col: 1,
                t: 5
            }, {
                p: [-158, 64, -158],
                s: [24, 1, 12],
                col: 1,
                t: 5
            }, {
                p: [-275, 64, -49],
                s: [24, 1, 12],
                col: 1,
                t: 5
            }, {
                p: [-315, 64, 6],
                s: [12, 1, 12],
                col: 1,
                t: 5
            }, {
                p: [-315, 64, -80],
                s: [12, 1, 24],
                col: 1,
                t: 5
            }, {
                p: [-315, 76, 18],
                s: [12, 1, 12],
                col: 1,
                t: 5
            }, {
                p: [-231, 64, -93],
                s: [12, 1, 12],
                col: 1,
                t: 5
            }, {
                p: [-128, 64, -266],
                s: [12, 1, 12],
                col: 1,
                t: 5
            }, {
                p: [-116, 76, -304],
                s: [12, 1, 12],
                col: 1,
                t: 5
            }, {
                p: [216, 95, 40],
                s: [12, 1, 12],
                col: 1,
                t: 5
            }, {
                p: [157, 95, -56],
                s: [12, 1, 12],
                col: 1,
                t: 5
            }, {
                p: [361, 95, 31],
                s: [12, 1, 12],
                col: 1,
                t: 5
            }, {
                p: [300, 95, -50],
                s: [12, 1, 12],
                col: 1,
                t: 5
            }, {
                p: [360, 77, -220],
                s: [12, 1, 12],
                col: 1,
                t: 5
            }, {
                p: [-56, 77, -128],
                s: [12, 1, 12],
                col: 1,
                t: 5
            }, {
                p: [-282, 105, 25],
                s: [88, 4, 4],
                c: 8224125,
                t: 2
            }, {
                p: [-282, 53, 25],
                s: [5, 57, 5],
                c: 9013641,
                t: 2
            }, {
                p: [-236, 53, 25],
                s: [4, 56, 4],
                c: 8553090,
                t: 2
            }, {
                p: [-328, 53, 25],
                s: [4, 56, 4],
                c: 9013641,
                t: 2
            }, {
                p: [-234, 91, 14],
                s: [2, 4, 64],
                c: 7500402,
                t: 2
            }, {
                p: [76, 114, -188],
                s: [84, 6, 43],
                c: 8878432,
                t: 10
            }, {
                p: [76, 114, -94],
                s: [84, 6, 43],
                c: 8878432,
                t: 10
            }, {
                p: [76, 120, -101],
                s: [84, 5, 29],
                c: 8878432,
                t: 10
            }, {
                p: [76, 125, -108],
                s: [84, 3, 16],
                c: 8878432,
                t: 10
            }, {
                p: [76, 128, -112],
                s: [84, 3, 7],
                c: 8878432,
                t: 10
            }, {
                p: [76, 120, -181],
                s: [84, 5, 29],
                c: 8878432,
                t: 10
            }, {
                p: [76, 125, -175],
                s: [84, 3, 16],
                c: 8878432,
                t: 10
            }, {
                p: [76, 128, -170],
                s: [84, 3, 7],
                c: 8878432,
                t: 10
            }, {
                p: [-270, 51, -177],
                s: [3, 20, 10],
                id: 21,
                col: 1,
                r: [0, -1.57, 0]
            }, {
                p: [-258, 51, 24],
                s: [3, 20, 10],
                id: 21,
                col: 1,
                r: [0, 1.57, 0]
            }, {
                p: [-225, 51, -42],
                s: [3, 20, 10],
                id: 21,
                col: 1,
                r: [-3.14, 0, -3.14]
            }, {
                p: [-160, 64, -3],
                s: [3, 20, 10],
                id: 21,
                col: 1
            }, {
                p: [-133, 65, 71],
                s: [3, 20, 10],
                id: 21,
                col: 1,
                r: [0, 1.57, 0]
            }, {
                p: [34, 63, -141],
                s: [3, 20, 10],
                id: 21,
                col: 1,
                r: [-3.14, 0, -3.14]
            }, {
                p: [-25, 64, -96],
                s: [3, 20, 10],
                id: 21,
                col: 1
            }, {
                p: [-9, 65, 56],
                s: [3, 20, 10],
                id: 21,
                col: 1,
                r: [0, 1.57, 0]
            }, {
                p: [56, 85, -2],
                s: [3, 20, 10],
                id: 21,
                col: 1,
                r: [0, 1.57, 0]
            }, {
                p: [157, 85, 11],
                s: [3, 20, 10],
                id: 21,
                col: 1,
                r: [0, -1.57, 0]
            }, {
                p: [173, 83, 46],
                s: [3, 20, 10],
                id: 21,
                col: 1,
                r: [0, 1.57, 0]
            }, {
                p: [86, 85, 40],
                s: [3, 20, 10],
                id: 21,
                col: 1,
                r: [0, 1.57, 0]
            }, {
                p: [179, 82, -65],
                s: [3, 20, 10],
                id: 21,
                col: 1,
                r: [0, 1.57, 0]
            }, {
                p: [233, 82, -38],
                s: [3, 20, 10],
                id: 21,
                col: 1
            }, {
                p: [368, 84, -28],
                s: [3, 20, 10],
                id: 21,
                col: 1
            }, {
                p: [96, 64, -212],
                s: [3, 20, 10],
                id: 21,
                col: 1,
                r: [0, 1.57, 0]
            }, {
                p: [-105, 52, -266],
                s: [3, 20, 10],
                id: 21,
                col: 1,
                r: [0, 1.57, 0]
            }, {
                p: [-142, 51, -310],
                s: [3, 20, 10],
                id: 21,
                col: 1,
                r: [0, -1.57, 0]
            }, {
                p: [-180, 51, -301],
                s: [3, 20, 10],
                id: 21,
                col: 1,
                r: [0, -1.57, 0]
            }, {
                p: [-225, 51, -277],
                s: [3, 20, 10],
                id: 21,
                col: 1
            }, {
                p: [366, 64, -243],
                s: [3, 20, 10],
                id: 21,
                col: 1
            }, {
                p: [350, 64, -273],
                s: [3, 20, 10],
                id: 21,
                col: 1,
                r: [0, 1.57, 0]
            }, {
                p: [321, 64, -172],
                s: [3, 20, 10],
                id: 21,
                col: 1,
                r: [3.14, 0, 3.14]
            }, {
                p: [-72, 104, -212],
                s: [99, 8, 108],
                c: 8548950,
                t: 10
            }, {
                p: [-72, 112, -212],
                s: [65, 6, 108],
                c: 8548950,
                t: 10
            }, {
                p: [-72, 118, -212],
                s: [35, 6, 108],
                c: 8548950,
                t: 10
            }, {
                p: [127, 85, -18],
                s: [3, 20, 10],
                id: 21,
                col: 1,
                r: [0, -1.57, 0]
            }, {
                p: [-259, 85, 23],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [0, 1.57, 0]
            }, {
                p: [-305, 85, 23],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [0, 1.57, 0]
            }, {
                p: [-235, 70, 4],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [-3.14, 0, -3.14]
            }, {
                p: [-226, 84, -44],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [-3.14, 0, -3.14]
            }, {
                p: [-226, 84, -81],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [-3.14, 0, -3.14]
            }, {
                p: [-271, 83, -176],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [0, -1.57, 0]
            }, {
                p: [-308, 83, -176],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [0, -1.57, 0]
            }, {
                p: [-228, 96, -164],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [0, -1.57, 0]
            }, {
                p: [-145, 96, -164],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [0, -1.57, 0]
            }, {
                p: [-197, 84, -103],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [0, 1.57, 0]
            }, {
                p: [-102, 97, -123],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [0, 1.57, 0]
            }, {
                p: [-130, 97, -96],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [-3.14, 0, -3.14]
            }, {
                p: [-132, 92, 4],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [-3.14, 0, -3.14]
            }, {
                p: [-159, 99, 14],
                s: [1, 17, 17],
                id: 22,
                col: 1
            }, {
                p: [-168, 85, -44],
                s: [1, 17, 17],
                id: 22,
                col: 1
            }, {
                p: [-50, 84, -157],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [0, -1.57, 0]
            }, {
                p: [-22, 83, -185],
                s: [1, 17, 17],
                id: 22,
                col: 1
            }, {
                p: [-24, 98, -97],
                s: [1, 17, 17],
                id: 22,
                col: 1
            }, {
                p: [-224, 84, -278],
                s: [1, 17, 17],
                id: 22,
                col: 1
            }, {
                p: [-187, 96, -260],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [0, 1.57, 0]
            }, {
                p: [-204, 64, -300],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [0, -1.57, 0]
            }, {
                p: [-141, 87, -309],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [0, -1.57, 0]
            }, {
                p: [-76, 87, -309],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [0, -1.57, 0]
            }, {
                p: [-49, 83, -267],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [0, 1.57, 0]
            }, {
                p: [140, 88, -194],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [0, 1.57, 0]
            }, {
                p: [56, 92, -213],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [0, 1.57, 0]
            }, {
                p: [33, 92, -188],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [-3.14, 0, -3.14]
            }, {
                p: [33, 92, -93],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [-3.14, 0, -3.14]
            }, {
                p: [-73, 76, 70],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [0, 1.57, 0]
            }, {
                p: [-70, 92, 5],
                s: [1, 17, 17],
                id: 22,
                col: 1
            }, {
                p: [42, 97, 55],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [0, 1.57, 0]
            }, {
                p: [242, 121, 45],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [0, 1.57, 0]
            }, {
                p: [227, 100, -90],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [-3.14, 0, -3.14]
            }, {
                p: [232, 92, -211],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [-3.14, 0, -3.14]
            }, {
                p: [200, 88, -161],
                s: [1, 17, 17],
                id: 22,
                col: 1
            }, {
                p: [308, 105, 36],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [0, 1.57, 0]
            }, {
                p: [322, 98, -272],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [0, -1.57, 0]
            }, {
                p: [367, 92, 13],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [3.14, 0, 3.14]
            }, {
                p: [294, 116, -25],
                s: [1, 17, 17],
                id: 22,
                col: 1
            }, {
                p: [335, 100, -92],
                s: [1, 17, 17],
                id: 22,
                col: 1
            }, {
                p: [322, 92, -212],
                s: [1, 17, 17],
                id: 22,
                col: 1
            }, {
                p: [379, 99, -118],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [3.14, 0, 3.14]
            }, {
                p: [365, 78, -179],
                s: [1, 17, 17],
                id: 22,
                col: 1,
                r: [3.14, 0, 3.14]
            }, {
                p: [175, 99, -281],
                s: [7, 5, 9],
                c: 6247502,
                t: 11
            }, {
                p: [175, 103, -312],
                s: [6, 10, 17],
                c: 10983566,
                t: 11
            }, {
                p: [166, 65, -337],
                s: [7, 3, 4],
                col: 1,
                c: 4275e3,
                t: 5
            }, {
                p: [165, 65, -348],
                s: [4, 3, 7],
                col: 1,
                c: 4275e3,
                t: 5
            }, {
                p: [175, 107, -246],
                s: [6, 5, 12],
                c: 10983566,
                t: 11
            }, {
                p: [175, 107, -265],
                s: [6, 3, 14],
                c: 10983566,
                t: 11
            }, {
                p: [175, 120, -244],
                s: [9, 5, 4],
                c: 6248017,
                t: 11
            }, {
                p: [165, 65, -237],
                s: [7, 3, 4],
                col: 1,
                c: 4275e3,
                t: 5
            }, {
                p: [183, 65, -300],
                s: [4, 3, 7],
                col: 1,
                c: 4275e3,
                t: 5
            }, {
                p: [167, 65, -280],
                s: [5, 2, 4],
                col: 1,
                c: 4275e3,
                t: 5
            }, {
                p: [48, 64, -271],
                s: [4, 3, 7],
                col: 1,
                c: 4275e3,
                t: 5
            }, {
                p: [102, 64, -277],
                s: [4, 3, 7],
                col: 1,
                c: 4275e3,
                t: 5
            }, {
                p: [229, 64, -224],
                s: [4, 3, 7],
                col: 1,
                c: 4275e3,
                t: 5
            }, {
                p: [267, 129, -347],
                s: [22, 3, 10],
                c: 8220776,
                t: 11
            }, {
                p: [214, 105, -236],
                s: [4, 5, 9],
                c: 10983566,
                t: 11
            }, {
                p: [287, 115, -236],
                s: [23, 5, 12],
                c: 5918536,
                t: 11
            }, {
                p: [237, 115, -236],
                s: [30, 4, 9],
                c: 7563360,
                t: 11
            }, {
                p: [64, 64, -364],
                s: [6, 3, 3],
                col: 1,
                c: 4275e3,
                t: 5
            }, {
                p: [-20, 64, -328],
                s: [4, 3, 7],
                col: 1,
                c: 4275e3,
                t: 5
            }, {
                p: [175, 120, -355],
                s: [9, 5, 6],
                c: 8220776,
                t: 11
            }, {
                p: [176, 77, -363],
                s: [5, 31, 22],
                c: 10983566,
                t: 11
            }, {
                p: [130, 77, -371],
                s: [90, 31, 4],
                col: 1,
                c: 10983566,
                t: 11
            }, {
                p: [68, 77, -371],
                s: [34, 24, 4],
                col: 1,
                c: 10983566,
                t: 11
            }, {
                p: [12, 77, -371],
                s: [78, 27, 4],
                col: 1,
                c: 10983566,
                t: 11
            }, {
                p: [-28, 77, -345],
                s: [5, 29, 58],
                col: 1,
                c: 10983566,
                t: 11
            }, {
                p: [-44, 77, -315],
                s: [27, 29, 4],
                c: 10983566,
                t: 11
            }, {
                p: [-28, 106, -327],
                s: [5, 3, 14],
                col: 1,
                c: 10983566,
                t: 11
            }, {
                p: [-28, 106, -363],
                s: [5, 2, 22],
                col: 1,
                c: 10983566,
                t: 11
            }, {
                p: [-36, 106, -315],
                s: [15, 3, 4],
                c: 10983566,
                t: 11
            }, {
                p: [69, 101, -371],
                s: [16, 3, 4],
                col: 1,
                c: 10983566,
                t: 11
            }, {
                p: [177, 65, -359],
                s: [9, 12, 24],
                c: 6575952,
                t: 11
            }, {
                p: [64, 65, -372],
                s: [220, 12, 8],
                c: 6379602,
                t: 11
            }, {
                p: [-43, 51, -341],
                s: [37, 26, 58],
                c: 6576209,
                t: 11
            }, {
                p: [-29, 77, -317],
                s: [9, 37, 10],
                c: 6247759,
                t: 11
            }, {
                p: [303, 110, -335],
                s: [6, 4, 23],
                c: 10983566,
                t: 11
            }, {
                p: [291, 74, -313],
                s: [7, 3, 4],
                col: 1,
                c: 4275e3,
                t: 5
            }, {
                p: [294, 65, -246],
                s: [4, 3, 7],
                col: 1,
                c: 4275e3,
                t: 5
            }, {
                p: [303, 110, -270],
                s: [6, 4, 24],
                c: 6708310,
                t: 11
            }, {
                p: [182, 65, -263],
                s: [4, 3, 7],
                col: 1,
                c: 4275e3,
                t: 5
            }, {
                p: [294, 65, -335],
                s: [4, 3, 7],
                col: 1,
                c: 4275e3,
                t: 5
            }, {
                p: [270, 65, -339],
                s: [8, 3, 4],
                col: 1,
                c: 4275e3,
                t: 5
            }, {
                p: [303, 123, -340],
                s: [9, 6, 4],
                c: 8220776,
                t: 11
            }, {
                p: [227, 95, -236],
                s: [2, 5, 9],
                c: 10983566,
                t: 11
            }, {
                p: [303, 95, -249],
                s: [6, 5, 2],
                c: 10983566,
                t: 11
            }, {
                p: [303, 101, -263],
                s: [6, 4, 2],
                c: 10983566,
                t: 11
            }, {
                p: [97, 104, -217],
                s: [2, 2, 13],
                col: 1,
                c: 7895160,
                t: 2
            }, {
                p: [97, 97, -218],
                s: [1, 6, 9],
                col: 1,
                c: 7895160,
                t: 2
            }, {
                p: [97, 103, -221],
                s: [1, 1, 1],
                col: 1,
                c: 7895160,
                t: 5
            }, {
                p: [97, 103, -215],
                s: [1, 1, 1],
                col: 1,
                c: 7895160,
                t: 5
            }, {
                p: [112, 64, -218],
                s: [4, 3, 7],
                col: 1,
                c: 4275e3,
                t: 5
            }, {
                p: [-96, 98, -271],
                s: [2, 2, 13],
                col: 1,
                c: 7895160,
                t: 2
            }, {
                p: [-96, 91, -272],
                s: [1, 6, 9],
                col: 1,
                c: 7895160,
                t: 2
            }, {
                p: [-96, 97, -275],
                s: [1, 1, 1],
                col: 1,
                c: 7895160,
                t: 5
            }, {
                p: [-96, 97, -269],
                s: [1, 1, 1],
                col: 1,
                c: 7895160,
                t: 5
            }, {
                p: [-8, 107, 52],
                s: [2, 2, 17],
                col: 1,
                c: 7895160,
                t: 2
            }, {
                p: [-8, 100, 49],
                s: [1, 6, 9],
                col: 1,
                c: 7895160,
                t: 2
            }, {
                p: [-8, 106, 46],
                s: [1, 1, 1],
                col: 1,
                c: 7895160,
                t: 5
            }, {
                p: [-8, 106, 52],
                s: [1, 1, 1],
                col: 1,
                c: 7895160,
                t: 5
            }, {
                p: [-213, 50, -197],
                s: [4, 3, 7],
                col: 1,
                c: 3092271,
                t: 5
            }, {
                p: [-185, 50, -237],
                s: [4, 3, 7],
                col: 1,
                c: 3092271,
                t: 5
            }, {
                p: [-199, 81, -260],
                s: [33, 3, 3],
                c: 8684676,
                t: 2
            }, {
                p: [-181, 53, -260],
                s: [3, 31, 3],
                c: 8684676,
                t: 2
            }, {
                p: [-217, 53, -260],
                s: [3, 31, 3],
                c: 8684676,
                t: 2
            }, {
                p: [130, 108, -371],
                s: [90, 1, 4],
                col: 1,
                t: 5
            }, {
                p: [12, 104, -371],
                s: [78, 1, 4],
                col: 1,
                t: 5
            }, {
                p: [69, 104, -371],
                s: [16, 1, 4],
                col: 1,
                t: 5
            }, {
                p: [175, 125, -355],
                s: [9, 1, 6],
                col: 1,
                t: 5
            }, {
                p: [-28, 106, -343],
                s: [5, 1, 18],
                col: 1,
                t: 5
            }, {
                p: [-28, 108, -363],
                s: [5, 1, 22],
                col: 1,
                t: 5
            }, {
                p: [-28, 109, -327],
                s: [5, 1, 14],
                col: 1,
                t: 5
            }, {
                p: [-38, 109, -315],
                s: [11, 1, 4],
                col: 1,
                t: 5
            }, {
                p: [-50, 106, -315],
                s: [13, 1, 4],
                col: 1,
                t: 5
            }, {
                p: [176, 108, -361],
                s: [5, 1, 25],
                col: 1,
                t: 5
            }, {
                p: [175, 125, -329],
                s: [9, 1, 26],
                col: 1,
                t: 5
            }, {
                p: [175, 133, -347],
                s: [9, 1, 10],
                col: 1,
                t: 5
            }, {
                p: [175, 113, -312],
                s: [6, 1, 17],
                col: 1,
                t: 5
            }, {
                p: [175, 110, -265],
                s: [6, 1, 14],
                col: 1,
                t: 5
            }, {
                p: [175, 112, -245],
                s: [6, 1, 14],
                col: 1,
                t: 5
            }, {
                p: [303, 114, -267],
                s: [6, 1, 18],
                col: 1,
                t: 5
            }, {
                p: [303, 128, -236],
                s: [9, 1, 12],
                col: 1,
                t: 5
            }, {
                p: [199, 124, -236],
                s: [39, 1, 12],
                col: 1,
                t: 5
            }, {
                p: [175, 132, -236],
                s: [9, 1, 12],
                col: 1,
                t: 5
            }, {
                p: [303, 134, -347],
                s: [9, 1, 10],
                col: 1,
                t: 5
            }, {
                p: [292, 129, -347],
                s: [13, 1, 10],
                col: 1,
                t: 5
            }, {
                p: [211, 129, -347],
                s: [63, 1, 10],
                col: 1,
                t: 5
            }, {
                p: [300, 110, -292],
                s: [7, 1, 12],
                col: 1,
                t: 5
            }, {
                p: [300, 107, -301],
                s: [8, 1, 6],
                col: 1,
                t: 5
            }, {
                p: [157, 85, 11],
                s: [10, 20, 1],
                pe: 1,
                v: 1,
                c: 7895160,
                t: 5
            }, {
                p: [56, 85, -2],
                s: [10, 20, 1],
                pe: 1,
                v: 1,
                c: 7895160,
                t: 5
            }, {
                p: [303, 114, -333],
                s: [6, 1, 19],
                col: 1,
                t: 5
            }, {
                p: [303, 129, -340],
                s: [9, 1, 4],
                col: 1,
                t: 5
            }, {
                p: [64, 77, -373],
                s: [220, 78, 8],
                v: 1,
                c: 6379602,
                t: 11
            }, {
                p: [176, 77, -363],
                s: [5, 78, 22],
                v: 1,
                c: 10983566,
                t: 11
            }, {
                p: [175, 103, -334],
                s: [7, 32, 27],
                v: 1,
                c: 10983566,
                t: 11
            }, {
                p: [-28, 93, -343],
                s: [5, 57, 58],
                v: 1,
                c: 10983566,
                t: 11
            }, {
                p: [-43, 99, -315],
                s: [35, 56, 4],
                v: 1,
                c: 10983566,
                t: 11
            }, {
                p: [-193, 87, -329],
                s: [68, 58, 58],
                v: 1,
                c: 7110518,
                t: 10
            }, {
                p: [-108, 112, -356],
                s: [104, 40, 94],
                v: 1,
                c: 8217957,
                t: 10
            }, {
                p: [-258, 108, -288],
                s: [68, 54, 58],
                v: 1,
                c: 8029580,
                t: 10
            }, {
                p: [-186, 121, -212],
                s: [130, 37, 96],
                v: 1,
                c: 8355711,
                t: 11
            }, {
                p: [-72, 106, -212],
                s: [100, 58, 110],
                v: 1,
                c: 8548950,
                t: 10
            }, {
                p: [76, 114, -141],
                s: [86, 62, 144],
                v: 1,
                c: 8878432,
                t: 10
            }, {
                p: [107, 120, -7],
                s: [91, 48, 128],
                v: 1,
                c: 6254184,
                t: 10
            }, {
                p: [158, 109, -129],
                s: [84, 50, 130],
                v: 1,
                c: 8217957,
                t: 10
            }, {
                p: [208, 147, 90],
                s: [142, 74, 90],
                v: 1,
                c: 8215901,
                t: 10
            }, {
                p: [334, 131, 80],
                s: [112, 79, 88],
                v: 1,
                c: 6254184,
                t: 10
            }, {
                p: [413, 113, -6],
                s: [92, 50, 90],
                v: 1,
                c: 8215901,
                t: 10
            }, {
                p: [425, 123, -96],
                s: [92, 71, 94],
                v: 1,
                c: 6973550,
                t: 10
            }, {
                p: [411, 104, -212],
                s: [92, 38, 140],
                v: 1,
                c: 8215901,
                t: 10
            }, {
                p: [336, 122, -302],
                s: [60, 29, 60],
                v: 1,
                c: 6973550,
                t: 10
            }, {
                p: [277, 114, -190],
                s: [90, 63, 89],
                v: 1,
                c: 6254184,
                t: 10
            }, {
                p: [281, 124, -110],
                s: [108, 73, 82],
                v: 1,
                c: 8878432,
                t: 10
            }, {
                p: [263, 113, -43],
                s: [62, 62, 74],
                v: 1,
                c: 6973550,
                t: 10
            }, {
                p: [-77, 121, -96],
                s: [106, 51, 54],
                v: 1,
                c: 6254184,
                t: 10
            }, {
                p: [-101, 114, -20],
                s: [62, 62, 102],
                v: 1,
                c: 6973550,
                t: 10
            }, {
                p: [20, 120, 96],
                s: [118, 53, 82],
                v: 1,
                c: 9342330,
                t: 10
            }, {
                p: [-102, 104, 118],
                s: [130, 50, 96],
                v: 1,
                c: 8215901,
                t: 10
            }, {
                p: [-194, 97, 77],
                s: [58, 55, 65],
                v: 1,
                c: 8878432,
                t: 10
            }, {
                p: [-197, 124, 14],
                s: [76, 72, 72],
                v: 1,
                c: 6320224,
                t: 10
            }, {
                p: [-281, 109, 64],
                s: [98, 58, 82],
                v: 1,
                c: 7558742,
                t: 10
            }, {
                p: [-290, 107, -217],
                s: [82, 56, 82],
                v: 1,
                c: 9342330,
                t: 10
            }, {
                p: [-197, 109, -62],
                s: [58, 57, 82],
                v: 1,
                c: 8878432,
                t: 10
            }, {
                p: [300, 95, -62],
                s: [12, 1, 12],
                col: 1,
                t: 5
            }, {
                p: [296, 90, -25],
                s: [6, 1, 6],
                col: 1,
                t: 5
            }, {
                p: [296, 90, -17],
                s: [6, 1, 6],
                col: 1,
                t: 5
            }, {
                p: [351, 90, 34],
                s: [6, 1, 6],
                col: 1,
                t: 5
            }, {
                p: [375, 72, -139],
                s: [6, 1, 6],
                col: 1,
                t: 5
            }, {
                p: [325, 72, -210],
                s: [6, 1, 6],
                col: 1,
                t: 5
            }, {
                p: [325, 72, -202],
                s: [6, 1, 6],
                col: 1,
                t: 5
            }, {
                p: [102, 72, -291],
                s: [6, 1, 6],
                col: 1,
                t: 5
            }, {
                p: [147, 72, -198],
                s: [6, 1, 6],
                col: 1,
                t: 5
            }, {
                p: [152, 72, -365],
                s: [6, 1, 6],
                col: 1,
                t: 5
            }, {
                p: [145, 72, -365],
                s: [6, 1, 6],
                col: 1,
                t: 5
            }, {
                p: [45, 72, -66],
                s: [6, 1, 6],
                col: 1,
                t: 5
            }, {
                p: [-55, 72, -66],
                s: [6, 1, 6],
                col: 1,
                t: 5
            }, {
                p: [-68, 72, 14],
                s: [6, 1, 6],
                col: 1,
                t: 5
            }, {
                p: [-68, 72, 22],
                s: [6, 1, 6],
                col: 1,
                t: 5
            }, {
                p: [-163, 72, 54],
                s: [6, 1, 6],
                col: 1,
                t: 5
            }, {
                p: [-165, 72, -38],
                s: [6, 1, 6],
                col: 1,
                t: 5
            }, {
                p: [-317, 59, -173],
                s: [6, 1, 6],
                col: 1,
                t: 5
            }, {
                p: [-317, 59, -56],
                s: [6, 1, 6],
                col: 1,
                t: 5
            }, {
                p: [-317, 59, -64],
                s: [6, 1, 6],
                col: 1,
                t: 5
            }, {
                p: [-305, 59, 20],
                s: [6, 1, 6],
                col: 1,
                t: 5
            }, {
                p: [-269, 59, -59],
                s: [6, 1, 6],
                col: 1,
                t: 5
            }, {
                p: [-222, 59, -295],
                s: [6, 1, 6],
                col: 1,
                t: 5
            }, {
                p: [206, 72, -227],
                s: [6, 1, 6],
                col: 1,
                t: 5
            }, {
                p: [206, 72, -220],
                s: [6, 1, 6],
                col: 1,
                t: 5
            }, {
                p: [304, 94, -276],
                s: [5, 32, 25],
                v: 1,
                c: 6708310,
                t: 11
            }, {
                p: [303, 96, -246],
                s: [7, 33, 9],
                v: 1,
                c: 10983566,
                t: 11
            }, {
                p: [227, 96, -236],
                s: [3, 26, 10],
                v: 1,
                c: 10983566,
                t: 11
            }, {
                p: [214, 106, -236],
                s: [5, 17, 10],
                v: 1,
                c: 10983566,
                t: 11
            }, {
                p: [-205, 51, -258],
                s: [3, 2, 4],
                col: 1,
                t: 5
            }, {
                p: [-189, 51, -180],
                s: [4, 2, 8],
                col: 1,
                t: 5
            }, {
                p: [-189, 51, -180],
                s: [4, 2, 8],
                v: 1,
                t: 5
            }, {
                p: [61, 89, -2],
                s: [1, 2, 1],
                pe: 1,
                c: 7895160,
                t: 5
            }, {
                p: [61, 99, -2],
                s: [1, 2, 1],
                pe: 1,
                c: 7895160,
                t: 5
            }, {
                p: [-8, 109, 52],
                s: [2, 1, 17],
                col: 1,
                c: "#ffffff",
                t: 5
            }, {
                p: [-96, 100, -271],
                s: [2, 1, 13],
                col: 1,
                c: "#ffffff",
                t: 5
            }, {
                p: [97, 106, -217],
                s: [2, 1, 13],
                col: 1,
                c: "#ffffff",
                t: 5
            }, {
                p: [-234, 95, 14],
                s: [3, 25, 64],
                v: 1,
                c: 7500402,
                t: 2
            }, {
                p: [55, 72, -215],
                s: [6, 1, 6],
                col: 1,
                t: 5
            }, {
                p: [75, 90, -292],
                s: [3, 16, 3],
                c: 10983566,
                t: 11
            }, {
                p: [75, 99, -292],
                s: [2, 3, 12],
                c: 10983566,
                t: 11
            }, {
                p: [75, 102, -292],
                s: [2, 1, 12],
                col: 1,
                t: 5
            }, {
                p: [75, 106, -292],
                s: [3, 1, 3],
                col: 1,
                t: 5
            }, {
                p: [-276, 53, -16],
                s: [24, 36, 24],
                id: 23,
                col: 1,
                tm: 0
            }, {
                p: [245, 67, -293],
                s: [24, 36, 24],
                id: 23,
                col: 1,
                tm: "1"
            }, {
                p: [97, 97, -217],
                s: [2, 16, 13],
                v: 1,
                c: 7895160,
                t: 2
            }, {
                p: [-28, 77, -345],
                s: [5, 46, 58],
                v: 1,
                c: 10983566,
                t: 11
            }, {
                p: [-151, 51, -212],
                s: [60, 60, 96],
                v: 1,
                c: 8355711,
                t: 11
            }, {
                p: [-96, 91, -271],
                s: [2, 16, 13],
                v: 1,
                c: 7895160,
                t: 2
            }, {
                p: [198, 66, -129],
                s: [5, 69, 4],
                v: 1,
                c: 11513775,
                t: 2
            }, {
                p: [198, 66, -66],
                s: [4, 78, 4],
                v: 1,
                c: 11513775,
                t: 2
            }, {
                p: [179, 82, -65],
                s: [14, 77, 2],
                v: 1,
                c: 11513775,
                t: 2
            }, {
                p: [369, 66, -49],
                s: [4, 94, 4],
                v: 1,
                c: 7895160,
                t: 2
            }, {
                p: [369, 66, 35],
                s: [4, 97, 4],
                v: 1,
                c: 7895160,
                t: 2
            }, {
                p: [-8, 100, 50],
                s: [2, 16, 13],
                v: 1,
                c: 7895160,
                t: 2
            }, {
                p: [64, 66, -2],
                s: [5, 84, 2],
                pe: 1,
                v: 1,
                c: 7895160,
                t: 2
            }, {
                p: [64, 66, -16],
                s: [5, 83, 2],
                pe: 1,
                v: 1,
                c: 7895160,
                t: 2
            }, {
                p: [-41, 95, 65],
                s: [11, 34, 12],
                v: 1,
                c: 6710886,
                t: 11
            }, {
                p: [-199, 83, -212],
                s: [36, 28, 96],
                v: 1,
                c: 8355711,
                t: 11
            }, {
                p: [-234, 51, -212],
                s: [34, 60, 96],
                v: 1,
                c: 8882055,
                t: 11
            }]
        }], a = 0; a < o.length; ++a)
        for (var c = 0; c < o[a].objects.length; ++c) o[a].objects[c].id = n.prefabIDS[o[a].objects[c].id || 0], o[a].objects[c].t = n.textureIDS[o[a].objects[c].t || ("LADDER" == o[a].objects[c].id ? 2 : 0)];
    t.exports.maps = o, t.exports.manager = function(t, e, n, a) {
        var c, l;
        this.manager = new(i(49).manager)(t, n, a), this.maps = o, this.modes = s, this.spawns = [], this.lastGen = null, this.terrain = null, this.deathY = a.deathY, this.setMaps = function(t) {
            this.maps = t || o
        }, this.getRandomMap = function() {
            return n.randInt(0, this.maps.length - 1)
        };
        var p = "";
        this.generate = function(i, s, o) {
            var h = this.maps[i];
            if (h.dthY && n.isNumber(h.dthY) && (this.deathY = h.dthY), t) try {
                mapInfo.innerHTML = s.alias + "_" + h.name, gameMessage.innerHTML = "", curGameInfo.innerHTML = s.name
            } catch (t) {}
            t && p != h.modURL && ((p = h.modURL) && "" != p && loadModPack(p, !0));
            var u = i;
            if (o || this.lastGen !== u) {
                this.lastGen = u, this.manager.removeAll(), t && t.init(h), e && (e.reset(), t.scene.add(e.ExplosionManager)), h.terrainSeed && h.terrainWidth && h.terrainHeight ? (this.terrain = r.fromConfig(h), this.terrain.rotation.x = -Math.PI / 2, t && t.scene.add(this.terrain)) : this.terrain = null;
                for (var d = 0, f = 0, m = 0, g = 0, v = 0; v < h.objects.length; ++v) {
                    var y = (c = h.objects[v]).p[0],
                        x = c.p[1],
                        w = c.p[2];
                    if (c.col || "CUBE" != c.id || (y - c.s[0] < d && (d = y - c.s[0]), y + c.s[0] > f && (f = y + c.s[0]), w - c.s[2] < m && (m = w - c.s[2]), w + c.s[2] > g && (g = w + c.s[2])), "CUBE" == c.id) {
                        for (var b = 1, M = 0; M < h.objects.length; ++M)
                            if ("CUBE" == (l = h.objects[M]).id && c != l && x <= l.p[1] + l.s[1] && x >= l.p[1] && y + c.s[0] / 2 < l.p[0] + l.s[0] / 2 && y - c.s[0] / 2 > l.p[0] - l.s[0] / 2 && w + c.s[2] / 2 < l.p[2] + l.s[2] / 2 && w - c.s[2] / 2 > l.p[2] - l.s[2] / 2) {
                                b = 0;
                                break
                            } this.manager.addBlock(y, x, w, c.s[0], c.s[2], c.s[1], [1, 1, 1, b, 1, 1], {
                            src: c.t.toLowerCase() + "_" + ("GRASS" == c.t ? 1 : 0),
                            colr: c.c,
                            emissive: c.e || 0,
                            opacity: 1 != c.o && null != c.o ? c.o : 1,
                            transparent: 1 != c.o && null != c.o,
                            penetrable: c.pe,
                            health: c.hp,
                            amb: c.a,
                            yR: c.r ? c.r[0] : 0,
                            xR: c.r ? c.r[1] : 0,
                            zR: c.r ? c.r[2] : 0,
                            noCol: c.col,
                            noVis: c.v
                        })
                    } else if ("OBJECTIVE" == c.id) this.manager.addObjective(y, x, w, c.s[0], c.s[2], c.s[1]);
                    else if ("FLAG" == c.id) this.manager.addFlag(y, x, w, parseInt(c.tm || 0) + 1);
                    else if ("PARTICLES" != c.id) "PLANE" == c.id || "BILLBOARD" == c.id ? this.manager.addPlane(y, x, w, c.s[2] / 2, c.s[0] / 2, {
                        src: "BILLBOARD" == c.id ? "pubs/bill_" + n.randInt(1, 4) : c.t.toLowerCase() + "_0",
                        emissive: c.e || 0,
                        noise: c.en || 0,
                        opacity: 1 != c.o && null != c.o ? c.o : 1,
                        penetrable: c.pe,
                        health: c.hp,
                        colr: c.c,
                        col: !c.col,
                        noVis: c.v
                    }, c.r ? c.r[2] : 0, (c.r ? c.r[0] : 0) - Math.PI / 2, c.r ? c.r[1] : 0) : "RAMP" == c.id ? this.manager.addRamp(y, x, w, c.s[0], c.s[1], c.s[2], c.d * Math.PI / 2, c.b, c.t ? c.t.toLowerCase() + "_0" : "grey_0", c.v, c.c, a.ambScale) : "SCORE_ZONE" == c.id ? this.manager.addScoreZone(y, x, w, c.s[0], c.s[2], c.s[1], c.sp || 1) : "DEATH_ZONE" == c.id ? this.manager.addDeathZone(y, x, w, c.s[0], c.s[2], c.s[1]) : "CHECK_POINT" == c.id ? this.manager.addCheckPoint(y, x, w, c.s[0], c.s[2], c.s[1], c.su || !1) : "LADDER" == c.id ? this.manager.addLadder(y, x, w, c.s[1], c.d * Math.PI / 2, c.v, c.t ? c.t.toLowerCase() + "_0" : "floor_0", c.c) : this.manager.addMesh(y, x, w, c.r ? c.r[1] ? c.r[1] : Math.PI : 0, c.s[0] / 2, c.s[1] / 2, c.s[2] / 2, c.id.toLowerCase(), c.col);
                    else if (e) {
                        var S = e.prefabs[parseInt(c.pr || 0)];
                        S.count = Math.round((c.s[0] + c.s[2] + c.s[1]) / S.cnt), e.area(y, x, w, c.s[0], c.s[1], c.s[2], S)
                    }
                }
                if (this.manager.addNoisePlanes(), h.shadLength = Math.round(Math.abs(f - d) / 2.5), h.shadWidth = Math.round(Math.abs(g - m) / 2.5), t && t.updateLightMap(h), this.manager.aoOpac = 1, t) {
                    var _, T = a.ambScale;
                    for (v = 0; v < this.manager.objects.length; ++v)
                        if (!(c = this.manager.objects[v]).noVis && !c.complexMesh && !c.health)
                            for (M = v + 1; M < this.manager.objects.length; ++M)
                                if (!(l = this.manager.objects[M]).noVis && !l.health && !l.complexMesh && this.manager.collision(c, l, 0)) {
                                    if (_ = n.boxIntersection(c, l, "x", "z", [Math.PI, 0, Math.PI / 2, -Math.PI / 2]))
                                        for (var E = 0; E < _.length; ++E)
                                            if (!_[E].dontUse) {
                                                for (var A = n.getIntersection(c, l, "y"), L = T * (c.aoMlt || 1) * (l.aoMlt || 1), k = 0; 2 > k; k++) P = (_[E].d + Math.PI / 2 * k) % (2 * Math.PI), L = Math.min(L, this.manager.limitAmb(T, _[E], P, "x", "z", c, l));
                                                for (k = 0; 2 > k; k++)
                                                    if (P = (_[E].d + Math.PI / 2 * k) % (2 * Math.PI), this.manager.addAmbient(_[E].x + L * Math.cos(P), A.y, _[E].z + L * Math.sin(P), -P + Math.PI, 0, 0, A.height, L + a.ambOff, 1), P == Math.PI / 2 || P == -Math.PI / 2 || P == 1.5 * Math.PI) {
                                                        var R = n.limitRect(_[E].z + L * Math.sin(P), A.y + L + A.height + a.ambOff, L, L, 0, [c, l], "z", "y");
                                                        this.manager.addAmbient(_[E].x + L * Math.cos(P), R.y, R.z, -P + Math.PI, Math.PI, 0, R.length, R.height, 0, [c, l], "g1-" + k + "-" + E, [_[E].x, A.y + A.height, _[E].z]), R = n.limitRect(_[E].z + L * Math.sin(P), A.y - L - A.height - a.ambOff, L, L, 0, [c, l], "z", "y"), this.manager.addAmbient(_[E].x + L * Math.cos(P), R.y, R.z, -P + Math.PI, 0, 0, R.length, R.height, 0, [c, l], "g2-" + k + "-" + E, [_[E].x, A.y - A.height, _[E].z])
                                                    } else {
                                                        R = n.limitRect(_[E].x + L * Math.cos(P), A.y + L + A.height + a.ambOff, L, L, 0, [c, l], "x", "y");
                                                        this.manager.addAmbient(R.x, R.y, _[E].z + L * Math.sin(P), -P + Math.PI, Math.PI, 0, R.width, R.height, 0, [c, l], "g1-" + k + "-" + E, [_[E].x, A.y + A.height, _[E].z]), R = n.limitRect(_[E].x + L * Math.cos(P), A.y - L - A.height - a.ambOff, L, L, 0, [c, l], "x", "y"), this.manager.addAmbient(R.x, R.y, _[E].z + L * Math.sin(P), -P + Math.PI, 0, 0, R.width, R.height, 0, [c, l], "g2-" + k + "-" + E, [_[E].x, A.y - A.height, _[E].z])
                                                    }
                                            } if (_ = n.boxIntersection(c, l, "z", "y", [Math.PI, 0, -Math.PI / 2, Math.PI / 2]))
                                        for (E = 0; E < _.length; ++E)
                                            if (!_[E].dontUse) {
                                                for (A = n.getIntersection(c, l, "x"), L = T * (c.aoMlt || 1) * (l.aoMlt || 1), k = 0; 2 > k; k++) P = _[E].d + Math.PI / 2 * (k ? 0 : 1), L = Math.min(L, this.manager.limitAmb(T, _[E], -P + Math.PI / 2, "z", "y", c, l));
                                                for (k = 0; 2 > k; k++) {
                                                    P = _[E].d + Math.PI / 2 * (k ? 0 : 1), this.manager.addAmbient(A.x, _[E].y + L * Math.cos(P), _[E].z + L * Math.sin(P), 0, P, -Math.PI / 2, A.width, L + a.ambOff, 1);
                                                    R = n.limitRect(A.x + A.width + L + a.ambOff, _[E].z + L * Math.sin(P), L, L, 0, [c, l], "x", "z");
                                                    this.manager.addAmbient(R.x, _[E].y + L * Math.cos(P), _[E].z + L * Math.sin(P), Math.PI, P == Math.PI ? P : -P % Math.PI, P == 1.5 * Math.PI ? 0 : -Math.PI / 2, P == 1.5 * Math.PI ? L : R.length, P == 1.5 * Math.PI ? R.length : L, 0, [c, l], "g3-" + k + "-" + E, [A.x + A.width, _[E].y, _[E].z]), R = n.limitRect(A.x - A.width - L - a.ambOff, _[E].z + L * Math.sin(P), L, L, Math.PI / 2, [c, l], "x", "z"), this.manager.addAmbient(R.x, _[E].y + L * Math.cos(P), _[E].z + L * Math.sin(P), Math.PI, -P % Math.PI, P == Math.PI || P == 1.5 * Math.PI ? Math.PI / 2 : Math.PI, P == Math.PI || P == 1.5 * Math.PI ? R.width : L, P == Math.PI || P == 1.5 * Math.PI ? L : R.width, 0, [c, l], "g4-" + k + "-" + E, [A.x - A.width, _[E].y, _[E].z])
                                                }
                                            } if (_ = n.boxIntersection(c, l, "x", "y", [Math.PI, 0, -Math.PI / 2, Math.PI / 2]))
                                        for (E = 0; E < _.length; ++E)
                                            if (!_[E].dontUse) {
                                                for (A = n.getIntersection(c, l, "z"), L = T * (c.aoMlt || 1) * (l.aoMlt || 1), k = 0; 2 > k; k++) P = _[E].d + Math.PI / 2 * (k ? 0 : 1), L = Math.min(L, this.manager.limitAmb(T, _[E], -P + Math.PI / 2, "x", "y", c, l));
                                                var P;
                                                for (k = 0; 2 > k; k++)
                                                    if (P = _[E].d + Math.PI / 2 * (k ? 0 : 1), this.manager.addAmbient(_[E].x + L * Math.sin(P), _[E].y + L * Math.cos(P), A.z, Math.PI / 2, P, -Math.PI / 2, A.length, L + a.ambOff, 1), P == Math.PI || 0 == P) {
                                                        R = n.limitRect(_[E].z + L * Math.sin(P), A.z + A.length + L + a.ambOff, L, L, Math.PI / 2, [c, l], "x", "z");
                                                        this.manager.addAmbient(_[E].x + L * Math.sin(P), _[E].y + L * Math.cos(P), R.z, Math.PI / 2, P, -Math.PI / 2, R.length, R.width, 0, [c, l], "g5-" + k + "-" + E, [_[E].x, _[E].y, A.z + A.length]), R = n.limitRect(_[E].z + L * Math.sin(P), A.z - A.length - L - a.ambOff, L, L, Math.PI / 2, [c, l], "x", "z"), this.manager.addAmbient(_[E].x + L * Math.sin(P), _[E].y + L * Math.cos(P), R.z, Math.PI / 2, P, Math.PI, R.width, R.length, 0, [c, l], "g6-" + k + "-" + E, [_[E].x, _[E].y, A.z - A.length])
                                                    } else {
                                                        R = n.limitRect(_[E].x + L * Math.sin(P), A.z + A.length + L + a.ambOff, L, L, Math.PI / 2, [c, l], "x", "z");
                                                        this.manager.addAmbient(R.x, _[E].y + L * Math.cos(P), R.z, Math.PI / 2, P, -Math.PI / 2, R.length, R.width, 0, [c, l], "g5-" + k + "-" + E, [_[E].x, _[E].y, A.z + A.length]), R = n.limitRect(_[E].x + L * Math.sin(P), A.z - A.length - L - a.ambOff, L, L, Math.PI / 2, [c, l], "x", "z"), this.manager.addAmbient(R.x, _[E].y + L * Math.cos(P), R.z, Math.PI / 2, P, Math.PI, R.width, R.length, 0, [c, l], "g6-" + k + "-" + E, [_[E].x, _[E].y, A.z - A.length])
                                                    }
                                            }
                                } this.manager.addPendingAOs()
                }
                this.spawns.length = 0;
                for (v = 0; v < h.spawns.length; ++v) this.spawns.push({
                    x: h.spawns[v][0],
                    y: h.spawns[v][1],
                    z: h.spawns[v][2],
                    team: h.spawns[v][3]
                });
                t && t.addMeshGroups()
            }
            this.manager.resetAll()
        }
    }
}, function(t, e, i) {
    var n, r = i(2),
        s = i(1),
        o = i(44);
    t.exports = function(e, r, s) {
        e.ImageUtils.crossOrigin = "";
        var a = i(22),
            c = new e.LoadingManager,
            l = new e.OBJLoader(c);
        this.cubeGeo = new e.BoxGeometry(1, 1, 1), this.getCubeMesh = function() {
            return new e.Mesh(this.cubeGeo)
        };
        var p = new e.PlaneGeometry(1, 1);
        new e.CylinderGeometry(.1, 1, 1, 4, 1, !1, Math.PI / 4).computeFlatVertexNormals();
        var h = new e.TextureLoader,
            u = new e.MeshBasicMaterial({
                color: 16777215
            }),
            d = new e.MeshBasicMaterial({
                color: 65280
            }),
            f = {},
            m = {},
            g = {};
        this.movTextures = [];
        var v, y = this,
            x = {};
        this.frustum = new e.Frustum;
        var w = new e.Matrix4;
        this.camera = new e.PerspectiveCamera(0, window.innerWidth / window.innerHeight, .1, 8e3), this.fpsCamera = new e.PerspectiveCamera(s.fov, window.innerWidth / window.innerHeight, .1, 8e3), this.fpsCamera.layers.set(1), this.camera.add(this.fpsCamera), this.weaponLean = 1, this.init = function(i) {
            this.scene = new e.Scene, this.backgroundScene = new e.Scene, i.skyDome && (this.skyDome = o.fromConfig(i), this.backgroundScene.add(this.skyDome)), t.exports.initScene.call(this, i), this.sunPlane = this.addPlane(0, 5e3, -4500, 750, 750, {
                src: "sun_0",
                noFog: !0,
                transparent: !0,
                mat: e.MeshBasicMaterial,
                noGroup: !0
            }, 0, r.getDirection(-4500, 5e3, 0, 0)), this.initShaders()
        };
        var b = 0;
        this.flash = function(t, e) {
            flashOverlay.style.display = "block", flashOverlay.style.left = 100 * t + "%", flashOverlay.style.top = 100 * (1 - e) + "%", b = 1
        }, this.updateLightMap = function(t) {
            this.skyLight && (this.skyLight.shadow.camera.right = t.shadWidth, this.skyLight.shadow.camera.left = -t.shadWidth, this.skyLight.shadow.camera.top = t.shadLength, this.skyLight.shadow.camera.bottom = -t.shadLength)
        }, this.useDepthMap = 0, this.toggleDepthMap = function(i) {
            if (this.useDepthMap = i, this.scene) {
                var r = i && "0" != i;
                this.scene.overrideMaterial = r ? u : null, r ? (this.scene.fog = new e.Fog(0, 0, i), this.renderer.setClearColor(0)) : t.exports.initScene.call(this, n)
            }
        }, this.greenScreen = !1, this.updateGreenScreen = function(t) {
            y.greenScreen && !t.noGreen ? (t.realMat = t.material, t.material = d) : t.material = t.realMat || t.material
        }, this.toggleGreenscreen = function(t) {
            this.greenScreen = t, this.scene && (t ? (this.renderer.setClearColor(65280), this.scene.fog.near = .1, this.scene.fog.far = 0) : (this.scene.fog.near = 1, this.scene.fog.far = n.fogD, this.renderer.setClearColor(n.sky)), this.scene.traverse(function(t) {
                y.updateGreenScreen(t)
            }))
        }, this.renderer = new e.WebGLRenderer({
            precision: "mediump",
            powerPreference: "high-performance",
            antialias: !1,
            alpha: !0
        }), this.renderer.shadowMap.enabled = !0, this.renderer.shadowMap.autoUpdate = !1, this.renderer.shadowMap.type = e.BasicShadowMap, this.renderer.setPixelRatio(window.devicePixelRatio), this.renderer.setSize(window.innerWidth, window.innerHeight), this.renderer.autoClear = !1, document.body.appendChild(this.renderer.domElement), this.updateShadowMap = function() {
            this.renderer.shadowMap.needsUpdate = !0
        }, window.effectComposer, this.bloomPass, this.postprocessing = {
            enabled: !0
        }, this.initShaders = function() {
            var t = new e.RenderPass(this.scene, this.camera);
            this.bloomPass = new e.UnrealBloomPass(new e.Vector2(window.innerWidth, window.innerHeight), 1.5, .4, .85), this.bloomPass.renderToScreen = !0, this.bloomPass.strength = this.postprocessing.bloomStrength, this.bloomPass.radius = this.postprocessing.bloomRadius, this.bloomPass.threshold = this.postprocessing.bloomTresh, window.effectComposer = new e.EffectComposer(this.renderer), window.effectComposer.addPass(t), window.effectComposer.addPass(this.bloomPass), this.resizeShaders()
        }, this.resizeShaders = function() {
            if (this.bloomPass && this.bloomPass.setSize(window.innerWidth, window.innerHeight), window.effectComposer) {
                var t = this.renderer.getPixelRatio(),
                    e = Math.floor(window.innerWidth / t) || 1,
                    i = Math.floor(window.innerHeight / t) || 1;
                window.effectComposer.setSize(e, i)
            }
        }, this.zoom = function(t) {
            this.camera.fov = this.fov / t, this.camera.updateProjectionMatrix(), this.fpsCamera.fov = this.fpsFov / t, this.fpsCamera.updateProjectionMatrix()
        }, this.setFPSFov = function(t) {
            this.fpsFov = t, this.fpsCamera.fov = t, this.fpsCamera.updateProjectionMatrix()
        }, this.setFPSFov(s.fov), this.setFov = function(t) {
            this.fov = t, this.camera.fov = t, this.camera.updateProjectionMatrix()
        }, this.setFov(s.fov), this.resize = function() {
            this.camera.aspect = window.innerWidth / window.innerHeight, this.camera.updateProjectionMatrix(), this.fpsCamera.aspect = window.innerWidth / window.innerHeight, this.fpsCamera.updateProjectionMatrix(), this.renderer.setSize(window.innerWidth, window.innerHeight), this.resizeShaders()
        }, this.setResMlt = function(t) {
            this.renderer.setPixelRatio(window.devicePixelRatio * t), this.renderer.setSize(window.innerWidth, window.innerHeight)
        }, this.updateFrustum = function() {
            this.frustum.setFromMatrix(w.multiplyMatrices(this.camera.projectionMatrix, this.camera.matrixWorldInverse))
        };
        var M = 0,
            S = 0;
        this.shakeX = 0, this.shakeY = 0, this.updateShake = function(t) {
            M && (M *= Math.pow(.99, t), S += r.randFloat(-Math.PI, Math.PI), this.shakeX = Math.cos(S) * M, this.shakeY = Math.sin(S) * M, .01 >= M && (M = 0, this.shakeX = this.shakeY = 0))
        }, this.shake = function(t) {
            M = t
        }, this.render = function(t) {
            if (this.scene) {
                for (var e = 0; e < this.movTextures.length; ++e)(v = this.movTextures[e]).tex.offset.x += v.mov * t;
                this.postprocessing.enabled ? window.effectComposer.render() : (this.renderer.clear(), this.skyDome && (this.camera.getWorldPosition(this.skyDome.position), this.renderer.render(this.backgroundScene, this.camera), this.renderer.clearDepth()), this.renderer.render(this.scene, this.camera), this.renderer.clearDepth(), this.renderer.render(this.scene, this.fpsCamera)), "none" != flashOverlay.style.display && (0 >= b && (b = 0, flashOverlay.style.display = "none"), b -= t), this.updateShake(t)
            }
        }, this.updateTexture = function(t, i) {
            var n = g[t];
            n ? n.image = i : (n = new e.Texture(i), g[t] = n), n.needsUpdate = !0
        }, this.loadTexture = function(t, i, n, r) {
            return g[i] ? g[i].mats ? g[i].mats.push({
                t: r,
                m: t
            }) : (t[r || "map"] = g[i], t.needsUpdate = !0) : (g[i] = {
                mats: [{
                    t: r,
                    m: t
                }]
            }, n = n || {}, h.load("/textures/" + i + ".png", t => {
                t.wrapS = e.RepeatWrapping, t.wrapT = e.RepeatWrapping, t.repeat.set(n.repeatX || 1, n.repeatY || 1), t.minFilter = n.tFilter || e.NearestFilter, t.magFilter = n.tFilter || e.NearestFilter, t.needsUpdate = !0;
                for (var r = 0; r < g[i].mats.length; ++r) g[i].mats[r].m[g[i].mats[r].t || "map"] = t, g[i].mats[r].m.needsUpdate = !0;
                g[i] = t, n.movT && this.movTextures.push({
                    tex: t,
                    mov: n.movT
                })
            })), t
        }, this.getMat = function(t, i) {
            var n = (i && i.texSrc || t) + (i ? (i.rotation || "x") + (i.noFog || "y") + (i.opacity || "z") + (i.color || "b") + (i.ao || "a") + (i.emissive || "e") + (i.glowText || "g") + (null == i.depthWrite ? "d" : i.depthWrite) : ""),
                r = m[n];
            return r || (r = new((i = i || {}).mat ? i.mat : e.MeshLambertMaterial)(i), t && "default" != t && this.loadTexture(r, i.texSrc || t, i), i && i.emissive && this.loadTexture(r, (i.glowText && i.texSrc || t) + (i.sameGlow ? "" : "_e"), i, "emissiveMap"), i && i.ao && (this.loadTexture(r, t + "_ao", i, "aoMap"), r.aoMapIntensity = 1.3), i && i.normal && this.loadTexture(r, t + "_n", i, "normalMap"), "default" == t && (r.vertexColors = e.VertexColors), i && i.noFog && (r.fog = !1), m[n] = r), r
        }, this.offsetMesh = function(t, e) {
            t.translateZ(e)
        }, this.genColorCube = function(t, i, n, r, s) {
            for (var o = "", c = 0; c < r.length; ++c) o += r[c] + "_";
            var l = f[o];
            if (!l) {
                l = new e.Geometry;
                var p = .5 + (s || 0);
                for (c = 0; c < r.length;) {
                    var h = r[c + 1],
                        u = new e.BoxGeometry(1 * (4 == c ? .9 : 1), h, 1 * (4 == c ? .9 : 1));
                    a.colorize(u, r[c]);
                    var d = new e.Mesh(u);
                    this.moveMesh(d, 0, p - h / 2, 0), this.merge(l, d), p -= h, c += 2
                }
                f[o] = l
            }
            d = new e.Mesh(l, this.getMat("default"));
            return this.scaleMesh(d, t, i, n), d
        };
        var _ = {};
        this.genBody = function(t, i, n, r) {
            var o = _[t];
            if (!o) {
                o = new e.Geometry;
                var a = s.playerHeight - s.headScale - s.legHeight,
                    c = this.genColorCube(s.chestWidth, a, s.chestScale, [t, .8, i, .2]);
                this.moveMesh(c, 0, a / 2, 0), this.merge(o, c);
                var l = this.genColorCube(s.headScale, s.headScale, s.headScale, [n, .2, r, .8]);
                this.moveMesh(l, 0, s.playerHeight - s.headScale / 2 - s.legHeight, 0), this.merge(o, l), _[t] = o
            }
            var p = new e.Mesh(o, this.getMat("default"));
            return p.receiveShadow = !0, p.noGreen = !0, p
        };
        var T = {};
        this.genLeg = function(t, i, n, r) {
            var o = s.legScale,
                a = null;
            if (r) {
                var c = i + "-" + (r || "");
                if (!(a = T[c])) {
                    var l = s.legHeight / 2,
                        p = o / 2,
                        h = [.5, 2],
                        u = this.genColorCube(o, l, o, [i, 1]);
                    this.moveMesh(u, 0, -l / 2 * Math.cos(h[1]), -l / 2 * Math.sin(h[1])), this.rotateMesh(u, 0, h[1], 0);
                    var d = Math.sqrt(p * p + p * p - 2 * p * p * Math.cos(h[0] - h[1])),
                        f = 2 * Math.sqrt(p * p - d / 2 * (d / 2)),
                        m = this.genColorCube(o, d, f, [i, 1]);
                    this.moveMesh(m, 0, -l * Math.cos(h[1]), -l * Math.sin(h[1])), this.rotateMesh(m, 0, (h[1] + h[0]) / 2, 0);
                    var g = this.genColorCube(o, l, o, [i, .5, n, .5]);
                    this.moveMesh(g, 0, -l * Math.cos(h[1]) - l / 2 * Math.cos(h[0]), -l * Math.sin(h[1]) - l / 2 * Math.sin(h[0])), this.rotateMesh(g, 0, h[0], 0);
                    a = new e.Geometry;
                    this.merge(a, u), this.merge(a, m), this.merge(a, g), T[c] = a
                }
                a = new e.Mesh(a, this.getMat("default")), this.moveMesh(a, s.legScale / 2 * (t ? -1 : 1), s.legHeight - s.crouchDst + .5, 0)
            } else a = this.genColorCube(o, s.legHeight, o, [i, .75, n, .25], -.5), this.moveMesh(a, s.legScale / 2 * (t ? -1 : 1), s.legHeight, 0);
            return a.receiveShadow = !0, a.noGreen = !0, a
        };
        var E = {};
        this.genArms = function(t, i, n, r, o, a) {
            var c = E[t.name + "-" + n + "-" + a + "-" + (o || 0)];
            if (!c) {
                c = new e.Geometry;
                var l = (-s.chestWidth + s.armScale / 2 - s.armInset) * (a ? t.holdW || .4 : 1);
                o && 1 != o || this.merge(c, this.genArm(l, s.armOff, t, !0, i, n, r, a)), o && 2 != o || this.merge(c, this.genArm(-l, s.armOff, t, !1, i, n, r, a)), E[t.name + "-" + n + "-" + a + "-" + (o || 0)] = c
            }
            return (c = new e.Mesh(c, this.getMat("default"))).noGreen = !0, c.receiveShadow = !0, c
        }, this.genArm = function(t, i, n, o, a, c, l, p) {
            var h = o ? n.leftHoldY : n.rightHoldY,
                u = o ? n.leftHoldZ : n.rightHoldZ,
                d = o ? n.leftHoldX || 0 : n.rightHoldX || 0,
                f = s.armScale * (p ? .7 : 1),
                m = Math.min(s.uArmLength + s.lArmLength - .01, r.getDistance3D(t, i, 0, (n.xOff - d) * (o && n.akimbo ? -1 : 1), n.yOff + h, n.zOff - u)),
                g = r.getAnglesSSS(m, s.uArmLength, s.lArmLength),
                v = Math.PI / 2;
            if (!p) {
                var y = this.genColorCube(f, s.uArmLength, f, [a, 1]);
                this.moveMesh(y, 0, -s.uArmLength / 2 * Math.cos(v), -s.uArmLength / 2 * Math.sin(v)), this.rotateMesh(y, 0, v, 0);
                var x = f / 2,
                    w = Math.sqrt(x * x + x * x - 2 * x * x * Math.cos(Math.PI + g[0] + Math.PI / 2)),
                    b = 2 * Math.sqrt(x * x - w / 2 * (w / 2)),
                    M = this.genColorCube(f, w, b, [a, 1]);
                this.moveMesh(M, 0, -s.uArmLength * Math.cos(v), -s.uArmLength * Math.sin(v)), this.rotateMesh(M, 0, (v + g[0]) / 2, 0)
            }
            var S = this.genColorCube(f, s.lArmLength, f, [a, .65, c, .15, l, .2]),
                _ = s.lArmLength / 2;
            this.moveMesh(S, 0, -s.uArmLength * Math.cos(v) - _ * Math.cos(g[0]), -s.uArmLength * Math.sin(v) - _ * Math.sin(g[0])), this.rotateMesh(S, 0, g[0], 0);
            var T = new e.Geometry;
            if (p) {
                var E = this.genColorCube(f, 20, f, [a, 1]);
                this.moveMesh(E, 0, -s.uArmLength * Math.cos(v) - -10 * Math.cos(g[0]), -s.uArmLength * Math.sin(v) - -10 * Math.sin(g[0])), this.rotateMesh(E, 0, g[0], 0), this.merge(T, E)
            } else this.merge(T, y), this.merge(T, M);
            return this.merge(T, S), T = new e.Mesh(T), this.moveMesh(T, t - n.xOff, i - n.yOff, -n.zOff), T.rotation.order = "YXZ", T.rotation.x = -g[1] - r.getDirection(0, i, n.zOff - u, n.yOff + h), T.rotation.y = r.getDirection(-t, 0, (o && n.akimbo ? 1 : -1) * (n.xOff - d), n.zOff - u) - Math.PI / 2, T
        }, this.addCube = function(t, i, n, r, s, o, c, l) {
            l = l || {};
            var p = new e.Mesh(a.generateCube(c, r, s, o, l));
            return this.moveMesh(p, t, i, n), p.rotation.set(l.yR || 0, l.xR || 0, l.zR || 0), p.scale.set(r, s, o), l.src && !l.noGroup ? this.meshGroup(p, l) : this.add(p, l), p
        };
        var A = [];
        this.addSpray = function(t, i, n, o, a, c, l, h) {
            v = null;
            for (var u = 0; u < A.length; ++u)
                if (A[u].sid == t) {
                    v = A[u];
                    break
                } v || ((v = new e.Mesh(p)).sid = t, v.scale.set(s.sprayScale, s.sprayScale, 1), v.receiveShadow = !0, A.push(v), this.add(v)), this.moveMesh(v, n, o, a), v.rotation.y = r.toRad(c), v.rotation.x = r.toRad(l), v.material = this.getMat("sprays/" + i, {
                depthWrite: !1,
                opacity: h,
                transparent: !0
            })
        }, this.clearSprays = function() {
            for (var t = 0; t < A.length; ++t) A[t] && A[t].material.map && A[t].material.map.dispose(), this.scene.remove(A[t]);
            A.length = 0
        }, this.addPlane = function(t, i, n, r, s, o, c, l, p) {
            (o = o || {}).premultipliedAlpha = !0;
            var h = new e.Mesh(a.generatePlane(s, r, o, t, i, n));
            return o.euler && (h.rotation.order = o.euler), this.moveMesh(h, t, i, n), h.rotateY(c || 0), h.rotateX((l || 0) - Math.PI / 2), h.rotateZ(p || 0), h.scale.set(2 * r, 2 * s, 1), o.dontAdd ? o.src && (h.material = this.getMat(o.src, o)) : o.src && !o.noGroup ? this.meshGroup(h, o, 1) : this.add(h, o), h
        }, this.addRamp = function(t, i, n, r, s, o, c, l, p) {
            l = l || {};
            var h = new e.Mesh(a.generatePlane(2 * o, r, l));
            this.moveMesh(h, t, i + s / 2, n), o *= 2;
            var u = Math.sqrt(s * s + o * o);
            return h.scale.set(r, u, 2), h.rotateY(-Math.PI / 2 - c), h.rotateX(Math.asin(s / u) - Math.PI / 2), h.rotateZ(p || 0), l.src ? this.meshGroup(h, l, 1) : this.add(h, l), h
        }, this.addGrass = function(t, i, n, r, s, o, c) {
            c = c || {};
            let l = new e.Geometry,
                p = 2 * Math.PI * Math.random(),
                h = new e.Mesh(a.generatePlane(r, s, c));
            h.rotateY(p * (Math.PI / 2)), this.merge(l, h);
            let u = new e.Mesh(a.generatePlane(r, s, c));
            u.rotateY((p + 1) * (Math.PI / 2)), this.merge(l, u);
            let d = new e.Mesh(l);
            return this.moveMesh(d, t, i + s / 2, n), d.rotation.set(c.yR || 0, c.xR || 0, c.zR || 0), d.scale.set(r, s, o), c.src && !c.noGroup ? this.meshGroup(d, c) : this.add(d, c), d
        };
        var L = [],
            k = [];
        this.loadMesh = function(t, i, n, r, s, o, a, c) {
            var p = this.getMat(t.src, t),
                h = L[t.src];
            if (h) {
                if (t.centerZ) {
                    h.computeBoundingBox();
                    var u = h.boundingBox.getCenter();
                    a.translateZ(u.x * o)
                }
            } else h = c ? new e.Geometry : new e.BufferGeometry, L[t.src] = h, l.load("/models/" + t.src + ".obj", function(i) {
                if (i.children[0].geometry.computeVertexNormals(), h.copy(c ? (new e.Geometry).fromBufferGeometry(i.children[0].geometry) : i.children[0].geometry), t.uv2 && h.addAttribute("uv2", new e.BufferAttribute(h.attributes.uv.array, 2)), c) {
                    for (var n = new e.Geometry, r = 0; r < k[t.src].length; ++r) y.merge(n, k[t.src][r]);
                    y.add(new e.Mesh(n, p), t), k[t.src].loaded = !0
                }
                if (t.centerZ) {
                    h.computeBoundingBox();
                    var s = h.boundingBox.getCenter();
                    a.translateZ(s.x * o)
                }
            });
            var d = new e.Mesh(h, p);
            return d.receiveShadow = !t.noShadow, d.noGreen = t.noGreen, d.castShadow = t.shadows, d.rotation.y = s || 0, y.moveMesh(d, i, n, r), y.scaleMesh(d, o || 1, o || 1, o || 1), c ? k[t.src] ? k[t.src].loaded ? this.meshGroup(d, t) : k[t.src].push(d) : k[t.src] = [d] : a.add(d), d
        }, this.updateMesh = function(t, i) {
            var n = l.parse(i),
                r = new e.BufferGeometry;
            L[t] = r, n.children[0].geometry.computeVertexNormals(), r.copy(n.children[0].geometry), r.needsUpdate = !0
        }, this.genObj3D = function(t, i, n) {
            var r = new e.Object3D;
            return this.moveMesh(r, t || 0, i || 0, n || 0), r
        }, this.merge = function(t, e, i) {
            e.updateMatrix(), t.merge(e.geometry, e.matrix, i)
        }, this.meshGroup = function(t, i) {
            var n = i.src + "-" + (i.shadowsR || "a") + (i.emissive || "e") + (i.opacity || "o");
            x[n] || (x[n] = new e.Geometry, x[n].data = i), t.updateMatrix(), x[n].merge(t.geometry, t.matrix)
        }, this.addMeshGroups = function() {
            for (var t in x)
                if (x.hasOwnProperty(t)) {
                    var i = new e.Mesh((new e.BufferGeometry).fromGeometry(x[t]));
                    i.groupSrc = x[t].data.src, i.visible = !R[i.groupSrc], i.matrixAutoUpdate = !1, this.add(i, x[t].data)
                } x = {}
        };
        var R = {};
        this.toggleMeshGroup = function(t, i) {
            R[t] = !i, this.scene && this.scene.traverse(function(n) {
                n instanceof e.Mesh && n.groupSrc == t && (n.visible = i)
            })
        }, this.add = function(t, e) {
            e && (t.castShadow = e.shadows, t.receiveShadow = e.shadows || e.shadowsR, t.material = this.getMat(e.src, e)), this.updateGreenScreen(t), this.scene.add(t), this.updateShadowMap()
        }, this.remove = function(t) {
            this.scene.remove(t)
        }, this.moveMesh = function(t, e, i, n) {
            null != e && (t.position.x = e), null != i && (t.position.y = i), null != n && (t.position.z = n)
        }, this.scaleMesh = function(t, e, i, n) {
            t.scale.set(e, i, n)
        }, this.rotateMesh = function(t, e, i, n) {
            (e || 0 == e) && (t.rotation.y = e), (i || 0 == i) && (t.rotation.x = i), (n || 0 == n) && (t.rotation.z = n)
        }, this.reset = function() {
            L = [], k = [], x = {}, m = {}, g = {}, this.movTextures = []
        }
    }, t.exports.initScene = function(t) {
        if (n = t, t.ambient && (this.ambientLight = new s.AmbientLight(t.ambient), this.ambientLight.layers.enable(1), this.ambientLight.name = "ambLight", !this.scene.getObjectByName("ambLight") && this.scene.add(this.ambientLight)), t.light) {
            this.skyLight = new s.DirectionalLight(t.light, 1.2), this.skyLight.name = "skyLight", this.skyLight.layers.enable(1), this.scene.getObjectByName("skyLight") || this.scene.add(this.skyLight);
            var e = -.3 * Math.PI,
                i = 2 * Math.PI * -.25;
            this.skyLight.position.x = r.lightDistance * Math.cos(i), this.skyLight.position.y = r.lightDistance * Math.sin(i) * Math.sin(e), this.skyLight.position.z = r.lightDistance * Math.sin(i) * Math.cos(e), this.skyLight.castShadow = !0, this.skyLight.shadow.mapSize.width = t.shadowR || r.shadowRes, this.skyLight.shadow.mapSize.height = t.shadowR || r.shadowRes, this.skyLight.shadow.camera.far = r.shadowDst
        }
        this.scene.fog = new s.Fog(t.fog, 1, t.fogD), this.renderer.setClearColor(t.sky), this.useDepthMap && "0" != this.useDepthMap && this.toggleDepthMap(this.useDepthMap), this.greenScreen && this.toggleGreenscreen(this.greenScreen)
    }
}, function(t, e, i) {
    const n = i(1),
        r = new n.MeshBasicMaterial({
            color: 16777215,
            flatShading: !1,
            vertexColors: n.VertexColors,
            side: n.BackSide
        }),
        s = 32,
        o = !0,
        a = "y",
        c = [{
            stp: 0,
            col: null
        }, {
            stp: .5,
            col: null
        }, {
            stp: 1,
            col: null
        }];
    class l extends n.Object3D {
        static fromConfig(t) {
            return new l(t.skyDomeCol0, t.skyDomeCol1, t.skyDomeCol2)
        }
        constructor(t, e, i) {
            super(), c[0].col = new n.Color(t || "#3FB1B7"), c[1].col = new n.Color(e || "#6FE1CD"), c[2].col = new n.Color(i || "#FFFFFF");
            let l = new n.SphereGeometry(50, s, s);
            l.computeBoundingBox();
            let p = l.boundingBox,
                h = (new n.Vector3).subVectors(p.max, p.min),
                u = ["a", "b", "c"],
                d = new n.Vector3,
                f = 0;
            for (let t, e = 0; e < c.length - 1; e++) {
                t = c[e + 1].stp - c[e].stp;
                for (let i, n = 0; n < l.faces.length; n++) {
                    i = l.faces[n];
                    for (var m = 0; 3 > m; m++) f = d.subVectors(l.vertices[i[u[m]]], p.min).divide(h)[a], o && (f = 1 - f), f >= c[e].stp && f <= c[e + 1].stp && (i.vertexColors[m] = c[e].col.clone().lerp(c[e + 1].col, (f - c[e].stp) / t))
                }
            }
            l.computeVertexNormals(!0), l.computeFaceNormals(), this.baseMesh = new n.Mesh(l, r), this.baseMesh.doubleSided = !1, this.add(this.baseMesh)
        }
    }
    t.exports = l
}, function(t, e, i) {
    const n = i(1),
        r = (i(3), i(47)),
        s = i(48).easing,
        o = new n.MeshLambertMaterial({
            color: 9211020,
            flatShading: !1,
            vertexColors: n.VertexColors
        }),
        a = {
            GRASS: 0,
            MOUNTAIN: 1
        },
        c = Object.keys(a).length,
        l = {
            [a.GRASS]: [56, 226, 102],
            [a.MOUNTAIN]: [160, 160, 160]
        },
        p = {
            DIRT: [140, 104, 53],
            GRASS: [155, 186, 46],
            MOUNTAIN: [160, 160, 160]
        },
        h = t => t.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i, (t, e, i, n) => "#" + e + e + i + i + n + n).substring(1).match(/.{2}/g).map(t => parseInt(t, 16)),
        u = 60,
        d = 3;
    class f extends n.Object3D {
        static fromConfig(t) {
            return new f(t.terrainSeed, t.terrainWidth, t.terrainHeight, t.sizeMlt, t.terrainMntMlt, t.terrainDrtCol, t.terrainGrsCol, t.terrainMntCol)
        }
        constructor(t, e, i, s, a, l, f, m) {
            super(), s = d, this.sizeMlt = s, this.sizeX = e, this.sizeY = i, this.edgeSize = 500, this.mntMlt = a, p.DIRT = h(l), p.MOUNTAIN = h(m), p.GRASS = h(f), this.simplex = new r(t);
            let g = Math.floor(e / u),
                v = Math.floor(i / u);
            this.xSegmentCount = g, this.ySegmentCount = v;
            let y = e / g,
                x = i / v;
            this.xSegmentSize = y, this.ySegmentSize = x;
            let w = new n.BufferGeometry,
                b = g * v * 6,
                M = new n.BufferAttribute(new Float32Array(3 * b), 3);
            w.addAttribute("position", M);
            let S = new n.BufferAttribute(new Uint8Array(3 * b), 3, !0);
            w.addAttribute("color", S), this.vertPositions = M, this.terrainPoints = (g + 1) * (v + 1), this.terrainHeights = new Float32Array(this.terrainPoints), this.terrainBiomes = new Float32Array(this.terrainPoints * c);
            for (let t = 0; t < g + 1; t++)
                for (let n = 0; n < v + 1; n++) {
                    let r = t + n * (g + 1),
                        s = this._vertPos(t, y, e),
                        o = this._vertPos(n, x, i),
                        [a, l] = this.evaluate(s, o);
                    this.terrainHeights[r] = a, this.terrainBiomes.set(l, r * c)
                }
            for (let t = 0; t < g; t++)
                for (let n = 0; n < v; n++) {
                    let r = 6 * (t + n * g),
                        s = this._vertPos(t, y, e),
                        o = this._vertPos(n, x, i),
                        a = [s, o, this.terrainHeight(t, n)],
                        c = [s + y, o, this.terrainHeight(t + 1, n)],
                        l = [s + y, o + x, this.terrainHeight(t + 1, n + 1)],
                        p = [s, o + x, this.terrainHeight(t, n + 1)],
                        h = this.calcAOWeight(t, n),
                        u = this.calcAOWeight(t + 1, n),
                        d = this.calcAOWeight(t + 1, n + 1),
                        f = this.calcAOWeight(t, n + 1);
                    M.setXYZ(r, ...a), M.setXYZ(r + 1, ...c), M.setXYZ(r + 2, ...l), M.setXYZ(r + 3, ...l), M.setXYZ(r + 4, ...p), M.setXYZ(r + 5, ...a);
                    let m = this._centroid3D(a, c, l),
                        v = this._centroid3D(l, p, a),
                        w = this._normal3D(a, c, l),
                        b = this._normal3D(l, p, a),
                        _ = this.terrainBiomeAt(m),
                        T = this.terrainBiomeAt(v),
                        E = this.evaluateColor(m, w, _),
                        A = this.evaluateColor(v, b, T);
                    S.setXYZ(r, ...this._weightColor(E, h)), S.setXYZ(r + 1, ...this._weightColor(E, u)), S.setXYZ(r + 2, ...this._weightColor(E, d)), S.setXYZ(r + 3, ...this._weightColor(A, d)), S.setXYZ(r + 4, ...this._weightColor(A, f)), S.setXYZ(r + 5, ...this._weightColor(A, h))
                }
            w.computeVertexNormals(!0), w.computeFaceNormals(), this.baseMesh = new n.Mesh(w, o), this.baseMesh.scale.set(s, s, 1), this.add(this.baseMesh), this._raycastRay = new n.Ray, this._raycastTriA = new n.Vector3, this._raycastTriB = new n.Vector3, this._raycastTriC = new n.Vector3, this._raycastTriangle = new n.Triangle, this._raycastNormal = new n.Vector3, this._raycastTarget = new n.Vector3, this._raycastClosestTarget = new n.Vector3
        }
        terrainIndex(t, e) {
            let i = t + e * (this.xSegmentCount + 1);
            return 0 > i || i >= this.terrainHeights.length ? 0 : i
        }
        terrainHeight(t, e) {
            return this.terrainHeights[this.terrainIndex(t, e)]
        }
        terrainBiome(t, e) {
            let i = this.terrainIndex(t, e) * c;
            return this.terrainBiomes.slice(i, i + c)
        }
        terrainBiomeAt(t, e) {
            let i = Math.floor(t / this.xSegmentSize),
                n = Math.ceil(t / this.xSegmentSize),
                r = Math.floor(e / this.ySegmentSize),
                s = Math.ceil(e / this.ySegmentSize);
            return (this.terrainBiome(i, r) + this.terrainBiome(n, r) + this.terrainBiome(i, s) + this.terrainBiome(n, s)) / 4
        }
        calcAOWeight(t, e) {
            let i = this._vertPos(t, this.xSegmentSize, this.sizeX),
                n = this._vertPos(e, this.ySegmentSize, this.sizeY),
                r = this._topAngleOnTerrain(i - this.xSegmentSize, this.terrainHeight(t - 1, e), i, this.terrainHeight(t, e), i + this.xSegmentSize, this.terrainHeight(t + 1, e)),
                s = this._topAngleOnTerrain(n - this.xSegmentSize, this.terrainHeight(t, e - 1), n, this.terrainHeight(t, e), n + this.ySegmentSize, this.terrainHeight(t, e + 1)),
                o = Math.PI,
                a = 1 - (1 - Math.max(o - r, 0) / o) * (1 - Math.max(o - s, 0) / o);
            return .5 <= a ? a = .65 : .2 <= a ? a = .3 : .1 <= a && (a = .25), a
        }
        _worldToLocal(t, e, i) {
            return (t + e / 2) / i
        }
        raycast(t, e, i, n, r, s, o = !1) {
            t /= this.sizeMlt, e /= this.sizeMlt, n /= this.sizeMlt, r /= this.sizeMlt;
            let a = Math.sqrt(n * n + r * r + s * s);
            this._raycastRay.origin.set(t, e, i), this._raycastRay.direction.set(n, r, s);
            let c, l, p, h = this._worldToLocal(t, this.sizeX, this.xSegmentSize),
                u = this._worldToLocal(e, this.sizeY, this.ySegmentSize),
                d = h + n / this.xSegmentSize,
                f = u + r / this.ySegmentSize,
                m = Math.abs(d - h),
                g = Math.abs(f - u),
                v = Math.floor(h),
                y = Math.floor(u),
                x = 1;
            for (0 == m ? (c = 0, p = Number.POSITIVE_INFINITY) : d > h ? (c = 1, x += Math.floor(d) - v, p = (Math.floor(h) + 1 - h) * g) : (c = -1, x += v - Math.floor(d), p = (h - Math.floor(h)) * g), 0 == g ? (l = 0, p -= Number.POSITIVE_INFINITY) : f > u ? (l = 1, x += Math.floor(f) - y, p -= (Math.floor(u) + 1 - u) * m) : (l = -1, x += y - Math.floor(f), p -= (u - Math.floor(u)) * m); 0 < x; x--) {
                if (this._raycastVisit(v, y, t, e, i, n, r, s, a, o)) {
                    let t = this._raycastClosestTarget;
                    return t.x *= this.sizeMlt, t.y *= this.sizeMlt, t
                }
                0 < p ? (y += l, p -= m) : (v += c, p += g)
            }
        }
        _raycastVisit(t, e, i, n, r, s, o, a, c, l) {
            let p = t + e * this.xSegmentCount,
                h = Number.POSITIVE_INFINITY,
                u = !1;
            for (let t, e = 0; 2 > e; e++) {
                t = 6 * p + 3 * e, this._raycastTriA.set(this.vertPositions.getX(t), this.vertPositions.getY(t), this.vertPositions.getZ(t)), this._raycastTriB.set(this.vertPositions.getX(t + 1), this.vertPositions.getY(t + 1), this.vertPositions.getZ(t + 1)), this._raycastTriC.set(this.vertPositions.getX(t + 2), this.vertPositions.getY(t + 2), this.vertPositions.getZ(t + 2));
                let i = this._raycastRay.intersectTriangle(this._raycastTriA, this._raycastTriB, this._raycastTriC, !0, this._raycastTarget);
                if (i) {
                    let t = i.distanceTo(this._raycastRay.origin);
                    t < h && t < c && (h = t, u = !0, this._raycastClosestTarget.copy(i), this._raycastTriangle.set(this._raycastTriA, this._raycastTriB, this._raycastTriC))
                }
            }
            return l && u && this._raycastTriangle.getNormal(this._raycastNormal), u
        }
        evaluate(t, e) {
            let i = 0;
            this.sampleIndex = 0;
            let n = [];
            for (let i = 0; i < c; i++) n.push(this._sample(t, e, 1300));
            let r = n.reduce((t, e) => t + e, 0);
            n = (n = n.map((t, e) => [e, t / r])).sort((t, e) => e[1] - t[1]);
            let s = {},
                [o, l] = n[0];
            s[o] = this._easeTerrain(l / (l + n[1][1]));
            for (let t = 1; t < n.length; t++) {
                let [e, i] = n[t];
                s[e] = this._easeTerrain(i / (l + i))
            }
            let p = this._sample(t, e, 300);
            i += 25 * (p = Math.floor(3 * p) / 3) * s[a.GRASS] * this.sizeMlt;
            let h = .4 + .3 * this._sample(t, e, 200);
            i += (1 - 2 * Math.abs(h - this._sample(t, e, 500))) * (.4 + 1.4 * this._sample(t, e, 400)) * (220 * this.mntMlt) * s[a.MOUNTAIN] * this.sizeMlt;
            let u = this._calcEdgeFade(t, this.sizeX) * this._calcEdgeFade(e, this.sizeY);
            return i *= u, i += 2e3 * (u - 1), (Math.abs(t) >= this.sizeX / 2 || Math.abs(e) >= this.sizeY / 2) && (i = -1e3), [i, s]
        }
        evaluateColor(t, e, i) {
            let n, r = t[2],
                s = Math.atan2(Math.abs(e[0]), Math.abs(e[2])),
                o = Math.atan2(Math.abs(e[1]), Math.abs(e[2]));
            return n = .85 >= (1 - s / (2 * Math.PI)) * (1 - o / (2 * Math.PI)) ? p.MOUNTAIN : 100 < r ? p.MOUNTAIN : 5 < r ? p.GRASS : p.DIRT
        }
        _sample(t, e, i) {
            return this.sampleIndex++, this.simplex.noise3D(t / i, e / i, 1e4 * this.sampleIndex) / 2 + .5
        }
        _easeTerrain(t) {
            return s.easeInOutQuint(s.easeInOutQuint(t))
        }
        _calcEdgeFade(t, e) {
            if (Math.abs(t) >= e / 2) return 0;
            let i = (Math.abs(t) - e / 2 + this.edgeSize) / this.edgeSize;
            return i = 1 - Math.max(i, 0), s.easeOutQuint(i)
        }
        _blendColors(t) {
            let e = Object.values(t).reduce((t, e) => t + e, 0),
                i = [0, 0, 0];
            for (let n in t) {
                let r = l[n],
                    s = t[n] / e;
                for (let t = 0; 3 > t; t++) i[t] += r[t] * s
            }
            return i
        }
        _vertPos(t, e, i) {
            return t * e - i / 2
        }
        _avgPos(t, e) {
            return [(t[0] + e[0]) / 2, (t[1] + e[1]) / 2, (t[2] + e[2]) / 2]
        }
        _centroid3D(t, e, i) {
            return [(t[0] + e[0] + i[0]) / 3, (t[1] + e[1] + i[1]) / 3, (t[2] + e[2] + i[2]) / 3]
        }
        _normal3D(t, e, i) {
            let n = i[0] - e[0],
                r = i[1] - e[1],
                s = i[2] - e[2],
                o = t[0] - e[0],
                a = t[1] - e[1],
                c = t[2] - e[2],
                l = r * c - s * a,
                p = s * o - n * c,
                h = n * a - r * o,
                u = Math.sqrt(l * l + p * p + h + h);
            return [l / u, p / u, h / u]
        }
        _topAngleOnTerrain(t, e, i, n, r, s) {
            let o = Math.atan2(e - n, t - i),
                a = Math.atan2(s - n, r - i);
            return 0 > o && (o += 2 * Math.PI), o - a
        }
        _weightColor(t, e) {
            return t.map(t => t * (1 - e))
        }
    }
    t.exports = f
}, function(t, e) {
    t.exports = function(t) {
        return function() {
            function e() {
                var t = {
                    objects: [],
                    object: {},
                    vertices: [],
                    normals: [],
                    colors: [],
                    uvs: [],
                    materialLibraries: [],
                    startObject: function(t, e) {
                        if (this.object && !1 === this.object.fromDeclaration) return this.object.name = t, void(this.object.fromDeclaration = !1 !== e);
                        var i = this.object && "function" == typeof this.object.currentMaterial ? this.object.currentMaterial() : void 0;
                        if (this.object && "function" == typeof this.object._finalize && this.object._finalize(!0), this.object = {
                                name: t || "",
                                fromDeclaration: !1 !== e,
                                geometry: {
                                    vertices: [],
                                    normals: [],
                                    colors: [],
                                    uvs: []
                                },
                                materials: [],
                                smooth: !0,
                                startMaterial: function(t, e) {
                                    var i = this._finalize(!1);
                                    i && (i.inherited || 0 >= i.groupCount) && this.materials.splice(i.index, 1);
                                    var n = {
                                        index: this.materials.length,
                                        name: t || "",
                                        mtllib: Array.isArray(e) && 0 < e.length ? e[e.length - 1] : "",
                                        smooth: void 0 === i ? this.smooth : i.smooth,
                                        groupStart: void 0 === i ? 0 : i.groupEnd,
                                        groupEnd: -1,
                                        groupCount: -1,
                                        inherited: !1,
                                        clone: function(t) {
                                            var e = {
                                                index: "number" == typeof t ? t : this.index,
                                                name: this.name,
                                                mtllib: this.mtllib,
                                                smooth: this.smooth,
                                                groupStart: 0,
                                                groupEnd: -1,
                                                groupCount: -1,
                                                inherited: !1
                                            };
                                            return e.clone = this.clone.bind(e), e
                                        }
                                    };
                                    return this.materials.push(n), n
                                },
                                currentMaterial: function() {
                                    return 0 < this.materials.length ? this.materials[this.materials.length - 1] : void 0
                                },
                                _finalize: function(t) {
                                    var e = this.currentMaterial();
                                    if (e && -1 === e.groupEnd && (e.groupEnd = this.geometry.vertices.length / 3, e.groupCount = e.groupEnd - e.groupStart, e.inherited = !1), t && 1 < this.materials.length)
                                        for (var i = this.materials.length - 1; 0 <= i; i--) 0 >= this.materials[i].groupCount && this.materials.splice(i, 1);
                                    return t && 0 === this.materials.length && this.materials.push({
                                        name: "",
                                        smooth: this.smooth
                                    }), e
                                }
                            }, i && i.name && "function" == typeof i.clone) {
                            var n = i.clone(0);
                            n.inherited = !0, this.object.materials.push(n)
                        }
                        this.objects.push(this.object)
                    },
                    finalize: function() {
                        this.object && "function" == typeof this.object._finalize && this.object._finalize(!0)
                    },
                    parseVertexIndex: function(t, e) {
                        var i = parseInt(t, 10);
                        return 3 * (0 <= i ? i - 1 : i + e / 3)
                    },
                    parseNormalIndex: function(t, e) {
                        var i = parseInt(t, 10);
                        return 3 * (0 <= i ? i - 1 : i + e / 3)
                    },
                    parseUVIndex: function(t, e) {
                        var i = parseInt(t, 10);
                        return 2 * (0 <= i ? i - 1 : i + e / 2)
                    },
                    addVertex: function(t, e, i) {
                        var n = this.vertices,
                            r = this.object.geometry.vertices;
                        r.push(n[t + 0], n[t + 1], n[t + 2]), r.push(n[e + 0], n[e + 1], n[e + 2]), r.push(n[i + 0], n[i + 1], n[i + 2])
                    },
                    addVertexPoint: function(t) {
                        var e = this.vertices;
                        this.object.geometry.vertices.push(e[t + 0], e[t + 1], e[t + 2])
                    },
                    addVertexLine: function(t) {
                        var e = this.vertices;
                        this.object.geometry.vertices.push(e[t + 0], e[t + 1], e[t + 2])
                    },
                    addNormal: function(t, e, i) {
                        var n = this.normals,
                            r = this.object.geometry.normals;
                        r.push(n[t + 0], n[t + 1], n[t + 2]), r.push(n[e + 0], n[e + 1], n[e + 2]), r.push(n[i + 0], n[i + 1], n[i + 2])
                    },
                    addColor: function(t, e, i) {
                        var n = this.colors,
                            r = this.object.geometry.colors;
                        r.push(n[t + 0], n[t + 1], n[t + 2]), r.push(n[e + 0], n[e + 1], n[e + 2]), r.push(n[i + 0], n[i + 1], n[i + 2])
                    },
                    addUV: function(t, e, i) {
                        var n = this.uvs,
                            r = this.object.geometry.uvs;
                        r.push(n[t + 0], n[t + 1]), r.push(n[e + 0], n[e + 1]), r.push(n[i + 0], n[i + 1])
                    },
                    addUVLine: function(t) {
                        var e = this.uvs;
                        this.object.geometry.uvs.push(e[t + 0], e[t + 1])
                    },
                    addFace: function(t, e, i, n, r, s, o, a, c) {
                        var l = this.vertices.length,
                            p = this.parseVertexIndex(t, l),
                            h = this.parseVertexIndex(e, l),
                            u = this.parseVertexIndex(i, l);
                        if (this.addVertex(p, h, u), void 0 !== n && "" !== n) {
                            var d = this.uvs.length;
                            p = this.parseUVIndex(n, d), h = this.parseUVIndex(r, d), u = this.parseUVIndex(s, d), this.addUV(p, h, u)
                        }
                        if (void 0 !== o && "" !== o) {
                            var f = this.normals.length;
                            p = this.parseNormalIndex(o, f), h = o === a ? p : this.parseNormalIndex(a, f), u = o === c ? p : this.parseNormalIndex(c, f), this.addNormal(p, h, u)
                        }
                        0 < this.colors.length && this.addColor(p, h, u)
                    },
                    addPointGeometry: function(t) {
                        this.object.geometry.type = "Points";
                        for (var e = this.vertices.length, i = 0, n = t.length; i < n; i++) this.addVertexPoint(this.parseVertexIndex(t[i], e))
                    },
                    addLineGeometry: function(t, e) {
                        this.object.geometry.type = "Line";
                        for (var i = this.vertices.length, n = this.uvs.length, r = 0, s = t.length; r < s; r++) this.addVertexLine(this.parseVertexIndex(t[r], i));
                        var o = 0;
                        for (s = e.length; o < s; o++) this.addUVLine(this.parseUVIndex(e[o], n))
                    }
                };
                return t.startObject("", !1), t
            }

            function i(e) {
                this.manager = void 0 === e ? t.DefaultLoadingManager : e, this.materials = null
            }
            var n = /^[og]\s*(.+)?/,
                r = /^mtllib /,
                s = /^usemtl /;
            return i.prototype = {
                constructor: i,
                load: function(e, i, n, r) {
                    var s = this,
                        o = new t.FileLoader(s.manager);
                    o.setPath(this.path), o.load(e, function(t) {
                        i(s.parse(t))
                    }, n, r)
                },
                setPath: function(t) {
                    return this.path = t, this
                },
                setMaterials: function(t) {
                    return this.materials = t, this
                },
                parse: function(i) {
                    console.time("OBJLoader");
                    var o = new e; - 1 !== i.indexOf("\r\n") && (i = i.replace(/\r\n/g, "\n")), -1 !== i.indexOf("\\\n") && (i = i.replace(/\\\n/g, ""));
                    for (var a = i.split("\n"), c = "", l = "", p = [], h = "function" == typeof "".trimLeft, u = 0, d = a.length; u < d; u++)
                        if (c = a[u], 0 !== (c = h ? c.trimLeft() : c.trim()).length && "#" !== (l = c.charAt(0)))
                            if ("v" === l) {
                                var f = c.split(/\s+/);
                                switch (f[0]) {
                                    case "v":
                                        o.vertices.push(parseFloat(f[1]), parseFloat(f[2]), parseFloat(f[3])), 8 === f.length && o.colors.push(parseFloat(f[4]), parseFloat(f[5]), parseFloat(f[6]));
                                        break;
                                    case "vn":
                                        o.normals.push(parseFloat(f[1]), parseFloat(f[2]), parseFloat(f[3]));
                                        break;
                                    case "vt":
                                        o.uvs.push(parseFloat(f[1]), parseFloat(f[2]))
                                }
                            } else if ("f" === l) {
                        for (var m, g = c.substr(1).trim().split(/\s+/), v = [], y = 0, x = g.length; y < x; y++)
                            if (0 < (m = g[y]).length) {
                                var w = m.split("/");
                                v.push(w)
                            } var b = v[0];
                        for (y = 1, x = v.length - 1; y < x; y++) {
                            var M = v[y],
                                S = v[y + 1];
                            o.addFace(b[0], M[0], S[0], b[1], M[1], S[1], b[2], M[2], S[2])
                        }
                    } else if ("l" === l) {
                        var _ = c.substring(1).trim().split(" "),
                            T = [],
                            E = [];
                        if (-1 === c.indexOf("/")) T = _;
                        else
                            for (var A, L = 0, k = _.length; L < k; L++) "" !== (A = _[L].split("/"))[0] && T.push(A[0]), "" !== A[1] && E.push(A[1]);
                        o.addLineGeometry(T, E)
                    } else if ("p" === l) {
                        var R = c.substr(1).trim().split(" ");
                        o.addPointGeometry(R)
                    } else if (null !== (p = n.exec(c))) {
                        var P = (" " + p[0].substr(1).trim()).substr(1);
                        o.startObject(P)
                    } else if (s.test(c)) o.object.startMaterial(c.substring(7).trim(), o.materialLibraries);
                    else if (r.test(c)) o.materialLibraries.push(c.substring(7).trim());
                    else {
                        if ("s" !== l) {
                            if ("\0" === c) continue;
                            throw new Error('THREE.OBJLoader: Unexpected line: "' + c + '"')
                        }
                        if (1 < (p = c.split(" ")).length) {
                            var C = p[1].trim().toLowerCase();
                            o.object.smooth = "0" !== C && "off" !== C
                        } else o.object.smooth = !0;
                        (Y = o.object.currentMaterial()) && (Y.smooth = o.object.smooth)
                    }
                    o.finalize();
                    var I = new t.Group;
                    I.materialLibraries = [].concat(o.materialLibraries);
                    for (u = 0, d = o.objects.length; u < d; u++) {
                        var O = o.objects[u],
                            D = O.geometry,
                            B = O.materials,
                            z = "Line" === D.type,
                            N = "Points" === D.type,
                            U = !1;
                        if (0 !== D.vertices.length) {
                            var F, H = new t.BufferGeometry;
                            H.addAttribute("position", new t.Float32BufferAttribute(D.vertices, 3)), 0 < D.normals.length ? H.addAttribute("normal", new t.Float32BufferAttribute(D.normals, 3)) : H.computeVertexNormals(), 0 < D.colors.length && (U = !0, H.addAttribute("color", new t.Float32BufferAttribute(D.colors, 3))), 0 < D.uvs.length && H.addAttribute("uv", new t.Float32BufferAttribute(D.uvs, 2));
                            for (var j = [], G = 0, V = B.length; G < V; G++) {
                                var W = B[G],
                                    Y = void 0;
                                if (null !== this.materials)
                                    if (Y = this.materials.create(W.name), !z || !Y || Y instanceof t.LineBasicMaterial) {
                                        if (N && Y && !(Y instanceof t.PointsMaterial)) {
                                            var X = new t.PointsMaterial({
                                                size: 10,
                                                sizeAttenuation: !1
                                            });
                                            q.copy(Y), Y = X
                                        }
                                    } else {
                                        var q = new t.LineBasicMaterial;
                                        q.copy(Y), q.lights = !1, Y = q
                                    } Y || ((Y = z ? new t.LineBasicMaterial : N ? new t.PointsMaterial({
                                    size: 1,
                                    sizeAttenuation: !1
                                }) : new t.MeshPhongMaterial).name = W.name), Y.flatShading = !W.smooth, Y.vertexColors = U ? t.VertexColors : t.NoColors, j.push(Y)
                            }
                            if (1 < j.length) {
                                for (G = 0, V = B.length; G < V; G++) W = B[G], H.addGroup(W.groupStart, W.groupCount, G);
                                F = z ? new t.LineSegments(H, j) : N ? new t.Points(H, j) : new t.Mesh(H, j)
                            } else F = z ? new t.LineSegments(H, j[0]) : N ? new t.Points(H, j[0]) : new t.Mesh(H, j[0]);
                            F.name = O.name, I.add(F)
                        }
                    }
                    return console.timeEnd("OBJLoader"), I
                }
            }, i
        }()
    }
}, function(t, e, i) {
    var n;
    ! function() {
        "use strict";

        function r(t) {
            var e;
            e = "function" == typeof t ? t : t ? o(t) : Math.random, this.p = s(e), this.perm = new Uint8Array(512), this.permMod12 = new Uint8Array(512);
            for (var i = 0; 512 > i; i++) this.perm[i] = this.p[255 & i], this.permMod12[i] = this.perm[i] % 12
        }

        function s(t) {
            var e, i = new Uint8Array(256);
            for (e = 0; 256 > e; e++) i[e] = e;
            for (e = 0; 255 > e; e++) {
                var n = e + ~~(t() * (256 - e)),
                    r = i[e];
                i[e] = i[n], i[n] = r
            }
            return i
        }

        function o() {
            var t = 0,
                e = 0,
                i = 0,
                n = 1,
                r = function() {
                    var t = 4022871197;
                    return function(e) {
                        e = e.toString();
                        for (var i = 0; i < e.length; i++) {
                            var n = .02519603282416938 * (t += e.charCodeAt(i));
                            n -= t = n >>> 0, t = (n *= t) >>> 0, t += 4294967296 * (n -= t)
                        }
                        return 2.3283064365386963e-10 * (t >>> 0)
                    }
                }();
            t = r(" "), e = r(" "), i = r(" ");
            for (var s = 0; s < arguments.length; s++) 0 > (t -= r(arguments[s])) && (t += 1), 0 > (e -= r(arguments[s])) && (e += 1), 0 > (i -= r(arguments[s])) && (i += 1);
            return r = null,
                function() {
                    var r = 2091639 * t + 2.3283064365386963e-10 * n;
                    return t = e, e = i, i = r - (n = 0 | r)
                }
        }
        var a = .5 * (Math.sqrt(3) - 1),
            c = (3 - Math.sqrt(3)) / 6,
            l = 1 / 6,
            p = (Math.sqrt(5) - 1) / 4,
            h = (5 - Math.sqrt(5)) / 20;
        r.prototype = {
            grad3: new Float32Array([1, 1, 0, -1, 1, 0, 1, -1, 0, -1, -1, 0, 1, 0, 1, -1, 0, 1, 1, 0, -1, -1, 0, -1, 0, 1, 1, 0, -1, 1, 0, 1, -1, 0, -1, -1]),
            grad4: new Float32Array([0, 1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1, 0, -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1, 1, 0, 1, 1, 1, 0, 1, -1, 1, 0, -1, 1, 1, 0, -1, -1, -1, 0, 1, 1, -1, 0, 1, -1, -1, 0, -1, 1, -1, 0, -1, -1, 1, 1, 0, 1, 1, 1, 0, -1, 1, -1, 0, 1, 1, -1, 0, -1, -1, 1, 0, 1, -1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, -1, 1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1, 0, -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1, 0]),
            noise2D: function(t, e) {
                var i, n, r = this.permMod12,
                    s = this.perm,
                    o = this.grad3,
                    l = 0,
                    p = 0,
                    h = 0,
                    u = (t + e) * a,
                    d = Math.floor(t + u),
                    f = Math.floor(e + u),
                    m = (d + f) * c,
                    g = t - (d - m),
                    v = e - (f - m);
                g > v ? (i = 1, n = 0) : (i = 0, n = 1);
                var y = g - i + c,
                    x = v - n + c,
                    w = g - 1 + 2 * c,
                    b = v - 1 + 2 * c,
                    M = 255 & d,
                    S = 255 & f,
                    _ = .5 - g * g - v * v;
                if (0 <= _) {
                    var T = 3 * r[M + s[S]];
                    l = (_ *= _) * _ * (o[T] * g + o[T + 1] * v)
                }
                var E = .5 - y * y - x * x;
                if (0 <= E) {
                    var A = 3 * r[M + i + s[S + n]];
                    p = (E *= E) * E * (o[A] * y + o[A + 1] * x)
                }
                var L = .5 - w * w - b * b;
                if (0 <= L) {
                    var k = 3 * r[M + 1 + s[S + 1]];
                    h = (L *= L) * L * (o[k] * w + o[k + 1] * b)
                }
                return 70 * (l + p + h)
            },
            noise3D: function(t, e, i) {
                var n, r, s, o, a, c, p, h, u, d, f = this.permMod12,
                    m = this.perm,
                    g = this.grad3,
                    v = (t + e + i) * (1 / 3),
                    y = Math.floor(t + v),
                    x = Math.floor(e + v),
                    w = Math.floor(i + v),
                    b = (y + x + w) * l,
                    M = t - (y - b),
                    S = e - (x - b),
                    _ = i - (w - b);
                M >= S ? S >= _ ? (a = 1, c = 0, p = 0, h = 1, u = 1, d = 0) : M >= _ ? (a = 1, c = 0, p = 0, h = 1, u = 0, d = 1) : (a = 0, c = 0, p = 1, h = 1, u = 0, d = 1) : S < _ ? (a = 0, c = 0, p = 1, h = 0, u = 1, d = 1) : M < _ ? (a = 0, c = 1, p = 0, h = 0, u = 1, d = 1) : (a = 0, c = 1, p = 0, h = 1, u = 1, d = 0);
                var T = M - a + l,
                    E = S - c + l,
                    A = _ - p + l,
                    L = M - h + 2 * l,
                    k = S - u + 2 * l,
                    R = _ - d + 2 * l,
                    P = M - 1 + .5,
                    C = S - 1 + .5,
                    I = _ - 1 + .5,
                    O = 255 & y,
                    D = 255 & x,
                    B = 255 & w,
                    z = .6 - M * M - S * S - _ * _;
                if (0 > z) n = 0;
                else {
                    var N = 3 * f[O + m[D + m[B]]];
                    n = (z *= z) * z * (g[N] * M + g[N + 1] * S + g[N + 2] * _)
                }
                var U = .6 - T * T - E * E - A * A;
                if (0 > U) r = 0;
                else {
                    var F = 3 * f[O + a + m[D + c + m[B + p]]];
                    r = (U *= U) * U * (g[F] * T + g[F + 1] * E + g[F + 2] * A)
                }
                var H = .6 - L * L - k * k - R * R;
                if (0 > H) s = 0;
                else {
                    var j = 3 * f[O + h + m[D + u + m[B + d]]];
                    s = (H *= H) * H * (g[j] * L + g[j + 1] * k + g[j + 2] * R)
                }
                var G = .6 - P * P - C * C - I * I;
                if (0 > G) o = 0;
                else {
                    var V = 3 * f[O + 1 + m[D + 1 + m[B + 1]]];
                    o = (G *= G) * G * (g[V] * P + g[V + 1] * C + g[V + 2] * I)
                }
                return 32 * (n + r + s + o)
            },
            noise4D: function(t, e, i, n) {
                var r, s, o, a, c, l, u, d, f, m, g, v, y, x, w, b, M, S = this.perm,
                    _ = this.grad4,
                    T = (t + e + i + n) * p,
                    E = Math.floor(t + T),
                    A = Math.floor(e + T),
                    L = Math.floor(i + T),
                    k = Math.floor(n + T),
                    R = (E + A + L + k) * h,
                    P = t - (E - R),
                    C = e - (A - R),
                    I = i - (L - R),
                    O = n - (k - R),
                    D = 0,
                    B = 0,
                    z = 0,
                    N = 0;
                P > C ? D++ : B++, P > I ? D++ : z++, P > O ? D++ : N++, C > I ? B++ : z++, C > O ? B++ : N++, I > O ? z++ : N++;
                var U = P - (l = 3 <= D ? 1 : 0) + h,
                    F = C - (u = 3 <= B ? 1 : 0) + h,
                    H = I - (d = 3 <= z ? 1 : 0) + h,
                    j = O - (f = 3 <= N ? 1 : 0) + h,
                    G = P - (m = 2 <= D ? 1 : 0) + 2 * h,
                    V = C - (g = 2 <= B ? 1 : 0) + 2 * h,
                    W = I - (v = 2 <= z ? 1 : 0) + 2 * h,
                    Y = O - (y = 2 <= N ? 1 : 0) + 2 * h,
                    X = P - (x = 1 <= D ? 1 : 0) + 3 * h,
                    q = C - (w = 1 <= B ? 1 : 0) + 3 * h,
                    Z = I - (b = 1 <= z ? 1 : 0) + 3 * h,
                    K = O - (M = 1 <= N ? 1 : 0) + 3 * h,
                    J = P - 1 + 4 * h,
                    Q = C - 1 + 4 * h,
                    $ = I - 1 + 4 * h,
                    tt = O - 1 + 4 * h,
                    et = 255 & E,
                    it = 255 & A,
                    nt = 255 & L,
                    rt = 255 & k,
                    st = .6 - P * P - C * C - I * I - O * O;
                if (0 > st) r = 0;
                else {
                    var ot = S[et + S[it + S[nt + S[rt]]]] % 32 * 4;
                    r = (st *= st) * st * (_[ot] * P + _[ot + 1] * C + _[ot + 2] * I + _[ot + 3] * O)
                }
                var at = .6 - U * U - F * F - H * H - j * j;
                if (0 > at) s = 0;
                else {
                    var ct = S[et + l + S[it + u + S[nt + d + S[rt + f]]]] % 32 * 4;
                    s = (at *= at) * at * (_[ct] * U + _[ct + 1] * F + _[ct + 2] * H + _[ct + 3] * j)
                }
                var lt = .6 - G * G - V * V - W * W - Y * Y;
                if (0 > lt) o = 0;
                else {
                    var pt = S[et + m + S[it + g + S[nt + v + S[rt + y]]]] % 32 * 4;
                    o = (lt *= lt) * lt * (_[pt] * G + _[pt + 1] * V + _[pt + 2] * W + _[pt + 3] * Y)
                }
                var ht = .6 - X * X - q * q - Z * Z - K * K;
                if (0 > ht) a = 0;
                else {
                    var ut = S[et + x + S[it + w + S[nt + b + S[rt + M]]]] % 32 * 4;
                    a = (ht *= ht) * ht * (_[ut] * X + _[ut + 1] * q + _[ut + 2] * Z + _[ut + 3] * K)
                }
                var dt = .6 - J * J - Q * Q - $ * $ - tt * tt;
                if (0 > dt) c = 0;
                else {
                    var ft = S[et + 1 + S[it + 1 + S[nt + 1 + S[rt + 1]]]] % 32 * 4;
                    c = (dt *= dt) * dt * (_[ft] * J + _[ft + 1] * Q + _[ft + 2] * $ + _[ft + 3] * tt)
                }
                return 27 * (r + s + o + a + c)
            }
        }, r._buildPermutationTable = s, void 0 !== (n = function() {
            return r
        }.call(e, i, e, t)) && (t.exports = n), e.SimplexNoise = r, t.exports = r
    }()
}, function(t, e) {
    t.exports.easing = {
        linear: function(t) {
            return t
        },
        easeInQuad: function(t) {
            return t * t
        },
        easeOutQuad: function(t) {
            return t * (2 - t)
        },
        easeInOutQuad: function(t) {
            return .5 > t ? 2 * t * t : (4 - 2 * t) * t - 1
        },
        easeInCubic: function(t) {
            return t * t * t
        },
        easeOutCubic: function(t) {
            return --t * t * t + 1
        },
        easeInOutCubic: function(t) {
            return .5 > t ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1
        },
        easeInQuart: function(t) {
            return t * t * t * t
        },
        easeOutQuart: function(t) {
            return 1 - --t * t * t * t
        },
        easeInOutQuart: function(t) {
            return .5 > t ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t
        },
        easeInQuint: function(t) {
            return t * t * t * t * t
        },
        easeOutQuint: function(t) {
            return 1 + --t * t * t * t * t
        },
        easeInOutQuint: function(t) {
            return .5 > t ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t
        }
    }
}, function(t, e, i) {
    var n, r, s = 0,
        o = function(t) {
            this.sid = s++, this.uid = t.uid, this.width = t.w, this.length = t.l, this.height = t.h, this.active = !0, this.x = t.x, this.orgX = this.x, this.y = t.y, this.orgY = this.y, this.z = t.z, this.orgZ = this.z, this.dir = t.d, this.src = t.src, this.ramp = t.ramp, this.ladder = t.ladder, this.jumpPad = t.jumpPad, this.noShoot = t.noShoot, this.stepSrc = t.s, this.score = t.score, this.scoreP = t.scoreP, this.kill = t.kill, this.dummy = t.dummy, this.noVis = t.noVis, this.complexMesh = t.complexMesh, this.penetrable = t.penetrable, this.health = t.health, this.startHealth = t.health, this.transparent = t.transparent, this.boost = t.boost, this.boostDr = t.boostDr, this.aoMlt = t.aoM, this.team = t.team, this.flag = t.flag, this.trigger = t.trigger, this.meshRef = t.meshRef, this.checkpoint = t.checkpoint, this.singleUse = t.singleUse
        };
    t.exports.manager = function(t, e, s) {
        var a, c;
        t && (n = i(24).prefabs, r = i(1)), this.aoOpac = 0, this.objects = [], this.objectives = [], this.flags = [], this.collision = function(t, e, i) {
            return t.x - t.width - i <= e.x + e.width && t.x + t.width + i >= e.x - e.width && t.z - t.length - i <= e.z + e.length && t.z + t.length + i >= e.z - e.length && t.y - t.height - i <= e.y + e.height && t.y + t.height + i >= e.y - e.height
        }, this.checkPos = function(t, i, n, r, s) {
            for (var o = 0; o < this.objects.length; ++o)
                if (this.objects[o] != r && this.objects[o] != s && !this.objects[o].ramp && e.pointInBox3D(t, i, n, this.objects[o])) return !1;
            return !0
        }, this.addCylinder = function(e, i, n, r, s, o) {
            t && (o.shadows = !0, t.addCylinder(e, i, n, r, s, o))
        }, this.getZoneDat = function(t, e) {
            return {
                src: "zone_r",
                texSrc: "zone_" + (e && t == e.team ? "b" : "r"),
                noGroup: !0,
                mat: r.MeshBasicMaterial,
                transparent: !0,
                depthWrite: !1,
                side: 2
            }
        }, this.getFlagDat = function(t, e) {
            var i = e && t == e.team ? "1" : "0";
            return {
                src: "crystal_0",
                texSrc: "crystal_" + i,
                noGroup: !0,
                noShadow: !0,
                depthTest: !1,
                transparent: !0,
                noFog: !0,
                emissive: "0" == i ? 8729652 : 4360861
            }
        }, this.addFlag = function(e, i, n, r) {
            var a = null;
            t && ((a = t.loadMesh(this.getFlagDat(r), e, i + s.flagOff, n, 0, s.flagScale, t.scene)).renderOrder = 5, a.zoneMesh = t.addCube(e, i, n, s.flagZoneS, s.flagZoneH, s.flagZoneS, [1, 1, 0, 0, 1, 1], this.getZoneDat(r)));
            var c = new o({
                uid: this.objects.length,
                meshRef: a,
                x: e,
                z: n,
                y: i + s.flagScale / 2 + s.flagOff,
                w: s.flagScale,
                l: s.flagScale,
                h: s.flagScale / 2,
                team: r,
                flag: !0,
                noShoot: !0,
                complexMesh: !0
            });
            this.flags.push(c), this.objects.push(c);
            var l = new o({
                x: e,
                z: n,
                y: i + s.flagZoneH / 2,
                w: s.flagZoneS / 2,
                l: s.flagZoneS / 2,
                h: s.flagZoneH / 2,
                team: r,
                trigger: !0,
                noShoot: !0,
                complexMesh: !0
            });
            l.flagObj = c, this.objects.push(l)
        }, this.addObjective = function(e, i, n, s, o, a) {
            var c;
            t && ((c = t.addCube(e, i, n, s, a, o, [1, 1, 0, 0, 1, 1], {
                src: "objective_0",
                noGroup: !0,
                mat: r.MeshBasicMaterial,
                transparent: !0,
                depthWrite: !1,
                side: 2
            })).visible = !1), this.objectives.push({
                x: e,
                z: n,
                y: i + a / 2,
                mesh: c,
                width: s / 2,
                length: o / 2,
                height: a / 2
            })
        }, this.addDeathZone = function(t, e, i, n, r, s) {
            this.objects.push(new o({
                x: t,
                z: i,
                y: e + s / 2,
                w: n / 2,
                l: r / 2,
                h: s / 2,
                kill: !0,
                noShoot: !0,
                complexMesh: !0
            }))
        }, this.addScoreZone = function(t, e, i, n, r, s, a) {
            this.objects.push(new o({
                x: t,
                z: i,
                y: e + s / 2,
                w: n / 2,
                l: r / 2,
                h: s / 2,
                score: !0,
                scoreP: a,
                noShoot: !0,
                complexMesh: !0
            }))
        }, this.addCheckPoint = function(t, e, i, n, r, s, a) {
            this.objects.push(new o({
                x: t,
                z: i,
                y: e + s / 2,
                w: n / 2,
                l: r / 2,
                h: s / 2,
                checkpoint: !0,
                singleUse: a,
                noShoot: !0,
                complexMesh: !0
            }))
        }, this.addGrass = function(e, i, n, s, o, a, c) {
            c = c || {}, t && !c.noVis && (c.side = r.DoubleSide, c.transparent = !0, c.alphaTest = .2, c.vertexColors = r.VertexColors, c.shadowsR = !0, c.noGroup = !!c.health, t.addGrass(e, i, n, s, o, a, c))
        }, this.addLadder = function(i, n, c, l, p, h, u, d) {
            var f = s.ladderScale,
                m = s.ladderScale;
            if (0 == p || p == Math.PI ? m = s.ladderWidth : f = s.ladderWidth, a = new o({
                    ladder: !0,
                    complexMesh: !0,
                    noShoot: !0,
                    d: p,
                    x: i + s.ladderScale * Math.cos(p),
                    z: c + s.ladderScale * Math.sin(p),
                    y: n,
                    w: f,
                    l: m,
                    h: l
                }), this.objects.push(a), t && !h) {
                var g = {
                    src: u || "floor_0",
                    vertexColors: r.VertexColors,
                    colr: d,
                    scale: .02,
                    shadows: !0
                };
                t.addCube(a.x + s.ladderWidth * Math.sin(p), a.y, a.z + s.ladderWidth * Math.cos(p), 2 * s.ladderScale, l + 2, 2 * s.ladderScale, [1, 1, 1, 1, 1, 1], g), t.addCube(a.x - s.ladderWidth * Math.sin(p), a.y, a.z - s.ladderWidth * Math.cos(p), 2 * s.ladderScale, l + 2, 2 * s.ladderScale, [1, 1, 1, 1, 1, 1], g);
                for (var v = Math.floor(l / 6), y = 0; y < v; ++y) t.addPlane(a.x, n + 6 * (y + 1) + e.randFloat(-1, 1), a.z, s.ladderWidth, s.ladderScale, g, -p + Math.PI / 2, Math.PI / 2, e.randFloat(-.1, .1))
            }
        }, this.addRamp = function(e, i, n, a, c, l, p, h, u, d, f, m) {
            var g = 0 != p && p != Math.PI,
                v = (g ? l : a) / 2,
                y = Math.sqrt(c * c + l * l),
                x = Math.asin(c / y);
            if (this.objects.push(new o({
                    x: e,
                    z: n,
                    y: i + c / 2,
                    w: a / 2,
                    l: l / 2,
                    h: c / 2,
                    d: p,
                    noShoot: !0,
                    complexMesh: !0,
                    boostDr: h ? x : null,
                    boost: h || null,
                    ramp: {
                        sX: e - v * Math.cos(p),
                        sZ: n - v * Math.sin(p),
                        eX: e + v * Math.cos(p),
                        eZ: n + v * Math.sin(p)
                    }
                })), t && !d) {
                t.addRamp(e, i, n, g ? a : l, c, (g ? l : a) / 2, p, {
                    src: u || "default",
                    vertexColors: r.VertexColors,
                    colr: f,
                    scale: 1,
                    shadowsR: !0
                }), i += s.ambOff;
                var w = (g ? a : l) / 2 - m;
                g ? a = 2 * m : l = 2 * m;
                for (var b, M = 0; 2 > M; ++M) b = M ? 1 : -1, t.addRamp(e + w * b * Math.cos(p + Math.PI / 2), i, n + w * b * Math.sin(p + Math.PI / 2), g ? a : l, c, (g ? l : a) / 2, p, {
                    src: "ambient_1",
                    euler: "ZYX",
                    depthWrite: !1,
                    side: r.DoubleSide,
                    transparent: !0
                }, M ? 0 : Math.PI)
            }
        }, this.addBlock = function(e, i, n, s, a, c, l, p) {
            if ((p = p || {}).src = p.src || "wall_0", p.noCol || this.objects.push(new o({
                    x: e,
                    z: n,
                    y: i + c / 2,
                    w: s / 2,
                    l: a / 2,
                    h: c / 2,
                    uid: this.objects.length,
                    s: p.sound,
                    src: p.src,
                    noVis: p.noVis,
                    health: p.health,
                    transparent: p.transparent,
                    penetrable: p.penetrable,
                    complexMesh: p.xR || p.yR || p.zR,
                    ter: !0
                })), t && !p.noVis) {
                p.vertexColors = r.VertexColors, p.scale = null == p.scale ? 1 : p.scale, p.shadows = !p.shadowsR, p.noGroup = !!p.health;
                var h = t.addCube(e, i, n, s, c, a, l, p);
                p.health && !p.noCol && (this.objects[this.objects.length - 1].meshRef = h)
            }
        }, this.addMesh = function(i, a, c, l, p, h, u, d, f) {
            a += h, f || this.objects.push(new o({
                complexMesh: !!n && n[d.toUpperCase()].complex,
                aoM: n && n[d.toUpperCase()].aoMlt || 0,
                x: i,
                z: c,
                y: a,
                w: p,
                l: u,
                h: h,
                ter: !0
            })), n && n[d.toUpperCase()].transparent && (a += e.randFloat(-.01, .01)), t && t.loadMesh({
                src: d + "_0",
                emissive: n[d.toUpperCase()].emiss ? 16777215 : null,
                side: n[d.toUpperCase()].doubleSide ? r.DoubleSide : r.FrontSide,
                transparent: n[d.toUpperCase()].transparent,
                shadows: n[d.toUpperCase()].castShadow,
                shadowsR: n[d.toUpperCase()].receiveShadow
            }, i, a, c, l, s[d + "Scale"], t.scene, !0)
        };
        var l = [];
        this.addNoisePlanes = function() {
            for (var e = 0; e < l.length; ++e) l[e][5].objects = this.objects, t.addPlane(...l[e]);
            l.length = 0
        }, this.addPlane = function(e, i, n, s, a, c, p, h, u) {
            if ((c = c || {}).col && this.objects.push(new o({
                    x: e,
                    z: n,
                    y: i,
                    w: a,
                    l: s,
                    h: 0,
                    s: c.sound,
                    health: c.health,
                    transparent: c.transparent,
                    penetrable: c.penetrable,
                    noVis: c.noVis
                })), t && !c.noVis) {
                c.transparent = !0, c.side = r.DoubleSide, c.vertexColors = r.VertexColors, c.noise && (c.pinEdges = !0, c.margin = 1, c.tilesX = Math.round(a / 5), c.tilesZ = Math.round(s / 5));
                var d = [e, i, n, a, s, c, p, (h || 0) + Math.PI / 2, u];
                if (!c.noise) return t.addPlane(...d);
                l.push(d)
            }
        }, this.pointInObjs = function(t, i, n) {
            for (var r = 0; r < this.objects.length; ++r)
                if (!(a = this.objects[r]).noVis && !a.complexMesh && !a.health && 0 > i.indexOf(a.sid) && e.pointInBox3D(t[0], t[1], t[2], a, n || 0)) return !0;
            return !1
        }, this.setMaxAO = function(t, e, i) {
            t.maxAOS = t.maxAOS || {}, t.maxAOS[e.sid] = Math.max(i, t.maxAOS[e.sid] || 0), e.maxAOS = e.maxAOS || {}, e.maxAOS[t.sid] = Math.max(i, e.maxAOS[t.sid] || 0)
        }, this.aosToAdd = {}, this.addAmbient = function(t, i, n, o, a, c, l, p, h, u, d) {
            var f = !u;
            if (u)
                for (var m = 0; m < u.length; ++m)
                    if (e.pointInBox3D(t, i, n, u[m], 2 * s.ambOff)) {
                        f = !0;
                        break
                    } if (f)
                if (u) {
                    var g = u[0].sid + "-" + u[1].sid;
                    this.aosToAdd[g] || (this.aosToAdd[g] = []), this.aosToAdd[g].push({
                        vals: [t, i, n, o, a, c, l + s.ambOff, p + s.ambOff, h],
                        group: d
                    })
                } else this.addPlane(t, i, n, l, p, {
                    src: "ambient_" + (h || 0),
                    opacity: this.aoOpac,
                    depthFunc: r.LessEqualDepth,
                    euler: "ZYX",
                    depthWrite: !1
                }, o, a, c)
        };
        var p = [
            ["g6-1-2", "g4-1-2"],
            ["g5-1-2", "g4-0-1"],
            ["g6-0-1", "g3-1-2"],
            ["g5-0-1", "g3-0-1"],
            ["g6-0-3", "g2-0-3"],
            ["g5-0-3", "g2-1-1"],
            ["g6-1-1", "g1-0-3"],
            ["g5-1-1", "g1-1-1"],
            ["g6-0-2", "g1-1-0"],
            ["g5-0-2", "g1-0-2"],
            ["g6-1-0", "g2-1-0"],
            ["g5-1-0", "g2-0-2"],
            ["g4-0-2", "g1-0-0"],
            ["g3-0-2", "g1-1-3"],
            ["g4-1-0", "g2-0-0"],
            ["g3-1-0", "g2-1-3"],
            ["g4-0-3", "g2-1-2"],
            ["g3-0-3", "g2-0-1"],
            ["g4-1-1", "g1-1-2"],
            ["g3-1-1", "g1-0-1"],
            ["g6-1-3", "g3-0-0"],
            ["g5-1-3", "g3-1-3"],
            ["g6-0-0", "g4-0-0"],
            ["g5-0-0", "g4-1-3"]
        ];
        this.groupsMatch = function(t, e) {
            for (var i = 0; i < p.length; ++i)
                if (0 <= p[i].indexOf(t) && 0 <= p[i].indexOf(e)) return !0;
            return !1
        }, this.clearAOGroup = function(t) {
            for (var e = t.length - 1; 0 <= e; --e) {
                a = t[e];
                for (var i = t.length - 1; 0 <= i; --i)
                    if (c = t[i], !a.dontAdd && !c.dontAdd && a != c && this.groupsMatch(a.group, c.group)) {
                        a.vals[6] + a.vals[7] >= c.vals[6] + c.vals[7] ? c.dontAdd = !0 : a.dontAdd = !0;
                        break
                    }
            }
        }, this.addPendingAOs = function() {
            for (var t in this.aosToAdd)
                if (this.aosToAdd.hasOwnProperty(t)) {
                    this.clearAOGroup(this.aosToAdd[t]);
                    for (var e = 0; e < this.aosToAdd[t].length; ++e) this.aosToAdd[t][e].dontAdd || this.addAmbient(...this.aosToAdd[t][e].vals)
                } this.aosToAdd = {}
        }, this.limitAmb = function(t, i, n, r, s, o, a) {
            var c = [e.cdv[r]],
                l = [e.cdv[s]];
            return t = n == -Math.PI / 2 || n == Math.PI + Math.PI / 2 ? Math.min(t, (i[s] - Math.min(o[s] - o[l], a[s] - a[l])) / 2) : n == Math.PI / 2 ? Math.min(t, (Math.max(o[s] + o[l], a[s] + a[l]) - i[s]) / 2) : 0 == n ? Math.min(t, (Math.max(o[r] + o[c], a[r] + a[c]) - i[r]) / 2) : Math.min(t, (i[r] - Math.min(o[r] - o[c], a[r] - a[c])) / 2)
        }, this.resetAll = function() {
            this.aosToAdd = {};
            for (var e = 0; e < this.objects.length; ++e) this.objects[e].active = !0, this.objects[e].startHealth && (this.objects[e].health = this.objects[e].startHealth), this.objects[e].meshRef && (this.objects[e].meshRef.visible = !0);
            t && t.updateShadowMap()
        }, this.removeAll = function() {
            this.objects.length = 0, this.objectives.length = 0, this.flags.length = 0
        }
    }
}, function(t, e, i) {
    var n;
    try {
        window && (n = i(1))
    } catch (t) {}
    var r = function(t, e, i, n, r) {
        var s;
        this.id = t, this.sentTo = [], this.inputs = [], this.spins = [], this.stateHistory = [], this.weaponMeshes = [], this.legMeshes = [], this.armMeshes = [], this.lastInput = [], this.lastDeltas = [], this.reloads = [], this.ammos = [], this.ping = 0, this.pings = [], this.score = 0, this.scoreObjs = {}, this.checkPoint = null, this.checkPointList = [], this.convs = 0, this.timer = null, this.gameTimer = null, this.kills = 0, this.deaths = 0, this.caps = 0, this.deathStreak = 0, this.level = 0, this.lives = r.waitTimers && r.config && r.config.lives || 0, this.deltaAdd = 0, this.deltaDiv = 1, this.sprayIndex = 0, this.hatIndex = -1, this.backIndex = -1, this.lastSpray = 0, this.playTime = 0, this.streaks = {}, this.init = function(t, e, i, r, s, o) {
            this.x = t, this.y = e, this.z = i, this.stepSrc = null, this.name = r || "unknown", this.xVel = 0, this.yVel = 0, this.zVel = 0, this.renderMinimal = !1, this.spins.length = 0, this.noMovTimer = 0, this.xDire = 0, this.yDire = 0, this.hitTimer = 0, this.ticker = 0, this.spread = 0, this.spreadPlus = 0, this.aimVal = 1, this.aimDir = 0, this.aimTime = 0, this.streak = 0, this.killStreak = 0, this.lastKill = 0, this.stateHistory.length = 0, this.lastInput.length = 0, this.dmgReceived = {}, this.landBobY = 0, this.landBobYR = 0, this.jumpBobY = 0, this.slideTimer = 0, this.canSlide = !0, this.leanAnimX = 0, this.leanAnimY = 0, this.leanAnimZ = 0, this.bobAnimZ = 0, this.bobAnimY = 0, this.idleAnim = 0, this.inspecting = !1, this.inspectX = !1, this.stepVal = 0, this.stepChase = 0, this.stepDir = 1, this.stepDirR = 1, this.reward = 0, this.recoilAnim = 0, this.recoilAnimY = 0, this.recoilForce = 0, this.recoilTweenY = 0, this.recoilTweenYM = 0, this.recoilTweenZ = 0, this.jumpRot = 0, this.jumpRotM = 0, this.recoilX = 0, this.recoilZ = 0, this.crouchVal = 0, this.onGround = !0, this.onLadder = !1, this.terrainSlipping = !1, this.rampFix = null, this.didJump = !1, this.jumpCooldown = 0, this.didShoot = !1, this.lodActive = !1, this.locked = !1, this.latestData = !1, this.airTime = 0, this.height = n.playerHeight, this.headScale = n.cameraHeight, this.scale = n.playerScale, this.active = !0, this.interpolate = !1, this.isYou = s, this.sentTo.length = 0, this.inputSN = 0, this.inputs.length = 0, this.weaponIndex = 0, this.swapTime = 0, this.recon = !1, this.inView = !1, this.isHacker = o
        }, this.setClass = function(t, e, i, n) {
            n || (t.config && 0 > t.config.classes.indexOf(e) && (e != t.config.classes[0] && (this.skins = [-1, -1]), e = t.config.classes[0]), t.mode && (t.mode.noWeap && (e = 9), t.mode.teamClass && t.mode.teamClass[this.team] && (e = t.mode.teamClass[this.team], this.skins = [-1, -1]))), (null == e || null == e) && (e = t.classes.length - 1), this.classIndex = e, this.reloads.length = 0, this.ammos.length = 0, this.loadout = [t.classes[e].loadout[0]], t.classes[e].secondary ? i && this.loadout.push(i) : this.secIndex = null, this.speed = t.classes[e].speed || 1;
            for (var r = 0; r < this.loadout.length; ++r) this.reloads.push(0), this.ammos.push(t.weapons[this.loadout[r]].ammo);
            this.reloadTimer = 0, this.maxHealth = t.classes[e].health * (t.config && t.config.healthMlt || 1), this.health = this.maxHealth, this.regen = t.classes[e].regen
        }, this.resetInputs = function() {
            this.inputs.length = 0
        }, this.procInputs = function(t, r, o) {
            this.recon = o;
            var a = Math.min(t[1], n.dltMx) / this.deltaDiv;
            this.inputSN = t[0];
            var c = i.getAngleDist(t[2], this.xDire);
            e.saveSpin(this, c);
            var l = !o && this.isYou;
            if (l && (this.leanAnimX -= c * n.leanSens, this.leanAnimX = i.limit(this.leanAnimX, n.leanMax), this.leanAnimY -= i.getAngleDist(t[3], this.yDire) * n.leanSens, this.leanAnimY = i.limit(this.leanAnimY, n.leanMax), this.leanAnimX && (this.leanAnimX *= Math.pow(n.leanPull, a)), this.leanAnimY && (this.leanAnimY *= Math.pow(n.leanPull, a)), this.leanAnimZ && (this.leanAnimZ *= Math.pow(n.leanPullZ, a)), this.bobAnimZ && (this.bobAnimZ *= Math.pow(n.bobPullZ, a)), this.bobAnimY && (this.bobAnimY *= Math.pow(n.bobPullY, a)), this.recoilX && (this.recoilX *= Math.pow(n.leanPull, a)), this.recoilZ && (this.recoilZ *= Math.pow(n.leanPull, a)), this.inspecting && this.inspectX < Math.PI / 2.8 && (this.inspectX += .1 * (Math.PI / 2.8 - this.inspectX))), t[10] && e.swapWeapon(this, t[10]), o || (this.recoilForce && (this.recoilAnim += this.recoilForce * a, this.recoilAnimY += this.recoilForce * (this.weapon.recoilY || 1) * (1 - .3 * this.crouchVal) * a, this.recoilForce *= Math.pow(this.weapon.recoverF, a)), this.recoilAnim && (this.recoilAnim *= Math.pow(this.weapon.recover, a)), this.recoilAnimY && (this.recoilAnimY *= Math.pow(this.weapon.recoverY || this.weapon.recover, a))), this.xDire = (t[2] || 0).round(3), this.yDire = (t[3] || 0).round(3), this.oldX = this.x, this.oldY = this.y, this.oldZ = this.z, this.weapon.zoom && (!this.weapon.noAim || 0 < this.swapTime)) {
                var p = 0 >= this.reloadTimer && 0 >= this.swapTime;
                t[6] && 0 < this.aimVal && p ? (e.cancelInspect(this), this.aimDir = 0, this.aimVal -= 1 / (this.weapon.aimSpeed / a), 0 >= this.aimVal && (this.aimVal = 0, this.isYou && !o && e.toggleAim(this, 1)), this.isYou && !o && !this.weapon.scope && e.updateAim(this, 1 - this.aimVal)) : (!p || !t[6] && 1 > this.aimVal) && (this.aimDir = 1, !this.aimVal && this.isYou && !o && e.toggleAim(this, 0), this.aimVal += 1 / (this.weapon.aimSpeed / a), 1 <= this.aimVal && (this.aimVal = 1), this.isYou && !o && !this.weapon.scope && e.updateAim(this, 1 - this.aimVal)), 0 == this.aimVal ? this.aimTime += a : this.aimTime = 0
            }
            t[8] && 1 > this.crouchVal && !this.onLadder ? (this.crouchVal += n.crouchSpeed * a, 1 <= this.crouchVal && (this.crouchVal = 1), this.onGround ? l && (this.bobAnimY -= 1.4 * n.crouchAnim * a) : this.y += n.crouchSpeed * a) : !t[8] && 0 < this.crouchVal && (this.crouchVal -= n.crouchSpeed * a, 0 >= this.crouchVal && (this.crouchVal = 0), this.onGround ? l && (this.bobAnimY += n.crouchAnim * a) : this.y -= n.crouchSpeed * a), this.crouchVal && (this.crouchVal = this.crouchVal.round(3)), e.updateHeight(this);
            var h, u = this.onGround || this.onLadder;
            h = u ? (this.terrainSlipping ? n.slippingSpeed : n.playerSpeed) * this.speed : n.airSpeed, h *= this.aimVal ? 1 : n.aimSlow, h *= r.mode.spdMlt && r.mode.spdMlt[this.team] || 1, h *= this.crouchVal ? n.crouchSlow : 1, h *= this.weapon.spdMlt * a;
            var d = 0;
            if (d = this.onLadder ? n.ladderDecel : this.terrainSlipping ? n.terrainSlipDecel : this.onTerrain ? n.terrainDecel : this.onGround ? n.groundDecel : n.airDecel, .5 >= this.crouchVal && (this.canSlide = !0), this.onGround && this.crouchVal || (this.slideTimer = 0), this.slideTimer)
                if (this.slideTimer -= a, 0 >= this.slideTimer) this.slideTimer = 0;
                else {
                    h *= .25, d = this.onTerrain ? n.terrainSlideDecel : n.slideDecel;
                    var f = i.getDistance(this.xVel, this.zVel, 0, 0),
                        m = i.getDirection(0, 0, this.xVel, this.zVel),
                        g = i.getDirection(Math.sin(this.xDire), Math.cos(this.xDire), 0, 0),
                        v = .03 * i.getAngleDist(g, m);
                    this.xVel = f * Math.cos(m + Math.PI - v), this.zVel = f * Math.sin(m + Math.PI - v)
                } r.lockMove && (h *= 0), this.jumpCooldown = Math.max(this.jumpCooldown - a, 0), this.onGround && 0 >= this.jumpCooldown && e.tryJump(this, t[7]), u || (this.yVel -= a * (n.gravity * (r.config ? r.config.gravMlt : 1)));
            var y = n.movDirs[t[4]];
            y != Math.PI && 0 != y && y != Math.PI / 2 && y != -Math.PI / 2 && (h *= r.config ? r.config.strafeSpd : 1), void 0 !== y && (this.xVel += h * Math.cos(y - this.xDire), this.zVel += h * Math.sin(y - this.xDire)), this.xVel && (this.x += this.xVel * a, this.xVel *= Math.pow(d, a), this.xVel = i.cropVal(this.xVel, n.decelMin)), this.yVel && (this.y += this.yVel * a, this.yVel *= Math.pow(d, a), this.yVel = i.cropVal(this.yVel, n.decelMin)), this.zVel && (this.z += this.zVel * a, this.zVel *= Math.pow(d, a), this.zVel = i.cropVal(this.zVel, n.decelMin));
            var x = this.onGround && !this.didJump,
                w = !1;
            this.onGround = !1, this.onLadder = !1;
            for (var b = 0; b < r.map.manager.objects.length; ++b)
                if ((s = r.map.manager.objects[b]).active && this.collides(s))
                    if (s.score) this.scoreObjs[s.sid] || (this.scoreObjs[s.sid] = 1, e.score(this, s.scoreP));
                    else if (s.checkpoint) r.setCheckPoint(this, s);
            else if (s.flag) r.pickupFlag(this, s);
            else if (s.trigger) this.flag && s.team == this.team && s.flagObj && !s.flagObj.carrier && s.flagObj.x == s.flagObj.orgX && s.flagObj.y == s.flagObj.orgY && s.flagObj.z == s.flagObj.orgZ && r.capFlag(this, this.flag);
            else if (s.kill) e.hasServer && e.kill(this);
            else if (s.ladder) {
                if (this.y < s.y + s.height && 0 == this.crouchVal && (this.yVel = 0, this.onLadder = !0, this.onTerrain = !1, this.stepSrc = null, void 0 !== y)) {
                    var M = (Math.abs(i.getAngleDist(s.dir, y - this.xDire)) - Math.PI / 2) / (Math.PI / 2);
                    0 < M && (this.y += n.ladderSpeed * this.weapon.spdMlt * a * M, this.y <= s.y - s.height ? this.y = s.y - s.height : this.y >= s.y + s.height && (this.y = s.y + s.height))
                }
            } else if (s.ramp) {
                if (this.y < s.y + s.height) {
                    var S = Math.max(0, Math.min(1, i.progressOnLine(s.ramp.sX, s.ramp.sZ, s.ramp.eX, s.ramp.eZ, this.x + this.scale * Math.cos(s.dir), this.z + this.scale * Math.sin(s.dir)))),
                        _ = s.y - s.height + 2 * s.height * S;
                    if (this.y <= _ || x)
                        if (s.boost) {
                            this.y = _;
                            var T = s.boost * n.boosterSpd * a;
                            this.xVel += T * Math.sin(-s.dir + Math.PI / 2) * Math.cos(s.boostDr), this.zVel += T * Math.cos(-s.dir + Math.PI / 2) * Math.cos(s.boostDr), this.yVel += T * Math.sin(s.boostDr)
                        } else this.oldY > this.y && e.resetStep(this, o), this.y = _, this.yVel = 0, this.onGround = !0, this.onTerrain = !1, w = !0, this.rampFix = s.y - s.height + 2 * s.height * Math.round(S)
                }
            } else this.y < s.y + s.height && s.y + s.height - this.y <= n.climbHeight && this.oldY < s.y + s.height && x ? (this.y += .3 * (s.y + s.height - this.y), this.onGround = !0, this.onTerrain = !1) : this.oldY >= s.y + s.height ? (this.stepSrc = s.stepSrc, this.oldY > this.y && e.resetStep(this, o), this.y = s.y + s.height, this.yVel = 0, this.onGround = !0, this.onTerrain = !1) : this.oldX - this.scale >= s.x + s.width - 1e-5 ? (this.x = s.x + s.width + this.scale, this.xVel = 0) : this.oldX + this.scale <= s.x - s.width + 1e-5 ? (this.x = s.x - s.width - this.scale, this.xVel = 0) : this.oldZ - this.scale >= s.z + s.length - 1e-5 ? (this.z = s.z + s.length + this.scale, this.zVel = 0) : this.oldZ + this.scale <= s.z - s.length + 1e-5 ? (this.z = s.z - s.length - this.scale, this.zVel = 0) : this.oldY + this.height <= s.y - s.height && (this.y = s.y - s.height - this.height, this.yVel = 0);
            !this.didJump && null != this.rampFix && Math.abs(this.y - this.rampFix) <= n.climbHeight ? !w && (this.y = this.rampFix, this.onGround = !0, this.yVel = 0, this.rampFix = null) : this.rampFix = null;
            var E = r.map.terrain;
            if (E) {
                var A = E.raycast(this.x, -this.z, 1e4, 0, 0, -2e4, !0);
                if (A) {
                    var L = A.z;
                    if (this.y <= L && (this.oldY > this.y && e.resetStep(this, o), this.onTerrain = !0), this.onTerrain) {
                        this.onGround = !0;
                        var k = E._raycastNormal;
                        k.set(k.x, k.z, -k.y), this.y = L;
                        var R = k.x,
                            P = -1 + k.y,
                            C = k.z,
                            I = Math.sqrt(R * R + P * P + C * C);
                        if (this.terrainSlipping = I > n.terrainSlideThreshold, this.terrainSlipping = !1, this.terrainSlipping) I *= n.gravity * (r.config ? r.config.gravMlt : 1) * n.terrainGravityMlt * a, this.xVel += R * I, this.yVel += P * I, this.zVel += C * I;
                        else this.yVel = 0, this.jumpCooldown = 0
                    }
                }
                this.onTerrain || (this.terrainSlipping = !1)
            }
            if (this.onGround ? this.airTime = 0 : this.airTime += a, !o) {
                var O = i.getDistance3D(this.oldX, this.oldY, this.oldZ, this.x, this.y, this.z);
                if (this.isYou && (this.onLadder && (O *= 1.4), i.getDirection(this.oldX, this.oldZ, this.x, this.z), this.bobAnimZ += i.getDistance(this.oldX, this.oldZ, this.x, this.z) * n.bobMltZ, this.bobAnimY -= (this.oldY - this.y) * n.bobMltY, u && void 0 !== y ? (e.playerStep(this, O), this.leanAnimZ -= O * n.leanMltZ * (this.weapon.zLnM || 1) * Math.cos(y)) : this.stepVal *= Math.pow(n.stepPull, a), this.stepChase != this.stepVal && (this.stepChase += .18 * (this.stepVal - this.stepChase))), this.spreadPlus += O * n.spreadMove + Math.abs(this.oldY - this.y) * n.spreadFall, this.spreadPlus *= Math.pow(n.spreadRecover, a), this.spread = Math.max(this.weapon.minSpread || 0, (this.weapon.spread - this.weapon.spread * n.crouchSpread * this.crouchVal + this.recoilAnim * (this.weapon.spreadInc || 1) * n.spreadMlt + this.spreadPlus) * this.aimVal), t[9] && e.reload(this), 0 < this.reloadTimer) {
                    var D = this.reloadTimer;
                    this.reloadTimer -= a, this.isYou && D >= this.weapon.reload / 2 && this.reloadTimer < this.weapon.reload / 2 && e.endReload(this.weapon), 0 >= this.reloadTimer && (this.reloadTimer = 0, this.didShoot = !1, this.ammos[this.weaponIndex] = this.weapon.ammo, e.updatePlayerAmmo(this))
                }
                0 < this.swapTime && (this.swapTime -= a, 0 > this.swapTime && (this.swapTime = 0));
                for (b = 0; b < this.reloads.length; ++b) 0 < this.reloads[b] && (this.reloads[b] -= a, 0 > this.reloads[b] && (this.reloads[b] = 0));
                if (this.weapon) {
                    var B = !this.weapon.nAuto && t[5];
                    this.didShoot && !t[5] && (this.didShoot = !1), !this.didShoot && t[5] && (B = !0), B && 0 >= this.reloads[this.weaponIndex] && 0 >= this.swapTime && 0 >= this.reloadTimer && (this.weapon.melee ? e.melee(this) : 0 < this.ammos[this.weaponIndex] ? e.shoot(this) : e.reload(this))
                }
            }
            e.playerCollisions(this)
        }, this.collides = function(t) {
            return this.x - this.scale < t.x + t.width && this.x + this.scale > t.x - t.width && this.z - this.scale < t.z + t.length && this.z + this.scale > t.z - t.length && this.y <= t.y + t.height && this.y + this.height >= t.y - t.height
        }, this.update = function(t, r) {
            if (this.active) {
                if (this.inputs.length) {
                    for (var s = 0; s < this.inputs.length; ++s) this.procInputs(this.inputs[s], t);
                    this.resetInputs()
                }
                if (this.idleAnim += n.idleAnimS * r, this.interpolate) {
                    this.dt += r;
                    var o = Math.min(1.6, this.dt / (n.serverSendRate * n.interpolation));
                    o /= t.config ? t.config.deltaMlt : 1, this.oldX = this.x, this.oldY = this.y, this.oldZ = this.z, this.x = this.x1 + (this.x2 - this.x1) * o, this.y = this.y1 + (this.y2 - this.y1) * o, this.z = this.z1 + (this.z2 - this.z1) * o, this.onGround && e.playerStep(this, i.getDistance(this.oldX, this.oldZ, this.x, this.z)), this.xDire = Math.lerpAngle(this.xDir2, this.xDir1, Math.min(1, o)), this.yDire = Math.lerpAngle(this.yDir2, this.yDir1, Math.min(1, o))
                }
            }
        }
    };
    t.exports.Player = r, t.exports.manager = function(t, e, s, o, a, c, l) {
        this.list = [];
        var p, h, u, d = i(58);
        this.hasServer = l ? 1 : 0, this.setTeam = function(e) {
            if (!t.waitTimers && t.mode.convTeam) e.team = t.mode.convTeam;
            else if (t.mode.startTeam) e.team = t.mode.startTeam;
            else if (t.mode.friendly) e.team = 1;
            else if (t.mode.clanWar) e.team = e.account && e.account.clan ? e.account.clan : 1;
            else if (!e.team && t.mode.teams && !e.spectating) {
                for (var i = 0, n = 0, r = 0; r < this.list.length; ++r) this.list[r].spectating || (1 == this.list[r].team && i++, 2 == this.list[r].team && n++);
                e.team = i >= n ? 2 : 1
            }
        }, this.update = function(i) {
            for (var n = 0; n < this.list.length; ++n)(p = this.list[n]).active && (p.update(t, i), l && (this.tickPlayer(p, i), this.storeState(p), p.y <= t.map.deathY && this.kill(p)), e && (this.updateMesh(p), this.updateHeight(p)))
        }, this.playerCollisions = function(e) {
            if (l && t.mode.convTeam && !t.waitTimers)
                for (var i = 0; i < this.list.length; ++i)
                    if (e.active && this.list[i].active && e.team == t.mode.convTeam && e.team != this.list[i].team) {
                        var n = c.playerHeight / 2;
                        a.getDistance3D(e.x, e.y + n, e.z, this.list[i].x, this.list[i].y + n, this.list[i].z) <= 2.4 * n && (l.broadcast("game" + t.sid, "ac", e.sid, this.list[i].sid, t.mode.convWord), this.score(e, 100), e.convs++, t.updateTeam(this.list[i], e.team), t.mode.killConv && this.kill(this.list[i], null, null, !0), t.gameTimer && (t.gameTimer += 1e4))
                    }
        }, this.activeCount = function() {
            for (var t = 0, e = 0; e < this.list.length; ++e) this.list[e].active && t++;
            return t
        }, this.forcePos = function() {
            for (var t = 0; t < this.list.length; ++t) this.list[t].forcePos = !0, this.list[t].objInstances && (this.list[t].objInstances.visible = !1, this.list[t].inView = !1)
        }, this.saveSpin = function(t, e) {
            l && (t.spins.unshift(e), t.spins.length > c.spinTimer / c.serverTickRate && (t.spins.length = Math.round(c.spinTimer / c.serverTickRate)))
        }, this.getSpin = function(t) {
            for (var e = 0, i = 0; i < t.spins.length; ++i) e += t.spins[i];
            return Math.abs(e * (180 / Math.PI))
        }, this.storeState = function(e) {
            e.stateHistory.unshift({
                time: t.now,
                x: e.x,
                y: e.y,
                z: e.z
            });
            for (var i = e.stateHistory.length - 1; 0 <= i; --i) t.now - e.stateHistory[i].time >= c.stateHistory && e.stateHistory.splice(i, 1)
        }, this.fetchState = function(e, i) {
            for (var n = t.now - (i + c.serverSendRate * c.interpolation), r = 0; r < e.stateHistory.length; ++r)
                if (e.stateHistory[r].time <= n) return e.stateHistory[r];
            return e.stateHistory[e.stateHistory.length - 1]
        }, this.updateMesh = function(i, n) {
            if (i.objInstances) {
                var r = (1 - (1 - c.aimAnimMlt) * (1 - i.aimVal)) * c.animMult * e.weaponLean,
                    s = 1 - .8 * i.crouchVal,
                    o = (1 - (1 - i.aimVal)) * c.animMult;
                i.isYou || (o = 0);
                var a = 1 - (i.weapon.recoilZM || .5) * (1 - i.aimVal),
                    l = (1 - (i.weapon.zRot || .3) * (1 - i.aimVal)) * e.weaponLean,
                    p = 1 - (i.weapon.jYMlt || 1) * (1 - i.aimVal),
                    h = 1 - .45 * (1 - i.aimVal),
                    u = .9 * i.bobAnimY * p * e.weaponLean,
                    d = i.landBobY * (i.weapon.landBob || 1) * .9 * (1 - .85 * (1 - i.aimVal)) * e.weaponLean;
                i.landBobYR != d && (i.landBobYR += .15 * (d - i.landBobYR));
                var f = i.landBobY * (i.weapon.landBob || 1) * .08 * (1 - .2 * (1 - i.aimVal)),
                    m = 1 - .5 * i.crouchVal,
                    g = i.jumpRot * m * o * e.weaponLean;
                i.jumpRotM != g && (i.jumpRotM += .08 * (g - i.jumpRotM));
                var v = i.jumpBobY * (i.weapon.jumpYM || 1) * o * m * e.weaponLean,
                    y = 1 - .89 * (1 - i.aimVal),
                    x = 1 - (i.weapon.aimRecMlt || 1) * (1 - i.aimVal),
                    w = n ? .05 : c.stepAnim,
                    b = Math.sin(i.stepVal) * w,
                    M = Math.cos(2 * i.stepVal) / 2 * w,
                    S = -Math.sin(i.stepChase) * w,
                    _ = -Math.cos(2 * i.stepChase) / 2 * w,
                    T = t.config.thirdPerson ? 0 : 1 - i.aimVal,
                    E = .5 * (.5 >= T ? T : .5 - (T - .5)),
                    A = i.swapTime / i.weapon.swapTime,
                    L = i.weapon.xOff,
                    k = 0;
                0 < i.reloadTimer && (k = .5 < (k = 1 - i.reloadTimer / i.weapon.reload) ? .5 - (k - .5) : k);
                var R = (1 - .88 * (1 - i.aimVal)) * e.weaponLean;
                e.moveMesh(i.objInstances, i.x, i.y + (i.isYou && !t.config.thirdPerson ? 0 : Math.abs(3.5 * b)), i.z), e.rotateMesh(i.objInstances, i.xDire + (i.isYou ? t.config.thirdPerson ? .5 * -b : 0 : 2 * -b)), M -= M * (i.crouchVal * c.crouchAnimMlt), b -= b * (i.crouchVal * c.crouchAnimMlt);
                for (var P = 0; P < i.legMeshes.length; ++P) i.legMeshes[P].rotation.x = b * (1 == P || 3 == P ? 1 : -1) * 7 + (1 < P ? -.6 : 0);
                var C;
                for (P = 0; P < i.armMeshes.length; ++P) C = -(i[(0 == P ? "l" : "r") + "HndTweenA"] || 0), i.armMeshes[P].position.z = C || b * (P ? -1 : 1) * 12, i.armMeshes[P].rotation.x = .1 * C, i.armMeshes[P].rotation.z = .1 * C * (P ? -1 : 1), i.armMeshes[P].position.x = -.3 * C * (P ? -1 : 1);
                var I = t.attach[i.weapon.attach],
                    O = I && I.aimOffY || 0,
                    D = t.config.thirdPerson ? .4 : 1;
                e.rotateMesh(i.upperBody, k * (-1 * D), -.2 * u + +f + k * (-2.8 * D) + i.yDire * (i.isYou && !t.config.thirdPerson ? 1 : .5) + (-Math.PI / 4 * A + i.recoilAnimY * c.recoilMlt) + (i.weapon.yRot || 0)), e.moveMesh(i.upperBody, 0, i.recoilAnimY * (i.weapon.recoilYM || .3) * o + (i.height - c.cameraHeight - c.legHeight), 0), e.rotateMesh(i.weaponMeshes[i.weaponIndex], i.inspectX + .3 * i.jumpRotM + i.recoilX * y + i.leanAnimX * h * e.weaponLean * (i.weapon.leanMlt || 1) + (.16 * -S * o * s + .2 * i.leanAnimZ) * r, .02 * -Math.cos(i.idleAnim) * R + .065 * -i.landBobYR + i.recoilTweenY * x + i.leanAnimY * h * e.weaponLean * (i.weapon.leanMlt || 1) + -.7 * _ * r, .01 * Math.cos(i.idleAnim) * R + .25 * -i.landBobYR * o + g + E + i.recoilX * y + i.leanAnimZ * l + -i.inspectX * (i.weapon.inspectR || 0) + ((i.weapon.cLean || 0) * i.crouchVal * o + .9 * -S) * r), e.moveMesh(i.weaponMeshes[i.weaponIndex], -i.jumpRotM * o * 1.3 + -i.inspectX * (i.weapon.inspectM || 0) + (.35 * i.leanAnimZ - (i.weapon.cRot || 0) * i.crouchVal * o + .7 * b * s * o) * i.aimVal * r + L - (L - i.weapon.xOrg) * T, .03 * Math.sin(i.idleAnim) * R + i.recoilTweenYM * x + v + .9 * d - 1.5 * u + (.85 * M - (i.weapon.cDrop || 0) * i.crouchVal * o) * r + i.weapon.yOff - (i.weapon.yOff - i.weapon.yOrg + O) * T, i.weapon.zOff - (i.weapon.zOff - i.weapon.zOrg) * T + i.bobAnimZ * r + i.recoilAnim * (i.weapon.recoilZ || 0) * a)
            }
        }, this.updateHeight = function(i) {
            var n = c.crouchDst * i.crouchVal;
            if (!e || i.isYou && !t.config.thirdPerson) i.height = c.playerHeight - n;
            else {
                var r = c.crouchLean * i.crouchVal;
                e.rotateMesh(i.lowerBody, 0, r + .5 * i.yDire, 0), i.upperBody.rotation.x -= r, e.moveMesh(i.lowerBody, 0, c.legHeight - n, 0);
                for (var s = 0; 4 > s; ++s) i.legMeshes[s] && (i.legMeshes[s].visible = 1 >= s ? !i.crouchVal : !!i.crouchVal)
            }
        }, this.generateMeshes = function(i, r, s = !1) {
            var a = t.classes[i.classIndex].colors,
                l = t.config.thirdPerson || !r;
            if (i.objInstances = e.genObj3D(i.x, i.y, i.z), i.lowerBody = e.genObj3D(0, c.legHeight, 0), l && i.lowerBody.add(e.genBody(a[1], a[2], a[4], a[0])), i.upperBody = e.genObj3D(0, 0, 0), i.lowerBody.add(i.upperBody), 0 <= i.backIndex && l && (i.backMesh = e.genObj3D(0, (c.playerHeight - c.legHeight - c.headScale) / 2 - (t.store.skins[i.backIndex].sitOff || 0), -(t.store.skins[i.backIndex].sitOffZ || 0)), i.lowerBody.add(i.backMesh), e.loadMesh({
                    src: "body/body_" + t.store.skins[i.backIndex].id,
                    texSrc: t.store.skins[i.backIndex].tex ? "body/body_" + t.store.skins[i.backIndex].id + "_" + t.store.skins[i.backIndex].tex : null,
                    glowText: t.store.skins[i.backIndex].glow,
                    emissive: t.store.skins[i.backIndex].glow ? 16777215 : null,
                    noGreen: !0
                }, 0, 0, 0, Math.PI / 2, 2.1 * (t.store.skins[i.backIndex].sclMlt || 1), i.backMesh)), 0 <= i.hatIndex && l && (i.hatMesh = e.genObj3D(0, c.playerHeight - c.legHeight - (t.store.skins[i.hatIndex].sitOff || 0), -(t.store.skins[i.hatIndex].sitOffZ || 0)), i.lowerBody.add(i.hatMesh), e.loadMesh({
                    src: "hats/hat_" + t.store.skins[i.hatIndex].id,
                    texSrc: t.store.skins[i.hatIndex].tex ? "hats/hat_" + t.store.skins[i.hatIndex].id + "_" + t.store.skins[i.hatIndex].tex : null,
                    glowText: t.store.skins[i.hatIndex].glow,
                    emissive: t.store.skins[i.hatIndex].glow ? 16777215 : null,
                    noGreen: !0
                }, 0, 0, 0, Math.PI / 2, 2.1 * (t.store.skins[i.hatIndex].sclMlt || 1), i.hatMesh)), l)
                for (var p = 0; 4 > p; ++p) i.legMeshes.push(e.genLeg(1 == p || 3 == p, a[2], a[3], 1 < p)), 2 <= p && e.rotateMesh(i.legMeshes[p], 2 == p ? -Math.PI / 6 : Math.PI / 8, 0, 0), i.legMeshes[p].visible = 1 >= p, i.objInstances.add(i.legMeshes[p]);
            for (p = 0; p < i.ammos.length; ++p) {
                var h = e.genObj3D(0, 0, 0),
                    u = t.weapons[i.loadout[p]],
                    d = null == u.attach ? null : t.attach[u.attach];
                if (r && u.ammo) {
                    h.muzzles = [], h.casings = [];
                    for (var f = 0; 2 > f; ++f)(!f || u.akimbo) && (h.muzzles.push(new n.Sprite), h.muzzles[f].visible = !1, h.muzzles[f].static = !0, o.particles.push(h.muzzles[f]), h.add(h.muzzles[f]), h.casings.push(e.genObj3D(f ? 2 * -u.xOff : 0, u.caseYOff || 0, u.caseZOff || 0)), h.add(h.casings[f]));
                    h.muzzleFlash = e.genObj3D(0, .4, 0), h.muzzles[0].add(h.muzzleFlash)
                }
                if (u.src || !r) h.add(e.genArms(u, a[1], a[5], a[0], null, !l));
                else {
                    var m;
                    for (f = 0; 2 > f; ++f) m = e.genArms(u, a[1], a[5], a[0], f + 1, !l), h.add(m), i.armMeshes.push(m)
                }
                if (i.weaponMeshes.push(h), i.weaponMeshes[p].visible = !1, i.upperBody.add(i.weaponMeshes[p]), u.src) {
                    var g = t.store.skins[i.skins[p]] || {},
                        v = 0 <= i.skins[p] && (g.glow || g.sameGlow);
                    for (f = 0; 2 > f; ++f)(!f || u.akimbo) && e.loadMesh({
                        src: "weapons/" + u.src,
                        texSrc: g.tex ? g.tex : 0 <= i.skins[p] ? "weapons/skins/" + u.src + "_" + g.id : null,
                        tFilter: n.LinearFilter,
                        movT: g.movT,
                        sameGlow: g.sameGlow,
                        glowText: v,
                        noGreen: !0,
                        uv2: !0,
                        ao: r && !u.noAo,
                        shininess: 40,
                        transparent: u.seeThrough,
                        emissive: u.transp || v ? 16777215 : null
                    }, 1 == f ? -2 * u.xOff : 0, 0, 0, Math.PI / 2, u.scale, i.weaponMeshes[p])
                }
                d && (r || s) && e.loadMesh({
                    src: "attach/" + d.src,
                    tFilter: n.LinearFilter,
                    noGreen: !0,
                    shininess: 40,
                    transparent: !0
                }, 0, -(u.yOrg || 0) + (u.attachYOff || 0), -(u.attachZOff || 0), Math.PI / 2, d.scale, i.weaponMeshes[p])
            }
            return i.objInstances.add(i.lowerBody), r && i.objInstances.traverse(function(t) {
                t.layers.set(1)
            }), i.objInstances
        }, this.hideAll = function() {
            for (var t = 0; t < this.list.length; ++t) this.list[t].active && this.list[t].objInstances && (this.list[t].forcePos = !this.list[t].latestData, this.list[t].latestData = !1, this.list[t].isYou || (this.list[t].objInstances.visible = !1))
        }, this.clear = function() {
            if (e)
                for (var t = 0; t < this.list.length; ++t) this.disposeMesh(this.list[t]);
            this.list.length = 0
        }, this.toggleLOD = function(t, e) {
            t.objInstances && (t.objInstances.visible = e), t.lodActive = !e
        }, this.disposeMesh = function(t) {
            e.remove(t.objInstances), t.objInstances = null, t.hatMesh = null, t.backMesh = null, t.weaponMeshes.length = 0, t.armMeshes.length = 0, t.legMeshes.length = 0;
            var i = document.getElementById("pInfo" + t.sid);
            i && i.parentNode.removeChild(i)
        }, this.add = function(i, n, s, o, p, h, u, d, f, m, g, v, y) {
            for (var x, w = 0; w < this.list.length; ++w)
                if (this.list[w].id == i) {
                    x = this.list[w];
                    break
                } return x ? (x.weaponMeshes.length = 0, x.legMeshes.length = 0, x.armMeshes.length = 0) : ((x = new r(i, this, a, c, t)).sid = n || a.generateSID(this.list), this.list.push(x)), h || (h = "Guest_" + x.sid), x.init(s, o, p, h, v, y), l && null != t.mode && this.setTeam(x), x.skins = d || [-1, -1], x.hatIndex = f, x.backIndex = m, x.secIndex = g, x.setClass(t, u, g, !!e), e && e.add(this.generateMeshes(x, v)), this.swapWeapon(x, 0, !0), "undefined" != typeof window && "updateWindow" in window && window.updateWindow(23), x
        }, this.remove = function(e) {
            var i = this.indexBySid(e);
            if (0 <= i) {
                l && this.list[i] && t.dropFlag(this.list[i].flag);
                this.list[i].room;
                var n = this.list[i].id;
                if (this.list[i].objInstances && this.disposeMesh(this.list[i]), this.list.splice(i, 1), l) {
                    for (var r = this.list.length - 1; 0 <= r; --r) 0 <= (i = this.list[r].sentTo.indexOf(n)) && this.list[r].sentTo.splice(i, 1);
                    l.broadcast("game" + t.sid, "2", e), this.syncLeaders()
                }
                "undefined" != typeof window && "updateWindow" in window && window.updateWindow(23)
            }
        };
        var f = [0, 1, 2];
        this.getStepSound = function() {
            var t = a.randInt(0, f.length - 1),
                e = f[t];
            return f.splice(t, 1), 0 >= f.length && f.push(0, 1, 2), e
        }, this.playerStep = function(e, i, n) {
            if (i && (!e.isYou && e.crouchVal && (i *= 1.6), e.stepVal += i * c.stepMlt * e.stepDir, e.stepVal >= Math.PI / 2 && 1 == e.stepDir || e.stepVal <= -Math.PI / 2 && -1 == e.stepDir)) {
                if (s && !n) {
                    var r = a.randFloat(.1, .22) * (1 > e.crouchVal ? 1 : e.isYou ? .5 : 0),
                        o = (1 > e.crouchVal ? 1 : .8) * a.randFloat(.8, 1.2),
                        l = e.stepSrc ? "_" + e.stepSrc : "";
                    e.isYou ? s.play("step_" + this.getStepSound() + l, r, !1, o) : r && t.playerSound("step_" + a.randInt(0, 2) + l, 0, r, e, o, 10)
                }
                e.stepDir *= -1
            }
        }, this.resetStep = function(e, i) {
            if (!i && e.isYou && e.yVel && (e.jumpTween && e.jumpTween.stop(), e.landTween && e.landTween.stop(), e.landTween = new TWEEN.Tween(e).to({
                    landBobY: 6 * e.yVel,
                    jumpBobY: 0
                }, 100).easing(TWEEN.Easing.Linear.None).onComplete(function() {
                    e.landTween = new TWEEN.Tween(e).to({
                        landBobY: 0
                    }, 1100).easing(TWEEN.Easing.Elastic.Out).start()
                }).start()), s && !i && e.yVel && (e.stepSrc && e.stepSrc, s.play("step_" + this.getStepSound(), .5, !1, a.randFloat(.9, 1.2)), e.isYou && e.crouchVal && t.config.canSlide && e.canSlide && s.play("slide_0", .35, !1, a.randFloat(.9, 1.1))), t.config.canSlide && e.crouchVal && e.canSlide) {
                e.canSlide = !1, e.slideTimer = 350 * e.crouchVal;
                var n = this.onTerrain ? c.playerTerrainSlideVelMlt : c.playerSlideVelMlt;
                e.xVel *= n, e.zVel *= n
            }
        }, this.tryJump = function(e, i) {
            t.config && t.config.autoJump && i ? this.jump(e) : (e.didJump && !i && (e.didJump = !1), !e.didJump && i && this.jump(e))
        }, this.jump = function(e) {
            e.jumpCooldown = e.terrainSlipping ? c.playerSlippingJumpCooldown : 0, e.didJump = !0, e.onTerrain = !1;
            var i = c.jumpVel * (t.config ? t.config.jumpMlt : 1),
                n = c.jumpPush * (t.config ? t.config.jumpMlt : 1);
            e.yVel += (i - i * (c.crouchJump * e.crouchVal)) * e.weapon.spdMlt * (e.aimVal ? 1 : c.aimJumpSlow);
            var r = a.getDistance(0, 0, e.xVel, e.zVel);
            if (e.xVel -= n * r * Math.sin(e.xDire), e.zVel -= n * r * Math.cos(e.xDire), s && !e.recon && e.isYou) {
                e.landTween && e.landTween.stop(), e.landTween = new TWEEN.Tween(e).to({
                    landBobY: 0
                }, 100).easing(TWEEN.Easing.Linear.None).start(), e.jumpTween && e.jumpTween.stop(), e.jumpTween = new TWEEN.Tween(e).to({
                    jumpBobY: .22
                }, 500).easing(TWEEN.Easing.Back.Out).start();
                var o = a.randFloat(.12, .15);
                new TWEEN.Tween(e).to({
                    jumpRot: [o, 0]
                }, 900).easing(TWEEN.Easing.Back.Out).start();
                s.play("jump_" + a.randInt(0, 1), .04, !1, a.randFloat(.9, 1))
            }
        }, this.updateAim = function(t, i) {
            e.zoom(1 + (t.weapon.zoom - 1) * i)
        }, this.toggleAim = function(i, n) {
            if (s && !i.recon && s.play("aim_" + n, .1), n || this.resetAim(), i.weapon.scope && (e.zoom(n ? i.weapon.zoom : 1), i.weaponMeshes[i.weaponIndex].visible = !t.hideWeapon && !n, aimRecticle.style.opacity = n ? 1 : 0), t.attach[i.weapon.attach]) {
                aimDot.style.opacity = n ? 1 : 0;
                var r = t.store.skins[i.skins[i.weaponIndex]],
                    o = "./textures/dots/" + (r && r.dot || "dot_0") + ".png";
                aimDot.src != o && (aimDot.src = o)
            }
        }, this.resetAim = function() {
            e.zoom(1), aimRecticle.style.opacity = 0, aimDot.style.opacity = 0
        }, this.reload = function(t) {
            !t.reloadTimer && t.ammos[t.weaponIndex] < t.weapon.ammo && (s && s.play("reload_1", .25), t.reloadTimer = t.weapon.reload, t.isYou && this.cancelInspect(t))
        }, this.endReload = function(t) {
            s && s.play("reload_2" + (t.custReload || ""), .25)
        }, this.updatePlayerAmmo = function(t) {
            t.isYou && (ammoDisplay.style.display = t.weapon.melee ? "none" : "inline-block", t.weapon.melee ? reloadMsg.style.display = "none" : (ammoVal.innerHTML = t.ammos[t.weaponIndex] + " <span id='ammoMax'> | " + t.weapon.ammo + "</span>", 0 >= t.ammos[t.weaponIndex] ? (reloadMsg.innerHTML = "[R] Reload", reloadMsg.style.display = "block") : reloadMsg.style.display = "none"))
        }, this.cancelInspect = function(t) {
            t.inspecting = !1, t.inspectX = 0
        }, this.wInspect = function(t) {
            t.inspecting ? this.cancelInspect(t) : !t.weapon.nInsp && !t.inspecting && 1 == t.aimVal && !t.reloadTimer && (t.inspecting = !0)
        }, this.melee = function(e) {
            e.reloads[e.weaponIndex] = e.weapon.rate, e.didShoot = !0, e.isYou && (e.weapon.anim && e.weapon.anim(e, TWEEN), e.weapon.sounds && s.play(e.weapon.sounds[a.randInt(0, e.weapon.sounds.length - 1)], .1, !1, a.randFloat(.9, 1.1)));
            var i = e.xDire,
                n = e.yDire;
            m.length = 0;
            for (var r = 0, o = 1 / (e.weapon.range * Math.sin(i + Math.PI) * Math.cos(n)), p = 1 / (e.weapon.range * Math.cos(i + Math.PI) * Math.cos(n)), u = 1 / (e.weapon.range * Math.sin(n)), d = e.y + e.height - c.cameraHeight, f = 0; f < t.map.manager.objects.length; ++f)(h = t.map.manager.objects[f]).active && !h.noShoot && ((r = a.lineInRect(e.x, e.z, d, o, p, u, h.x - h.width, h.z - h.length, h.y - h.height, h.x + h.width, h.z + h.length, h.y + h.height)) && 1 >= r && m.push({
                obj: h,
                dst: r
            }));
            if (l)
                for (f = 0; f < this.list.length; ++f) this.list[f].active && e != this.list[f] && (!e.team || e.team != this.list[f].team) && ((h = this.fetchState(this.list[f], e.ping)) && ((r = a.lineInRect(e.x, e.z, d, o, p, u, h.x - this.list[f].scale - c.hitBoxPad, h.z - this.list[f].scale - c.hitBoxPad, h.y, h.x + this.list[f].scale + c.hitBoxPad, h.z + this.list[f].scale + c.hitBoxPad, h.y + this.list[f].height + c.hitBoxPad)) && 1 >= r && m.push({
                    player: !0,
                    obj: this.list[f],
                    dst: r
                })));
            e.weapon.range;
            if (m.length) {
                m.sort(a.orderByDst);
                var g = e.weapon.dmg;
                for (f = 0; f < m.length && (h = m[f], e.weapon.range * h.dst, l) && (l && !t.waitTimers && h.obj && h.obj.health && !h.player && (h.obj.health -= g, 0 >= h.obj.health && (h.obj.active = !1, h.obj.health = 0, t.destObjs.push(h.obj.uid), l.broadcast("game" + t.sid, "do", h.obj.uid))), h.player || h.obj && h.obj.dummy) && (this.changeHealth(h.obj, e, g) && this.kill(h.obj, e, {}), !(0 >= (g -= null == e.weapon.pierce ? g : e.weapon.dmg * c.materialDens.flesh * e.weapon.pierce))); ++f);
            }
        };
        var m = [];
        this.shoot = function(i) {
            if (i.reloads[i.weaponIndex] = i.weapon.rate, i.ammos[i.weaponIndex]--, i.didShoot = !0, this.updatePlayerAmmo(i), t.playSound) {
                var n = i.ammos[i.weaponIndex] / t.weapons[i.loadout[i.weaponIndex]].ammo;
                .25 >= n && !i.weapon.nRing ? (t.playSound("gclick_0", .3 * (1 - n / .25), i, !1, a.randFloat(.9, 1)), t.playSound(i.weapon.sound, .85, i, !1, a.randFloat(.9, 1) + .15 * (1 - n / .25))) : t.playSound(i.weapon.sound, .85, i, !1, a.randFloat(.9, 1))
            }
            if (i.recoilForce += i.weapon.recoil, i.isYou) {
                var r = a.randInt(0, 1) ? -i.weapon.recoilR : i.weapon.recoilR;
                i.recoilX += r, i.recoilZ += r, i.recoilTween && i.recoilTween.stop();
                var p = i.weapon.recoilAnim && i.weapon.recoilAnim.time || i.weapon.rate;
                i.recoilTween = new TWEEN.Tween(i).to(i.weapon.recoilAnim || {}, .15 * p).easing(TWEEN.Easing.Linear.None).onComplete(function() {
                    i.recoilTween = new TWEEN.Tween(i).to({
                        recoilTweenY: 0,
                        recoilTweenYM: 0,
                        recoilTweenZ: 0
                    }, .95 * p).easing(TWEEN.Easing.Back.Out).start()
                }).start(), this.cancelInspect(i)
            }
            if (i.isYou && !t.hideWeapon) {
                var u = i.weaponMeshes[i.weaponIndex],
                    d = 0 == i.aimVal && i.weapon.scope;
                if (o.showMuzzle && (0 == e.useDepthMap || "0" == e.useDepthMap)) {
                    for (var f = 0; f < u.muzzles.length; ++f) u.muzzles[f].visible = !0, o.setMaterial(u.muzzles[f], i.weapon.muzID || 2, 1, !0), u.muzzles[f].init(f ? -2 * i.weapon.xOff : 0, i.weapon.muzOffY || 0, -i.weapon.muzOff, 0, 0, 0, 4 * (i.weapon.muzMlt || 1), 1);
                    if (!d)(H = i.weaponMeshes[i.weaponIndex].muzzles[0].getWorldPosition().clone()).project(e.camera), H.x = (H.x + 1) / 2, H.y = (H.y + 1) / 2, e.flash(H.x, H.y)
                }
                if (!i.weapon.nCase && o.active)
                    for (f = 0; f < i.weaponMeshes[i.weaponIndex].casings.length; ++f) H = i.weaponMeshes[i.weaponIndex].casings[f].getWorldPosition(), s && s.play3D("case_" + a.randInt(0, 1), H.x, H.y, H.z, .65, a.randFloat(.8, 1.3)), d || o.physObj(H.x, H.y, H.z, i.xDire - Math.PI / 2 * (f ? -1 : 1), Math.PI / 5 * a.randFloat(.4, 1.2), 25, i.weapon.caseInd || 1, i)
            }
            if (null == i.weapon.projectile)
                for (var g = 0; g < (i.weapon.shots || 1); ++g) {
                    //CHEAT:Triggerbot no-recoil
                    var v = (module_triggerbot_toggle == true ? true : (i.spread + (i.weapon.innac || 0)) * c.spreadAdj),
                        y = i.xDire + a.randFloat(-v, v),
                        x = i.yDire + i.recoilAnimY * c.recoilMlt + a.randFloat(-v, v);
                    m.length = 0;
                    for (var w = 0, b = 1 / (i.weapon.range * Math.sin(y + Math.PI) * Math.cos(x)), M = 1 / (i.weapon.range * Math.cos(y + Math.PI) * Math.cos(x)), S = 1 / (i.weapon.range * Math.sin(x)), _ = i.y + i.height - c.cameraHeight, T = 0; T < t.map.manager.objects.length; ++T)(h = t.map.manager.objects[T]).active && !h.noShoot && ((w = a.lineInRect(i.x, i.z, _, b, M, S, h.x - h.width, h.z - h.length, h.y - h.height, h.x + h.width, h.z + h.length, h.y + h.height)) && 1 >= w && m.push({
                        obj: h,
                        dst: w
                    }));
                    if (l)
                        for (T = 0; T < this.list.length; ++T) this.list[T].active && i != this.list[T] && (!i.team || i.team != this.list[T].team) && ((h = this.fetchState(this.list[T], i.ping)) && ((w = a.lineInRect(i.x, i.z, _, b, M, S, h.x - this.list[T].scale - c.hitBoxPad, h.z - this.list[T].scale - c.hitBoxPad, h.y, h.x + this.list[T].scale + c.hitBoxPad, h.z + this.list[T].scale + c.hitBoxPad, h.y + this.list[T].height + c.hitBoxPad)) && 1 >= w && m.push({
                            player: !0,
                            obj: this.list[T],
                            dst: w
                        })));
                    var E = t.map.terrain;
                    if (E) {
                        var A = E.raycast(i.x, -i.z, _, 1 / b, -1 / M, 1 / S);
                        if (A) {
                            let t = a.getDistance3D(i.x, _, i.z, A.x, A.z, -A.y);
                            m.push({
                                terrain: !0,
                                dst: t / i.weapon.range
                            })
                        }
                    }
                    var L = i.weapon.range;
                    if (m.length) {
                        m.sort(a.orderByDst);
                        var k = i.weapon.dmg;
                        for (T = 0; T < m.length && (h = m[T], L = i.weapon.range * h.dst, l); ++T) {
                            var R = i.weapon.dropStart || 0,
                                P = Math.min(1, 1 - (1 - h.dst) * i.weapon.range / (i.weapon.range - R)),
                                C = k - i.weapon.dmgDrop * P,
                                I = !1,
                                O = !1;
                            if (h.player) {
                                var D = _ + L * Math.sin(x);
                                I = h.obj.y + h.obj.height - D < c.headScale, O = h.obj.y + c.legHeight > D, C *= I && !i.weapon.noHeadShot ? 1.5 : 1, C *= O ? .5 : 1
                            }
                            if (l && !t.waitTimers && h.obj && h.obj.health && !h.player && (h.obj.health -= C, 0 >= h.obj.health && (h.obj.active = !1, h.obj.health = 0, t.destObjs.push(h.obj.uid), l.broadcast("game" + t.sid, "do", h.obj.uid))), h.player || h.obj && h.obj.dummy) {
                                if (this.changeHealth(h.obj, i, C)) {
                                    var B = {
                                        dst: h.dst,
                                        headShot: I
                                    };
                                    this.kill(h.obj, i, B)
                                }
                                k -= null == i.weapon.pierce ? k : i.weapon.dmg * c.materialDens.flesh * i.weapon.pierce
                            } else {
                                if (!h.obj || !h.obj.penetrable) break;
                                k -= null == i.weapon.pierce ? k : i.weapon.dmg * c.materialDens.default * i.weapon.pierce
                            }
                            if (0 >= k) break
                        }
                    }
                    L -= .12;
                    var z = i.x + L * Math.sin(y + Math.PI) * Math.cos(x),
                        N = (D = _ + L * Math.sin(x), i.z + L * Math.cos(y + Math.PI) * Math.cos(x)),
                        U = 0,
                        F = 0;
                    if (m.length && (h.terrain ? F = Math.PI / 2 : D >= h.obj.y + h.obj.height ? F = Math.PI / 2 : D <= h.obj.y - h.obj.height ? F = -Math.PI / 2 : z <= h.obj.x - h.obj.width ? U = -Math.PI / 2 : z >= h.obj.x + h.obj.width ? U = Math.PI / 2 : N <= h.obj.z - h.obj.length && (U = Math.PI), !l && o.effect(z, D, N, U, F, 0)), l)
                        for (T = 0; T < this.list.length; ++T)(this.list[T].active || this.list[T].spectating) && this.list[T] != i && (m.length && !h.player ? l.send(this.list[T].id, "9", i.sid, Math.round(z), Math.round(D), Math.round(N), U.round(1), F.round(1)) : l.send(this.list[T].id, "9", i.sid, Math.round(z), Math.round(D), Math.round(N)));
                    if (i.isYou && L >= c.tracerMinDst) {
                        var H, j = a.randInt(0, i.weaponMeshes[i.weaponIndex].muzzles.length - 1),
                            G = (H = i.weaponMeshes[i.weaponIndex].muzzles[j].getWorldPosition()).x,
                            V = H.y,
                            W = H.z;
                        a.getDistance3D(G, V, W, z, D, N), U = a.getDirection(W, G, N, z), F = a.getDirection(a.getDistance(G, W, z, N), D, 0, V);
                        o.physObj(G, V, W, U, F, Math.min(L, c.tracerMaxDst), 0, i)
                    }
                } else if (l) {
                    v = (i.spread + (i.weapon.innac || 0)) * c.spreadAdj, y = i.xDire + a.randFloat(-v, v), x = i.yDire + i.recoilAnimY * c.recoilMlt + a.randFloat(-v, v);
                    t.projectiles.init(i.x, i.y + i.height - c.cameraHeight, i.z, y, x, i.weapon.projectile, i)
                }
        }, this.spray = function(e) {
            if (t.now - e.lastSpray >= c.sprayTimer) {
                m.length = 0;
                for (var i = 0, n = 1 / (c.sprayRange * Math.sin(e.xDire + Math.PI) * Math.cos(e.yDire)), r = 1 / (c.sprayRange * Math.cos(e.xDire + Math.PI) * Math.cos(e.yDire)), s = 1 / (c.sprayRange * Math.sin(e.yDire)), o = 0; o < t.map.manager.objects.length; ++o)(h = t.map.manager.objects[o]).noShoot || (i = a.lineInRect(e.x, e.z, e.y + e.height - c.cameraHeight, n, r, s, h.x - h.width, h.z - h.length, h.y - h.height, h.x + h.width, h.z + h.length, h.y + h.height)) && 1 >= i && m.push({
                    obj: h,
                    dst: i
                });
                if (m.length && (m.sort(a.orderByDst), h = m[0].obj)) {
                    var p = c.sprayRange * m[0].dst - .1,
                        u = e.y + e.height - c.cameraHeight + p * Math.sin(e.yDire),
                        d = e.x + p * Math.sin(e.xDire + Math.PI) * Math.cos(e.yDire),
                        f = e.z + p * Math.cos(e.xDire + Math.PI) * Math.cos(e.yDire),
                        g = 0,
                        v = 0;
                    u >= h.y + h.height ? v = -90 : u <= h.y - h.height ? v = 90 : d <= h.x - h.width ? g = -90 : d >= h.x + h.width ? g = 90 : f <= h.z - h.length && (g = 180);
                    var y = c.sprayScale / 2;
                    if (v) {
                        if (h.width < y || h.length < y) return;
                        f - y < h.z - h.length ? f = h.z - h.length + y : f + y > h.z + h.length && (f = h.z + h.length - y), d - y < h.x - h.width ? d = h.x - h.width + y : d + y > h.x + h.width && (d = h.x + h.width - y)
                    } else {
                        if (h.height < y) return;
                        if (90 == g || -90 == g) {
                            if (h.length < y) return;
                            f - y < h.z - h.length ? f = h.z - h.length + y : f + y > h.z + h.length && (f = h.z + h.length - y)
                        } else {
                            if (h.width < y) return;
                            d - y < h.x - h.width ? d = h.x - h.width + y : d + y > h.x + h.width && (d = h.x + h.width - y)
                        }
                        u + y > h.y + h.height && (u = h.y + h.height - y)
                    }
                    e.lastSpray = t.now, t.playSound && t.playSound("spray", .4, e, !0), l.broadcast("game" + t.sid, "sp", e.sid, e.sprayIndex, d.round(2), u.round(2), f.round(2), g, v)
                }
            }
        };
        var g = [];
        this.syncLeaders = function() {
            u = t.mode.killSort ? this.list.slice().sort(a.orderByKills) : this.list.slice().sort(a.orderByScore), g.length = 0;
            for (var e = 0, i = 0, n = 0; n < u.length; ++n) u[n].spectating ? i++ : 10 > e && (e++, g.push(u[n].sid, u[n].account ? u[n].account.name : u[n].name, u[n].team, t.mode.killSort ? u[n].kills : u[n].score, u[n].account ? u[n].account.clan : 0, u[n].account ? u[n].account.featured : 0));
            l.broadcast("game" + t.sid, "7", g, i)
        }, this.score = function(e, i, n) {
            l && (e.score += i, l.send(e.id, "5", i), this.syncLeaders(), t.mode.teams && e.team && t.teams && !t.mode.noScoreC && (!n || !t.mode.objective) && (t.teams[e.team] ? t.teams[e.team] += i : t.teams[e.team] = i, l.broadcast("game" + t.sid, "ts", e.team, t.teams[e.team])))
        }, this.tickPlayer = function(t, e) {
            t.playTime += e, 0 < t.hitTimer && (t.hitTimer -= e), t.ticker -= e, 0 >= t.ticker && (t.ticker = 500, 0 >= t.hitTimer && !t.challMode && this.changeHealth(t, null, -t.maxHealth * (t.regen || c.regenVal)))
        }, this.changeHealth = function(e, i, n, r) {
            if ((!t.waitTimers || t.waitTimers[0].canDMG) && !(0 > n && e.health == e.maxHealth) && (i && i.isHacker && (n *= .1), i && i.lastHack && 2e3 >= t.now - i.lastHack && (n *= .1), !(!r && e.team && i && e.team == i.team && 0 < n))) {
                if (i && i != e && l.send(i.id, "4"), e.dummy) return !0;
                0 < n && (e.hitTimer = t.mode.regenDelay || c.regenDelay), e.health -= n, e.health = Math.max(Math.min(e.maxHealth, e.health), 0), i ? (l.send(e.id, "h", Math.ceil(e.health), null, Math.round(i.x), Math.round(i.z)), i != e && (e.dmgReceived[i.id] ? (e.dmgReceived[i.id].val += n, e.dmgReceived[i.id].time = t.now) : e.dmgReceived[i.id] = {
                    time: t.now,
                    val: n
                })) : l.send(e.id, "h", Math.ceil(e.health));
                for (var s = 0; s < this.list.length; ++s) this.list[s] != e && l.send(this.list[s].id, "h", Math.ceil(e.health), e.sid);
                return 0 >= e.health
            }
        }, this.swapWeapon = function(i, n, r, s) {
            if (!(1 >= i.ammos.length && n || s > i.ammos.length)) {
                var o = i.weaponIndex;
                if (n && (1 != n && -1 != n && (n = 0), i.reloadTimer = 0, i.weaponIndex += n, i.didShoot = !1, 0 > i.weaponIndex && (i.weaponIndex = i.ammos.length - 1), i.weaponIndex > i.ammos.length - 1 && (i.weaponIndex = 0)), null != s && (i.weaponIndex = s), i.weapon = t.weapons[i.loadout[i.weaponIndex]], i.weapon || (i.weapon = t.weapons[i.loadout[0]], i.weapon && (i.weaponIndex = 0)), e && (o != i.weaponIndex || r)) {
                    this.cancelInspect(i);
                    for (var a = 0; a < i.weaponMeshes.length; ++a) i.weaponMeshes[a].visible = !1;
                    i.weaponMeshes[i.weaponIndex] && (i.weaponMeshes[i.weaponIndex].visible = !t.hideWeapon || !i.isYou)
                }
                if (null == s && i.weapon && (!e || i.isYou) && (i.swapTime = i.weapon.swapTime, i.isYou && (o != i.weaponIndex || r))) {
                    var c, l = "";
                    for (a = i.ammos.length - 1; 0 <= a; --a) c = a == i.weaponIndex, t.weapons[i.loadout[a]].icon && (l += "<div class='weaponItem'><img style='opacity:" + (c ? 1 : .7) + "' class='weaponIcon' src='./textures/weapons/" + t.weapons[i.loadout[a]].icon + ".png' /></div>");
                    weaponDisplay.innerHTML = l, this.updatePlayerAmmo(i)
                }
            }
        }, this.checkStreak = function(e) {
            for (var i = 0; i < t.streaks.length; ++i) e.killStreak == t.streaks[i].kills && this.addStreak(e, i)
        }, this.useStreak = function(e, i) {
            e.streaks[i] && e.streaks[i].activate(t, e) && (e.streaks[i] = null, l.send(e.id, "st", i, 1))
        }, this.addStreak = function(e, i) {
            e.streaks[i] || (e.streaks[i] = t.streaks[i], l.send(e.id, "st", i))
        }, this.kill = function(e, i, n, r, s) {
            if (e.dummy || (e.active = !1, e.isYou && this.toggleAim(e, 0), e.objInstances && this.disposeMesh(e)), l) {
                var o;
                if (e.deaths++, e.deathStreak++, e.lives && !t.waitTimers && (e.lives--, l.send(e.id, "lv", e.lives)), t.kills++, i && i != e) {
                    e.dummy || i.kills++, i.streak++, i.killStreak++, i.deathStreak = 0, this.checkStreak(i);
                    var a = 0;
                    5 == i.killStreak ? a = 5 : 10 == i.killStreak ? a = 10 : 15 == i.killStreak ? a = 15 : 20 == i.killStreak ? a = 20 : 25 == i.killStreak ? a = 25 : 30 == i.killStreak && (a = 30), a && l.broadcast("game" + t.sid, "kst", i.sid, a), t.now - i.lastKill >= c.feedTimer && (i.streak = 0), i.lastKill = t.now, !s && t.config.killRewards && ((o = d.reward(this, i, e, n, t)) && l.send(i.id, "6", o, n.headShot ? 1 : 0, i.kills), this.score(i, d.getScore(o), !0))
                }
                if (t.dropFlag(e.flag), !e.dummy)
                    for (var p = 0; p < this.list.length; ++p) e.dmgReceived[this.list[p].id] && i != this.list[p] && e.dmgReceived[this.list[p].id].val >= c.assistMin && t.now - e.dmgReceived[this.list[p].id].time <= c.assistTime && (this.score(this.list[p], c.assistScore, !0), l.send(this.list[p].id, "10")), this.list[p] == e ? l.send(e.id, "3", e.sid, i ? i.sid : 0, [i ? i.loadout[i.weaponIndex] : -1, o ? d.getScore(o) : 0], r) : l.send(this.list[p].id, "3", e.sid, i ? i.sid : 0, null, r)
            }
        }, this.indexBySid = function(t) {
            for (var e = 0; e < this.list.length; ++e)
                if (this.list[e].sid == t) return e;
            return -1
        }, this.findBySid = function(t) {
            for (var e = 0; e < this.list.length; ++e)
                if (this.list[e].sid === t) return this.list[e];
            return null
        }
    }
}, function(t, e, i) {
    var n = i(1),
        r = i(3),
        s = new n.Vector3;

    function o() {
        n.Object3D.call(this), this.largeSpawnCount = 8, this.smallSpawnCount = 15, this.emissiveness = .55, this.velocityDamping = 3, this.lifeSpeedMin = 2.2, this.lifeSpeedRange = 3;
        var t = new n.Geometry({
                dynamic: !0
            }),
            e = new n.Color(12303291);
        this.mesh = new n.Mesh(t, new n.MeshLambertMaterial({
            color: e,
            emissive: e.multiplyScalar(this.emissiveness),
            flatShading: !0
        })), this.mesh.castShadow = !0, this.mesh.receiveShadow = !0, this.add(this.mesh), this.cubeTemplate = new n.BoxGeometry(1, 1, 1);
        for (var i = 0; i < this.cubeTemplate.faces.length; i++) this.cubeTemplate.faces[i].materialIndex = 0;
        this.cubeTemplate.faceVertexUvs = [
            []
        ], this.entities = []
    }
    o.staticMatrix = new n.Matrix4, o.prototype = Object.create(n.Object3D.prototype), Object.defineProperty(o, "finished", function() {
        return 0 === this.entities.length
    }), o.prototype.explodeAt = function(t, e, i, n) {
        this.sizeMin = .35 * n, this.sizeRange = 2.2 * n, this.velocityMin = 30 * n, this.velocityRange = 17 * n, s.set(t, e, i);
        for (var r = 0; r < this.largeSpawnCount; r++) this.spawnEntity(.1 * Math.random() + .9, s, !1);
        for (r = 0; r < this.smallSpawnCount; r++) this.spawnEntity(.9 * Math.random(), s, !1)
    }, o.prototype.spawnEntity = function(t, e) {
        for (var i = Math.pow(t, 2.5), n = i * this.sizeRange + this.sizeMin, r = (1 - i) * this.velocityRange + this.velocityMin, s = this._randomVector().normalize().multiplyScalar(r), a = i * this.lifeSpeedRange + this.lifeSpeedMin, c = 0;;) {
            for (var l = !0, p = 0; p < this.entities.length; p++)
                if (this.entities[p].index === c) {
                    l = !1;
                    break
                } if (l) break;
            c++
        }
        8 * c > this.mesh.geometry.vertices.length - 1 && this.mesh.geometry.merge(this.cubeTemplate, o.emptyMatrix), this.entities.push({
            index: c,
            rank: i,
            rankSeed: t,
            life: 0,
            lifeSpeed: a,
            size: n,
            position: e.clone(),
            velocity: s
        })
    }, o.prototype.destroyEntity = function(t) {
        this.entities.splice(this.entities.indexOf(t), 1);
        for (var e = 8 * t.index; e < 8 * (t.index + 1); e++) this.mesh.geometry.vertices[e].set(0, 0, 0);
        this.mesh.geometry.verticesNeedUpdate = !0, this.mesh.geometry.elementsNeedUpdate = !0, this._cleanGeometry()
    }, o.prototype.update = function(t) {
        t /= 1e3;
        for (var e, i = 0; i < this.entities.length; i++) {
            (e = this.entities[i]).life += t * e.lifeSpeed, e.velocity.multiplyScalar(1 - this.velocityDamping * t), e.position.add(e.velocity.clone().multiplyScalar(t));
            var n = 2 - Math.pow(e.life / Math.sqrt(2), 2);
            n *= e.size;
            for (var r = 8 * e.index; r < 8 * (e.index + 1); r++) {
                var s = this.mesh.geometry.vertices[r],
                    o = this.cubeTemplate.vertices[r % 8];
                s.set(e.position.x, e.position.y, e.position.z).addScaledVector(o, n)
            }
            0 >= n && this.destroyEntity(e)
        }
        this.mesh.geometry.verticesNeedUpdate = !0, this.mesh.geometry.elementsNeedUpdate = !0, this.mesh.geometry.computeBoundingSphere()
    }, o.prototype._cleanGeometry = function() {
        for (var t, e = this.mesh.geometry.vertices, i = this.mesh.geometry.faces, n = -1, r = 0; r < this.entities.length; r++)(t = this.entities[r]).index > n && (n = t.index);
        var s = n + 1;
        e.splice(8 * s, e.length - 8 * s), i.splice(12 * s, i.length - 12 * s)
    }, o.prototype._randomVector = function() {
        return new n.Vector3(Math.random() - .5, Math.random() - .5, Math.random() - .5)
    };
    var a = [{
            mat: n.MeshBasicMaterial,
            snd: {
                rng: 26,
                src: ["whizz_0", "whizz_1"],
                vol: .12
            },
            spd: 1.7,
            scale: 1,
            length: 13,
            color: 16777179
        }, {
            spd: [.03, .031],
            rand: !0,
            grav: 3e-4,
            spn: [.04, .05],
            scale: .15,
            length: .5,
            color: 10124094
        }, {
            spd: [.03, .031],
            rand: !0,
            grav: 3e-4,
            spn: [.03, .05],
            scale: .12,
            length: .4,
            color: 12816686
        }],
        c = function(t) {
            this.mesh = new n.Mesh(t.cubeGeo), this.init = function(e, i, s, o, a, c, l, p) {
                this.dst = c, this.spd = l.spd[1] ? r.randFloat(l.spd[0], l.spd[1]) : l.spd, o -= Math.PI, this.xS = this.spd * Math.sin(o) * Math.cos(a) + (p ? p.xVel : 0), this.zS = this.spd * Math.cos(o) * Math.cos(a) + (p ? p.zVel : 0), this.yS = this.spd * Math.sin(a) + (p ? p.yVel : 0), this.grav = l.grav, this.spin = l.spn ? l.spn[1] ? r.randFloat(l.spn[0], l.spn[1]) : l.spn : 0, this.mesh.receiveShadow = l.mat != n.MeshBasicMaterial, this.mesh.material = t.getMat("default", {
                    fog: l.mat != n.MeshBasicMaterial,
                    color: l.color,
                    emissive: l.emis,
                    mat: l.mat
                }), this.sound = p && p.isYou ? null : l.snd, this.soundPlayed = !1, p && p.isYou ? this.mesh.layers.set(1) : this.mesh.layers.set(0), t.moveMesh(this.mesh, e, i, s), this.mesh.lookAt(e + this.xS, i + this.yS, s + this.zS), l && l.rand && this.mesh.rotateX(r.randFloat(-Math.PI, Math.PI)), t.scaleMesh(this.mesh, l.scale, l.scale, l.length)
            }, this.checkSound = function() {
                if (this.sound && !this.soundPlayed) {
                    var t = Howler.pos();
                    r.getDistance3D(t[0], t[1], t[2], this.mesh.position.x, this.mesh.position.y, this.mesh.position.z) <= this.sound.rng && (SOUND.play(this.sound.src[r.randInt(0, this.sound.src.length - 1)], this.sound.vol, !1, r.randFloat(.8, 1.2)), this.soundPlayed = !0)
                }
            }, this.update = function(t) {
                this.mesh.visible && (this.mesh.position.x += this.xS * t, this.mesh.position.z += this.zS * t, this.mesh.position.y += this.yS * t, this.spin && this.mesh.rotateX(this.spin * t), this.yS -= (this.grav || 0) * t, this.dst -= this.spd * t, this.checkSound(), 0 >= this.dst && (this.mesh.visible = !1))
            }
        };
    n.Sprite.prototype.init = function(t, e, i, n, r, s, o, a, c, l) {
        this.position.x = t, this.position.y = e, this.position.z = i, this.xVel = n, this.yVel = r, this.zVel = s, this.scale.x = this.scale.y = o, this.life = a || 0, this.grav = c || 0, this.area = l, this.updC = 0
    }, n.Sprite.prototype.update = function(t) {
        if (this.visible) {
            if (this.position.x += this.xVel * t, this.position.y += this.yVel * t, this.yVel -= this.grav * t, this.position.z += this.zVel * t, this.area) {
                var e = this.scale.x / 2;
                this.position.x - e >= this.area.x + this.area.w ? this.position.x = this.area.x - this.area.w - e : this.position.x + e <= this.area.x - this.area.w && (this.position.x = this.area.x + this.area.w + e), this.position.z - e >= this.area.z + this.area.l ? this.position.z = this.area.z - this.area.l - e : this.position.z + e <= this.area.z - this.area.l && (this.position.z = this.area.z + this.area.l + e), this.position.y - e >= this.area.y + this.area.h ? this.position.y = this.area.y - e : this.position.y + e <= this.area.y && (this.position.y = this.area.y + this.area.h + e)
            }
            0 < this.life ? (this.life -= t, 0 >= this.life && this.updC && (this.visible = !1), this.updC++) : 0 >= this.life && this.updC && (this.visible = !1)
        }
    };
    var l = [Math.PI / 3, -Math.PI / 3],
        p = [{
            hole: !0,
            count: 2,
            grav: -2e-5,
            scale: [5, 9],
            speed: [0, .025],
            spread: [-.4, .4],
            life: [300, 500]
        }, {}, {
            count: 1,
            blending: 2,
            scale: [5, 7],
            speed: [0, 0],
            spread: [0, 0],
            life: [30, 35]
        }, {
            count: 1,
            blending: 2,
            scale: [2e3, 2e3],
            speed: [0, 0],
            spread: [0, 0]
        }, {
            count: 4,
            src: "0",
            scale: [5, 6],
            speed: [0, .01],
            spread: [-1, 1],
            life: [600, 800]
        }];
    t.exports = function(t) {
        var e, i;
        this.particles = [], this.physObjs = [], this.areas = [], this.active = !0, this.ExplosionManager = new o, this.prefabs = [{
            src: "glow_0",
            blending: 2,
            spd: .008,
            cnt: 2.2,
            grav: [-.015, -.005],
            scl: [.7, 1],
            dir: 0
        }, {
            src: "glow_1",
            blending: 1,
            spd: .003,
            cnt: 8,
            grav: [-.2, -.22],
            scl: [1, 1.5],
            dir: 0
        }, {
            src: "fog_0",
            blending: 1,
            spd: .002,
            cnt: 6,
            grav: [0, 0],
            scl: [25, 30],
            dir: 0
        }], this.area = function(t, e, i, n, s, o, a, c) {
            n /= 2, o /= 2, this.areas.push({
                f: c,
                x: t,
                y: e,
                z: i,
                w: n,
                h: s,
                l: o
            });
            for (var l = 0; l < a.count; ++l) this.add(a.src, t + r.randInt(-n, n), e + r.randInt(0, s), i + r.randInt(-o, o), a.spd * Math.sin(a.dir), a.grav ? r.randFloat(a.grav[0], a.grav[1]) : 0, a.spd * Math.cos(a.dir), r.randFloat(a.scl[0], a.scl[1]), 0, 0, a.blending, this.areas[this.areas.length - 1])
        }, this.effect = function(i, s, o, a, c, l) {
            if (this.active && (0 == t.useDepthMap || "0" == t.useDepthMap)) {
                e = p[l];
                for (var h = 0; h < e.count; ++h) {
                    var u = r.randFloat(e.speed[0], e.speed[1]),
                        d = a + r.randFloat(e.spread[0], e.spread[1]),
                        f = c + r.randFloat(e.spread[0], e.spread[1]);
                    this.add(l, i, s, o, u * Math.sin(d) * Math.cos(f), u * Math.sin(f), u * Math.cos(d) * Math.cos(f), r.randFloat(e.scale[0], e.scale[1]), e.life ? r.randInt(e.life[0], e.life[1]) : 0, e.grav, e.blending, null, e.src)
                }
                e.hole && this.add(1, i, s, o, 0, 0, 0, r.randFloat(.4, 1), 5e3, 0, n.SubtractiveBlending)
            }
        }, this.add = function(e, r, s, o, a, c, l, p, h, u, d, f, m) {
            i = null;
            for (var g = 0; g < this.particles.length; ++g)
                if (!this.particles[g].visible && !this.particles[g].static) {
                    i = this.particles[g];
                    break
                } i || (i = new n.Sprite, this.particles.push(i), t.scene.add(i)), this.setMaterial(i, m || e, d, !0), i.visible = !0, i.init(r, s, o, a, c, l, p, h, u, f)
        }, this.setMaterial = function(e, i, s, o) {
            e.material = t.getMat("particles/" + i, {
                mat: n.SpriteMaterial,
                depthWrite: !1,
                blending: s || n.NormalBlending,
                rotation: o ? l[r.randInt(0, 2)] : 0
            })
        }, this.physObj = function(e, n, r, s, o, l, p, h, u, d) {
            if (0 == t.useDepthMap || "0" == t.useDepthMap) {
                i = null;
                for (var f = 0; f < this.physObjs.length; ++f)
                    if (!this.physObjs[f].mesh.visible) {
                        i = this.physObjs[f];
                        break
                    } i || (i = new c(t), this.physObjs.push(i), t.scene.add(i.mesh)), i.sid = null == d ? null : d, i.mesh.visible = !0, i.init(e, n, r, s, o, l, u || a[p], h)
            }
        }, this.disablePhys = function(t) {
            for (var e = 0; e < this.physObjs.length; ++e) this.physObjs[e].sid == t && (this.physObjs[e].mesh.visible = !1)
        }, this.update = function(t, e) {
            if (e && e.active)
                for (var i = 0; i < this.areas.length; ++i) this.areas[i].f && (this.areas[i].x = e.x, this.areas[i].y = e.y, this.areas[i].z = e.z);
            for (i = 0; i < this.particles.length; ++i) this.particles[i].update(t);
            for (i = 0; i < this.physObjs.length; ++i) this.physObjs[i].update(t);
            this.ExplosionManager.update(t)
        }, this.reset = function() {
            this.particles.length = 0, this.physObjs.length = 0, this.areas.length = 0
        }
    }
}, function(t, e) {
    t.exports.wheels = [{
        name: "Starter",
        lab: {
            nm: "Any",
            col: "#E040FB"
        },
        price: 50,
        rarities: [75, 22, 3, 0, 0, 0]
    }, {
        name: "Elite",
        lab: {
            nm: "Any",
            col: "#E040FB"
        },
        price: 100,
        rarities: [50, 30, 15, 5, 0, 0]
    }, {
        name: "Heroic",
        lab: {
            nm: "Any",
            col: "#E040FB"
        },
        price: 500,
        rarities: [0, 48, 35, 14, 2.5, .5]
    }, {
        name: "Hunter",
        lab: {
            nm: "Snipers Only!",
            col: "#fab640"
        },
        itemTypes: [0],
        weaponType: 1,
        price: 600,
        rarities: [43, 33, 17, 6, 1, 0]
    }, {
        name: "Attire",
        lab: {
            nm: "Outfits Only!",
            col: "#ed4242"
        },
        itemTypes: [1, 2],
        price: 750,
        rarities: [43, 33, 17, 6, 1, 0]
    }, {
        name: "Free",
        free: !0,
        openURL: !0,
        minLvl: 5,
        price: 0,
        priceT: "Follow for a free Spin",
        rarities: [43, 33, 17, 6, 1, 0]
    }], t.exports.types = ["weapons/weapon_", "hats/hat_", "body/body_", "weapons/melee_"], t.exports.purchases = [{
        val: 300,
        price: .99
    }, {
        val: 600,
        price: 1.79
    }, {
        val: 2600,
        tag: "Popular!",
        tagCol: "#ed4242",
        price: 7.49
    }, {
        val: 7e3,
        tag: "20% Off",
        tagCol: "#E040FB",
        price: 15.99
    }, {
        val: 2e4,
        tag: "30% Off",
        tagCol: "#fab640",
        price: 34.99
    }], t.exports.rarities = [{
        name: "Uncommon",
        color: "#b2f252"
    }, {
        name: "Rare",
        color: "#2196F3"
    }, {
        name: "Epic",
        color: "#E040FB"
    }, {
        name: "Legendary",
        color: "#FBC02D"
    }, {
        name: "Relic",
        color: "#ed4242"
    }, {
        name: "Contraband",
        color: "#474747"
    }], t.exports.previews = {
        1: {
            xOff: -1,
            scl: 1
        },
        2: {
            xOff: -1.4,
            yOff: -.8,
            scl: 1
        },
        3: {
            xOff: 0,
            yOff: 1,
            scl: 1.8
        },
        4: {
            xOff: -1.5,
            scl: 1.7
        },
        5: {
            xOff: -.8,
            yOff: .5,
            scl: 2
        },
        6: {
            xOff: -1,
            scl: 1.2
        },
        7: {
            xOff: -1,
            scl: 1.6
        },
        8: {
            xOff: -1,
            scl: 1.3
        },
        9: {
            xOff: -1.2,
            yOff: -1,
            scl: 1.6
        },
        10: {
            scl: 1.6
        }
    }, t.exports.skins = [{
        name: "Arctic Hunt",
        id: 0,
        weapon: 1,
        rarity: 1
    }, {
        name: "Autumn Hunt",
        id: 1,
        weapon: 1,
        rarity: 1
    }, {
        name: "Reticle Blaze",
        id: 2,
        weapon: 1,
        rarity: 2
    }, {
        name: "Digital Hunt",
        id: 3,
        weapon: 1,
        rarity: 0
    }, {
        name: "Moon Dragon",
        id: 4,
        weapon: 1,
        rarity: 3
    }, {
        name: "Scharfschütze",
        id: 5,
        weapon: 1,
        rarity: 1
    }, {
        name: "Woodland Sniper",
        id: 6,
        weapon: 1,
        rarity: 0
    }, {
        name: "Hazard Reticle",
        id: 7,
        weapon: 1,
        rarity: 1
    }, {
        name: "Kodac Reticle",
        id: 8,
        weapon: 1,
        rarity: 1
    }, {
        name: "Seafarer",
        id: 9,
        weapon: 1,
        rarity: 0
    }, {
        name: "Acid Breath",
        id: 10,
        weapon: 1,
        rarity: 3
    }, {
        name: "Trail Scout",
        id: 11,
        weapon: 1,
        rarity: 0
    }, {
        name: "Arctic AK",
        id: 0,
        weapon: 2,
        rarity: 1
    }, {
        name: "Autumn AK",
        id: 1,
        weapon: 2,
        rarity: 1
    }, {
        name: "Blaze AK",
        id: 2,
        weapon: 2,
        rarity: 2
    }, {
        name: "Digital AK",
        id: 3,
        weapon: 2,
        rarity: 0
    }, {
        name: "Luna Dragon",
        id: 4,
        weapon: 2,
        rarity: 3
    }, {
        name: "Flecken AK",
        id: 5,
        weapon: 2,
        rarity: 1
    }, {
        name: "Woodland AK",
        id: 6,
        weapon: 2,
        rarity: 0
    }, {
        name: "Hazard AK",
        id: 7,
        weapon: 2,
        rarity: 1
    }, {
        name: "Kodac AK",
        id: 8,
        weapon: 2,
        rarity: 1
    }, {
        name: "Seafarer AK",
        id: 9,
        weapon: 2,
        rarity: 0
    }, {
        name: "Trail AK",
        id: 10,
        weapon: 2,
        rarity: 0
    }, {
        name: "SMG Arctic",
        id: 0,
        weapon: 4,
        rarity: 1
    }, {
        name: "SMG Autumn",
        id: 1,
        weapon: 4,
        rarity: 1
    }, {
        name: "SMG Blaze",
        id: 2,
        weapon: 4,
        rarity: 2
    }, {
        name: "SMG Digital",
        id: 3,
        weapon: 4,
        rarity: 0
    }, {
        name: "SMG Flecken",
        id: 4,
        weapon: 4,
        rarity: 1
    }, {
        name: "SMG Woodland",
        id: 5,
        weapon: 4,
        rarity: 0
    }, {
        name: "SMG Hazard",
        id: 6,
        weapon: 4,
        rarity: 1
    }, {
        name: "SMG Kodac",
        id: 7,
        weapon: 4,
        rarity: 1
    }, {
        name: "SMG Seafarer",
        id: 8,
        weapon: 4,
        rarity: 0
    }, {
        name: "SMG Trail",
        id: 9,
        weapon: 4,
        rarity: 0
    }, {
        name: "Arctic Python",
        id: 0,
        weapon: 5,
        rarity: 1
    }, {
        name: "Autumn Python",
        id: 1,
        weapon: 5,
        rarity: 1
    }, {
        name: "Blaze Python",
        id: 2,
        weapon: 5,
        rarity: 2
    }, {
        name: "Digital Python",
        id: 3,
        weapon: 5,
        rarity: 0
    }, {
        name: "Flecken Python",
        id: 4,
        weapon: 5,
        rarity: 1
    }, {
        name: "Woodland",
        id: 5,
        weapon: 5,
        rarity: 0
    }, {
        name: "Hazard Python",
        id: 6,
        weapon: 5,
        rarity: 1
    }, {
        name: "Kodac Python",
        id: 7,
        weapon: 5,
        rarity: 1
    }, {
        name: "Seafarer",
        id: 8,
        weapon: 5,
        rarity: 0
    }, {
        name: "Trail Python",
        id: 9,
        weapon: 5,
        rarity: 0
    }, {
        name: "Arctic Slug",
        id: 0,
        weapon: 6,
        rarity: 1
    }, {
        name: "Autumn Slug",
        id: 1,
        weapon: 6,
        rarity: 1
    }, {
        name: "Twin Blaze",
        id: 2,
        weapon: 6,
        rarity: 2
    }, {
        name: "SG Digital",
        id: 3,
        weapon: 6,
        rarity: 0
    }, {
        name: "Flecken",
        id: 4,
        weapon: 6,
        rarity: 1
    }, {
        name: "Woodland",
        id: 5,
        weapon: 6,
        rarity: 0
    }, {
        name: "Hazard Slug",
        id: 6,
        weapon: 6,
        rarity: 1
    }, {
        name: "Kodac Slug",
        id: 7,
        weapon: 6,
        rarity: 1
    }, {
        name: "Buccaneer",
        id: 8,
        weapon: 6,
        rarity: 0
    }, {
        name: "SG Trail",
        id: 9,
        weapon: 6,
        rarity: 0
    }, {
        name: "Arctic LMG",
        id: 0,
        weapon: 7,
        rarity: 1
    }, {
        name: "Autumn LMG",
        id: 1,
        weapon: 7,
        rarity: 1
    }, {
        name: "Blaze LMG",
        id: 2,
        weapon: 7,
        rarity: 2
    }, {
        name: "Digital LMG",
        id: 3,
        weapon: 7,
        rarity: 0
    }, {
        name: "Flecken LMG",
        id: 4,
        weapon: 7,
        rarity: 1
    }, {
        name: "Woodland LMG",
        id: 5,
        weapon: 7,
        rarity: 0
    }, {
        name: "Hazard LMG",
        id: 6,
        weapon: 7,
        rarity: 1
    }, {
        name: "Kodac LMG",
        id: 7,
        weapon: 7,
        rarity: 1
    }, {
        name: "Seafarer LMG",
        id: 8,
        weapon: 7,
        rarity: 0
    }, {
        name: "Trail LMG",
        id: 9,
        weapon: 7,
        rarity: 0
    }, {
        name: "Arctic Auto",
        id: 0,
        weapon: 8,
        rarity: 1
    }, {
        name: "Autumn Auto",
        id: 1,
        weapon: 8,
        rarity: 1
    }, {
        name: "Blaze Auto",
        id: 2,
        weapon: 8,
        rarity: 2
    }, {
        name: "Digital Auto",
        id: 3,
        weapon: 8,
        rarity: 0
    }, {
        name: "Flecken Auto",
        id: 4,
        weapon: 8,
        rarity: 1
    }, {
        name: "Woodland Auto",
        id: 5,
        weapon: 8,
        rarity: 0
    }, {
        name: "Hazard Auto",
        id: 6,
        weapon: 8,
        rarity: 1
    }, {
        name: "Kodac Auto",
        id: 7,
        weapon: 8,
        rarity: 1
    }, {
        name: "Seafarer Auto",
        id: 8,
        weapon: 8,
        rarity: 0
    }, {
        name: "Trail Auto",
        id: 9,
        weapon: 8,
        rarity: 0
    }, {
        name: "Mach Auto",
        id: 10,
        creator: "AtarSt",
        weapon: 8,
        rarity: 1
    }, {
        name: "Arctic RL",
        id: 0,
        weapon: 9,
        rarity: 1
    }, {
        name: "Autumn RL",
        id: 1,
        weapon: 9,
        rarity: 1
    }, {
        name: "Blaze RL",
        id: 2,
        weapon: 9,
        rarity: 2
    }, {
        name: "Digital RL",
        id: 3,
        weapon: 9,
        rarity: 0
    }, {
        name: "Flecken RL",
        id: 4,
        weapon: 9,
        rarity: 1
    }, {
        name: "Woodland RL",
        id: 5,
        weapon: 9,
        rarity: 0
    }, {
        name: "Hazard RL",
        id: 6,
        weapon: 9,
        rarity: 1
    }, {
        name: "Kodac RL",
        id: 7,
        weapon: 9,
        rarity: 1
    }, {
        name: "Seafarer RL",
        id: 8,
        weapon: 9,
        rarity: 0
    }, {
        name: "Trail RL",
        id: 9,
        weapon: 9,
        rarity: 0
    }, {
        name: "101 Skullbreaker",
        id: 12,
        weapon: 1,
        rarity: 3
    }, {
        name: "Reticle Faded",
        id: 13,
        weapon: 1,
        rarity: 0
    }, {
        name: "Puma Sniper",
        id: 14,
        weapon: 1,
        rarity: 1
    }, {
        name: "Scoped Elite",
        id: 15,
        weapon: 1,
        rarity: 3
    }, {
        name: "Faded AK",
        id: 11,
        weapon: 2,
        rarity: 0
    }, {
        name: "Puma AR",
        id: 12,
        weapon: 2,
        rarity: 1
    }, {
        name: "SMG Fade",
        id: 10,
        weapon: 4,
        rarity: 0
    }, {
        name: "SMG Puma",
        id: 11,
        weapon: 4,
        rarity: 1
    }, {
        name: "Faded Python",
        id: 10,
        weapon: 5,
        rarity: 0
    }, {
        name: "Puma Python",
        id: 11,
        weapon: 5,
        rarity: 1
    }, {
        name: "SG Fade",
        id: 10,
        weapon: 6,
        rarity: 0
    }, {
        name: "Slug Puma",
        id: 11,
        weapon: 6,
        rarity: 1
    }, {
        name: "Faded LMG",
        id: 10,
        weapon: 7,
        rarity: 0
    }, {
        name: "Puma LMG",
        id: 11,
        weapon: 7,
        rarity: 1
    }, {
        name: "Faded MMR",
        id: 11,
        weapon: 8,
        rarity: 0
    }, {
        name: "Puma MMR",
        id: 12,
        weapon: 8,
        rarity: 1
    }, {
        name: "Faded RTL",
        id: 10,
        weapon: 9,
        rarity: 0
    }, {
        name: "Puma RTL",
        id: 11,
        weapon: 9,
        rarity: 1
    }, {
        name: "Scoped Carbon",
        id: 16,
        weapon: 1,
        rarity: 0
    }, {
        name: "Carbon AK",
        id: 13,
        weapon: 2,
        rarity: 0
    }, {
        name: "SMG Carbon",
        id: 12,
        weapon: 4,
        rarity: 0
    }, {
        name: "Carbon Python",
        id: 12,
        weapon: 5,
        rarity: 0
    }, {
        name: "SG Carbon",
        id: 12,
        weapon: 6,
        rarity: 0
    }, {
        name: "Carbon LMG",
        id: 12,
        weapon: 7,
        rarity: 0
    }, {
        name: "Carbon MMR",
        id: 13,
        weapon: 8,
        rarity: 0
    }, {
        name: "Carbon RTL",
        id: 12,
        weapon: 9,
        rarity: 0
    }, {
        name: "Neon Ripper",
        id: 14,
        glow: !0,
        weapon: 2,
        rarity: 4
    }, {
        name: "Top Hat",
        type: 1,
        scl: 2.5,
        sitOff: .4,
        yOff: -4,
        id: 1,
        rarity: 2
    }, {
        name: "SMG Spitfire",
        id: 13,
        weapon: 4,
        rarity: 3
    }, {
        name: "Cowboy Hat",
        type: 1,
        scl: 2.5,
        sitOff: .4,
        yOff: -3,
        id: 0,
        rarity: 0
    }, {
        name: "Flame Tamer",
        id: 13,
        weapon: 5,
        glow: !0,
        rarity: 4
    }, {
        name: "Cool Cap",
        type: 1,
        scl: 2.5,
        sitOff: .4,
        yOff: -3,
        xOff: 2,
        id: 2,
        rarity: 1
    }, {
        name: "Jack O' Lantern",
        type: 1,
        scl: 2.8,
        glow: !0,
        sclMlt: 1.4,
        sitOff: 2.05,
        yOff: -4,
        id: 3,
        rarity: 3
    }, {
        name: "Medic Helmet",
        type: 1,
        scl: 2.8,
        sclMlt: 1,
        sitOff: .65,
        yOff: -2.5,
        id: 4,
        rarity: 2
    }, {
        name: "Neon Reaver",
        creator: "Electrode_",
        id: 17,
        glow: !0,
        weapon: 1,
        rarity: 4
    }, {
        name: "Sun Glasses",
        type: 1,
        scl: 2.8,
        sclMlt: 1,
        sitOff: 2.3,
        yOff: -5,
        xOff: 2,
        id: 5,
        rarity: 0
    }, {
        name: "Afro",
        type: 1,
        scl: 2,
        sclMlt: .9,
        sitOff: 1.4,
        yOff: -4,
        id: 6,
        rarity: 0
    }, {
        name: "Hard Hat",
        type: 1,
        scl: 3,
        sitOff: .4,
        yOff: -3,
        id: 7,
        rarity: 0
    }, {
        name: "Zombie Head",
        type: 1,
        scl: 2.8,
        glow: !0,
        sclMlt: 1.2,
        sitOff: 2.05,
        yOff: -4,
        id: 8,
        rarity: 3
    }, {
        name: "Barbed Rifle",
        id: 18,
        weapon: 1,
        rarity: 2
    }, {
        name: "Blushed Sniper",
        id: 19,
        weapon: 1,
        rarity: 0
    }, {
        name: "AWP Mech",
        id: 20,
        weapon: 1,
        rarity: 1
    }, {
        name: "Olympus Rifle",
        id: 21,
        weapon: 1,
        rarity: 2
    }, {
        name: "Scoped Tuscan",
        id: 22,
        weapon: 1,
        rarity: 1
    }, {
        name: "AWP Pacemaker",
        id: 23,
        weapon: 1,
        rarity: 4,
        glow: !0
    }, {
        name: "AR Wired",
        id: 15,
        weapon: 2,
        rarity: 2
    }, {
        name: "Blushed AK",
        id: 16,
        weapon: 2,
        rarity: 0
    }, {
        name: "Mach Rifle",
        id: 17,
        weapon: 2,
        rarity: 1
    }, {
        name: "Olympus Rifle",
        id: 18,
        weapon: 2,
        rarity: 2
    }, {
        name: "AR Tuscan",
        id: 19,
        weapon: 2,
        rarity: 1
    }, {
        name: "SMG Barbed",
        id: 14,
        weapon: 4,
        rarity: 2
    }, {
        name: "SMG Blossom",
        id: 15,
        weapon: 4,
        rarity: 0
    }, {
        name: "SMG Machinist",
        id: 16,
        weapon: 4,
        rarity: 1
    }, {
        name: "SMG Lazarus",
        id: 17,
        weapon: 4,
        rarity: 2
    }, {
        name: "SMG Tuscan",
        id: 18,
        weapon: 4,
        rarity: 1
    }, {
        name: "Barbed Python",
        id: 14,
        weapon: 5,
        rarity: 2
    }, {
        name: "Blushed Revolver",
        id: 15,
        weapon: 5,
        rarity: 0
    }, {
        name: "Machinist Python",
        id: 16,
        weapon: 5,
        rarity: 1
    }, {
        name: "REV Olympus",
        id: 17,
        weapon: 5,
        rarity: 2
    }, {
        name: "Tuscan Revolver",
        id: 18,
        weapon: 5,
        rarity: 1
    }, {
        name: "Coach Barb",
        id: 13,
        weapon: 6,
        rarity: 2
    }, {
        name: "Blossom",
        id: 14,
        weapon: 6,
        rarity: 0
    }, {
        name: "MD Frag",
        id: 15,
        weapon: 6,
        rarity: 1
    }, {
        name: "SG Olympus",
        id: 16,
        weapon: 6,
        rarity: 2
    }, {
        name: "SG Tuscan",
        id: 17,
        weapon: 6,
        rarity: 1
    }, {
        name: "Blushed LMG",
        id: 13,
        weapon: 7,
        rarity: 0
    }, {
        name: "Machinist LMG",
        id: 14,
        weapon: 7,
        rarity: 1
    }, {
        name: "Olympus LMG",
        id: 15,
        weapon: 7,
        rarity: 2
    }, {
        name: "Tuscan LMG",
        id: 16,
        weapon: 7,
        rarity: 1
    }, {
        name: "Barbed Auto",
        id: 14,
        weapon: 8,
        rarity: 2
    }, {
        name: "Blushed MMA",
        id: 15,
        weapon: 8,
        rarity: 0
    }, {
        name: "Auto Machinist",
        id: 16,
        weapon: 8,
        rarity: 1
    }, {
        name: "Olympus MMA",
        id: 17,
        weapon: 8,
        rarity: 2
    }, {
        name: "Tuscan MMA",
        id: 18,
        weapon: 8,
        rarity: 1
    }, {
        name: "Barbed Laucher",
        id: 13,
        weapon: 9,
        rarity: 2
    }, {
        name: "Blushed Laucher",
        id: 14,
        weapon: 9,
        rarity: 0
    }, {
        name: "Machinist Laucher",
        id: 15,
        weapon: 9,
        rarity: 1
    }, {
        name: "Olympus Laucher",
        id: 16,
        weapon: 9,
        rarity: 2
    }, {
        name: "Tuscan Laucher",
        id: 17,
        weapon: 9,
        rarity: 1
    }, {
        name: "Omen",
        id: 24,
        creator: "Zino",
        weapon: 1,
        rarity: 3
    }, {
        name: "Scoped Moss",
        id: 25,
        weapon: 1,
        rarity: 1
    }, {
        name: "Swamped Scope",
        id: 26,
        weapon: 1,
        rarity: 0
    }, {
        name: "Tiger Bolt",
        id: 27,
        weapon: 1,
        rarity: 2
    }, {
        name: "Zebra Bolt",
        id: 28,
        weapon: 1,
        rarity: 2
    }, {
        name: "Necron Bolt",
        id: 29,
        weapon: 1,
        rarity: 4,
        glow: !0
    }, {
        name: "Lava Bolt",
        id: 30,
        weapon: 1,
        rarity: 3
    }, {
        name: "Sky Bolt",
        id: 31,
        weapon: 1,
        rarity: 2
    }, {
        name: "Bark Bolt",
        id: 32,
        weapon: 1,
        rarity: 0
    }, {
        name: "Bolt Wanderer",
        id: 33,
        weapon: 1,
        rarity: 0
    }, {
        name: "Mossy Rifle",
        id: 20,
        weapon: 2,
        rarity: 1
    }, {
        name: "Swamped AK",
        id: 21,
        weapon: 2,
        rarity: 0
    }, {
        name: "Tiger Rifle",
        id: 22,
        weapon: 2,
        rarity: 2
    }, {
        name: "Zebra Rifle",
        id: 23,
        weapon: 2,
        rarity: 2
    }, {
        name: "Plasma Rifle",
        id: 24,
        weapon: 2,
        rarity: 4,
        glow: !0
    }, {
        name: "Lava Rifle",
        id: 25,
        weapon: 2,
        glow: !0,
        rarity: 3
    }, {
        name: "Sky Rifle",
        id: 26,
        weapon: 2,
        rarity: 2
    }, {
        name: "Bark AK",
        id: 27,
        weapon: 2,
        rarity: 0
    }, {
        name: "Rifle Wanderer",
        id: 28,
        weapon: 2,
        rarity: 0
    }, {
        name: "SMG Growth",
        id: 19,
        weapon: 4,
        rarity: 1
    }, {
        name: "SMG Marsh",
        id: 20,
        weapon: 4,
        rarity: 0
    }, {
        name: "SMG Tigris",
        id: 21,
        weapon: 4,
        rarity: 2
    }, {
        name: "SMG Safari",
        id: 22,
        weapon: 4,
        rarity: 2
    }, {
        name: "Rapid Plasma",
        id: 23,
        weapon: 4,
        rarity: 4,
        glow: !0
    }, {
        name: "Lava SMG",
        id: 24,
        weapon: 4,
        rarity: 3,
        glow: !0
    }, {
        name: "UMP Atmos",
        id: 25,
        weapon: 4,
        rarity: 2
    }, {
        name: "Birch SMG",
        id: 26,
        weapon: 4,
        rarity: 0
    }, {
        name: "SMG Wanderer",
        id: 27,
        weapon: 4,
        rarity: 0
    }, {
        name: "Mossy Python",
        id: 19,
        weapon: 5,
        rarity: 1
    }, {
        name: "Swamped Revolver",
        id: 20,
        weapon: 5,
        rarity: 0
    }, {
        name: "Tiger Python",
        id: 21,
        weapon: 5,
        rarity: 2
    }, {
        name: "Zebra Python",
        id: 22,
        weapon: 5,
        rarity: 2
    }, {
        name: "Venomous",
        creator: "Rengar",
        glow: !0,
        id: 23,
        weapon: 5,
        rarity: 3
    }, {
        name: "Lava Revolver",
        id: 24,
        weapon: 5,
        rarity: 3
    }, {
        name: "Sky Python",
        id: 25,
        weapon: 5,
        rarity: 2,
        glow: !0
    }, {
        name: "Bark Python",
        id: 26,
        weapon: 5,
        rarity: 0
    }, {
        name: "Wanderer Python",
        id: 27,
        weapon: 5,
        rarity: 0
    }, {
        name: "Gabrand",
        id: 19,
        weapon: 6,
        rarity: 1
    }, {
        name: "Tennessee",
        id: 20,
        weapon: 6,
        rarity: 0
    }, {
        name: "SG Tigris",
        id: 21,
        weapon: 6,
        rarity: 2
    }, {
        name: "Safaris",
        id: 22,
        weapon: 6,
        rarity: 2
    }, {
        name: "Neuromance",
        id: 23,
        weapon: 6,
        rarity: 4,
        glow: !0
    }, {
        name: "Anatomis",
        id: 24,
        weapon: 6,
        rarity: 3,
        glow: !0
    }, {
        name: "Sky Pump",
        id: 25,
        weapon: 6,
        rarity: 2
    }, {
        name: "Bark Slug",
        id: 26,
        weapon: 6,
        rarity: 0
    }, {
        name: "Slug Wanderer",
        id: 27,
        weapon: 6,
        rarity: 0
    }, {
        name: "Mossy LMG",
        id: 17,
        weapon: 7,
        rarity: 1
    }, {
        name: "Swamped LMG",
        id: 18,
        weapon: 7,
        rarity: 0
    }, {
        name: "Tiger LMG",
        id: 19,
        weapon: 7,
        rarity: 2
    }, {
        name: "Zebra LMG",
        id: 20,
        weapon: 7,
        rarity: 2
    }, {
        name: "Heavy Plasma",
        id: 21,
        weapon: 7,
        rarity: 4,
        glow: !0
    }, {
        name: "Lava LMG",
        id: 22,
        weapon: 7,
        rarity: 3
    }, {
        name: "Sky LMG",
        id: 23,
        weapon: 7,
        rarity: 2,
        glow: !0
    }, {
        name: "Bark LMG",
        id: 24,
        weapon: 7,
        rarity: 0
    }, {
        name: "LMG Wanderer",
        id: 25,
        weapon: 7,
        rarity: 0
    }, {
        name: "Overgrowth",
        id: 19,
        weapon: 8,
        rarity: 1
    }, {
        name: "Marshland",
        id: 20,
        weapon: 8,
        rarity: 0
    }, {
        name: "Tiger MMA",
        id: 21,
        weapon: 8,
        rarity: 2
    }, {
        name: "Zebra MMA",
        id: 22,
        weapon: 8,
        rarity: 2
    }, {
        name: "MMA Plasma",
        id: 23,
        weapon: 8,
        rarity: 4,
        glow: !0
    }, {
        name: "Magnis",
        id: 24,
        weapon: 8,
        rarity: 3,
        glow: !0
    }, {
        name: "Sky AUTO",
        id: 25,
        weapon: 8,
        rarity: 2
    }, {
        name: "Bark AUTO",
        id: 26,
        weapon: 8,
        rarity: 0
    }, {
        name: "MMA Wanderer",
        id: 27,
        weapon: 8,
        rarity: 0
    }, {
        name: "Mossy Rocket",
        id: 18,
        weapon: 9,
        rarity: 1
    }, {
        name: "Swamped Laucher",
        id: 19,
        weapon: 9,
        rarity: 0
    }, {
        name: "Tiger Rocket",
        id: 20,
        weapon: 9,
        rarity: 2
    }, {
        name: "Zebra Laucher",
        id: 21,
        weapon: 9,
        rarity: 2
    }, {
        name: "Plasma Nuke",
        id: 22,
        weapon: 9,
        rarity: 4,
        glow: !0
    }, {
        name: "Lava Rocket",
        id: 23,
        weapon: 9,
        rarity: 3
    }, {
        name: "Sky Laucher",
        id: 24,
        weapon: 9,
        rarity: 2
    }, {
        name: "Bark Laucher",
        id: 25,
        weapon: 9,
        rarity: 0
    }, {
        name: "Wanderer Rocket",
        id: 26,
        weapon: 9,
        rarity: 0
    }, {
        name: "Purple Cap",
        id: 2,
        tex: 1,
        type: 1,
        scl: 2.5,
        sitOff: .4,
        yOff: -3,
        xOff: 2,
        rarity: 0
    }, {
        name: "Bear Mask",
        id: 9,
        type: 1,
        scl: 2.5,
        sclMlt: 1.3,
        sitOff: 2.05,
        yOff: -4,
        xOff: 1,
        rarity: 2
    }, {
        name: "Panda Mask",
        id: 9,
        tex: 1,
        type: 1,
        scl: 2.5,
        sclMlt: 1.3,
        sitOff: 2.05,
        yOff: -4,
        xOff: 1,
        rarity: 2
    }, {
        name: "Brown Beard",
        id: 11,
        type: 1,
        scl: 2.8,
        sclMlt: .9,
        sitOff: 2,
        yOff: -3,
        rarity: 2
    }, {
        name: "Blonde Beard",
        id: 11,
        tex: 1,
        type: 1,
        scl: 2.8,
        sclMlt: .9,
        sitOff: 2,
        yOff: -3,
        rarity: 2
    }, {
        name: "Skull Mask",
        id: 12,
        type: 1,
        scl: 3,
        glow: !0,
        sclMlt: 1.05,
        sitOff: 2.5,
        sitOffZ: 1.1,
        yOff: -4.5,
        xOff: -3,
        tex: 0,
        rarity: 3
    }, {
        name: "Red Beanie",
        id: 13,
        type: 1,
        scl: 3,
        sclMlt: 1.1,
        sitOff: .4,
        yOff: -3,
        tex: 0,
        rarity: 0
    }, {
        name: "Blue Beanie",
        id: 13,
        type: 1,
        scl: 3,
        sclMlt: 1.1,
        sitOff: .4,
        yOff: -3,
        tex: 1,
        rarity: 0
    }, {
        name: "Krunk Headset",
        id: 14,
        type: 1,
        scl: 2,
        sclMlt: 1.1,
        sitOff: 1.4,
        yOff: -4,
        rarity: 2
    }, {
        name: "Cherry Headset",
        id: 14,
        type: 1,
        tex: 1,
        scl: 2,
        sclMlt: 1.1,
        sitOff: 1.4,
        yOff: -4,
        rarity: 2
    }, {
        name: "Demonic Wings",
        id: 0,
        type: 2,
        glow: !0,
        scl: 3.5,
        sclMlt: 3,
        xOff: -1.5,
        sitOff: -1.3,
        sitOffZ: -1.4,
        yOff: -2,
        rarity: 4
    }, {
        name: "Bass Guitar",
        id: 1,
        type: 2,
        scl: 4,
        sclMlt: 3.8,
        sitOff: -1.3,
        sitOffZ: -1,
        yOff: -2,
        rarity: 2
    }, {
        name: "Samurai Blades",
        id: 2,
        type: 2,
        glow: !0,
        scl: 4.5,
        sclMlt: 3.8,
        sitOff: -1.3,
        sitOffZ: -.95,
        yOff: -1,
        xOff: -.5,
        rarity: 3
    }, {
        name: "Blood Harvest",
        id: 3,
        type: 2,
        glow: !0,
        scl: 5.1,
        sclMlt: 5,
        sitOff: -1.3,
        sitOffZ: -.95,
        yOff: -1,
        rarity: 3
    }, {
        name: "Panda Body",
        id: 4,
        type: 2,
        scl: 2.1,
        sclMlt: 1.3,
        sitOff: 2.2,
        sitOffZ: 0,
        yOff: -5,
        rarity: 3
    }, {
        name: "Bear Body",
        id: 4,
        tex: 1,
        type: 2,
        scl: 2.1,
        sclMlt: 1.3,
        sitOff: 2.2,
        sitOffZ: 0,
        yOff: -5,
        rarity: 3
    }, {
        name: "Angelic Wings",
        id: 5,
        type: 2,
        glow: !0,
        scl: 3.5,
        sclMlt: 3.6,
        xOff: -1.5,
        sitOff: -1.3,
        sitOffZ: -1.4,
        yOff: -2,
        rarity: 4
    }, {
        name: "Ninja Mask",
        id: 15,
        glow: !0,
        type: 1,
        scl: 2.5,
        sclMlt: 1.1,
        sitOff: 2.05,
        yOff: -4,
        xOff: 0,
        rarity: 3
    }, {
        name: "Halo",
        id: 16,
        glow: !0,
        type: 1,
        scl: 3.5,
        sclMlt: 1.1,
        sitOff: -.65,
        yOff: -1,
        rarity: 3
    }, {
        name: "Welder Mask",
        type: 1,
        scl: 2.5,
        sitOff: 2.1,
        yOff: -3,
        xOff: 1,
        id: 17,
        rarity: 1
    }, {
        name: "Diver Goggles",
        type: 1,
        scl: 2.5,
        sclMlt: .9,
        sitOff: 1,
        yOff: -1,
        id: 18,
        rarity: 1
    }, {
        name: "Mad Cap",
        type: 1,
        tex: 2,
        scl: 2.5,
        sitOff: .4,
        yOff: -3,
        xOff: 2,
        id: 2,
        rarity: 1
    }, {
        name: "Ace Cap",
        type: 1,
        tex: 3,
        scl: 2.5,
        sitOff: .4,
        yOff: -3,
        xOff: 2,
        id: 2,
        rarity: 1
    }, {
        name: "Ice Cap",
        type: 1,
        tex: 4,
        scl: 2.5,
        sitOff: .4,
        yOff: -3,
        xOff: 2,
        id: 2,
        rarity: 1
    }, {
        name: "Soldier Pack",
        id: 6,
        type: 2,
        glow: !0,
        scl: 2.6,
        sclMlt: 1.8,
        xOff: 1,
        sitOff: 1.3,
        sitOffZ: -1.75,
        yOff: -5,
        rarity: 1
    }, {
        name: "Robo Wings",
        id: 7,
        type: 2,
        glow: !0,
        scl: 5,
        sclMlt: 3.9,
        xOff: -3.5,
        sitOff: -1.3,
        sitOffZ: -.75,
        yOff: -4,
        rarity: 4
    }, {
        name: "Basket",
        id: 8,
        type: 2,
        scl: 3.5,
        sclMlt: 2,
        xOff: -1.5,
        sitOff: .75,
        sitOffZ: -.8,
        yOff: -4,
        rarity: 1
    }, {
        name: "Baby Panda",
        id: 9,
        type: 2,
        scl: 3.5,
        sclMlt: 2,
        xOff: 1,
        sitOff: .75,
        sitOffZ: -.8,
        yOff: -5,
        xRot: Math.PI,
        rarity: 3
    }, {
        name: "Sturm Helmet",
        type: 1,
        tex: 1,
        scl: 2.8,
        sclMlt: 1,
        sitOff: .65,
        yOff: -2.5,
        id: 4,
        rarity: 1
    }, {
        name: "Brown Afro",
        type: 1,
        tex: 1,
        scl: 2,
        sclMlt: .9,
        sitOff: 1.4,
        yOff: -4,
        id: 6,
        rarity: 0
    }, {
        name: "Acid Skull",
        id: 12,
        type: 1,
        tex: 1,
        scl: 3,
        glow: !0,
        sclMlt: 1.05,
        sitOff: 2.5,
        sitOffZ: 1.1,
        yOff: -4.5,
        xOff: -3,
        rarity: 3
    }, {
        name: "Uranium",
        type: 1,
        tex: 1,
        scl: 2.5,
        sitOff: 2.1,
        yOff: -3,
        xOff: 1,
        id: 17,
        rarity: 2
    }, {
        name: "Panda King",
        id: 19,
        glow: !0,
        type: 1,
        scl: 2.5,
        sclMlt: 1.3,
        sitOff: 2.05,
        yOff: -4,
        xOff: 1,
        rarity: 3
    }, {
        name: "Kolt Rifle",
        creator: "iSpy",
        id: 35,
        weapon: 1,
        rarity: 3
    }, {
        name: "Pace Dore",
        creator: "hoodgail",
        id: 34,
        glow: !0,
        weapon: 1,
        rarity: 4
    }, {
        name: "Shot Element",
        creator: "Electrode_",
        glow: !0,
        id: 28,
        weapon: 6,
        rarity: 3
    }, {
        name: "Warp Sequence",
        creator: "Electrode_",
        id: 28,
        glow: !0,
        weapon: 4,
        rarity: 4
    }, {
        name: "Radioactive",
        creator: "Electrode_",
        glow: !0,
        id: 29,
        weapon: 5,
        rarity: 4
    }, {
        name: "Targeted",
        creator: "Subza",
        glow: !0,
        id: 28,
        weapon: 5,
        rarity: 3
    }, {
        name: "Robot Helmet",
        type: 1,
        glow: !0,
        scl: 2.4,
        sclMlt: 1,
        sitOff: 2,
        yOff: -3.4,
        id: 20,
        rarity: 3
    }, {
        name: "Knight Helmet",
        type: 1,
        scl: 2.3,
        sclMlt: 1,
        sitOff: 2,
        yOff: -3.2,
        id: 21,
        rarity: 3
    }, {
        name: "Cat Ears",
        type: 1,
        scl: 2.5,
        sclMlt: 1.2,
        sitOff: 1.65,
        yOff: -3.2,
        id: 22,
        rarity: 2
    }, {
        name: "Snowman",
        type: 1,
        scl: 2.2,
        sclMlt: 1,
        sitOff: 2.05,
        yOff: -3.2,
        id: 23,
        rarity: 2
    }, {
        name: "Trendy Biker",
        type: 1,
        scl: 2.2,
        sclMlt: 1,
        sitOff: 1.8,
        yOff: -3.2,
        id: 24,
        rarity: 3
    }, {
        name: "Golden Crown",
        type: 1,
        glow: !0,
        scl: 2.4,
        sclMlt: 1,
        sitOff: .65,
        yOff: -3.2,
        id: 25,
        rarity: 3
    }, {
        name: "Master Drinker",
        type: 1,
        scl: 2.4,
        sclMlt: 1,
        sitOff: .65,
        yOff: -2.7,
        id: 26,
        rarity: 3
    }, {
        name: "Pig Head",
        type: 1,
        scl: 2.5,
        sclMlt: 1,
        sitOff: 2.05,
        yOff: -3.2,
        id: 27,
        rarity: 3
    }, {
        name: "Red Bandana",
        type: 1,
        scl: 2.2,
        sclMlt: 1,
        sitOff: 1.6,
        yOff: -3.2,
        id: 28,
        rarity: 1
    }, {
        name: "Sheriff",
        type: 1,
        scl: 2.2,
        sclMlt: 1,
        sitOff: 2.05,
        yOff: -3.2,
        id: 29,
        rarity: 4
    }, {
        name: "Bandit",
        type: 1,
        glow: !0,
        scl: 2.2,
        sclMlt: 1,
        sitOff: 2.05,
        yOff: -3.2,
        id: 30,
        rarity: 4
    }, {
        name: "Vlaine",
        creator: "Hoodgail",
        id: 36,
        weapon: 1,
        rarity: 1
    }, {
        name: "K-Mas",
        creator: "Hoodgail",
        id: 37,
        weapon: 1,
        rarity: 2
    }, {
        name: "Reine",
        creator: "Hoodgail",
        id: 38,
        weapon: 1,
        rarity: 3
    }, {
        name: "Melted",
        creator: "Hoodgail",
        glow: !0,
        id: 39,
        weapon: 1,
        rarity: 4
    }, {
        name: "Viper",
        creator: "Hoodgail",
        glow: !0,
        id: 40,
        weapon: 1,
        rarity: 3
    }, {
        name: "Razor",
        creator: "Hoodgail",
        glow: !0,
        id: 41,
        weapon: 1,
        rarity: 4
    }, {
        name: "Lazor",
        creator: "Hoodgail",
        id: 29,
        glow: !0,
        weapon: 2,
        rarity: 4
    }, {
        name: "Uzera",
        creator: "Hoodgail",
        id: 2,
        glow: !0,
        weapon: 10,
        rarity: 4
    }, {
        name: "Tazor",
        creator: "Hoodgail",
        glow: !0,
        id: 7,
        weapon: 10,
        rarity: 3
    }, {
        name: "Dual Woodland",
        id: 0,
        weapon: 10,
        rarity: 1
    }, {
        name: "Flecken Uzi",
        id: 1,
        weapon: 10,
        rarity: 1
    }, {
        name: "Dual Seafarer",
        id: 3,
        weapon: 10,
        rarity: 2
    }, {
        name: "Rapid Digital",
        id: 4,
        weapon: 10,
        rarity: 1
    }, {
        name: "Sap Uzi",
        id: 5,
        weapon: 10,
        rarity: 0
    }, {
        name: "Torn Dual",
        id: 6,
        weapon: 10,
        rarity: 1
    }, {
        name: "Haste",
        glow: !0,
        id: 42,
        weapon: 1,
        rarity: 4
    }, {
        name: "Leine",
        creator: "Hoodgail",
        id: 43,
        weapon: 1,
        rarity: 3
    }, {
        name: "Lore",
        creator: "Hoodgail",
        glow: !0,
        id: 44,
        weapon: 1,
        rarity: 4
    }, {
        name: "Reaver",
        creator: "Hoodgail",
        glow: !0,
        id: 45,
        weapon: 1,
        rarity: 4
    }, {
        name: "Splixen",
        glow: !0,
        id: 46,
        weapon: 1,
        rarity: 4
    }, {
        name: "AWP Stream",
        creator: "Electrode_",
        glow: !0,
        id: 47,
        weapon: 1,
        rarity: 4
    }, {
        name: "Circuit",
        creator: "Electrode_",
        glow: !0,
        id: 30,
        weapon: 2,
        rarity: 4
    }, {
        name: "SMG Iris",
        id: 29,
        weapon: 4,
        rarity: 2
    }, {
        name: "SMG Venom",
        id: 30,
        weapon: 4,
        rarity: 2,
        glow: !0
    }, {
        name: "SMG Wingman",
        id: 31,
        weapon: 4,
        rarity: 2
    }, {
        name: "x0n-voX",
        creator: "???",
        tex: "weapons/pat/0",
        dot: "dot_1",
        sameGlow: !0,
        movT: 1e-4,
        weapon: 4,
        rarity: 5
    }, {
        name: "1Ad-dA0",
        creator: "???",
        tex: "weapons/pat/0",
        dot: "dot_1",
        sameGlow: !0,
        movT: 1e-4,
        weapon: 2,
        rarity: 5
    }, {
        name: "Raynb0w",
        creator: "???",
        tex: "weapons/pat/1",
        dot: "dot_1",
        sameGlow: !0,
        movT: .0015,
        weapon: 2,
        rarity: 5
    }, {
        name: "Raynb0w",
        creator: "???",
        tex: "weapons/pat/1",
        dot: "dot_1",
        sameGlow: !0,
        movT: .0015,
        weapon: 4,
        rarity: 5
    }, {
        name: "UMP Saphire",
        id: 32,
        weapon: 4,
        rarity: 1
    }, {
        name: "UMP Jade",
        id: 33,
        weapon: 4,
        rarity: 1
    }, {
        name: "UMP Plexus",
        id: 34,
        weapon: 4,
        rarity: 1
    }, {
        name: "UMP Lapis",
        id: 35,
        weapon: 4,
        rarity: 0
    }, {
        name: "Perplex",
        id: 36,
        weapon: 4,
        rarity: 0
    }, {
        name: "UMP Torpe",
        id: 37,
        weapon: 4,
        rarity: 0
    }, {
        name: "SMG Como",
        id: 38,
        weapon: 4,
        rarity: 0
    }, {
        name: "SMG Liquid",
        id: 39,
        weapon: 4,
        rarity: 0
    }, {
        name: "Clementine",
        id: 40,
        weapon: 4,
        rarity: 1
    }, {
        name: "Dropper",
        id: 41,
        weapon: 4,
        rarity: 0
    }, {
        name: "SMG Auburn",
        id: 42,
        weapon: 4,
        rarity: 1
    }, {
        name: "UMP Laurel",
        id: 43,
        weapon: 4,
        rarity: 1
    }, {
        name: "UMP Crimson",
        id: 44,
        weapon: 4,
        rarity: 1
    }, {
        name: "UMP Azure",
        id: 45,
        weapon: 4,
        rarity: 1
    }, {
        name: "Laguna",
        id: 46,
        weapon: 4,
        rarity: 1
    }, {
        name: "UMP Cygenta",
        id: 47,
        weapon: 4,
        rarity: 1
    }, {
        name: "UMP Cygentro",
        id: 48,
        weapon: 4,
        rarity: 2
    }, {
        name: "Chartreuse",
        id: 49,
        weapon: 4,
        rarity: 2
    }, {
        name: "UMP Tortobe",
        id: 50,
        weapon: 4,
        rarity: 2
    }, {
        name: "UMP Octo",
        id: 51,
        weapon: 4,
        rarity: 2
    }, {
        name: "UMP Versate",
        id: 52,
        weapon: 4,
        rarity: 2
    }, {
        name: "SMG Purpur",
        id: 53,
        weapon: 4,
        rarity: 2
    }, {
        name: "Leaf",
        id: 54,
        weapon: 4,
        rarity: 0
    }, {
        name: "Flame",
        id: 55,
        weapon: 4,
        rarity: 0
    }, {
        name: "Aqua",
        id: 56,
        weapon: 4,
        rarity: 0
    }, {
        name: "Gravel",
        id: 57,
        weapon: 4,
        rarity: 0
    }, {
        name: "AR Saphire",
        id: 31,
        weapon: 2,
        rarity: 1
    }, {
        name: "AR Jade",
        id: 32,
        weapon: 2,
        rarity: 1
    }, {
        name: "AR Plexis",
        id: 33,
        weapon: 2,
        rarity: 1
    }, {
        name: "AR Lapis",
        id: 34,
        weapon: 2,
        rarity: 1
    }, {
        name: "Perplex",
        id: 35,
        weapon: 2,
        rarity: 0
    }, {
        name: "Trople",
        id: 36,
        weapon: 2,
        rarity: 0
    }, {
        name: "AR Altis",
        id: 37,
        weapon: 2,
        rarity: 1
    }, {
        name: "Liquid",
        id: 38,
        weapon: 2,
        rarity: 1
    }, {
        name: "Clementine",
        id: 39,
        weapon: 2,
        rarity: 1
    }, {
        name: "Dropper",
        id: 40,
        weapon: 2,
        rarity: 0
    }, {
        name: "Laurel",
        id: 41,
        weapon: 2,
        rarity: 1
    }, {
        name: "Crimson",
        id: 42,
        weapon: 2,
        rarity: 1
    }, {
        name: "Azure",
        id: 43,
        weapon: 2,
        rarity: 1
    }, {
        name: "Laguna",
        id: 44,
        weapon: 2,
        rarity: 1
    }, {
        name: "Cygenta",
        id: 45,
        weapon: 2,
        rarity: 1
    }, {
        name: "Cygento",
        id: 46,
        weapon: 2,
        rarity: 2
    }, {
        name: "Chartreuse",
        id: 47,
        weapon: 2,
        rarity: 2
    }, {
        name: "Tortobe",
        id: 48,
        weapon: 2,
        rarity: 2
    }, {
        name: "AK Octo",
        id: 49,
        weapon: 2,
        rarity: 2
    }, {
        name: "Versate",
        id: 50,
        weapon: 2,
        rarity: 2
    }, {
        name: "Purpur",
        id: 51,
        weapon: 2,
        rarity: 2
    }, {
        name: "Leaf",
        id: 52,
        weapon: 2,
        rarity: 0
    }, {
        name: "Flame",
        id: 53,
        weapon: 2,
        rarity: 0
    }, {
        name: "Aqua",
        id: 54,
        weapon: 2,
        rarity: 0
    }, {
        name: "Gravel",
        id: 55,
        weapon: 2,
        rarity: 0
    }, {
        name: "Spahire",
        id: 28,
        weapon: 8,
        rarity: 1
    }, {
        name: "Jade",
        id: 29,
        weapon: 8,
        rarity: 1
    }, {
        name: "Plexus",
        id: 30,
        weapon: 8,
        rarity: 1
    }, {
        name: "Lapis",
        id: 31,
        weapon: 8,
        rarity: 1
    }, {
        name: "Perplexum",
        id: 32,
        weapon: 8,
        rarity: 0
    }, {
        name: "Torped",
        id: 33,
        weapon: 8,
        rarity: 0
    }, {
        name: "Commo",
        id: 34,
        weapon: 8,
        rarity: 0
    }, {
        name: "MMA Liquid",
        id: 35,
        weapon: 8,
        rarity: 1
    }, {
        name: "Dropper",
        id: 36,
        weapon: 8,
        rarity: 0
    }, {
        name: "MMA Auburn",
        id: 37,
        weapon: 8,
        rarity: 1
    }, {
        name: "MMA Laurel",
        id: 38,
        weapon: 8,
        rarity: 1
    }, {
        name: "MMA Crimson",
        id: 39,
        weapon: 8,
        rarity: 1
    }, {
        name: "MMA Azure",
        id: 40,
        weapon: 8,
        rarity: 1
    }, {
        name: "MMA Laguna",
        id: 41,
        weapon: 8,
        rarity: 1
    }, {
        name: "MMA Cygneta",
        id: 42,
        weapon: 8,
        rarity: 1
    }, {
        name: "MMA Cygneto",
        id: 43,
        weapon: 8,
        rarity: 2
    }, {
        name: "M14 Chartreuse",
        id: 44,
        weapon: 8,
        rarity: 2
    }, {
        name: "MMA Tortobe",
        id: 45,
        weapon: 8,
        rarity: 2
    }, {
        name: "MMA Octo",
        id: 46,
        weapon: 8,
        rarity: 2
    }, {
        name: "MMA Versate",
        id: 47,
        weapon: 8,
        rarity: 2
    }, {
        name: "MMA Purpur",
        id: 48,
        weapon: 8,
        rarity: 2
    }, {
        name: "Nature",
        id: 49,
        weapon: 8,
        rarity: 0
    }, {
        name: "Flame",
        id: 50,
        weapon: 8,
        rarity: 0
    }, {
        name: "Aqua",
        id: 51,
        weapon: 8,
        rarity: 0
    }, {
        name: "Earth",
        id: 52,
        weapon: 8,
        rarity: 0
    }, {
        name: "Black Ice",
        creator: "Electrode_",
        id: 53,
        weapon: 8,
        rarity: 2
    }, {
        name: "Mach 3",
        creator: "Jytesh",
        id: 54,
        weapon: 8,
        rarity: 1
    }, {
        name: "Bloodripper",
        creator: "Jytesh",
        id: 55,
        weapon: 8,
        rarity: 1
    }, {
        name: "Theta",
        creator: "foatingpoint",
        id: 48,
        weapon: 1,
        rarity: 3
    }]
}, function(t, e) {
    t.exports = [{
        name: "Red Dot",
        src: "attach_0",
        dotSrc: "dot_0",
        aimOffY: .16,
        scale: 1.2
    }]
}, function(t, e) {
    t.exports = [{
        name: "Sniper Rifle",
        src: "weapon_1",
        icon: "icon_1",
        sound: "weapon_1",
        noAo: !0,
        nAuto: !0,
        type: 0,
        scope: !0,
        swapTime: 10,
        aimSpeed: 10,
        spdMlt: 0.95,
        ammo: 3,
        reload: 10,
        dmg: 300,
        pierce: 1,
        range: 1e3,
        dropStart: 600,
        dmgDrop: 1,
        scale: 1.1,
        leftHoldY: -.7,
        rightHoldY: -.75,
        leftHoldZ: 2.4,
        rightHoldZ: .4,
        xOff: .8,
        yOff: -.75,
        zOff: -2,
        xOrg: 0,
        yOrg: -.55,
        zOrg: -.8,
        cLean: .5,
        cRot: .4,
        cDrop: .1,
        inspectR: .4,
        inspectM: .1,
        muzOff: 8,
        muzMlt: 1.6,
        rate: 900,
        spread: 260,
        zoom: 2.7,
        leanMlt: 1.5,
        recoil: .009,
        recoilR: .02,
        recover: .993,
        recoverY: .997,
        recoverF: .975,
        recoilYM: .33,
        recoilZ: 2,
        recoilAnim: {
            time: 330,
            recoilTweenY: .17
        },
        jumpYM: .4
    }, {
        name: "Assault Rifle",
        src: "weapon_2",
        icon: "icon_2",
        sound: "weapon_2",
        noAo: !0,
        attach: 0,
        attachYOff: -.1,
        attachZOff: -.4,
        zRot: 1,
        type: 0,
        swapTime: 300,
        aimSpeed: 130,
        spdMlt: .95,
        ammo: 30,
        reload: 1200,
        dmg: 22,
        pierce: 1,
        range: 700,
        dmgDrop: 10,
        scale: 1,
        leftHoldY: -.45,
        rightHoldY: -.6,
        leftHoldZ: .55,
        rightHoldZ: -1.5,
        xOff: 1,
        yOff: -.75,
        yRot: .0018,
        zOff: -3.6,
        xOrg: 0,
        yOrg: -.625,
        zOrg: -1.9,
        cLean: .6,
        cRot: .5,
        cDrop: .1,
        inspectR: .5,
        inspectM: 1.7,
        caseZOff: -1.7,
        caseYOff: -.2,
        muzOff: 5.1,
        muzOffY: .1,
        muzMlt: 1.4,
        rate: 110,
        spread: 100,
        minSpread: 5,
        zoom: 1.6,
        leanMlt: 1.5,
        recoil: .003,
        recoilR: .02,
        recover: .978,
        recoverY: .995,
        recoverF: .975,
        jYMlt: .9,
        recoilYM: .32,
        recoilZ: 5,
        recoilZM: -.05,
        aimRecMlt: .9,
        recoilAnim: {
            time: 300,
            recoilTweenY: .05
        },
        jumpYM: .6
    }, {
        name: "Pistol",
        src: "weapon_3",
        icon: "icon_3",
        sound: "weapon_3",
        secondary: !0,
        noAo: !0,
        transp: !0,
        nAuto: !0,
        kill: ["", 75],
        type: 1,
        swapTime: 350,
        aimSpeed: 120,
        spdMlt: 1.05,
        ammo: 10,
        reload: 700,
        dmg: 20,
        range: 700,
        dmgDrop: 10,
        scale: .84,
        leftHoldY: -.9,
        rightHoldY: -.62,
        leftHoldZ: -.55,
        rightHoldZ: -.5,
        xOff: .7,
        yOff: -.75,
        zOff: -4.5,
        xOrg: 0,
        yRot: -.005,
        yOrg: -.23,
        zOrg: -4.25,
        jYMlt: .1,
        cLean: .5,
        cRot: .4,
        cDrop: .1,
        caseZOff: .2,
        caseYOff: 0,
        inspectR: .5,
        inspectM: .8,
        muzOff: 1.5,
        muzOffY: 0,
        muzMlt: .95,
        rate: 150,
        spread: 90,
        zoom: 1.4,
        leanMlt: 1,
        recoil: .006,
        recoilR: .01,
        recover: .98,
        recoverY: .99,
        recoverF: .98,
        recoilYM: .2,
        aimRecMlt: .4,
        recoilZ: 3.6,
        recoilZM: -.4,
        recoilAnim: {
            time: 200,
            recoilTweenY: .2
        }
    }, {
        name: "Submachine Gun",
        src: "weapon_4",
        icon: "icon_4",
        sound: "weapon_4",
        attach: 0,
        attachYOff: -.09,
        attachZOff: -1.1,
        zRot: .75,
        noAo: !0,
        type: 0,
        swapTime: 10,
        aimSpeed: 10,
        spdMlt: 1.04,
        ammo: 24,
        reload: 10,
        dmg: 100,
        pierce: 1,
        range: 1e3,
        dmgDrop: 1,
        scale: 1.1,
        leftHoldY: -.4,
        leftHoldX: -.1,
        rightHoldY: -.5,
        leftHoldZ: 1.1,
        rightHoldZ: -.95,
        xOff: .85,
        yOff: -.86,
        zOff: -3,
        xOrg: 0,
        yOrg: -.59,
        zOrg: -2.5,
        cRot: .4,
        cLean: .6,
        inspectR: .4,
        inspectM: 1.2,
        caseYOff: -.15,
        caseZOff: -.4,
        muzOff: 2.15,
        muzOffY: .1,
        rate: 90,
        spread: 90,
        minSpread: 5,
        zoom: 1.65,
        jYMlt: .8,
        leanMlt: 1,
        recoil: .0034,
        recoilY: .77,
        recoilR: .02,
        recover: .975,
        recoverY: .996,
        recoverF: .975,
        recoilZ: 3.5,
        recoilZM: -.1,
        aimRecMlt: .85,
        recoilAnim: {
            time: 180,
            recoilTweenY: .06
        }
    }, {
        name: "Revolver",
        src: "weapon_5",
        icon: "icon_5",
        sound: "weapon_5",
        nAuto: !0,
        nCase: !0,
        transp: !0,
        kill: ["", 50],
        type: 1,
        swapTime: 200,
        aimSpeed: 120,
        spdMlt: 1.04,
        ammo: 6,
        reload: 900,
        dmg: 66,
        pierce: .85,
        dmgDrop: 10,
        scale: 1.3,
        leftHoldY: -1,
        rightHoldY: -.8,
        leftHoldZ: -.5,
        rightHoldZ: -.5,
        xOff: .7,
        yOff: -.7,
        zOff: -4.1,
        xOrg: 0,
        yOrg: -.31,
        zOrg: -3.8,
        jYMlt: .5,
        cLean: .5,
        cRot: .4,
        cDrop: .1,
        inspectR: .4,
        inspectM: .3,
        muzOff: 2.75,
        muzOffY: .2,
        muzMlt: .95,
        range: 700,
        rate: 390,
        spread: 100,
        zoom: 1.4,
        leanMlt: 1.6,
        recoil: .013,
        recoilR: .035,
        recover: .982,
        recoverY: .992,
        recoverF: .98,
        recoilYM: .2,
        aimRecMlt: .6,
        recoilZM: -1.4,
        recoilZ: 2,
        recoilAnim: {
            time: 300,
            recoilTweenY: .4
        }
    }, {
        name: "Shotgun",
        src: "weapon_6",
        icon: "icon_6",
        sound: "weapon_6",
        noAo: !0,
        nAuto: !0,
        nCase: !0,
        transp: !0,
        nRing: !0,
        type: 0,
        swapTime: 300,
        aimSpeed: 120,
        spdMlt: 1,
        ammo: 2,
        shots: 5,
        reload: 1100,
        dmg: 50,
        dmgDrop: 50,
        scale: 1,
        leftHoldX: -.1,
        leftHoldY: -.5,
        rightHoldY: -.7,
        leftHoldZ: .4,
        rightHoldZ: -1.5,
        xOff: .95,
        yOff: -.65,
        zOff: -3.8,
        xOrg: 0,
        yOrg: -.3,
        zOrg: -2.8,
        cLean: .6,
        cRot: .6,
        cDrop: .1,
        jYMlt: .2,
        inspectR: .5,
        inspectM: 1.9,
        muzOff: 6,
        muzMlt: 1.8,
        range: 240,
        rate: 400,
        innac: 110,
        spread: 120,
        minSpread: 20,
        zoom: 1.25,
        leanMlt: 1.6,
        recoil: .016,
        recoilR: .015,
        recover: .99,
        recoverF: .97,
        recoilZ: 2,
        recoilZM: .2,
        aimRecMlt: .5,
        recoilYM: .6,
        recoilAnim: {
            time: 340,
            recoilTweenY: .2
        },
        jumpYM: .5
    }, {
        name: "Light Machine Gun",
        src: "weapon_7",
        icon: "icon_7",
        sound: "weapon_7",
        transp: !0,
        type: 0,
        swapTime: 800,
        aimSpeed: 200,
        spdMlt: .79,
        ammo: 60,
        reload: 3500,
        dmg: 22,
        pierce: 1,
        range: 700,
        dmgDrop: 10,
        jYMlt: .8,
        scale: 1.3,
        leftHoldY: -.65,
        leftHoldX: .4,
        rightHoldY: -.75,
        leftHoldZ: 1,
        rightHoldZ: -.2,
        yRot: -.01,
        xOff: .95,
        yOff: -.65,
        zOff: -2.8,
        xOrg: 0,
        yOrg: -.445,
        yRot: -.005,
        zOrg: -2,
        cLean: .3,
        cRot: .4,
        cDrop: 0,
        inspectR: .4,
        inspectM: .6,
        caseInd: 2,
        caseZOff: -.5,
        caseYOff: -.1,
        muzOff: 5.5,
        muzMlt: 1.65,
        rate: 120,
        spread: 300,
        minSpread: 10,
        zoom: 1.2,
        leanMlt: 1.6,
        recoil: .0032,
        recoilR: .03,
        recover: .98,
        recoverY: .9975,
        recoverF: .975,
        recoilZ: 3.8,
        recoilYM: .25,
        recoilZ: 3,
        recoilZM: -.1,
        aimRecMlt: 1,
        recoilAnim: {
            time: 200,
            recoilTweenY: .03
        },
        jumpYM: .5
    }, {
        name: "Semi Auto",
        src: "weapon_8",
        icon: "icon_8",
        sound: "weapon_8",
        attach: 0,
        attachYOff: -.08,
        attachZOff: -1.2,
        nAuto: !0,
        zRot: .7,
        type: 0,
        noAo: !0,
        swapTime: 400,
        aimSpeed: 120,
        spdMlt: 1,
        ammo: 8,
        reload: 1500,
        dmg: 34,
        pierce: .2,
        range: 1e3,
        dmgDrop: 0,
        scale: 1,
        leftHoldY: -.5,
        rightHoldY: -.45,
        leftHoldZ: .4,
        rightHoldZ: -1.85,
        jYMlt: .9,
        xOff: .8,
        yOff: -.55,
        zOff: -3.5,
        xOrg: 0,
        yOrg: -.395,
        yRot: -.005,
        zOrg: -3.1,
        cLean: .5,
        cRot: .4,
        cDrop: .1,
        inspectR: .4,
        inspectM: 1.4,
        muzOff: 4,
        muzOffY: .05,
        muzMlt: 1.2,
        rate: 120,
        spread: 250,
        caseZOff: -1.3,
        zoom: 2.1,
        recoil: .01,
        recoilR: .02,
        recover: .98,
        recoilY: .36,
        recoverY: .994,
        recoverF: .975,
        recoilYM: .6,
        recoilZ: 2.5,
        recoilZM: .2,
        aimRecMlt: .87,
        recoilAnim: {
            time: 250,
            recoilTweenY: .08
        },
        jumpYM: .5
    }, {
        name: "Rocket Launcher",
        src: "weapon_9",
        icon: "icon_9",
        sound: "weapon_9",
        nInsp: !0,
        nSkill: !0,
        nAuto: !0,
        nCase: !0,
        nRing: !0,
        projectile: 0,
        type: 0,
        swapTime: 10,
        aimSpeed: 10,
        spdMlt: .9,
        ammo: 1,
        reload: 10,
        scale: 1.3,
        leftHoldY: -.5,
        leftHoldX: -.2,
        rightHoldY: -.6,
        leftHoldZ: 2.95,
        rightHoldX: -.2,
        rightHoldZ: 1.6,
        jYMlt: .4,
        xOff: .95,
        yOff: -.4,
        zOff: -.7,
        xOrg: 0,
        yOrg: -.6,
        zOrg: -1.5,
        cLean: .2,
        cRot: .2,
        cDrop: .1,
        muzOff: 5,
        muzOffY: 0,
        muzMlt: 1.5,
        rate: 2,
        spread: 10,
        minSpread: 10,
        zoom: 1,
        leanMlt: 1.4,
        landBob: .8,
        recoil: .008,
        recoilR: .012,
        recover: .99,
        recoverY: .998,
        recoverF: .975,
        recoilZ: 4,
        recoilZM: -.5,
        aimRecMlt: .9,
        recoilAnim: {
            time: 10,
            recoilTweenY: .25
        },
        jumpYM: .3
    }, {
        name: "Akimbo Uzi",
        src: "weapon_10",
        icon: "icon_10",
        sound: "weapon_10",
        nInsp: !0,
        noAim: !0,
        akimbo: !0,
        type: 0,
        swapTime: 300,
        aimSpeed: 120,
        spdMlt: 1.04,
        ammo: 18,
        reload: 1200,
        dmg: 18,
        pierce: 1,
        range: 700,
        dmgDrop: 12,
        scale: .9,
        rightHoldY: -.55,
        leftHoldZ: .3,
        leftHoldX: -.25,
        leftHoldY: -.55,
        rightHoldZ: .3,
        rightHoldX: -.25,
        holdW: 1.3,
        xOff: 1.5,
        yOff: -.95,
        zOff: -3.3,
        xOrg: 0,
        yOrg: -.62,
        zOrg: -2.5,
        zLnM: .4,
        cLean: .1,
        cRot: .1,
        cDrop: .2,
        caseYOff: -.15,
        caseZOff: -.4,
        muzOff: 3.6,
        rate: 60,
        spread: 40,
        spreadInc: 1.5,
        minSpread: 10,
        zoom: 1.5,
        leanMlt: .6,
        recoil: .0034,
        recoilR: .015,
        recover: .978,
        recoverY: .996,
        recoverF: .975,
        recoilZ: 5,
        recoilYM: .6,
        recoilAnim: {
            recoilTweenY: .01
        }
    }, {
        name: "Desert Eagle",
        src: "weapon_11",
        icon: "icon_11",
        sound: "weapon_11",
        secondary: !0,
        minRec: 15,
        nAuto: !0,
        transp: !0,
        kill: ["", 50],
        type: 1,
        swapTime: 200,
        aimSpeed: 120,
        spdMlt: 1,
        ammo: 6,
        reload: 1e3,
        dmg: 50,
        pierce: .85,
        dmgDrop: 10,
        scale: .94,
        leftHoldY: -.9,
        rightHoldY: -.7,
        leftHoldZ: -.5,
        rightHoldZ: -.5,
        holdW: .95,
        xOff: 1.3,
        yOff: -.95,
        zOff: -4.1,
        xOrg: 0,
        yOrg: -.195,
        zOrg: -3.8,
        cLean: .5,
        cRot: .8,
        cDrop: .1,
        inspectR: .5,
        inspectM: .9,
        muzOff: 2,
        muzMlt: 1.1,
        range: 700,
        rate: 400,
        spread: 150,
        jYMlt: .5,
        zoom: 1.4,
        leanMlt: 1.6,
        recoil: .01,
        recoilR: .01,
        recover: .985,
        recoverY: .996,
        recoverF: .98,
        recoilYM: .4,
        aimRecMlt: .7,
        recoilZ: 2.5,
        recoilZM: -.4,
        recoilAnim: {
            time: 350,
            recoilTweenY: .4
        }
    }, {
        name: "Alien Blaster",
        src: "weapon_13",
        icon: "icon_13",
        sound: "weapon_13",
        secondary: !0,
        nRing: !0,
        nAuto: !0,
        transp: !0,
        nCase: !0,
        minRec: 50,
        kill: ["", 50],
        type: 1,
        swapTime: 200,
        aimSpeed: 120,
        spdMlt: 1,
        ammo: 4,
        reload: 1500,
        dmg: 50,
        pierce: .85,
        dmgDrop: 10,
        scale: 1.1,
        leftHoldY: -1,
        rightHoldY: -.65,
        leftHoldZ: -.2,
        rightHoldZ: -.2,
        xOff: 1.3,
        yOff: -.95,
        zOff: -4.1,
        xOrg: 0,
        yOrg: -.6,
        zOrg: -3.8,
        cLean: .4,
        cRot: .6,
        cDrop: 0,
        inspectR: .5,
        inspectM: .8,
        holdW: .7,
        muzOff: 2.2,
        muzOffY: .1,
        muzID: 3,
        muzMlt: 1.1,
        jYMlt: .8,
        range: 700,
        rate: 150,
        spread: 150,
        zoom: 1.4,
        leanMlt: 1.6,
        recoil: .007,
        recoilR: .01,
        recover: .985,
        recoverY: .996,
        recoverF: .98,
        recoilZ: 2
    }, {
        name: "Hands",
        melee: !0,
        nInsp: !0,
        holdW: .9,
        sounds: ["swish_0", "swish_1"],
        anim: function(t, e) {
            t.handAnimInd = -1 * (t.handAnimInd || 1);
            var i = (1 == t.handAnimInd ? "l" : "r") + "HndTween";
            t[i] && t[i].stop(), t[i + "A"] = t[i + "A"] || 0, t[i] = new e.Tween(t).to({
                [i + "A"]: 2.4
            }, 30).easing(e.Easing.Linear.None).onComplete(function() {
                t[i] = new e.Tween(t).to({
                    [i + "A"]: 0
                }, 200).easing(e.Easing.Linear.None).delay(100).start()
            }).start()
        },
        type: 1,
        swapTime: 350,
        rate: 250,
        dmg: 50,
        range: 12,
        spdMlt: 1.1,
        spread: 100,
        leftHoldY: -.82,
        leftHoldX: 1.3,
        rightHoldX: -1.3,
        rightHoldY: -.82,
        leftHoldZ: -.5,
        rightHoldZ: -.5,
        xOff: 0,
        yOff: -.8,
        zOff: -3,
        xOrg: 0,
        yOrg: 0,
        zOrg: 0,
        leanMlt: 1
    }]
}, function(t, e) {
    t.exports = [{
        name: "Triggerman",
        loadout: [1],
        secondary: !0,
        colors: [10975328, 4013373, 2302755, 2631720, 7098434, 12566463],
        health: 100,
        speed: 1.05
    }, {
        name: "Hunter",
        loadout: [0],
        secondary: !0,
        colors: [10975328, 8083261, 6506290, 2631720, 6506290, 6506290],
        health: 60,
        speed: 1.05
    }, {
        name: "Run N Gun",
        loadout: [3],
        colors: [10975328, 4088706, 3099491, 2631720, 6506290, 3099491],
        health: 100,
        speed: 1.18
    }, {
        name: "Spray N Pray",
        loadout: [6],
        colors: [10975328, 5793865, 4806204, 2631720, 2631720, 4806204],
        health: 170,
        regen: .05,
        speed: 1
    }, {
        name: "Vince",
        loadout: [5],
        secondary: !0,
        colors: [8412234, 5526119, 4144461, 2631720, 2631720, 4144461],
        health: 100,
        speed: 1
    }, {
        name: "Detective",
        loadout: [4],
        colors: [10975328, 7360054, 6308654, 2631720, 6506290, 6308654],
        health: 100,
        speed: 1
    }, {
        name: "Marksman",
        loadout: [7],
        secondary: !0,
        colors: [10975328, 5793865, 4806204, 2631720, 2631720, 4806204],
        health: 90,
        speed: 1
    }, {
        name: "Rocketeer",
        loadout: [8],
        secondary: !0,
        colors: [10975328, 5793865, 4806204, 2631720, 7098434, 4806204],
        health: 130,
        speed: .86
    }, {
        name: "Agent",
        loadout: [9],
        colors: [10975328, 4013373, 2302755, 2631720, 2631720, 12566463],
        health: 100,
        speed: 1.2
    }, {
        name: "Runner",
        loadout: [12],
        colors: [10975328, 4013373, 2302755, 2631720, 2631720, 2302755],
        health: 100,
        regen: .2,
        speed: 1
    }, {
        name: "Deagler",
        hide: !0,
        loadout: [10],
        colors: [10975328, 4013373, 2302755, 2631720, 2631720, 2302755],
        health: 60,
        speed: 1
    }]
}, function(t, e) {
    t.exports = [{
        name: "Nuke",
        kills: 25,
        activate: function(t, e) {
            return !t.nukeTimer && (t.startNuke(e), !0)
        }
    }]
}, function(t, e) {
    t.exports = [{
        name: "Krunker",
        opacity: .6
    }, {
        name: "Target",
        opacity: .6
    }, {
        name: "GG",
        opacity: .6
    }, {
        name: "Pumpkin",
        opacity: .6
    }, {
        name: "Spooky",
        opacity: .6
    }, {
        name: "Ded",
        opacity: .6
    }, {
        name: "Sadface",
        opacity: .6
    }, {
        name: "Laugh Cry",
        opacity: .7
    }, {
        name: "Sid",
        opacity: .6
    }, {
        name: "Vince",
        opacity: .6
    }, {
        name: "Kiki",
        opacity: .6
    }, {
        name: "Ladder",
        opacity: 1
    }, {
        name: "Dummy",
        opacity: 1
    }, {
        name: "8 Ball",
        opacity: .6
    }, {
        name: "xD",
        opacity: .6
    }, {
        name: "MMOK",
        opacity: .7
    }, {
        name: "Madman",
        opacity: .6
    }, {
        name: "Terminal",
        opacity: .6
    }, {
        name: "YODO",
        opacity: .6
    }, {
        name: "Crayon",
        opacity: .6
    }, {
        name: "Myth",
        opacity: .85
    }, {
        name: "SpikyJohn",
        opacity: .85
    }, {
        name: "LevelGaming",
        opacity: .85
    }, {
        name: "PolarAce",
        opacity: .85
    }, {
        name: "MrsYiibby",
        opacity: .85
    }, {
        name: "Vraxooo",
        opacity: .85
    }, {
        name: "Jazzmittens",
        opacity: .85
    }]
}, function(t, e) {
    var i = ["Double Kill", "Triple Kill", "Quad Kill", "Multi Kill", "Mega Kill", "Ultra Kill", "Super Kill"],
        n = [];
    t.exports.reward = function(t, e, r, s, o) {
        if (n.length = 0, e.weapon.melee) n.push("Execution", 150);
        else {
            e.weapon.kill ? n.push(e.weapon.kill[0], e.weapon.kill[1]) : e.weapon.scope && 1 == e.aimVal ? n.push("No Scope", 100) : !e.weapon.scope || 0 == e.aimVal && 180 < e.aimTime || 1 == e.aimDir ? n.push("", 50) : n.push("Quick Scope", 75), 1 >= o.kills && n.push("First Blood", 25);
            var a = t.getSpin(e);
            !e.weapon.nSkill && 360 <= a && n.push("360!", 150), s.headShot && n.push("Headshot", 50), !e.weapon.scope && 200 < s.dst * e.weapon.range && n.push("Longshot", 25)
        }
        r.flag && n.push("Snatched", 50), e.health <= .2 * e.maxHealth && e.active && n.push("Close Call", 20), 3 <= e.deathStreak && n.push("Comeback", 25), 10 <= r.killStreak ? n.push("Buzzkill", 25) : 5 <= r.killStreak && n.push("Buzzkill", 10), 0 < e.slideTimer && n.push("Driftkill", 50), 400 <= e.airTime && n.push("Mid Air", 25);
        for (var c = i.length - 1; 0 <= c; --c)
            if (e.streak > c) {
                n.push(i[c], 50 * (c + 1));
                break
            } return n.length ? n : null
    }, t.exports.getScore = function(t) {
        var e = 0;
        if (t)
            for (var i = 1; i < t.length; i += 2) e += t[i];
        return e
    }
}, function(t) {
    t.exports = "OkkoC"
}, function(t, e, i) {
    (function(e) {
        var n = i(23),
            r = i(83),
            s = {
                "Content-Type": "application/x-www-form-urlencoded"
            };

        function o(t, e) {
            !n.isUndefined(t) && n.isUndefined(t["Content-Type"]) && (t["Content-Type"] = e)
        }
        var a, c = {
            adapter: ("undefined" == typeof XMLHttpRequest ? void 0 !== e && (a = i(71)) : a = i(71), a),
            transformRequest: [function(t, e) {
                return r(e, "Content-Type"), n.isFormData(t) || n.isArrayBuffer(t) || n.isBuffer(t) || n.isStream(t) || n.isFile(t) || n.isBlob(t) ? t : n.isArrayBufferView(t) ? t.buffer : n.isURLSearchParams(t) ? (o(e, "application/x-www-form-urlencoded;charset=utf-8"), t.toString()) : n.isObject(t) ? (o(e, "application/json;charset=utf-8"), JSON.stringify(t)) : t
            }],
            transformResponse: [function(t) {
                if ("string" == typeof t) try {
                    t = JSON.parse(t)
                } catch (t) {}
                return t
            }],
            timeout: 0,
            xsrfCookieName: "XSRF-TOKEN",
            xsrfHeaderName: "X-XSRF-TOKEN",
            maxContentLength: -1,
            validateStatus: function(t) {
                return 200 <= t && 300 > t
            }
        };
        c.headers = {
            common: {
                Accept: "application/json, text/plain, */*"
            }
        }, n.forEach(["delete", "get", "head"], function(t) {
            c.headers[t] = {}
        }), n.forEach(["post", "put", "patch"], function(t) {
            c.headers[t] = n.merge(s)
        }), t.exports = c
    }).call(this, i(12))
}, function(t, e) {
    t.exports = function(t) {
        t.THREEx = {}, t.THREEx.RendererStats = function() {
            var e = document.createElement("div");
            e.style.cssText = "width:80px;opacity:0.9;cursor:pointer";
            var i = document.createElement("div");
            i.style.cssText = "padding:0 0 3px 3px;text-align:left;background-color:#200;", e.appendChild(i);
            var n = document.createElement("div");
            n.style.cssText = "color:#f00;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px", n.innerHTML = "WebGLRenderer", i.appendChild(n);
            var r = [];
            for (n = 0; 9 > n; n++) r[n] = document.createElement("div"), r[n].style.cssText = "color:#f00;background-color:#311;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px", i.appendChild(r[n]), r[n].innerHTML = "-";
            var s = Date.now();
            return {
                domElement: e,
                update: function(e) {
                    if (console.assert(e instanceof t.WebGLRenderer), !(Date.now() - s < 1e3 / 30)) {
                        s = Date.now();
                        var i = 0;
                        r[i++].textContent = "== Memory =====", r[i++].textContent = "Programs: " + e.info.memory.programs, r[i++].textContent = "Geometries: " + e.info.memory.geometries, r[i++].textContent = "Textures: " + e.info.memory.textures, r[i++].textContent = "== Render =====", r[i++].textContent = "Calls: " + e.info.render.calls, r[i++].textContent = "Vertices: " + e.info.render.vertices, r[i++].textContent = "Faces: " + e.info.render.faces, r[i++].textContent = "Points: " + e.info.render.points
                    }
                }
            }
        }, t.SSAOShader = {
            uniforms: {
                tDiffuse: {
                    value: null
                },
                tDepth: {
                    value: null
                },
                size: {
                    value: new t.Vector2(64, 64)
                },
                cameraNear: {
                    value: 1
                },
                cameraFar: {
                    value: 100
                },
                radius: {
                    value: 40
                },
                onlyAO: {
                    value: 0
                },
                aoClamp: {
                    value: 1
                },
                lumInfluence: {
                    value: .7
                }
            },
            vertexShader: "varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
            fragmentShader: "uniform float cameraNear;\nuniform float cameraFar;\n#ifdef USE_LOGDEPTHBUF\nuniform float logDepthBufFC;\n#endif\nuniform float radius;\nuniform bool onlyAO;\nuniform vec2 size;\nuniform float aoClamp;\nuniform float lumInfluence;\nuniform sampler2D tDiffuse;\nuniform sampler2D tDepth;\nvarying vec2 vUv;\n#define DL 2.399963229728653\n#define EULER 2.718281828459045\nconst int samples = 8;\nconst bool useNoise = true;\nconst float noiseAmount = 0.0004;\nconst float diffArea = 0.4;\nconst float gDisplace = 0.4;\n#include <packing>\nvec2 rand( const vec2 coord ) {\nvec2 noise;\nif ( useNoise ) {\nfloat nx = dot ( coord, vec2( 12.9898, 78.233 ) );\nfloat ny = dot ( coord, vec2( 12.9898, 78.233 ) * 2.0 );\nnoise = clamp( fract ( 43758.5453 * sin( vec2( nx, ny ) ) ), 0.0, 1.0 );\n} else {\nfloat ff = fract( 1.0 - coord.s * ( size.x / 2.0 ) );\nfloat gg = fract( coord.t * ( size.y / 2.0 ) );\nnoise = vec2( 0.25, 0.75 ) * vec2( ff ) + vec2( 0.75, 0.25 ) * gg;\n}\nreturn ( noise * 2.0  - 1.0 ) * noiseAmount;\n}\nfloat readDepth( const in vec2 coord ) {\nfloat cameraFarPlusNear = cameraFar + cameraNear;\nfloat cameraFarMinusNear = cameraFar - cameraNear;\nfloat cameraCoef = 2.0 * cameraNear;\n#ifdef USE_LOGDEPTHBUF\nfloat logz = unpackRGBAToDepth( texture2D( tDepth, coord ) );\nfloat w = pow(2.0, (logz / logDepthBufFC)) - 1.0;\nfloat z = (logz / w) + 1.0;\n#else\nfloat z = unpackRGBAToDepth( texture2D( tDepth, coord ) );\n#endif\nreturn cameraCoef / ( cameraFarPlusNear - z * cameraFarMinusNear );\n}\nfloat compareDepths( const in float depth1, const in float depth2, inout int far ) {\nfloat garea = 8.0;\nfloat diff = ( depth1 - depth2 ) * 100.0;\nif ( diff < gDisplace ) {\ngarea = diffArea;\n} else {\nfar = 1;\n}\nfloat dd = diff - gDisplace;\nfloat gauss = pow( EULER, -2.0 * ( dd * dd ) / ( garea * garea ) );\nreturn gauss;\n}\nfloat calcAO( float depth, float dw, float dh ) {\nvec2 vv = vec2( dw, dh );\nvec2 coord1 = vUv + radius * vv;\nvec2 coord2 = vUv - radius * vv;\nfloat temp1 = 0.0;\nfloat temp2 = 0.0;\nint far = 0;\ntemp1 = compareDepths( depth, readDepth( coord1 ), far );\nif ( far > 0 ) {\ntemp2 = compareDepths( readDepth( coord2 ), depth, far );\ntemp1 += ( 1.0 - temp1 ) * temp2;\n}\nreturn temp1;\n}\nvoid main() {\nvec2 noise = rand( vUv );\nfloat depth = readDepth( vUv );\nfloat tt = clamp( depth, aoClamp, 1.0 );\nfloat w = ( 1.0 / size.x ) / tt + ( noise.x * ( 1.0 - noise.x ) );\nfloat h = ( 1.0 / size.y ) / tt + ( noise.y * ( 1.0 - noise.y ) );\nfloat ao = 0.0;\nfloat dz = 1.0 / float( samples );\nfloat l = 0.0;\nfloat z = 1.0 - dz / 2.0;\nfor ( int i = 0; i <= samples; i ++ ) {\nfloat r = sqrt( 1.0 - z );\nfloat pw = cos( l ) * r;\nfloat ph = sin( l ) * r;\nao += calcAO( depth, pw * w, ph * h );\nz = z - dz;\nl = l + DL;\n}\nao /= float( samples );\nao = 1.0 - ao;\nvec3 color = texture2D( tDiffuse, vUv ).rgb;\nvec3 lumcoeff = vec3( 0.299, 0.587, 0.114 );\nfloat lum = dot( color.rgb, lumcoeff );\nvec3 luminance = vec3( lum );\nvec3 final = vec3( color * mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );\nif ( onlyAO ) {\nfinal = vec3( mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );\n}\ngl_FragColor = vec4( final, 0.5 );\n}"
        }, t.CopyShader = {
            uniforms: {
                tDiffuse: {
                    value: null
                },
                opacity: {
                    value: 1
                }
            },
            vertexShader: "varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
            fragmentShader: "uniform float opacity;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\ngl_FragColor = opacity * texel;\n}"
        }, t.EffectComposer = function(e, i) {
            if (this.renderer = e, void 0 === i) {
                var n = {
                        minFilter: t.LinearFilter,
                        magFilter: t.LinearFilter,
                        format: t.RGBAFormat,
                        stencilBuffer: !1
                    },
                    r = e.getDrawingBufferSize();
                (i = new t.WebGLRenderTarget(r.width, r.height, n)).texture.name = "EffectComposer.rt1"
            }
            this.renderTarget1 = i, this.renderTarget2 = i.clone(), this.renderTarget2.texture.name = "EffectComposer.rt2", this.writeBuffer = this.renderTarget1, this.readBuffer = this.renderTarget2, this.passes = [], void 0 === t.CopyShader && console.error("THREE.EffectComposer relies on THREE.CopyShader"), void 0 === t.ShaderPass && console.error("THREE.EffectComposer relies on THREE.ShaderPass"), this.copyPass = new t.ShaderPass(t.CopyShader)
        }, Object.assign(t.EffectComposer.prototype, {
            swapBuffers: function() {
                var t = this.readBuffer;
                this.readBuffer = this.writeBuffer, this.writeBuffer = t
            },
            addPass: function(t) {
                this.passes.push(t);
                var e = this.renderer.getDrawingBufferSize();
                t.setSize(e.width, e.height)
            },
            insertPass: function(t, e) {
                this.passes.splice(e, 0, t)
            },
            render: function(e) {
                var i, n = !1,
                    r = this.passes.length;
                for (i = 0; i < r; i++) {
                    var s = this.passes[i];
                    if (!1 !== s.enabled) {
                        if (s.render(this.renderer, this.writeBuffer, this.readBuffer, e, n), s.needsSwap) {
                            if (n) {
                                var o = this.renderer.context;
                                o.stencilFunc(o.NOTEQUAL, 1, 4294967295), this.copyPass.render(this.renderer, this.writeBuffer, this.readBuffer, e), o.stencilFunc(o.EQUAL, 1, 4294967295)
                            }
                            this.swapBuffers()
                        }
                        void 0 !== t.MaskPass && (s instanceof t.MaskPass ? n = !0 : s instanceof t.ClearMaskPass && (n = !1))
                    }
                }
            },
            reset: function(t) {
                if (void 0 === t) {
                    var e = this.renderer.getDrawingBufferSize();
                    (t = this.renderTarget1.clone()).setSize(e.width, e.height)
                }
                this.renderTarget1.dispose(), this.renderTarget2.dispose(), this.renderTarget1 = t, this.renderTarget2 = t.clone(), this.writeBuffer = this.renderTarget1, this.readBuffer = this.renderTarget2
            },
            setSize: function(t, e) {
                this.renderTarget1.setSize(t, e), this.renderTarget2.setSize(t, e);
                for (var i = 0; i < this.passes.length; i++) this.passes[i].setSize(t, e)
            }
        }), t.Pass = function() {
            this.needsSwap = this.enabled = !0, this.renderToScreen = this.clear = !1
        }, Object.assign(t.Pass.prototype, {
            setSize: function() {},
            render: function() {
                console.error("THREE.Pass: .render() must be implemented in derived pass.")
            }
        }), t.RenderPass = function(e, i, n, r, s) {
            t.Pass.call(this), this.scene = e, this.camera = i, this.overrideMaterial = n, this.clearColor = r, this.clearAlpha = void 0 === s ? 0 : s, this.clear = !0, this.needsSwap = this.clearDepth = !1
        }, t.RenderPass.prototype = Object.assign(Object.create(t.Pass.prototype), {
            constructor: t.RenderPass,
            render: function(t, e, i) {
                if (e = t.autoClear, t.autoClear = !1, this.scene.overrideMaterial = this.overrideMaterial, this.clearColor) {
                    var n = t.getClearColor().getHex(),
                        r = t.getClearAlpha();
                    t.setClearColor(this.clearColor, this.clearAlpha)
                }
                this.clearDepth && t.clearDepth(), t.render(this.scene, this.camera, this.renderToScreen ? null : i, this.clear), this.clearColor && t.setClearColor(n, r), this.scene.overrideMaterial = null, t.autoClear = e
            }
        }), t.ShaderPass = function(e, i) {
            t.Pass.call(this), this.textureID = void 0 === i ? "tDiffuse" : i, e instanceof t.ShaderMaterial ? (this.uniforms = e.uniforms, this.material = e) : e && (this.uniforms = t.UniformsUtils.clone(e.uniforms), this.material = new t.ShaderMaterial({
                defines: Object.assign({}, e.defines),
                uniforms: this.uniforms,
                vertexShader: e.vertexShader,
                fragmentShader: e.fragmentShader
            })), this.camera = new t.OrthographicCamera(-1, 1, 1, -1, 0, 1), this.scene = new t.Scene, this.quad = new t.Mesh(new t.PlaneBufferGeometry(2, 2), null), this.quad.frustumCulled = !1, this.scene.add(this.quad)
        }, t.ShaderPass.prototype = Object.assign(Object.create(t.Pass.prototype), {
            constructor: t.ShaderPass,
            render: function(t, e, i) {
                this.uniforms[this.textureID] && (this.uniforms[this.textureID].value = i.texture), this.quad.material = this.material, this.renderToScreen ? t.render(this.scene, this.camera) : t.render(this.scene, this.camera, e, this.clear)
            }
        }), t.MaskPass = function(e, i) {
            t.Pass.call(this), this.scene = e, this.camera = i, this.clear = !0, this.inverse = this.needsSwap = !1
        }, t.MaskPass.prototype = Object.assign(Object.create(t.Pass.prototype), {
            constructor: t.MaskPass,
            render: function(t, e, i, n, r) {
                if (n = t.context, (r = t.state).buffers.color.setMask(!1), r.buffers.depth.setMask(!1), r.buffers.color.setLocked(!0), r.buffers.depth.setLocked(!0), this.inverse) var s = 0,
                    o = 1;
                else s = 1, o = 0;
                r.buffers.stencil.setTest(!0), r.buffers.stencil.setOp(n.REPLACE, n.REPLACE, n.REPLACE), r.buffers.stencil.setFunc(n.ALWAYS, s, 4294967295), r.buffers.stencil.setClear(o), t.render(this.scene, this.camera, i, this.clear), t.render(this.scene, this.camera, e, this.clear), r.buffers.color.setLocked(!1), r.buffers.depth.setLocked(!1), r.buffers.stencil.setFunc(n.EQUAL, 1, 4294967295), r.buffers.stencil.setOp(n.KEEP, n.KEEP, n.KEEP)
            }
        }), t.ClearMaskPass = function() {
            t.Pass.call(this), this.needsSwap = !1
        }, t.ClearMaskPass.prototype = Object.create(t.Pass.prototype), Object.assign(t.ClearMaskPass.prototype, {
            render: function(t) {
                t.state.buffers.stencil.setTest(!1)
            }
        }), t.SSAOPass = function(e, i, n, r) {
            return void 0 === t.SSAOShader ? (console.warn("THREE.SSAOPass depends on THREE.SSAOShader"), new t.ShaderPass) : (t.ShaderPass.call(this, t.SSAOShader), this.width = void 0 === n ? 128 : n, this.height = void 0 === r ? 128 : r, this.renderToScreen = !1, this.camera2 = i, this.scene2 = e, this.depthMaterial = new t.MeshDepthMaterial, this.depthMaterial.depthPacking = t.RGBADepthPacking, this.depthMaterial.blending = t.NoBlending, this.depthRenderTarget = new t.WebGLRenderTarget(this.width, this.height, {
                minFilter: t.LinearFilter,
                magFilter: t.LinearFilter
            }), this.uniforms.tDepth.value = this.depthRenderTarget.texture, this.uniforms.size.value.set(this.width, this.height), this.uniforms.cameraNear.value = this.camera2.near, this.uniforms.cameraFar.value = this.camera2.far, this.uniforms.radius.value = 4, this.uniforms.onlyAO.value = !1, this.uniforms.aoClamp.value = .25, this.uniforms.lumInfluence.value = .7, void Object.defineProperties(this, {
                radius: {
                    get: function() {
                        return this.uniforms.radius.value
                    },
                    set: function(t) {
                        this.uniforms.radius.value = t
                    }
                },
                onlyAO: {
                    get: function() {
                        return this.uniforms.onlyAO.value
                    },
                    set: function(t) {
                        this.uniforms.onlyAO.value = t
                    }
                },
                aoClamp: {
                    get: function() {
                        return this.uniforms.aoClamp.value
                    },
                    set: function(t) {
                        this.uniforms.aoClamp.value = t
                    }
                },
                lumInfluence: {
                    get: function() {
                        return this.uniforms.lumInfluence.value
                    },
                    set: function(t) {
                        this.uniforms.lumInfluence.value = t
                    }
                }
            }))
        }, t.SSAOPass.prototype = Object.create(t.ShaderPass.prototype), t.SSAOPass.prototype.render = function(e, i, n, r, s) {
            this.scene2.overrideMaterial = this.depthMaterial, e.render(this.scene2, this.camera2, this.depthRenderTarget, !0), this.scene2.overrideMaterial = null, t.ShaderPass.prototype.render.call(this, e, i, n, r, s)
        }, t.SSAOPass.prototype.setScene = function(t) {
            this.scene2 = t
        }, t.SSAOPass.prototype.setCamera = function(t) {
            this.camera2 = t, this.uniforms.cameraNear.value = this.camera2.near, this.uniforms.cameraFar.value = this.camera2.far
        }, t.SSAOPass.prototype.setSize = function(t, e) {
            this.width = t, this.height = e, this.uniforms.size.value.set(this.width, this.height), this.depthRenderTarget.setSize(this.width, this.height)
        }, t.LuminosityHighPassShader = {
            shaderID: "luminosityHighPass",
            uniforms: {
                tDiffuse: {
                    type: "t",
                    value: null
                },
                luminosityThreshold: {
                    type: "f",
                    value: 1
                },
                smoothWidth: {
                    type: "f",
                    value: 1
                },
                defaultColor: {
                    type: "c",
                    value: new t.Color(0)
                },
                defaultOpacity: {
                    type: "f",
                    value: 0
                }
            },
            vertexShader: "varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
            fragmentShader: "uniform sampler2D tDiffuse;\nuniform vec3 defaultColor;\nuniform float defaultOpacity;\nuniform float luminosityThreshold;\nuniform float smoothWidth;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\nvec3 luma = vec3( 0.299, 0.587, 0.114 );\nfloat v = dot( texel.xyz, luma );\nvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );\nfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\ngl_FragColor = mix( outputColor, texel, alpha );\n}"
        }, t.UnrealBloomPass = function(e, i, n, r) {
            t.Pass.call(this), this.strength = void 0 === i ? 1 : i, this.radius = n, this.threshold = r, this.resolution = void 0 === e ? new t.Vector2(256, 256) : new t.Vector2(e.x, e.y), this.clearColor = new t.Color(0, 0, 0);
            var s = {
                minFilter: t.LinearFilter,
                magFilter: t.LinearFilter,
                format: t.RGBAFormat
            };
            this.renderTargetsHorizontal = [], this.renderTargetsVertical = [], this.nMips = 5, e = Math.round(this.resolution.x / 2), n = Math.round(this.resolution.y / 2), this.renderTargetBright = new t.WebGLRenderTarget(e, n, s), this.renderTargetBright.texture.name = "UnrealBloomPass.bright", this.renderTargetBright.texture.generateMipmaps = !1;
            for (var o, a = 0; a < this.nMips; a++)(o = new t.WebGLRenderTarget(e, n, s)).texture.name = "UnrealBloomPass.h" + a, o.texture.generateMipmaps = !1, this.renderTargetsHorizontal.push(o), (o = new t.WebGLRenderTarget(e, n, s)).texture.name = "UnrealBloomPass.v" + a, o.texture.generateMipmaps = !1, this.renderTargetsVertical.push(o), e = Math.round(e / 2), n = Math.round(n / 2);
            for (void 0 === t.LuminosityHighPassShader && console.error("THREE.UnrealBloomPass relies on THREE.LuminosityHighPassShader"), e = t.LuminosityHighPassShader, this.highPassUniforms = t.UniformsUtils.clone(e.uniforms), this.highPassUniforms.luminosityThreshold.value = r, this.highPassUniforms.smoothWidth.value = .01, this.materialHighPassFilter = new t.ShaderMaterial({
                    uniforms: this.highPassUniforms,
                    vertexShader: e.vertexShader,
                    fragmentShader: e.fragmentShader,
                    defines: {}
                }), this.separableBlurMaterials = [], r = [3, 5, 7, 9, 11], e = Math.round(this.resolution.x / 2), n = Math.round(this.resolution.y / 2), a = 0; a < this.nMips; a++) this.separableBlurMaterials.push(this.getSeperableBlurMaterial(r[a])), this.separableBlurMaterials[a].uniforms.texSize.value = new t.Vector2(e, n), e = Math.round(e / 2), n = Math.round(n / 2);
            this.compositeMaterial = this.getCompositeMaterial(this.nMips), this.compositeMaterial.uniforms.blurTexture1.value = this.renderTargetsVertical[0].texture, this.compositeMaterial.uniforms.blurTexture2.value = this.renderTargetsVertical[1].texture, this.compositeMaterial.uniforms.blurTexture3.value = this.renderTargetsVertical[2].texture, this.compositeMaterial.uniforms.blurTexture4.value = this.renderTargetsVertical[3].texture, this.compositeMaterial.uniforms.blurTexture5.value = this.renderTargetsVertical[4].texture, this.compositeMaterial.uniforms.bloomStrength.value = i, this.compositeMaterial.uniforms.bloomRadius.value = .1, this.compositeMaterial.needsUpdate = !0, this.compositeMaterial.uniforms.bloomFactors.value = [1, .8, .6, .4, .2], this.bloomTintColors = [new t.Vector3(1, 1, 1), new t.Vector3(1, 1, 1), new t.Vector3(1, 1, 1), new t.Vector3(1, 1, 1), new t.Vector3(1, 1, 1)], this.compositeMaterial.uniforms.bloomTintColors.value = this.bloomTintColors, void 0 === t.CopyShader && console.error("THREE.BloomPass relies on THREE.CopyShader"), i = t.CopyShader, this.copyUniforms = t.UniformsUtils.clone(i.uniforms), this.copyUniforms.opacity.value = 1, this.materialCopy = new t.ShaderMaterial({
                uniforms: this.copyUniforms,
                vertexShader: i.vertexShader,
                fragmentShader: i.fragmentShader,
                blending: t.AdditiveBlending,
                depthTest: !1,
                depthWrite: !1,
                transparent: !0
            }), this.enabled = !0, this.needsSwap = !1, this.oldClearColor = new t.Color, this.oldClearAlpha = 1, this.camera = new t.OrthographicCamera(-1, 1, 1, -1, 0, 1), this.scene = new t.Scene, this.basic = new t.MeshBasicMaterial, this.quad = new t.Mesh(new t.PlaneBufferGeometry(2, 2), null), this.quad.frustumCulled = !1, this.scene.add(this.quad)
        }, t.UnrealBloomPass.prototype = Object.assign(Object.create(t.Pass.prototype), {
            constructor: t.UnrealBloomPass,
            dispose: function() {
                for (var t = 0; t < this.renderTargetsHorizontal.length; t++) this.renderTargetsHorizontal[t].dispose();
                for (t = 0; t < this.renderTargetsVertical.length; t++) this.renderTargetsVertical[t].dispose();
                this.renderTargetBright.dispose()
            },
            setSize: function(e, i) {
                var n = Math.round(e / 2),
                    r = Math.round(i / 2);
                this.renderTargetBright.setSize(n, r);
                for (var s = 0; s < this.nMips; s++) this.renderTargetsHorizontal[s].setSize(n, r), this.renderTargetsVertical[s].setSize(n, r), this.separableBlurMaterials[s].uniforms.texSize.value = new t.Vector2(n, r), n = Math.round(n / 2), r = Math.round(r / 2)
            },
            render: function(e, i, n, r, s) {
                this.oldClearColor.copy(e.getClearColor()), this.oldClearAlpha = e.getClearAlpha(), i = e.autoClear, e.autoClear = !1, e.setClearColor(this.clearColor, 0), s && e.context.disable(e.context.STENCIL_TEST), this.renderToScreen && (this.quad.material = this.basic, this.basic.map = n.texture, e.render(this.scene, this.camera, void 0, !0)), this.highPassUniforms.tDiffuse.value = n.texture, this.highPassUniforms.luminosityThreshold.value = this.threshold, this.quad.material = this.materialHighPassFilter, e.render(this.scene, this.camera, this.renderTargetBright, !0), r = this.renderTargetBright;
                for (var o = 0; o < this.nMips; o++) this.quad.material = this.separableBlurMaterials[o], this.separableBlurMaterials[o].uniforms.colorTexture.value = r.texture, this.separableBlurMaterials[o].uniforms.direction.value = t.UnrealBloomPass.BlurDirectionX, e.render(this.scene, this.camera, this.renderTargetsHorizontal[o], !0), this.separableBlurMaterials[o].uniforms.colorTexture.value = this.renderTargetsHorizontal[o].texture, this.separableBlurMaterials[o].uniforms.direction.value = t.UnrealBloomPass.BlurDirectionY, e.render(this.scene, this.camera, this.renderTargetsVertical[o], !0), r = this.renderTargetsVertical[o];
                this.quad.material = this.compositeMaterial, this.compositeMaterial.uniforms.bloomStrength.value = this.strength, this.compositeMaterial.uniforms.bloomRadius.value = this.radius, this.compositeMaterial.uniforms.bloomTintColors.value = this.bloomTintColors, e.render(this.scene, this.camera, this.renderTargetsHorizontal[0], !0), this.quad.material = this.materialCopy, this.copyUniforms.tDiffuse.value = this.renderTargetsHorizontal[0].texture, s && e.context.enable(e.context.STENCIL_TEST), this.renderToScreen ? e.render(this.scene, this.camera, void 0, !1) : e.render(this.scene, this.camera, n, !1), e.setClearColor(this.oldClearColor, this.oldClearAlpha), e.autoClear = i
            },
            getSeperableBlurMaterial: function(e) {
                return new t.ShaderMaterial({
                    defines: {
                        KERNEL_RADIUS: e,
                        SIGMA: e
                    },
                    uniforms: {
                        colorTexture: {
                            value: null
                        },
                        texSize: {
                            value: new t.Vector2(.5, .5)
                        },
                        direction: {
                            value: new t.Vector2(.5, .5)
                        }
                    },
                    vertexShader: "varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",
                    fragmentShader: "#include <common>\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\tuniform vec2 texSize;\t\t\t\tuniform vec2 direction;\t\t\t\t\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\t\t\t\t}\t\t\t\tvoid main() {\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\t\t\t\t\tfloat fSigma = float(SIGMA);\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\t\t\t\t\t\tfloat x = float(i);\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\t\t\t\t\t\tweightSum += 2.0 * w;\t\t\t\t\t}\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\n\t\t\t\t}"
                })
            },
            getCompositeMaterial: function(e) {
                return new t.ShaderMaterial({
                    defines: {
                        NUM_MIPS: e
                    },
                    uniforms: {
                        blurTexture1: {
                            value: null
                        },
                        blurTexture2: {
                            value: null
                        },
                        blurTexture3: {
                            value: null
                        },
                        blurTexture4: {
                            value: null
                        },
                        blurTexture5: {
                            value: null
                        },
                        dirtTexture: {
                            value: null
                        },
                        bloomStrength: {
                            value: 1
                        },
                        bloomFactors: {
                            value: null
                        },
                        bloomTintColors: {
                            value: null
                        },
                        bloomRadius: {
                            value: 0
                        }
                    },
                    vertexShader: "varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",
                    fragmentShader: "varying vec2 vUv;\t\t\t\tuniform sampler2D blurTexture1;\t\t\t\tuniform sampler2D blurTexture2;\t\t\t\tuniform sampler2D blurTexture3;\t\t\t\tuniform sampler2D blurTexture4;\t\t\t\tuniform sampler2D blurTexture5;\t\t\t\tuniform sampler2D dirtTexture;\t\t\t\tuniform float bloomStrength;\t\t\t\tuniform float bloomRadius;\t\t\t\tuniform float bloomFactors[NUM_MIPS];\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\t\t\t\t\t\t\t\tfloat lerpBloomFactor(const in float factor) { \t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\t\t\t\t}\t\t\t\t\t\t\t\tvoid main() {\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\t\t\t\t}"
                })
            }
        }), t.UnrealBloomPass.BlurDirectionX = new t.Vector2(1, 0), t.UnrealBloomPass.BlurDirectionY = new t.Vector2(0, 1)
    }
}, function(t, e) {
    t.exports = function(t, e) {
        var i;
        this.sounds = [], this.listener = {}, this.rate = 1, this.setVolume = function(t) {
            Howler.volume(t)
        }, this.getSound = function(t, e) {
            var n = t + (e || "");
            (i = this.sounds[n]) || (i = new Howl({
                src: ".././sound/" + t + ".mp3"
            }), this.sounds[n] = i)
        }, this.play = function(t, e, n, r) {
            if (this.getSound(t), this.rate && (!n || !i.isPlaying)) {
                i.isPlaying = !0;
                var s = i.play();
                i.volume(e || 1, s), i.loop(n, s), i.rate((r || 1) * this.rate, s)
            }
        }, this.stop = function(t) {
            this.getSound(t), i && i.stop()
        }, this.play3Dv = function(n, r, s, o, a, c, l, p) {
            var h = 1 - t.getDistance3D(r, s, o, p.x, p.y, p.z) / a;
            if (0 < h) {
                this.getSound(n, "3dv");
                var u = i.play();
                c = (c || 1) * h * e.otherSoundMlt, i.volume(c, u), i.rate(l || 1, u)
            }
        }, this.play3D = function(t, n, r, s, o, a, c, l) {
            this.getSound(t, "3d");
            var p = i.play();
            o = (o || 1) * e.otherSoundMlt, i.volume(o, p), i.rate(a || 1, p), i.pos(n, r, s, p), i.pannerAttr({
                refDistance: c || 25,
                rolloffFactor: l || 1
            }, p)
        }
    }
}, function(t, e, i) {
    var n = i(2),
        r = i(3),
        s = i(64);
    t.exports = {
        ahNum: 0,
        socket: null,
        connected: !1,
        socketId: -1,
        sendQueue: [],
        connect: function(t, e, i) {
            if (!this.jfieJQbEm) {
                var s = n.enableHttps ? "wss:" : "ws:",
                    o = this;
                try {
                    var a = !1;
                    this.jfieJQbEm = new WebSocket(s + t), this.jfieJQbEm.binaryType = "arraybuffer", this.jfieJQbEm.onmessage = function(t) {
                        var e = r.aqZx(t.data)[0],
                            n = e[0],
                            s = e[1];
                        "io-init" == n ? o.socketId = s[0] : i[n].apply(void 0, s)
                    }, this.jfieJQbEm.onopen = function() {
                        o.connected = !0, e();
                        for (let t of o.sendQueue) o.send(t[0], ...t[1])
                    }, this.jfieJQbEm.onclose = function() {
                        o.connected = !1, a || e("Disconnected. Try connecting to another server.")
                    }, this.jfieJQbEm.onerror = function() {
                        this.jfieJQbEm.readyState != WebSocket.OPEN && (a = !0, console.error("Socket error", arguments), e("Socket error"))
                    }
                } catch (t) {
                    console.error("Socket connection error:", t), e(t)
                }
            }
        },
        send: function(t, ...e) {
            if (!this.jfieJQbEm || this.jfieJQbEm.readyState !== WebSocket.OPEN) return console.warn("Socket not open yet", t, e), void this.sendQueue.push([t, e]);
            this.ahNum = r.wmCIIWUdzAT(this.ahNum, s);
            var i = r.FcYpjWZ([t, e], this.ahNum);
            this.jfieJQbEm.send(i)
        },
        socketReady: function() {
            return this.jfieJQbEm && this.connected
        }
    }
}, function(t) {
    t.exports = 7741
}, function(t, e, i) {
    (function(e) {
        var n = i(42),
            r = i(3),
            s = i(2),
            o = i(59),
            a = 0;
        t.exports.validMap = function(t, e) {
            if (!r.isString(t.name) || !t.name.replace(/\s/g, "").length) return "Missing map name.";
            if (-1 !== t.name.indexOf("<") || -1 !== t.name.indexOf(">")) return "Illegal characters in map name.";
            if (16 < t.name.length) return "Map name too long.";
            if (!r.isArray(t.spawns) || !t.spawns.length) return "Missing spawn points.";
            if (t.spawns.length > s.spawnLimit) return "Too many spawn points.";
            for (var i, n = 0; n < t.spawns.length; ++n) {
                if (i = t.spawns[n], !r.isArray(i) || !i.length || 3 != i.length && 4 != i.length) return "Spawn point error.";
                for (var o = 0; o < i.length; ++o) {
                    if (3 > o && !r.isNumber(i[o])) return "Spawn point error.";
                    if (3 == o && null == i[o] && 1 == i[o] && 2 == i[o]) return "Spawn team error."
                }
            }
            if (!r.isArray(t.objects) || !t.objects.length) return "Missing objects.";
            if (t.objects.length > (e ? s.objectLimitF : s.objectLimit)) return "Map exceeds object limit.";
            var a;
            for (n = 0; n < t.objects.length; ++n) {
                if (a = t.objects[n], !r.isArray(a.s) || 3 != a.s.length || !r.arrayInts(a.s)) return "Object scale error.";
                if (!r.isArray(a.p) || 3 != a.p.length || !r.arrayInts(a.p)) return "Object position error.";
                if (r.isArray(a.r)) {
                    if (3 != a.r.length || !r.arrayInts(a.r)) return "Object rotation value error."
                } else if (null != a.r) return "Object rotation error.";
                if (null != a.d && !r.isNumber(a.d)) return "Object direction error.";
                a.col = !!a.col
            }
            return null
        }, t.exports.obj = function(c, l, p, h, u, d, f, m, g) {
            this.isCustom = c, this.isPrimary = 0 == l, this.sid = a++, this.gameInstance = null, this.connectedClients = 0, this.password = void 0, this.map = new n.manager(h, d, r, s), this.store = i(52), this.attach = i(53), this.weapons = i(54), this.classes = i(55), this.streaks = i(56), this.sprays = i(57), this.projectiles = new(i(66))(this, f), this.players = new(i(50).manager)(this, h, u, d, r, s, f), this.endData = [], this.endTimer = 0, this.banList = [], this.destObjs = [];
            var v, y, x, w = this;
            this.applyConfig = function(t, e) {
                t = t || {}, this.config = {};
                for (var i, n = 0; n < s.serverConfig.length; ++n)
                    if ((i = s.serverConfig[n]).bool) this.config[i.varN] = null == t[i.varN] ? i.def : !!t[i.varN];
                    else {
                        var o = t[i.varN];
                        r.isNumber(o) || (o = i.def), this.config[i.varN] = r.limitMM(o, i.min, e && i.maxF || i.max)
                    } if (this.config.maps = t.maps, !r.isArray(this.config.maps) || !this.config.maps.length || this.config.maps.length > this.map.maps.length) {
                    this.config.maps = [];
                    for (n = 0; n < this.map.maps.length; n++) this.config.maps.push(n)
                } else
                    for (n = 0; n < this.config.maps.length; n++)
                        if (!this.map.maps[this.config.maps[n]]) {
                            this.config.maps = [0];
                            break
                        } if (this.config.modes = t.modes, !r.isArray(this.config.modes) || !this.config.modes.length || this.config.modes.length > this.map.modes.length) this.config.modes = null;
                else
                    for (n = 0; n < this.config.modes.length; n++)
                        if (!this.map.modes[this.config.modes[n]]) {
                            this.config.modes = null;
                            break
                        } var a = !1;
                if (this.config.classes = t.classes, !r.isArray(this.config.classes) || !this.config.classes.length || this.config.classes.length > this.classes.length) a = !0;
                else
                    for (n = 0; n < this.config.classes.length; n++)
                        if (!this.classes[this.config.classes[n]]) {
                            a = !0;
                            break
                        } if (a) {
                    this.config.classes = [];
                    for (n = 0; n < this.classes.length; n++) this.config.classes.push(n)
                }
            }, this.applyConfig(), this.getInfo = function() {
                return this.mode.alias + "_" + this.map.maps[this.mapIndex].name
            }, this.customMap = function(e, i, n, r, o) {
                if (e) try {
                    var a = JSON.parse(e);
                    if (f && (this.customMapData = {
                            data: e,
                            id: i,
                            featured: r,
                            creator: n
                        }), !o) {
                        var c = t.exports.validMap(a, r);
                        if (c) return c
                    }
                    for (var l = 0; l < a.objects.length; ++l) {
                        if (a.objects[l].id = s.prefabIDS[a.objects[l].id || 0], !a.objects[l].id) return "Object ID error.";
                        if (a.objects[l].t = s.textureIDS[a.objects[l].t || 0], !a.objects[l].t) return "Object Texture error."
                    }
                    a.creator = n, this.map.setMaps([a]), this.config.maps = [0]
                } catch (e) {
                    return "Map error occured."
                }
            }, this.playSound = function(t, e, i, n, r) {
                if (e)
                    if (u) u.play(t, e, !1, r);
                    else
                        for (var s = 0; s < this.players.list.length; ++s)((v = this.players.list[s]).active || v.spectating) && (i != v || n) && f.send(v.id, "s", t, i.sid, e)
            }, this.playerSound = function(t, e, i, n, r) {
                (v = n || this.players.findBySid(e)) && u.play3D(t, v.x, v.y, v.z, i || 1, r)
            }, this.moveObj = function(t, e, i, n) {
                t.x = e, t.y = i, t.z = n, t.meshRef && t.meshRef.position.set(e, i, n)
            }, this.explosion = function(t, e, i, n, s, o) {
                for (var a = 0; a < this.players.list.length; ++a)
                    if (((v = this.players.list[a]).active || v.spectating) && (f.send(v.id, "ex", Math.round(t), Math.round(e), Math.round(i), Math.round(n)), v.active)) {
                        var c = r.getDistance3D(t, e, i, v.x, v.y, v.z),
                            l = 1 - c / n;
                        0 < l && this.players.changeHealth(v, o, s * l, o == v) && this.players.kill(v, o, {
                            dst: c
                        })
                    }
            };
            var b = [];
            this.getSpawnPoint = function(t, e) {
                if (e) return this.map.spawns[0];
                b.length = 0;
                for (var i, n = 0; n < this.map.spawns.length; ++n) {
                    this.map.spawns[n].dst = 0;
                    for (var o = 0; o < this.players.list.length; ++o) !(v = this.players.list[o]).active || t && v.team == t || this.canSee(v, this.map.spawns[n].x, this.map.spawns[n].y + s.playerHeight, this.map.spawns[n].z) || this.map.spawns[n].dst++
                }
                this.map.spawns.sort(r.orderByDst), i = this.map.spawns[0].dst;
                for (n = 0; n < this.map.spawns.length; ++n)
                    if (this.map.spawns[n].dst == i) {
                        this.map.spawns[n].dst = 0;
                        for (o = 0; o < this.players.list.length; ++o)(v = this.players.list[o]).active && (!t || v.team != t) && (this.map.spawns[n].dst += r.getDistance3D(this.map.spawns[n].x, this.map.spawns[n].y, this.map.spawns[n].z, v.x, v.y, v.z));
                        if (this.mode && this.mode.flags)
                            for (var a = 0; a < this.map.manager.flags.length; ++a) v = this.map.manager.flags[a], this.map.spawns[n].dst += r.getDistance3D(this.map.spawns[n].x, this.map.spawns[n].y, this.map.spawns[n].z, v.x, v.y, v.z) * (v.team == t ? -1 : 1);
                        (t && this.map.spawns[n].team == t || !this.map.spawns[n].team) && b.push(this.map.spawns[n])
                    } return b.sort(r.orderByDst), b.reverse(), b[0] || this.map.spawns[0]
            }, this.canSee = function(t, e, i, n, o) {
                o = o || 0;
                for (var a, c = r.getDistance3D(t.x, t.y, t.z, e, i, n), l = r.getDirection(t.z, t.x, n, e), p = r.getDirection(r.getDistance(t.x, t.z, e, n), i, 0, t.y), h = 1 / (c * Math.sin(l - Math.PI) * Math.cos(p)), u = 1 / (c * Math.cos(l - Math.PI) * Math.cos(p)), d = 1 / (c * Math.sin(p)), f = t.y + t.height - s.cameraHeight, m = 0; m < this.map.manager.objects.length; ++m)
                    if (!(a = this.map.manager.objects[m]).noShoot && a.active && !a.transparent) {
                        var g = r.lineInRect(t.x, t.z, f, h, u, d, a.x - Math.max(0, a.width - o), a.z - Math.max(0, a.length - o), a.y - Math.max(0, a.height - o), a.x + Math.max(0, a.width - o), a.z + Math.max(0, a.length - o), a.y + Math.max(0, a.height - o));
                        if (g && 1 > g) return g
                    } var v = this.map.terrain;
                if (v) {
                    var y = v.raycast(t.x, -t.z, f, 1 / h, -1 / u, 1 / d);
                    if (y) return r.getDistance3D(t.x, t.y, t.z, y.x, y.z, -y.y)
                }
                return null
            }, this.updateAccounts = function() {
                for (var t = [], e = 0; e < this.players.list.length; ++e)(v = this.players.list[e]).account && !v.account.hack && (v.account.timePlayed += v.playTime || 0, null == this.host && (v.account.games++, v.account.kills += v.kills, v.account.deaths += v.deaths, v.account.score += v.score, v.didWin && v.account.wins++), f.send(v.id, "ua", v.account.getData()), t.push(v));
                t.length && this.saveRewards(t)
            }, this.saveRewards = function(t) {
                for (var e = "", i = 0; i < t.length; ++i) t[i] && t[i].account && t[i].reward && (e += (e.length ? "," : "") + t[i].account.id + "," + t[i].reward);
                e.length && p.call(20, [e], function(e, i) {
                    if (i && i[0] && i[0][0] && (i = i[0][0].result)) try {
                        i = i.split(",");
                        for (var n, r = 0; r < i.length; ++r)(n = parseInt(i[r])) && t[r] && (t[r].account.funds = n, f.send(t[r].id, "uf", n))
                    } catch (t) {}
                })
            }, this.savePlayerData = function(t) {
                if (p && t.account) {
                    var e = t.account;
                    p.call(2, [e.id, e.kills, e.wins, e.games, e.deaths, e.score, e.clan, e.timePlayed])
                }
            }, this.lockPlayer = function(t, e) {
                t.locked = e, f.send(v.id, "lock", e)
            }, this.updateTeam = function(t, e) {
                t.team = e;
                for (var i = 0; i < t.sentTo.length; ++i) f.send(t.sentTo[i], "tm", t.sid, e);
                this.players.syncLeaders()
            }, this.startNuke = function(t) {
                this.nukeTimer = 1e4, this.nukePlayer = t, f.broadcast("game" + this.sid, "n", 0)
            };
            var M = [];
            this.infectRandom = function() {
                M.length = 0;
                for (var t = 0; t < this.players.list.length; ++t) this.players.list[t].active && M.push(t);
                var e = 1;
                14 <= M.length ? e = 3 : 8 <= M.length && (e = 2);
                var i;
                for (t = 0; t < e; ++t) i = r.randInt(0, M.length - 1), (v = this.players.list[M[i]]) && (this.players.kill(v, null, null, !0), f.broadcast("game" + this.sid, "ac", v.sid, null, "got infected")), M.splice(i, 1)
            }, this.pickSimon = function() {
                M.length = 0;
                for (var t = null, e = 0; e < this.players.list.length; ++e)
                    if (this.players.list[e].active) {
                        if (this.host == this.players.list[e].id) {
                            t = this.players.list[e];
                            break
                        }
                        M.push(e)
                    } t || (t = this.players.list[M[r.randInt(0, M.length - 1)]]), t && (this.updateTeam(t, "simon"), t.maxHealth = 5e3, t.health = t.maxHealth, f.send(t.id, "h", t.health))
            }, this.pickBoss = function() {
                M.length = 0;
                for (var t = 0; t < this.players.list.length; ++t) this.players.list[t].active && M.push(t);
                (v = this.players.list[M[r.randInt(0, M.length - 1)]]) && (this.updateTeam(v, "boss"), v.maxHealth = 5e3, v.health = v.maxHealth, f.send(v.id, "h", v.health))
            }, this.pickSeeker = function() {
                M.length = 0;
                for (var t = 0; t < this.players.list.length; ++t) this.players.list[t].active && M.push(t);
                (v = this.players.list[M[r.randInt(0, M.length - 1)]]) && (this.updateTeam(v, "seek"), this.lockPlayer(v, !0))
            }, this.releaseSeeker = function() {
                for (var t = 0; t < this.players.list.length; ++t) "seek" == (v = this.players.list[t]).team && this.lockPlayer(v, !1)
            }, this.destroyObj = function(t) {
                for (var e = 0; e < w.map.manager.objects.length; ++e)
                    if ((v = w.map.manager.objects[e]).uid == t) {
                        v.active = !1, v.meshRef && (v.meshRef.visible = !1), h && h.updateShadowMap();
                        break
                    }
            }, this.capFlag = function(t, e) {
                f && (t.caps++, t.flag = null, this.teams[t.team] ? this.teams[t.team]++ : this.teams[t.team] = 1, f.broadcast("game" + this.sid, "ts", t.team, this.teams[t.team]), f.broadcast("game" + w.sid, "ac", t.sid, null, "captured the Flag"), f.send(t.id, "am", ["Capture", 150]), this.players.score(t, 150), this.resetFlag(e))
            }, this.updateFlagCol = function(t, e) {
                e && e.team && t.teamCol != e.team && t.meshRef && (t.teamCol = e.team, t.meshRef.material = h.getMat("crystal_0", w.map.manager.getFlagDat(t.team, e)), t.meshRef.zoneMesh.material = h.getMat("zone_r", w.map.manager.getZoneDat(t.team, e)))
            }, this.updateFlags = function(t, e) {
                if (w.mode && w.mode.flags) {
                    for (var i = !1, n = !1, r = 0; r < w.map.manager.flags.length; ++r)(v = w.map.manager.flags[r]).meshRef && (t && w.updateFlagCol(v, t), v.carrier ? (t && v.team == t.team && (n = !0), t && v.carrier == t.sid && (i = !0), (y = w.players.findBySid(v.carrier)) && h.moveMesh(v.meshRef, y.x, y.y + s.flagHOff, y.z)) : h.moveMesh(v.meshRef, v.x, v.y, v.z), v.bobAnimY = (v.bobAnimY || 0) + .003 * e, v.meshRef.position.y += Math.cos(v.bobAnimY), v.meshRef.rotation.y += .002 * e);
                    n && i ? gameMessage.innerHTML != s.flagMsgRC && (gameMessage.innerHTML = s.flagMsgRC) : n ? gameMessage.innerHTML != s.flagMsgE && (gameMessage.innerHTML = s.flagMsgE) : i ? gameMessage.innerHTML != s.flagMsg && (gameMessage.innerHTML = s.flagMsg) : "" != gameMessage.innerHTML && (gameMessage.innerHTML = "")
                }
            }, this.updateFlag = function(t, e, i, n, r) {
                for (var s = 0; s < w.map.manager.flags.length; ++s)
                    if ((v = w.map.manager.flags[s]).uid == t) {
                        v.carrier = r, w.moveObj(v, e, i, n);
                        break
                    }
            }, this.dropFlag = function(t) {
                if (f && t && t.carrier) {
                    var e = this.players.findBySid(t.carrier);
                    this.updateCarrier(t), e ? (f.broadcast("game" + w.sid, "ac", e.sid, null, "dropped the Flag"), e.flag = null, this.updateObjPos(t, e.x, e.y + s.flagOff, e.z)) : this.updateObjPos(t, t.orgX, t.orgY, t.orgZ)
                }
            }, this.pickupFlag = function(t, e) {
                f && w.mode && w.mode.flags && !e.carrier && (t.team == e.team ? (e.x != e.orgX || e.y != e.orgY || e.z != e.orgZ) && (f.broadcast("game" + w.sid, "ac", t.sid, null, "returned the Flag"), f.send(t.id, "am", ["Return", 50]), this.players.score(t, 50), this.resetFlag(e)) : !t.flag && (f.send(t.id, "am", ["Pickup", 20]), this.players.score(t, 20), this.updateCarrier(e, t), f.broadcast("game" + w.sid, "ac", t.sid, null, "got the Flag")))
            }, this.syncFlag = function(t) {
                f.broadcast("game" + w.sid, "ufl", t.uid, t.x.round(1), t.y.round(1), t.z.round(1), t.carrier || 0)
            }, this.updateCarrier = function(t, e) {
                t.carrier = e ? e.sid : 0, e && (e.flag = t), this.syncFlag(t)
            }, this.resetFlags = function() {
                for (var t = 0; t < w.map.manager.flags.length; ++t)
                    if ((v = w.map.manager.flags[t]).carrier = 0, v.x = v.orgX, v.y = v.orgY, v.z = v.orgZ, v.meshRef) {
                        var e = !(!w.mode || !w.mode.flags);
                        v.meshRef.visible = e, v.meshRef.zoneMesh.visible = e
                    }
            }, this.resetFlag = function(t) {
                this.updateObjPos(t, t.orgX, t.orgY, t.orgZ), this.updateCarrier(t)
            }, this.updateObjPos = function(t, e, i, n) {
                t.x = e, t.y = i, t.z = n, this.syncFlag(t)
            }, this.setObjective = function(t) {
                try {
                    w.activeObjective = t;
                    for (var e = 0; e < w.map.manager.objectives.length; ++e) w.map.manager.objectives[e].mesh.visible = t == e
                } catch (t) {}
            }, this.nextObjective = function(t) {
                this.activeObjective++, this.activeObjective >= this.map.manager.objectives.length && (this.activeObjective = 0), f.broadcast("game" + this.sid, "obj", this.activeObjective), 1 < this.map.manager.objectives.length && (this.waitTimers = [{
                    time: 6e4 - (t || 0),
                    contTime: !0,
                    canDMG: !0,
                    msg: "next objective ",
                    trigger: function(t, e) {
                        t.nextObjective(e)
                    }
                }])
            }, this.setCheckPoint = function(t, e) {
                if (v = {
                        x: e.x,
                        y: e.y,
                        z: e.z
                    }, y = Object.values(v).join(","), !t.checkPoint || Object.entries(t.checkPoint).toString() !== Object.entries(v).toString()) {
                    if (e.singleUse) {
                        if (t.checkPointList.includes(y)) return;
                        t.checkPointList.push(y)
                    }
                    t.checkPoint = v, f && f.send(t.id, "chp")
                }
            }, this.updateUI = function() {
                killCount.style.display = this.mode.friendly ? "none" : "inline-block"
            }, this.instanceConfig = function() {}, this.init = function(t, a, c) {
                if (this.players.clear(), this.teams = {}, this.destObjs.length = 0, this.mapIndex = null == t ? this.config.maps[r.randInt(0, this.config.maps.length - 1)] : t, this.modeIndex = null == a ? this.config.modes ? this.config.modes[r.randInt(0, this.config.modes.length - 1)] : n.mapModes[this.mapIndex][r.randInt(0, n.mapModes[this.mapIndex].length - 1)] : a, this.mode = n.modes[this.modeIndex], this.map.generate(this.mapIndex, this.mode, c), this.resetFlags(), this.minPlayers = this.config.minPlayers || this.mode.minPlayers, !this.minPlayers && this.config.lives && (this.minPlayers = 2), this.nukeTimer = 0, this.objectiveTimer = 0, this.activeObjective = null, this.gameTimer = null == this.mode.gameTime ? 6e4 * this.config.gameTime : this.mode.gameTime, this.lastTimer = 0, this.lastTimerW = 0, this.waitTimers = null, this.mode.waitTimers) {
                    this.waitTimers = [];
                    for (var l = 0; l < this.mode.waitTimers.length; ++l) this.waitTimers.push({
                        time: this.mode.waitTimers[l].time,
                        trigger: this.mode.waitTimers[l].trigger,
                        msg: this.mode.waitTimers[l].msg
                    })
                } else this.config.lives && (this.waitTimers = [{
                    time: 2e4,
                    msg: "match starts in "
                }]);
                if (this.condition = this.mode.condition, this.config.lives && (!this.condition && (this.mode.teams ? this.condition = function(t) {
                        for (var e = 0, i = 0, n = 0; n < t.players.list.length; ++n) 0 < t.players.list[n].lives && (1 == t.players.list[n].team ? e++ : i++);
                        return 1 <= e && 1 <= i
                    } : this.condition = function(t) {
                        for (var e = 0, i = 0; i < t.players.list.length; ++i) 0 < t.players.list[i].lives && e++;
                        return 1 < e
                    }), !this.winCondition && (this.mode.teams ? this.winCondition = function(t) {
                        for (var e = 0; e < t.players.list.length; ++e)
                            if (t.players.list[e].team && 0 < t.players.list[e].lives) return t.players.list[e].team;
                        return 1
                    } : this.winCondition = function(t) {
                        for (var e = 0; e < t.players.list.length; ++e)
                            if (0 < t.players.list[e].lives) return t.players.list[e];
                        return null
                    })), this.kills = 0, f && this.mode.gameStart && this.mode.gameStart(this), u && u.play("ambient_1", .12, !0), this.earnKR = !1, m) {
                    let t = {
                        mC: this.maxPlayers,
                        pv: this.private,
                        sk: !this.isCustom,
                        data: {
                            cs: this.isCustom,
                            i: this.getInfo(),
                            version: o
                        }
                    };
                    if (this.gameInstance) this.gameInstance.update(t);
                    else if (this.gameInstance = m.createGame(g, t), f && !s.isProd) {
                        function a(t) {
                            return i(67)(t)
                        }
                        var p = a("path"),
                            h = a("fs"),
                            d = p.join(e, "..", "..", "version.json");
                        h.watchFile(d, {
                            interval: 100
                        }, () => {
                            t.data.version = o = JSON.parse(h.readFileSync(d, "utf8")), this.gameInstance.update(t)
                        })
                    }
                }
            }, this.getTeamScores = function() {
                var t = null;
                return this.mode && this.mode.teams && this.teams && (t = [
                    [1, this.teams[1] || 0],
                    [2, this.teams[2] || 0]
                ]), t
            }, this.getSyncData = function() {
                for (var t = [], e = 0; e < this.map.manager.flags.length; ++e) v = this.map.manager.flags[e], t.push([v.uid, v.x.round(1), v.y.round(1), v.z.round(1), v.carrier || 0]);
                return {
                    dest: this.destObjs.length ? this.destObjs : 0,
                    flg: t.length ? t : 0
                }
            }, this.endGame = function() {
                if (this.endTimer = s.endTimer, this.waitTimers = null, this.mode.endSort ? this.players.list.sort(this.mode.endSort) : this.players.list.sort(r.orderByScore), null == this.host || this.earnKR)
                    for (var t = 0; t < this.players.list.length; ++t)(v = this.players.list[t]).reward = 0, v.account && (v.reward = this.earnKR ? Math.min(10, Math.floor(v.score / 100)) : Math.min(30, Math.floor(v.score / 100)), v.challMode && (v.reward = Math.floor(1.5 * v.reward)));
                this.endData.length = 0;
                var e = this.mode.endStats || s.endStats;
                for (t = 0; t < this.players.list.length; ++t)
                    for (var i = 0; i < e.length; ++i) this.endData.push(s.endForm[e[i]] ? s.endForm[e[i]](this.players.list[t][e[i]], this, this.players.list[t]) : this.players.list[t][e[i]]);
                if (this.mode.winCondition) this.winner = this.mode.winCondition(this);
                else if (this.mode.teams && this.teams) {
                    var n = 0,
                        o = null;
                    for (var a in this.teams) this.teams.hasOwnProperty(a) && this.teams[a] >= n && (n = this.teams[a], o = a);
                    this.winner = o
                } else this.winner = this.players.list[0];
                for (t = 0; t < this.players.list.length; ++t)(v = this.players.list[t]).didWin = v.team && v.team == this.winner || v == this.winner, v.checkPoint = null, v.checkPointList = [], f.send(v.id, "end", !1, v.didWin, this.endData);
                this.updateAccounts(), this.init()
            }, this.update = function(t, e, i) {
                if (this.now = e, f) {
                    var n = !0;
                    if (0 < this.endTimer ? (n = !1, this.endTimer -= t, 0 >= this.endTimer ? (this.endTimer = 0, f.broadcast("game" + this.sid, "init", this.mapIndex, this.modeIndex, this.getTeamScores(), this.activeObjective, this.host, this.config, 0, this.customMapData ? 1 : null, this.getSyncData()), this.isPrimary && r.restartIfNeeded(f)) : (x = r.getTime(this.endTimer)) != this.lastTimer && (this.lastTimer = x, f.broadcast("game" + this.sid, "t", x, 1))) : this.waitTimers && (n = !1, this.minPlayers && this.players.activeCount() < this.minPlayers ? f.broadcast("game" + this.sid, "gmsg", "wt") : (this.waitTimers[0].time -= t, 0 >= this.waitTimers[0].time ? (this.waitTimers[0].trigger && this.waitTimers[0].trigger(this, -this.waitTimers[0].time), 0 >= this.waitTimers[0].time && (this.waitTimers.splice(0, 1), !this.waitTimers.length && (this.waitTimers = null, f.broadcast("game" + this.sid, "gmsg")))) : (x = r.getTime(this.waitTimers[0].time)) != this.lastTimerW && (this.lastTimerW = x, f.broadcast("game" + this.sid, "gmsg", this.waitTimers[0].msg + x)))), 0 >= this.endTimer && (n || this.waitTimers && this.waitTimers[0].contTime) && (this.condition && !this.condition(this) && (this.gameTimer = "skip"), "skip" != this.gameTimer && this.mode.timed ? (this.gameTimer += t, (x = r.getTime(this.gameTimer, this.mode.showMS)) != this.lastTimer && (this.lastTimer = x, f.broadcast("game" + this.sid, "t", x))) : (0 < this.gameTimer || "skip" == this.gameTimer) && ("skip" != this.gameTimer && (this.gameTimer -= t), "skip" == this.gameTimer || 0 >= this.gameTimer ? (this.gameTimer = 0, this.endGame()) : (x = r.getTime(this.gameTimer, this.mode.showMS)) != this.lastTimer && (this.lastTimer = x, f.broadcast("game" + this.sid, "t", x)))), 0 >= this.endTimer && this.nukeTimer && (this.nukeTimer -= t, 0 >= this.nukeTimer && (this.nukeTimer = 0, f.broadcast("game" + this.sid, "n", 1), this.nukePlayer))) {
                        for (var s = 0, o = 0; o < this.players.list.length; ++o)(v = this.players.list[o]).active && v != this.nukePlayer && (!v.team || this.nukePlayer.team != v.team) && (s += 50, this.players.kill(v, this.nukePlayer, null, !1, !0));
                        s && (f.send(this.nukePlayer.id, "6", ["Nuke", s], 0, this.nukePlayer.kills), f.send(this.nukePlayer.id, "4"), this.players.score(this.nukePlayer, s))
                    }
                }
                if (this.players.update(t * this.config.deltaMlt), f && this.mode.objective && this.map.manager.objectives.length && (this.objectiveTimer -= t, 0 >= this.objectiveTimer)) {
                    this.objectiveTimer = 1500;
                    for (o = 0; o < this.map.manager.objectives.length; ++o)
                        if (v = this.map.manager.objectives[o], o == this.activeObjective)
                            for (var a = 0; a < this.players.list.length; ++a)(y = this.players.list[a]).active && y.collides(v) && this.players.score(y, 10)
                }
                this.projectiles.update(t * this.config.deltaMlt), d && d.update(t * this.config.deltaMlt, i), h && h.render(t * this.config.deltaMlt)
            }
        }
    }).call(this, "/")
}, function(t, e, i) {
    var n = i(3),
        r = i(2),
        s = function() {
            this.init = function(t, e, i, n, r, s, o) {
                this.x = t, this.y = e, this.z = i, n -= Math.PI, this.xD = n, this.yD = r, this.spd = s.spd, this.range = s.range, this.dmg = s.dmg, this.owner = o, this.skipMove = !0, this.expl = s.explode, this.xS = this.spd * Math.sin(n) * Math.cos(r), this.zS = this.spd * Math.cos(n) * Math.cos(r), this.yS = this.spd * Math.sin(r), this.active = !0
            }, this.update = function(t) {
                this.active && (this.skipMove ? this.skipMove = !1 : (this.x += this.xS * t, this.z += this.zS * t, this.y += this.yS * t, this.range -= this.spd * t, 0 >= this.range && (this.active = !1)))
            }
        };
    t.exports = function(t, e) {
        var o, a, c = e ? {} : i(1),
            l = [];
        this.projectiles = [], this.types = [{
            mat: c.MeshBasicMaterial,
            color: 16777179,
            explode: 50,
            dmg: 125,
            spd: .5,
            scale: 1.4,
            length: 10,
            range: 600
        }], this.update = function(i) {
            for (var s = 0; s < this.projectiles.length; ++s)
                if ((o = this.projectiles[s]).active) {
                    if (o.update(i), o.active) {
                        l.length = 0;
                        for (var c = 1 / (o.spd * i * Math.sin(o.xD) * Math.cos(o.yD)), p = 1 / (o.spd * i * Math.cos(o.xD) * Math.cos(o.yD)), h = 1 / (o.spd * i * Math.sin(o.yD)), u = 0; u < t.map.manager.objects.length; ++u) !(a = t.map.manager.objects[u]).noShoot && a.active && (tmpDst = n.lineInRect(o.x, o.z, o.y, c, p, h, a.x - a.width, a.z - a.length, a.y - a.height, a.x + a.width, a.z + a.length, a.y + a.height), tmpDst && 1 >= tmpDst && l.push(tmpDst));
                        for (u = 0; u < t.players.list.length; ++u)(a = t.players.list[u]).active && a != o.owner && (tmpDst = n.lineInRect(o.x, o.z, o.y, c, p, h, a.x - a.scale - r.hitBoxPad, a.z - a.scale - r.hitBoxPad, a.y, a.x + a.scale + r.hitBoxPad, a.z + a.scale + r.hitBoxPad, a.y + a.height + r.hitBoxPad), tmpDst && 1 >= tmpDst && l.push(tmpDst));
                        var d = t.map.terrain;
                        if (d) {
                            var f = d.raycast(o.x, -o.z, o.y, 1 / c, -1 / p, 1 / h);
                            if (f) {
                                let t = n.getDistance3D(o.x, o.y, o.z, f.x, f.z, -f.y);
                                l.push(t / o.range)
                            }
                        }
                        l.length && (l.sort(n.orderByNum), o.active = !1, o.x += l[0] * (o.xS * i), o.y += l[0] * (o.yS * i), o.z += l[0] * (o.zS * i))
                    }
                    if (!o.active) {
                        o.expl && t.explosion(o.x, o.y, o.z, o.expl, o.dmg, o.owner);
                        for (u = 0; u < t.players.list.length; ++u) e.send(t.players.list[u].id, "pre", o.sid)
                    }
                }
        }, this.init = function(i, n, r, a, c, l, p) {
            i = i.round(1), n = n.round(1), r = r.round(1), a = a.round(3), c = c.round(3), o = null;
            for (var h = 0; h < this.projectiles.length; ++h)
                if (!this.projectiles[h].active) {
                    o = this.projectiles[h];
                    break
                } if (o || ((o = new s).sid = this.projectiles.length, this.projectiles.push(o)), o.init(i, n, r, a, c, this.types[l], p), e)
                for (h = 0; h < t.players.list.length; ++h)(t.players.list[h].active || t.players.list[h].spectating) && e.send(t.players.list[h].id, "pr", i, n, r, a, c, l, o.sid)
        }
    }
}, function(t, e) {
    function i(t) {
        var e = new Error("Cannot find module '" + t + "'");
        throw e.code = "MODULE_NOT_FOUND", e
    }
    i.keys = function() {
        return []
    }, i.resolve = i, t.exports = i, i.id = 67
}, , function(t, e, i) {
    t.exports = i(80)
}, function(t, e, i) {
    t.exports = function(t, e) {
        return function() {
            for (var i = Array(arguments.length), n = 0; n < i.length; n++) i[n] = arguments[n];
            return t.apply(e, i)
        }
    }
}, function(t, e, i) {
    var n = i(23),
        r = i(84),
        s = i(86),
        o = i(87),
        a = i(88),
        c = i(72),
        l = "undefined" != typeof window && window.btoa && window.btoa.bind(window) || i(89);
    t.exports = function(t) {
        return new Promise(function(e, p) {
            var h = t.data,
                u = t.headers;
            n.isFormData(h) && delete u["Content-Type"];
            var d = new XMLHttpRequest,
                f = "onreadystatechange",
                m = !1;
            if ("undefined" == typeof window || !window.XDomainRequest || "withCredentials" in d || a(t.url) || (d = new window.XDomainRequest, f = "onload", m = !0, d.onprogress = function() {}, d.ontimeout = function() {}), t.auth) {
                var g = t.auth.username || "",
                    v = t.auth.password || "";
                u.Authorization = "Basic " + l(g + ":" + v)
            }
            if (d.open(t.method.toUpperCase(), s(t.url, t.params, t.paramsSerializer), !0), d.timeout = t.timeout, d[f] = function() {
                    if (d && (4 === d.readyState || m) && (0 !== d.status || d.responseURL && 0 === d.responseURL.indexOf("file:"))) {
                        var i = "getAllResponseHeaders" in d ? o(d.getAllResponseHeaders()) : null,
                            n = {
                                data: t.responseType && "text" !== t.responseType ? d.response : d.responseText,
                                status: 1223 === d.status ? 204 : d.status,
                                statusText: 1223 === d.status ? "No Content" : d.statusText,
                                headers: i,
                                config: t,
                                request: d
                            };
                        r(e, p, n), d = null
                    }
                }, d.onerror = function() {
                    p(c("Network Error", t, null, d)), d = null
                }, d.ontimeout = function() {
                    p(c("timeout of " + t.timeout + "ms exceeded", t, "ECONNABORTED", d)), d = null
                }, n.isStandardBrowserEnv()) {
                var y = i(90),
                    x = (t.withCredentials || a(t.url)) && t.xsrfCookieName ? y.read(t.xsrfCookieName) : void 0;
                x && (u[t.xsrfHeaderName] = x)
            }
            if ("setRequestHeader" in d && n.forEach(u, function(t, e) {
                    void 0 === h && "content-type" === e.toLowerCase() ? delete u[e] : d.setRequestHeader(e, t)
                }), t.withCredentials && (d.withCredentials = !0), t.responseType) try {
                d.responseType = t.responseType
            } catch (e) {
                if ("json" !== t.responseType) throw e
            }
            "function" == typeof t.onDownloadProgress && d.addEventListener("progress", t.onDownloadProgress), "function" == typeof t.onUploadProgress && d.upload && d.upload.addEventListener("progress", t.onUploadProgress), t.cancelToken && t.cancelToken.promise.then(function(t) {
                d && (d.abort(), p(t), d = null)
            }), void 0 === h && (h = null), d.send(h)
        })
    }
}, function(t, e, i) {
    var n = i(85);
    t.exports = function(t, e, i, r, s) {
        var o = new Error(t);
        return n(o, e, i, r, s)
    }
}, function(t, e, i) {
    t.exports = function(t) {
        return !(!t || !t.__CANCEL__)
    }
}, function(t, e, i) {
    function n(t) {
        this.message = t
    }
    n.prototype.toString = function() {
        return "Cancel" + (this.message ? ": " + this.message : "")
    }, n.prototype.__CANCEL__ = !0, t.exports = n
}, function(t, e, i) {
    var n = i(2),
        r = "undefined" != typeof Storage;

    function s(t) {
        r && localStorage.removeItem(t)
    }
    window.saveVal = function(t, e) {
        r && localStorage.setItem(t, e)
    }, window.getSavedVal = function(t) {
        return r ? localStorage.getItem(t) : null
    }, window.openURL = function(t) {
        window.open(t, "_blank")
    };
    var o = i(76).default;
    o.PING_REGION_CACHE_KEY = "pingRegion4";
    var a = new o("krunker.io"),
        c = null,
        l = null;

    function p(t) {
        a.switchGame(t)
    }

    function h(t, e) {
        hostGameMsg && (hostGameMsg.innerHTML = t), e && function(t) {
            var e = a.generateHref(t);
            window.history.replaceState({}, "Krunker", e), windows[1].lastLoadTime = 0, c = t
        }(e), oe = null, ae = null
    }
    window.switchServer = p, window.checkedSwitchServer = function(t, e) {
        e.innerText = "...", a.fetchGameInfo(t).then(i => {
            i.clients >= i.maxClients ? (e.innerText = "FULL", setTimeout(() => {
                e.innerText = `${Math.min(i.clients,i.maxClients)}/${i.maxClients}`
            }, 1e3)) : p(t)
        })
    }, window.createPrivateRoom = function() {
        for (var t = [], e = 0; e < k.length; e++) document.getElementById("gameMap" + e).checked && t.push(e);
        if (0 != t.length || oe || "" != rawMapData.value) {
            var i = [];
            for (e = 0; e < R.length; e++) document.getElementById("gameMode" + e).checked && i.push(e);
            if (0 != i.length) {
                var r = [];
                for (e = 0; e < b.classes.length; e++) document.getElementById("gameClass" + e).checked && r.push(e);
                if (0 != r.length) {
                    var s, o = {
                        customMap: oe,
                        rawMapData: rawMapData.value,
                        private: makePrivate.checked,
                        maps: t,
                        modes: i,
                        modURL: hostModURL.value,
                        classes: r
                    };
                    for (e = 0; e < n.serverConfig.length; e++) s = document.getElementById("customS" + n.serverConfig[e].varN), tmpV = n.serverConfig[e].bool ? s ? s.checked : 0 : s ? parseFloat(s.value) : 0, o[n.serverConfig[e].varN] = tmpV;
                    w.send("custom", o), hostGameMsg.innerHTML = "Please wait..."
                } else hostGameMsg.innerHTML = "<span class='error'>Select at least one class</span>"
            } else hostGameMsg.innerHTML = "<span class='error'>Select at least one Mode</span>"
        } else hostGameMsg.innerHTML = "<span class='error'>Select at least one Map</span>"
    }, Object.defineProperty(console, "_commandLineAPI", {
        get: function() {
            throw ""
        }
    });
    var u = i(1);
    u.OBJLoader = i(46)(u), u.Shaders = i(61)(u);
    var d = i(3),
        f = new(i(43))(u, d, n),
        m = window.SOUND = new(i(62))(d, n),
        g = new(i(51))(f, n),
        v = i(98),
        y = new(i(99))(f, n);
    const x = i(100);
    var w = i(63),
        b = i(65).obj;
    b = new b(!1, 0, null, f, m, g);
    var M, S, _, T, E, A, L = new(i(101))(f, u, v, d, b, n, w),
        k = i(42).maps,
        R = i(42).modes,
        P = i(102),
        C = i(50).Player,
        I = new(i(103)),
        O = i(59),
        D = new u.Vector3,
        B = !1,
        z = null,
        N = !1;
    window.locked = !1;
    var U = [],
        F = !0,
        H = 0,
        j = 0,
        G = 0,
        V = -1;
    window.idleTimer = 0;
    var W, Y, X, q, Z = !0,
        K = !0,
        J = !0,
        Q = [],
        tt = 1,
        et = 1,
        it = 1700,
        nt = 900;

    function rt() {
        var t = window.innerWidth,
            e = window.innerHeight,
            i = it * et,
            n = nt * et,
            r = t / i,
            s = e / n;
        s < r ? (tt = s, uiBase.style.transform = "scale(" + s.toFixed(3) + ")", uiBase.style.width = (t / s).toFixed(3) + "px", uiBase.style.height = n + "px") : (tt = r, uiBase.style.transform = "scale(" + r.toFixed(3) + ")", uiBase.style.width = i + "px", uiBase.style.height = (e / r).toFixed(3) + "px")
    }
    window.addEventListener("resize", rt), rt(), window.checkTerms = function(t) {
        t ? (consentBlock.style.display = "none", saveVal("consent", 1)) : $("#consentShake").effect("shake")
    };
    var st = ["/img/button/button-normal.png", "/img/button/button-hover.png", "/img/button/button-pressed.png", "/img/social-buttons/discord-normal.png", "/img/social-buttons/discord-hover.png", "/img/social-buttons/discord-pressed.png", "/img/social-buttons/reddit-normal.png", "/img/social-buttons/reddit-hover.png", "/img/social-buttons/reddit-pressed.png", "/img/social-buttons/twitter-normal.png", "/img/social-buttons/twitter-hover.png", "/img/social-buttons/twitter-pressed.png", "/img/social-buttons/fandom-normal.png", "/img/social-buttons/fandom-hover.png", "/img/social-buttons/fandom-pressed.png", "/img/social-buttons/kr-normal.png", "/img/social-buttons/kr-hover.png", "/img/social-buttons/kr-pressed.png"],
        ot = [];
    window.addEventListener("load", function() {
        for (var t of st) {
            var e = new Image;
            e.src = t, ot.push(e)
        }
    });
    const at = eval;
    Math.PI2 = 2 * Math.PI, Math.lerpAngle = function(t, e, i) {
        Math.abs(e - t) > Math.PI && (t > e ? e += Math.PI2 : t += Math.PI2);
        var n = e + (t - e) * i;
        return 0 <= n && n <= Math.PI2 ? n : n % Math.PI2
    }, console.warn = function() {}, console.info = function() {};
    var ct = "true" == getSavedVal("krunker_streamMode");
    window.toggleStrm = function(t, e = !1) {
        ct = t, streamCheckbox.checked = t, saveVal("krunker_streamMode", t), e || (t ? window.history.pushState(document.title, document.title, "/") : window.history.pushState(document.title, document.title, a.generateHref(c))), gi(fi, mi)
    }, window.toggleStrm(ct, !0);
    var lt = !1;
    window.loading = !1;
    var pt = !1;
    window.spectating = !1, window.toggleSpect = function(t) {
        pt = t
    };
    var ht, ut, dt = !1;

    function ft() {
        window.innerWidth, ht = window.innerHeight, ut = ht / tt / 693, f.resize()
    }

    function mt(t) {
        return n.apiURL + t
    }
    window.toggleChal = function(t) {
        dt = t
    }, window.enterGame = function() {
        if (b.singlePlayer && !lt) {
            Ve("0:00");
            var t = b.getSpawnPoint(null, !0),
                e = b.classes[parseInt(jt)];
            ti([w.socketId, 1, t.x, t.y, t.z, "TEST", jt, e.health, e.health, null, 100, null, [null == Ht[e.loadout[0]] ? -1 : Ht[e.loadout[0]], null == Ht[e.loadout[1]] ? -1 : Ht[e.loadout[1]]], null, null, e.secondary ? parseInt(Gt) : null]), lt = !0, gi([1, "TEST", 0, 0, 0, 0]), v.toggleMenu(!1)
        } else if (w.connected && (!lt || window.spectating && !pt)) {
            lt = !0, window.idleTimer = 0, v.toggleMenu(!1), instructions.innerHTML = "LOADING...", window.loading = !0;
            e = parseInt(jt);
            var i = b.classes[e].loadout,
                n = [null == Ht[i[0]] ? -1 : Ht[i[0]], null == Ht[i[1]] ? -1 : Ht[i[1]]];
            w.send("etrg", [e, parseInt(Ke), n, parseInt(Ut), parseInt(Nt), parseInt(Gt), pt ? 1 : 0, dt ? 1 : 0])
        }
    }, window.addEventListener("resize", ft), ft(), window.toggleAd = function() {};
    var gt = 0;

    function vt(t) {
        S && (S.funds = t), Rt()
    }

    function yt(t, e) {
        window.idleTimer = 0, t ? purchaseError() : (S && (S.funds = e), Rt(), updateWindow(null, !0), v.toggleMenuHider(!0), purchaseLoad.style.display = "none")
    }
    window.cancelPurchase = function() {
        window.idleTimer = 0, showWindow(14), instructions.style.display = "block", gt = 0, context.toggleMenuHider(!0), purchaseLoad.style.display = "none"
    }, window.showPurchase = function(t) {
        window.idleTimer = 0, gt = t, purchaseHolder.style.display = "block";
        var e = document.getElementById("paypal-button");
        e && (e.innerHTML = ""), S && paypal.Button.render({
            style: {
                size: "large"
            },
            env: "production",
            commit: !0,
            payment: function(t, e) {
                return purchaseHolder.style.display = "none", e.request.post(mt("/my-api/create-payment/"), {
                    pIndex: gt,
                    acID: S.id
                }).then(function(t) {
                    return t.id
                })
            },
            onAuthorize: function(t, e) {
                return e.request.post(mt("/my-api/execute-payment/"), {
                    pIndex: gt,
                    acID: S.id,
                    paymentID: t.paymentID,
                    payerID: t.payerID
                }).then(function(t) {
                    t && null != t.funds && null != t.funds ? (S && (S.funds = t.funds), Rt(), updateWindow(null, !0), v.toggleMenuHider(!0), purchaseLoad.style.display = "none") : purchaseError()
                })
            },
            onError: function() {
                purchaseError()
            }
        }, "#paypal-button")
    }, purchaseHolder.onclick = function() {
        purchaseHolder.style.display = "none"
    }, window.purchaseError = function() {
        showWindow(), v.toggleMenuHider(!1), instructions.style.display = "none", purchaseLoad.style.display = "block", purchLoadRing.style.display = "none", purchaseLabel.innerHTML = "Error occurred <a href='javascript:;' onclick='cancelPurchase()'>click here</a> and try again!<div style='color:rgba(255,255,255,0.3);font-size:20px'>You may have exceeded your daily transaction limit</div>"
    };
    const xt = new FileReader;
    var wt, bt, Mt = !1,
        St = 0,
        _t = {};

    function Tt() {
        lt = !1, window.idleTimer = 0, v.toggleMenu(!0), L.toggle(!1), Ie = {
            states: []
        }
    }
    window.voiceChat = function(t, e) {
        if (St) {
            ct && I && (e = d.scrambleS(e));
            try {
                var i = new Howl({
                    src: [t],
                    volume: St
                });
                i.on("load", function() {
                    i.duration() <= n.voiceChatMaxLength && (i.on("end", function() {
                        if (_t[e]--, 0 >= _t[e]) {
                            var t = document.getElementById("speaker" + e);
                            t && t.parentElement.removeChild(t), delete _t[e]
                        }
                    }), !_t[e] && (_t[e] = 0, speakerDisplay.innerHTML += "<div id='speaker" + e + "' class='voiceSpeaker'>" + e + " <i class='material-icons' style='color:#fff;font-size:35px;vertical-align:middle'>volume_down</i></div>"), _t[e]++, i.play())
                })
            } catch (e) {}
        }
    }, xt.addEventListener("loadend", function() {
        var t = xt.result;
        w.send("vc", t)
    }), window.toggleRecord = function(t) {
        (M || window.spectating) && (t && !Mt ? (voiceDisplay.style.opacity = .9, Mt = !0, navigator.mediaDevices.getUserMedia({
            audio: !0,
            video: !1
        }).then(function(t) {
            (wt = new MediaRecorder(t, {
                mimetype: "audio/ogg",
                bitsPerSecond: 6e3
            })).start();
            const e = [];
            wt.addEventListener("dataavailable", function(t) {
                e.push(t.data)
            }), wt.addEventListener("stop", function() {
                recTimer.style.display = "none", voiceDisplay.style.opacity = .3;
                var t = new Blob(e, {
                    type: "audio/ogg; codecs=opus"
                });
                xt.readAsDataURL(t)
            }), recTimer.style.display = "inline-block", recTimer.innerHTML = n.voiceChatMaxLength;
            var i = n.voiceChatMaxLength;
            bt = setInterval(function() {
                i--, recTimer.innerHTML = i, 0 >= i && (Mt = !1, wt.stop(), clearInterval(bt))
            }, 1e3)
        }).catch(function() {
            Mt = !1, bt && clearInterval(bt), voiceDisplay.style.opacity = .3
        })) : !t && Mt && wt && (Mt = !1, wt.stop(), clearInterval(bt)))
    }, window.updateSliderLabel = function(t, e) {
        var i = document.getElementById("customSet" + t);
        i && (i.innerHTML = e)
    }, window.setSetting = function(t, e) {
        (Et[t].min || Et[t].max) && (e = Math.min(Et[t].max, Math.max(Et[t].min, e))), document.getElementById("slid_" + t) && (document.getElementById("slid_" + t).value = e), document.getElementById("slid_input_" + t) && (document.getElementById("slid_input_" + t).value = e), Et[t].set(e), Et[t].val = e, saveVal(`kro_setngss_${t}`, e)
    }, window.resetSettings = function() {
        confirm("Are you sure you want to reset all your settings? This will also refresh the page") && (Object.keys(localStorage).filter(t => t.includes("kro_setngss_")).forEach(t => localStorage.removeItem(t)), location.reload())
    };
    var Et = {
        changeControls: {
            name: "<div style='width:100%'><a href='javascript:;' onclick='showWindow(7);' class='menuLink'>Change Controls</a> | <a onclick='resetSettings()' class='+'>Reset Settings</a></div>",
            html: function() {
                return ""
            }
        },
        resolution: {
            name: "Resolution",
            pre: "<div class='setHed'>Quality</div>",
            val: .6,
            min: .1,
            max: 2,
            html: function() {
                return `<input type='number' class='sliderVal' id='slid_input_resolution' min='0.1' max='2' value='${Et.resolution.val}' oninput='setSetting("resolution", this.value)' style='border-width:0px'/>\n            <div class='slidecontainer'>\n            <input type='range' id='slid_resolution' min='0.1' max='2' step='0.1'" value='${Et.resolution.val}' class='sliderM' oninput='setSetting("resolution", this.value)'></div>`
            },
            set: function(t) {
                f.setResMlt(t)
            }
        },
        particles: {
            name: "Particles",
            val: !0,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("particles", this.checked)'\n        ${Et.particles.val?"checked":""}><span class='slider'></span></label>`
            },
            set: function(t) {
                g.active = t
            }
        },
        muzzleFlash: {
            name: "Muzzle Flash",
            val: !0,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("muzzleFlash", this.checked)'\n        ${Et.muzzleFlash.val?"checked":""}><span class='slider'></span></label>`
            },
            set: function(t) {
                g.showMuzzle = t
            }
        },
        showUI: {
            name: "Show UI",
            pre: "<div class='setHed'>Interface</div>",
            val: !0,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("showUI", this.checked)'\n        ${Et.showUI.val?"checked":""}><span class='slider'></span></label>`
            },
            set: function(t) {
                v.hideGameUI = !t, chatUI.style.display = t ? "block" : "none"
            }
        },
        showChat: {
            name: "Show Chat Box",
            val: !0,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("showChat", this.checked)'\n        ${Et.showChat.val?"checked":""}><span class='slider'></span></label>`
            },
            set: function(t) {
                chatHolder.style.display = t ? "block" : "none"
            }
        },
        showKills: {
            name: "Show Kill Feed",
            val: !0,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("showKills", this.checked)'\n        ${Et.showKills.val?"checked":""}><span class='slider'></span></label>`
            },
            set: function(t) {
                Z = t
            }
        },
        showMessages: {
            name: "Show Player Messages",
            val: !0,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("showMessages", this.checked)'\n        ${Et.showMessages.val?"checked":""}><span class='slider'></span></label>`
            },
            set: function(t) {
                K = t
            }
        },
        showUnboxings: {
            name: "Show Unboxings",
            val: !0,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("showUnboxings", this.checked)'\n        ${Et.showUnboxings.val?"checked":""}><span class='slider'></span></label>`
            },
            set: function(t) {
                J = t
            }
        },
        showPing: {
            name: "Show Ping",
            val: !0,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("showPing", this.checked)'\n        ${Et.showPing.val?"checked":""}><span class='slider'></span></label>`
            },
            set: function(t) {
                pingDisplay.style.display = t ? "inline-block" : "none"
            }
        },
        showFPS: {
            name: "Show FPS",
            val: !1,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("showFPS", this.checked)'\n        ${Et.showFPS.val?"checked":""}><span class='slider'></span></label>`
            },
            set: function(t) {
                fpsDisplay.style.display = menuFPSDisplay.style.display = t ? "inline-block" : "none"
            }
        },
        crosshairColor: {
            name: "Crosshair Color",
            val: "#ffffff",
            html: function() {
                return `<input type='color' id='head' name='color' value='${Et.crosshairColor.val}' oninput='setSetting("crosshairColor", this.value)' style='float:right;margin-top:5px'/>`
            },
            set: function(t) {
                crosshairT.style.backgroundColor = t, crosshairB.style.backgroundColor = t, crosshairLL.style.backgroundColor = t, crosshairRL.style.backgroundColor = t
            }
        },
        crosshairShadow: {
            name: "Crosshair Shadow",
            val: "#000000",
            html: function() {
                return `<input type='color' id='head' name='color' value='${Et.crosshairShadow.val}' oninput='setSetting("crosshairShadow", this.value)' style='float:right;margin-top:5px'/>`
            },
            set: function(t) {
                var e = d.hexToRGB(t || "#000000");
                crosshairT.style.webkitBoxShadow = crosshairT.style.mozBoxShadow = crosshairT.style.boxShadow = `0px 0px 5px 1px rgba(${e.join(",")},0.75)`, crosshairB.style.webkitBoxShadow = crosshairB.style.mozBoxShadow = crosshairB.style.boxShadow = `0px 0px 4px 1px rgba(${e.join(",")},0.75)`, crosshairLL.style.webkitBoxShadow = crosshairLL.style.mozBoxShadow = crosshairLL.style.boxShadow = `0px 0px 5px 1px rgba(${e.join(",")},0.75)`, crosshairRL.style.webkitBoxShadow = crosshairRL.style.mozBoxShadow = crosshairRL.style.boxShadow = `0px 0px 5px 1px rgba(${e.join(",")},0.75)`
            }
        },
        sensitivity: {
            name: "Sensitivity",
            pre: "<div class='setHed'>Gameplay</div>",
            val: 1,
            min: .1,
            max: 15,
            html: function() {
                return `<input type='number' class='sliderVal' id='slid_input_sensitivity' min='0.1' max='15' value='${Et.sensitivity.val}' oninput='setSetting("sensitivity", this.value)' style='border-width:0px'/>\n            <div class='slidecontainer'>\n            <input type='range' id='slid_sensitivity' min='0.1' max='15' step='0.1' value='${Et.sensitivity.val}' class='sliderM' oninput='setSetting("sensitivity", this.value)'></div>`
            },
            set: function(t) {
                L.sensMlt = t
            }
        },
        aimSensitivity: {
            name: "Aim Sensitivity",
            val: 1,
            min: .1,
            max: 15,
            html: function() {
                return `<input type='number' class='sliderVal' id='slid_input_aimSensitivity' min='0.1' max='15' value='${Et.aimSensitivity.val}' oninput='setSetting("aimSensitivity", this.value)' style='border-width:0px'/>\n            <div class='slidecontainer'>\n            <input type='range' id='slid_aimSensitivity' min='0.1' max='15' step='0.1' value='${Et.aimSensitivity.val}' class='sliderM' oninput='setSetting("aimSensitivity", this.value)'></div>`
            },
            set: function(t) {
                L.sensAimMlt = t
            }
        },
        fov: {
            name: "Field of View",
            val: n.fov,
            min: 60,
            max: 120,
            html: function() {
                return `<input type='number' class='sliderVal' id='slid_input_fov' min='60' max='120' value='${Et.fov.val}' oninput='setSetting("fov", this.value)' style='border-width:0px'/>\n            <div class='slidecontainer'>\n            <input type='range' id='slid_fov' min='60' max='120' step='5' value='${Et.fov.val}"' class='sliderM' oninput='setSetting("fov", this.value)'></div>`
            },
            set: function(t) {
                f.setFov(t)
            }
        },
        fpsFOV: {
            name: "Weapon FOV",
            val: n.fov,
            min: 60,
            max: 120,
            html: function() {
                return `<input type='number' class='sliderVal' id='slid_input_fpsFOV' min='60' max='120' value='${Et.fpsFOV.val}' oninput='setSetting("fpsFOV", this.value)' style='border-width:0px'/>\n            <div class='slidecontainer'>\n            <input type='range' id='slid_fpsFOV' min='60' max='120' step='5' value='${Et.fpsFOV.val}' class='sliderM' oninput='setSetting("fpsFOV", this.value)'></div>`
            },
            set: function(t) {
                f.setFPSFov(t)
            }
        },
        invertY: {
            name: "Invert Y-Axis",
            val: !1,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("invertY", this.checked)'\n        ${Et.invertY.val?"checked":""}><span class='slider'></span></label>`
            },
            set: function(t) {
                L.invertY = t
            }
        },
        sound: {
            name: "Sound",
            pre: "<div class='setHed'>Audio</div>",
            val: 1,
            min: 0,
            max: 1,
            html: function() {
                return `<input type='number' class='sliderVal' id='slid_input_sound' min='0' max='1' value='${Et.sound.val}' oninput='setSetting("sound", this.value)' style='border-width:0px'/>\n            <div class='slidecontainer'>\n            <input type='range' id='slid_sound' min='0' max='1' step='0.1' value='${Et.sound.val}' class='sliderM' oninput='setSetting("sound", this.value)'></div>`
            },
            set: function(t) {
                m.setVolume(t)
            }
        },
        voiceVolume: {
            name: "Voice Volume",
            val: 1,
            min: 0,
            max: 1,
            html: function() {
                return `<input type='number' class='sliderVal' id='slid_input_voiceVolume' min='0' max='1' value='${Et.voiceVolume.val}' oninput='setSetting("voiceVolume", this.value)' style='border-width:0px'/>\n            <div class='slidecontainer'>\n            <input type='range' id='slid_voiceVolume' min='0' max='1' step='0.1' value='${Et.voiceVolume.val}' class='sliderM' oninput='setSetting("voiceVolume", this.value)'></div>`
            },
            set: function(t) {
                St = t
            }
        },
        weaponBob: {
            name: "Weapon Bobbing",
            pre: "<div class='setHed'>Editing</div>",
            val: 1,
            min: 0,
            max: 2,
            html: function() {
                return `<input type='number' class='sliderVal' id='slid_input_weaponBob' min='0' max='2' value='${Et.weaponBob.val}' oninput='setSetting("weaponBob", this.value)' style='border-width:0px'/>\n            <div class='slidecontainer'>\n            <input type='range' id='slid_weaponBob' min='0' max='2' step='0.1' value='${Et.weaponBob.val}' class='sliderM' oninput='setSetting("weaponBob", this.value)'></div>`
            },
            set: function(t) {
                f.weaponLean = t
            }
        },
        showWeapon: {
            name: "Show Weapon",
            val: !0,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("showWeapon", this.checked)'\n        ${Et.showWeapon.val?"checked":""}><span class='slider'></span></label>`
            },
            set: function(t) {
                b.hideWeapon = !t, M && M.weaponMeshes[M.weaponIndex] && (M.weaponMeshes[M.weaponIndex].visible = t)
            }
        },
        depthMap: {
            name: "Depth Map",
            val: 0,
            min: 0,
            max: 500,
            html: function() {
                return `<input type='number' class='sliderVal' id='slid_input_depthMap' min='0' max='500' value='${Et.depthMap.val}' oninput='setSetting("depthMap", this.value)' style='border-width:0px'/>\n            <div class='slidecontainer'>\n            <input type='range' id='slid_depthMap' min='0' max='500' step='5' value='${Et.depthMap.val}' class='sliderM' oninput='setSetting("depthMap", this.value)'></div>`
            },
            set: function(t) {
                f.toggleDepthMap(t)
            }
        },
        greenScreen: {
            name: "Green Screen",
            val: !1,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("greenScreen", this.checked)'\n        ${Et.greenScreen.val?"checked":""}><span class='slider'></span></label>`
            },
            set: function(t) {
                f.toggleGreenscreen(t)
            }
        },
        ambientShading: {
            name: "Ambient Shading",
            pre: "<div class='setHed'>Shaders</div>",
            val: !0,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("ambientShading", this.checked)'\n        ${Et.ambientShading.val?"checked":""}><span class='slider'></span></label>`
            },
            set: function(t) {
                f.toggleMeshGroup("ambient_0", t), f.toggleMeshGroup("ambient_1", t)
            }
        },
        bloomStrength: {
            name: "Bloom",
            val: 0,
            min: 0,
            max: 3,
            html: function() {
                return `<input type='number' class='sliderVal' id='slid_input_bloomStrength' min='0' max='3' value='${Et.bloomStrength.val}' oninput='setSetting("bloomStrength", this.value)' style='border-width:0px'/>\n            <div class='slidecontainer'>\n            <input type='range' id='slid_bloomStrength' min='0' max='3' step='0.1' value='${Et.bloomStrength.val}' class='sliderM' oninput='setSetting("bloomStrength", this.value)'></div>`
            },
            set: function(t) {
                f.bloomPass && (f.bloomPass.strength = t), f.postprocessing.bloomStrength = t, f.postprocessing.enabled = "0" != t
            }
        },
        bloomRadius: {
            name: "Bloom Radius",
            val: .9,
            min: 0,
            max: 1,
            html: function() {
                return `<input type='number' class='sliderVal' id='slid_input_bloomRadius' min='0' max='1' value='${Et.bloomRadius.val}' oninput='setSetting("bloomRadius", this.value)' style='border-width:0px'/>\n            <div class='slidecontainer'>\n            <input type='range' id='slid_bloomRadius' min='0' max='1' step='0.01' value='${Et.bloomRadius.val}' class='sliderM' oninput='setSetting("bloomRadius", this.value)'></div>`
            },
            set: function(t) {
                f.bloomPass && (f.bloomPass.radius = t), f.postprocessing.bloomRadius = t
            }
        },
        bloomTresh: {
            name: "Bloom Threshold",
            val: .9,
            min: 0,
            max: 1,
            html: function() {
                return `<input type='number' class='sliderVal' id='slid_input_bloomTresh' min='0' max='1' value='${Et.bloomTresh.val}' oninput='setSetting("bloomTresh", this.value)' style='border-width:0px'/>\n            <div class='slidecontainer'>\n            <input type='range' id='slid_bloomTresh' min='0' max='1' step='0.01' value='${Et.bloomTresh.val}' class='sliderM' oninput='setSetting("bloomTresh", this.value)'></div>`
            },
            set: function(t) {
                f.bloomPass && (f.bloomPass.threshold = t), f.postprocessing.bloomTresh = t
            }
        },
        canLoadMods: {
            name: "Load Mods",
            pre: "<div class='setHed'>Mods</div>",
            val: !0,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("canLoadMods", this.checked)'\n        ${Et.canLoadMods.val?"checked":""}><span class='slider'></span></label>`
            },
            set: function(t) {
                F = t
            }
        },
        defaultRegion: {
            name: "Default Region",
            pre: "<div class='setHed'>Servers</div>",
            get val() {
                return localStorage[o.PING_REGION_CACHE_KEY]
            },
            set val(t) {},
            html: function() {
                var t = "<select onchange='setSetting(\"defaultRegion\", this.value)' style='float:right'>";
                for (var e of Yi) t += "<option value='" + e + "' " + (e == Et.defaultRegion.val ? "selected" : "") + ">", t += n.regionNames[e], t += "</option>";
                return t += "</select>"
            },
            set: function(t) {
                t && n.isProd && localStorage.setItem(o.PING_REGION_CACHE_KEY, t)
            }
        }
    };
    for (var At in Et)
        if (Et[At].set) {
            var Lt = getSavedVal(`kro_setngss_${At}`);
            Et[At].val = null === Lt ? Et[At].val : Lt, "false" == Et[At].val && (Et[At].val = !1), (Et[At].min || Et[At].max) && (Et[At].val = Math.min(Et[At].max, Math.max(Et[At].min, Et[At].val))), Et[At].set(Et[At].val, !0)
        }
    function kt(t) {
        S && S.setData(t), updateWindow(5), Rt()
    }

    function Rt() {
        if (S) {
            signedOutHeaderBar.style.display = "none", signedInHeaderBar.style.display = null, S.level >= n.rewardMinLvl && (claimHolder.style.display = "block", Bt()), menuAccountUsername.innerText = S.name, menuKRCount.innerText = S.funds, menuLevelText.innerText = "LVL " + S.level, menuLevelBar.style.width = S.levelProg + "%";
            var t = d.levelIconId(S.level);
            menuLevelIcon.style.backgroundImage = "url('/img/levels/" + t + ".png')"
        } else signedOutHeaderBar.style.display = null, signedInHeaderBar.style.display = "none", claimHolder.style.display = "none"
    }

    function Pt(t) {
        try {
            accResp.innerHTML = t || "", accResp.style.display = t ? "block" : "none"
        } catch (t) {}
    }

    function Ct(t, e) {
        0 <= t && Pt("Please Wait..."), w.send("a", t, e)
    }

    function It(t, e, i, r, s) {
        t ? Pt(t) : (S = new P(e, i, null, n), saveVal("krunker_id", e), saveVal("krunker_username", i), kt(r), s && (saveVal("krunker_token", s), loginToken = s), updateWindow(null, !0))
    }
    window.changeCont = function(t, e) {
        e || showWindow(7, !0), 3 >= t ? L.inputChanger = t : 4 == t ? L.inputChanger = "jumpKey" : 5 == t ? L.inputChanger = "crouchKey" : 6 == t ? L.inputChanger = "swapKeyD" : 7 == t ? L.inputChanger = "swapKeyU" : 8 == t ? L.inputChanger = "reloadKey" : 9 == t ? L.inputChanger = "sprayKey" : 10 == t ? L.inputChanger = "aimKey" : 11 == t ? L.inputChanger = "chatKey" : 12 == t ? L.inputChanger = "voiceKey" : 13 == t ? L.inputChanger = "recordKey" : 14 == t ? L.inputChanger = "inspKey" : 15 == t && (L.inputChanger = "listKey"), document.getElementById("cont" + t).innerHTML = "Press any Key"
    }, window.registerAcc = function() {
        Ct(0, [accName.value, accPass.value])
    }, window.loginAcc = function() {
        Ct(1, [accName.value, accPass.value, null])
    }, window.logoutAcc = function() {
        Ct(-1), Pt(), s("krunker_id"), s("krunker_username"), s("krunker_token"), s("skins"), s("hatIndex"), s("backIndex"), Ut = -1, Nt = -1, Ht = {}, selectSecondary(2), windows[12].clanData = null, loginToken = null, S = null, kt(), showWindow(5), Jt()
    };
    var Ot, Dt = 0;

    function Bt() {
        if ("block" == claimHolder.style.display) {
            Dt = n.rewardTime - ((W || Date.now()) - S.lastReward);
            var t = d.getTimeH(Math.max(0, Dt));
            Ot != t && (Ot = t, claimTimer.innerHTML = "00:00:00" == t ? "" : t);
            var e = 0 >= Dt ? "./img/claim_0.png" : "./img/claim_1.png";
            claimImg.getAttribute("src") != e && (claimImg.src = e)
        }
    }

    function zt(t, e) {
        vt(e), S && (S.lastReward = t), Bt()
    }
    window.claimReward = function() {
        0 < Dt || function() {
            if (!Zi) {
                Zi = !0;
                var t = document.createElement("script");
                t.src = "//cdn.playwire.com/bolt/js/zeus/embed.js", t.type = "text/javascript", t.setAttribute("charset", "utf-8"), t.setAttribute("data-config", "//config.playwire.com/1020124/v2/pre_content.json"), t.setAttribute("data-width", "640px"), t.setAttribute("data-height", "360px"), t.setAttribute("data-id", "pre-content-player"), t.setAttribute("data-hidden-container", "my-content"), t.setAttribute("data-onready", "window.boltEventHandlers");
                var e = document.getElementById("pre-content-container");
                e.style.display = "block", e.appendChild(t), Xi = setTimeout(function() {
                    let t = "none" != document.getElementById("my-content").style.display;
                    t ? (console.log("Ad blocked"), Ki(!1)) : console.log("Ad not blocked")
                }, 3e3), qi = setTimeout(function() {
                    Ki(!1)
                }, 6e4)
            }
        }()
    };
    var Nt = getSavedVal("backIndex") || -1,
        Ut = getSavedVal("hatIndex") || -1,
        Ft = getSavedVal("skins"),
        Ht = Ft ? JSON.parse(Ft) : {},
        jt = getSavedVal("classindex") || 0,
        Gt = getSavedVal("secondaryInd") || 2,
        Vt = 0;
    window.selectHat = function(t) {
        saveVal("hatIndex", t), Ut = t, Jt(), showWindow(3)
    }, window.selectBack = function(t) {
        saveVal("backIndex", t), Nt = t, Jt(), showWindow(3)
    }, window.selectSecondary = function(t) {
        saveVal("secondaryInd", t), Gt = t, Jt(), showWindow(3)
    }, window.selectClass = function(t) {
        saveVal("classindex", t), jt = t, menuMiniProfilePic.src = `/textures/classes/icon_${t}.png`, Jt(), showWindow(3)
    }, window.skinSelector = function(t) {
        Vt = t, Jt(), showWindow(15)
    }, window.selectSkin = function(t, e) {
        _ = b.store.skins[t], Ht[e] = _ ? t : void 0, saveVal("skins", JSON.stringify(Ht)), Jt(), showWindow(3)
    };
    var Wt, Yt, Xt = 660,
        qt = 350,
        Zt = new u.PerspectiveCamera(15, 1, .1, 100),
        Kt = new u.WebGLRenderer({
            canvas: classPreviewCanvas,
            precision: "mediump",
            antialias: !1,
            alpha: !0
        });

    function Jt() {
        function t(t, e = !0) {
            i && (i += " - ");
            var n = "inherit",
                r = b.weapons[t].name;
            if (null != Ht[t]) {
                var s = b.store.skins[Ht[t]];
                s && (n = b.store.rarities[s.rarity].color, r = s.name)
            }
            i += "<span style='color:" + (e ? n : "inherit") + "'>" + r + "</span>"
        }
        var e = b.classes[jt];
        menuClassName.innerText = e.name;
        var i = "";
        for (var r of e.loadout) t(r);
        e.secondary && t(Gt, !1), menuClassSubtext.innerHTML = i, (Wt = new u.Scene).add(new u.AmbientLight(9937064));
        var s = new u.DirectionalLight(15923452, .5);
        s.position.set(10, 17, -10), Wt.add(s);
        var o = [null == Ht[e.loadout[0]] ? -1 : Ht[e.loadout[0]], null == Ht[e.loadout[1]] ? -1 : Ht[e.loadout[1]]];
        (Yt = new C(-1, this, d, n, b)).sid = -1, Yt.init(0, 0, 0, "preview", !1), Yt.skins = o, Yt.hatIndex = Ut, Yt.backIndex = Nt, Yt.secIndex = Gt, Yt.setClass(b, jt, Gt, !0), b.players.swapWeapon(Yt, 0, !0), Wt.add(b.players.generateMeshes(Yt, !1)), Yt.swapTime = 0, Yt.weaponMeshes[0].visible = !0, Zt.lookAt(new u.Vector3(0, .8 * n.playerHeight, 0))
    }
    Zt.position.x = -10, Zt.position.y = 17, Zt.position.z = -29, Jt();
    var Qt = !("true" != getSavedVal("krk_hideFull"));

    function $t(t, e) {
        for (var i = "", n = "map" == e ? "selectHostMap" : "loadUserMod", r = 0; r < t.length; ++r) i += "<div class='mapListItem'><img class='mapListThumb' src='" + (t[r][e + "_image"] ? t[r][e + "_image"] : "./img/noimg.png") + "' onclick='" + n + "(&quot;" + t[r][e + "_name"] + "&quot;,&quot;" + t[r].mod_url + "&quot;,&quot;" + t[r].mod_id + "&quot;)'/><div style='margin-top:-3px'><a href='javascript:;' onclick='" + n + "(&quot;" + t[r][e + "_name"] + "&quot;,&quot;" + t[r].mod_url + "&quot;,&quot;" + t[r].mod_id + "&quot;)'/>" + t[r][e + "_name"] + "</a></div><div style='display: flex'><span style='color:rgba(0,0,0,0.2);font-size:15px'> by <a target='_blank' class='grey' href='/social.html?p=profile&q=" + t[r].creatorname + "'>" + t[r].creatorname + "</a></span><div style='font-size:15px;text-align:right;flex-grow:1'>" + t[r][e + "_votes"] + "</div></div></div>";
        return i
    }

    function te(t, e) {
        var i = "<div class='selItem'><div class='equipBtn' onclick='" + t + "(-1)'><i class='material-icons'>&#xE037</i></div><div class='itemIcon'><img class='itemIconImg' src='./textures/cosmetics/" + e + "_default.png'/></div><div class='itemInfo'><div class='itemName'>None</div><div class='itemCat'>Default</div></div></div>";
        if (S || b.singlePlayer)
            for (var n = (b.singlePlayer ? Object.keys(b.store.skins).map(t => t = {
                    ind: parseInt(t),
                    cnt: 1
                }) : S.skins).slice().sort(function(t, e) {
                    return b.store.skins[e.ind] && b.store.skins[t.ind] ? b.store.skins[e.ind].rarity - b.store.skins[t.ind].rarity : 0
                }), r = 0; r < n.length; ++r)
                if ((_ = b.store.skins[n[r].ind]) && _.type == e) {
                    let e = _.type + "_" + _.id + (_.tex ? "_" + _.tex : "");
                    i += "<div class='selItem' style='margin-top:10px'><div class='equipBtn' onclick='" + t + "(" + n[r].ind + ")'><i class='material-icons'>&#xE037</i></div><div class='itemIcon'><img class='itemIconImg' src='./textures/cosmetics/" + e + ".png'/></div><div class='itemInfo'><div class='itemName' style='color:" + b.store.rarities[_.rarity].color + "'>" + _.name + "<span style='color:rgba(0,0,0,0.3)'> x" + n[r].cnt + "</span></div><div class='itemCat'>by " + (_.creator || "Krunker.io") + "</div></div></div>"
                } return i
    }
    window.toggleHF = function(t) {
        Qt = t, saveVal("krk_hideFull", t)
    }, toggleHF(Qt), setInterval(() => {
        window.kiH(w)
    }, 12e3), window.windows = [{
        header: "Game Settings",
        gen: function() {
            var t = "";
            for (var e in Et) Et[e].pre && (t += Et[e].pre), t += "<div class='settName'>" + Et[e].name + " " + Et[e].html() + "</div>";
            return t
        }
    }, {
        header: "Server Browser",
        lastLoadTime: 0,
        serverListData: [],
        gen: function() {
            return Date.now() - this.lastLoadTime < n.serverBrowserRate ? this.genList() : (this.lastLoadTime = Date.now(), this.loadData())
        },
        loadData: function() {
            return a.fetchGameList().then(t => {
                this.serverListData = t;
                var e = !1;
                for (var i of t)
                    if (i.id === c) {
                        e = !0;
                        break
                    } e ? window.showWindow(2, !0) : a.fetchGameInfo(c).then(t => {
                    this.privateServerData = t, window.showWindow(2, !0)
                })
            }), "Loading..."
        },
        expandedRegion: -1,
        totalPlayerCount: 0,
        serverSearch: null,
        searchList: function(t) {
            this.serverSearch = t && "" != t ? t : null;
            var e = document.getElementById("serverHolder");
            e && (e.innerHTML = this.getServers())
        },
        getServers: function() {
            var t = !!localStorage.debugServerList,
                e = "";
            this.totalPlayerCount = 0;
            for (var i, r = {
                    custom: {
                        order: 1,
                        name: "Custom Games",
                        players: 0,
                        games: []
                    }
                }, s = !1, o = 0; o < this.serverListData.length; o++)
                if ((i = this.serverListData[o]).data) {
                    r[i.region] || (r[i.region] = {
                        name: n.regionNames[i.region],
                        players: 0,
                        games: []
                    });
                    var a = i.data.cs ? "custom" : i.region;
                    i.clients = Math.min(i.clients, i.maxClients), c === i.id && (s = !0), (!this.serverSearch || this.searchMatches(i)) && (r[a].players += i.clients), this.totalPlayerCount += i.clients, r[a].games.push(i)
                } else console.warn("Server doesn't have data yet.");
            s || (this.privateServerData ? this.privateServerData.data ? r.custom.games.push(this.privateServerData) : console.warn("Server doesn't have data yet.") : console.warn("Missing private server data."));
            var l = [];
            for (var p in r) r.hasOwnProperty(p) && l.push(r[p]);
            for (var p of l = l.sort((t, e) => (e.order || -1) - (t.order || -1))) p.games.sort((t, e) => e.clients - t.clients);
            S && S.level;
            for (var h = 0; h < l.length; h++) {
                (p = l[h]).games = p.games.filter(t => !Qt || t.clients != t.maxClients);
                var u = p.name + " - " + p.players + " online",
                    d = this.expandedRegion == h;
                if (e += "<div class='menuSelectorHeader' onclick='setExpandedRegion(" + (d ? -1 : h) + ")' style='cursor: pointer;'>" + (d ? "&#x25BC;" : "&#x25B6;") + " " + u + "</div>", d) {
                    e += "<div class='menuSelectorHolder'>";
                    for (var f = 0, m = 0; m < p.games.length; m++) {
                        var g = p.games[m],
                            v = c && c == g.id;
                        if (!this.serverSearch || this.searchMatches(g)) {
                            f++;
                            var y = (t ? g.id : g.data.i) + (g.data.earnKR ? " <i class='material-icons' style='color:#2196F3;font-size:33px;vertical-align:bottom;'>check_circle</i>" : "") + "<div class='serverPCount'>" + g.clients + "/" + g.maxClients + "</div>" + (g.data.cs ? "<div class='serverRegion'>" + g.id.split(":")[0] + " -&nbsp;</div>" : "");
                            e += "<div class='" + ("menuSelector" + (v ? " selectedMenuSelector" : "")) + "' onclick='" + ('checkedSwitchServer("' + g.id + '", this.querySelector(".serverPCount"))') + "'>" + y + "</div>"
                        }
                    }
                    p.games.length && f || (e += "<div style='margin-left:30px;margin-top:5px'>No Joinable Games Found...</div>"), e += "</div>"
                }
            }
            return e
        },
        genList: function() {
            var t = this;
            window.setExpandedRegion = function(e) {
                t.expandedRegion = e, t.lastLoadTime = Date.now(), showWindow(2, !0)
            };
            var e = "<div style='font-size:20px'>";
            return e += "<a class='menuLink' onclick='openHostWindow()'>+ Host Game</a><div style='float:right;display:inline-block'><input id='serverSearch'" + (this.serverSearch ? "value='" + this.serverSearch + "'" : "") + ' type=\'text\' placeholder=\'Search\' oninput=\'windows[1].searchList(this.value)\'></input></div></div><div id="serverFilters"><div id="hideFull" style="float:right;align-items:center;display:flex"><span class="grey">Hide Full</span><label class="switchsml"><input type="checkbox" onclick="toggleHF(this.checked);windows[1].searchList()"' + (Qt ? " checked" : "") + "><span class=\"sliderSml\"></span></label></div></div><div style='height:10px'></div>", e += "<div style='font-size:20px'>", e += "<div id='serverHolder'>" + this.getServers() + "</div>", e += "<div style='height:10px'></div><b style='color:rgba(0,0,0,0.6)'>" + this.totalPlayerCount + " total online</b>", e += "</div>"
        },
        searchMatches(t) {
            return !!t.data && 0 <= (t.data.i || "").toLowerCase().indexOf((this.serverSearch || "").toLowerCase())
        }
    }, {
        header: "Change Loadout",
        gen: function() {
            var t = b.classes[jt];
            0 > b.config.classes.indexOf(parseInt(jt)) && (jt = b.config.classes[0], t = b.classes[jt]);
            var e = b.weapons[t.loadout[0]].name,
                i = "#2196F3",
                n = t.secondary ? b.weapons[Gt].name : "None",
                r = t.secondary ? "#2196F3" : "rgba(0,0,0,0.3)",
                s = "rgba(0,0,0,0.3)",
                o = s;
            return S && (null != Ht[t.loadout[0]] && ((e = b.store.skins[Ht[t.loadout[0]]]) && (i = b.store.rarities[e.rarity].color, e = e.name)), t.loadout[1] && null != Ht[t.loadout[1]] && ((n = b.store.skins[Ht[t.loadout[1]]]) && (r = b.store.rarities[n.rarity].color, n = n.name)), 0 <= Ut && b.store.skins[Ut] && (s = b.store.rarities[b.store.skins[Ut].rarity].color), 0 <= Nt && b.store.skins[Nt] && (o = b.store.rarities[b.store.skins[Nt].rarity].color)), "<div class='settName'>Class<span class='settText floatR' onclick='showWindow(6)'>" + t.name + "</span></div><div class='settName'>Primary<span class='settLabel wepLink' style='color:" + i + "' onclick='skinSelector(" + t.loadout[0] + ")'>" + e + "</span></div><div class='settName'>Secondary<span class='settLabel" + (t.secondary ? " wepLink" : "") + "' " + (t.secondary ? "onclick='showWindow(20)'" : "") + " style='color:" + r + "'>" + n + "</span></div><div class='settName'>Melee<span class='settLabel' style='color:rgba(0,0,0,0.3)'>None</span></div><div class='settName'>Hat<span onclick='showWindow(16)' class='settText floatR' style='color:" + s + "'>" + (b.store.skins[Ut] ? b.store.skins[Ut].name : "None") + "</span></div><div class='settName'>Back<span onclick='showWindow(17)' class='settText floatR' style='color:" + o + "'>" + (b.store.skins[Nt] ? b.store.skins[Nt].name : "None") + "</span></div><div class='settName'>Spray<span onclick='showWindow(9)' class='settText floatR'>" + b.sprays[Ke].name + "</span></div>"
        }
    }, {
        header: "Mod Manager",
        openList: function() {
            N = !1, showWindow(18)
        },
        gen: function() {
            return "<div id='modLinks'><a href='https://goo.gl/dPAxfr' class='menuLink'>Mod Guide</a> | <a href='javascript:;' onclick='windows[3].openList()' class='menuLink'>Mods List</a> | <a href='javascript:;' onclick='showWindow(19)' class='menuLink'>Publish Mod</a> | <a href='/viewer.html' class='menuLink'>Viewer</a></div><form id='modDropper'><input onchange='loadMod()' id='modInput'type='file'><p id='modLInfo'>drop mod file here or click</p></form><input type='text' id='modURL' class='accountInput' style='width:78%' placeholder='Paste Mod Url'><a class='menuLink' style='display:inline-block;margin-left:10px' onclick='loadModURL()'>Load Mod</a>"
        }
    }, {
        header: "Account",
        gen: function() {
            return S ? "<div class='settName' style='width:100%'>Name<a href='/social.html?p=profile&q=" + S.name + "' class='floatR'>" + S.name + "</a></div><div class='settName' style='width:100%'>Clan<a class='floatR' class='menuLink' onclick='showWindow(13)'>" + (S.clan ? "[" + S.clan + "]" : "None") + "</a></div><div class='settName'>Level<span class='floatR'>" + S.level + "</span></div><div class='xpBar'><div class='xpBarB' style='width:" + S.levelProg + "%'></div></div><div class='settName'>Score<span class='floatR'>" + S.score + "</span></div><div class='settName'>KR<span class='floatR'>" + S.funds + "KR</span></div><div class='settName'>Kills<span class='floatR'>" + S.kills + "</span></div><div class='settName'>Deaths<span class='floatR'>" + S.deaths + "</span></div><div class='settName'>KDR<span class='floatR'>" + (S.kills / Math.max(S.deaths, 1)).toFixed(2) + "</span></div><div class='settName'>Games Played<span class='floatR'>" + S.games + "</span></div><div class='settName'>Games Won<span class='floatR'>" + S.wins + "</span></div><div class='settName'>W/L<span class='floatR'>" + (S.wins / Math.max(S.games, 1)).toFixed(2) + "</span></div><div class='settName'>Time Played<span class='floatR'>" + d.getReadableTime(S.timePlayed) + "</span></div><div style='height:10px'></div><a class='menuLink' onclick='logoutAcc()'>Logout</a>" : "<input id='accName' type='text' placeholder='Enter Username' class='accountInput' style='margin-top:0' value='" + (getSavedVal("krunker_username") || "") + "'></input><input id='accPass' type='password' placeholder='Enter Password' class='accountInput'></input><div id='accResp' style='margin-top:10px;color:rgba(0,0,0,0.5);display:none'></div><div style='margin-top:10px;color:rgba(0,0,0,0.3)'>To recover an account contact <a>krunker@yendis.ch</a></div><div class='accountButton' onclick='registerAcc()'>Register</div><div class='accountButton' onclick='loginAcc()' style='margin-left: 20px'>Login</div>"
        }
    }, {
        header: "Select Class",
        gen: function() {
            for (var t = "", e = 0; e < b.classes.length; ++e) 0 <= b.config.classes.indexOf(e) && !b.classes[e].hide && (t += "<div class='selItem' style='margin-top:" + (0 < e ? "10px" : "") + "'><div class='equipBtn' onclick='selectClass(" + e + ")'><i class='material-icons'>&#xE037</i></div><div class='itemIcon'><img class='itemIconImg' src='./textures/classes/icon_" + e + ".png'/></div><div class='itemInfo'><div class='itemName'>" + b.classes[e].name + "</div><div class='itemCat'>" + b.weapons[b.classes[e].loadout[0]].name + "</div></div></div>");
            return t
        }
    }, {
        header: "Change Controls",
        gen: function() {
            var t = "";
            return t += "<div class='settName'>Forward<span class='settText floatR' id='cont0' onclick='changeCont(0)'>" + d.getKeyName(L.moveKeys[0]) + "</span></div>", t += "<div class='settName'>Backward<span class='settText floatR' id='cont1' onclick='changeCont(1)'>" + d.getKeyName(L.moveKeys[1]) + "</span></div>", t += "<div class='settName'>Left<span class='settText floatR' id='cont2' onclick='changeCont(2)'>" + d.getKeyName(L.moveKeys[2]) + "</span></div>", t += "<div class='settName'>Right<span class='settText floatR' id='cont3' onclick='changeCont(3)'>" + d.getKeyName(L.moveKeys[3]) + "</span></div>", t += "<div class='settName'>Reload<span class='settText floatR' id='cont8' onclick='changeCont(8)'>" + d.getKeyName(L.reloadKey) + "</span></div>", t += "<div class='settName'>Aim<span class='settText floatR' id='cont10' onclick='changeCont(10)'>" + d.getKeyName(L.aimKey) + "</span></div>", t += "<div class='settName'>Inspect<span class='settText floatR' id='cont14' onclick='changeCont(14)'>" + d.getKeyName(L.inspKey) + "</span></div>", t += "<div class='settName'>Spray<span class='settText floatR' id='cont9' onclick='changeCont(9)'>" + d.getKeyName(L.sprayKey) + "</span></div>", t += "<div class='settName'>Jump<span class='settText floatR' id='cont4' onclick='changeCont(4)'>" + d.getKeyName(L.jumpKey) + "</span></div>", t += "<div class='settName'>Crouch<span class='settText floatR' id='cont5' onclick='changeCont(5)'>" + d.getKeyName(L.crouchKey) + "</span></div>", t += "<div class='settName'>Next Weapon<span class='settText floatR' id='cont6' onclick='changeCont(6)'>" + d.getKeyName(L.swapKeyD) + "</span></div>", t += "<div class='settName'>Previous Weapon<span class='settText floatR' id='cont7' onclick='changeCont(7)'>" + d.getKeyName(L.swapKeyU) + "</span></div>", t += "<div class='settName'>Chat<span class='settText floatR' id='cont11' onclick='changeCont(11)'>" + d.getKeyName(L.chatKey) + "</span></div>", t += "<div class='settName'>Voice<span class='settText floatR' id='cont12' onclick='changeCont(12)'>" + d.getKeyName(L.voiceKey) + "</span></div>", t += "<div class='settName'>Player List<span class='settText floatR' id='cont15' onclick='changeCont(15)'>" + d.getKeyName(L.listKey) + "</span></div>"
        }
    }, {
        header: "Host Custom Game",
        gen: function() {
            var t = "";
            N = !0, t += "<div class='settName b'>Select Maps</div>", t += "<div style='margin-top:5px'>";
            for (var e = 0; e < k.length; e++) {
                var i = k[e],
                    r = "<label class='switch'><input id='gameMap" + e + "' type='checkbox' checked=''><span class='slider'></span></label>";
                t += "<div class='settNameSmall' style='margin:0'>" + d.capFirst(i.name) + r + "</div>"
            }
            t += "<div class='settNameSmall' style='margin:0;margin-top:10px'>Community Maps <a id='commMap' href='javascript:;' onclick='showWindow(11);' class='menuLink' style='float:right;font-size:18px'>" + (oe || "Select") + "</a></div><br/>", t += "<div class='settNameSmall' style='margin:0;margin-top:-24px;'>Raw Map Data<input id='rawMapData' type='text' class='formInput' " + (ae ? "value='" + ae + "'" : "placeholder='Map Data'") + " autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false'></div><br/>", t += "</div>", t += "<div class='settName b'>Add Mod Pack</div>", t += "<div class='settNameSmall' style='margin:0;margin-top:10px'>Community Mods <a href='javascript:;' onclick='showWindow(18);' class='menuLink' style='float:right;font-size:18px'>Select</a></div><br/>", t += "<div class='settNameSmall' style='margin:0;margin-top:-24px;'>Mod URL<input id='hostModURL' type='text' class='formInput' placeholder='URL' autocomplete='off' value='" + (ce || "") + "' autocorrect='off' autocapitalize='off' spellcheck='false'></div><br/>", t += "<div class='settName b'>Select Modes</div>", t += "<div style='margin-top:5px'>";
            for (e = 0; e < R.length; e++) {
                var s = R[e];
                r = "<label class='switch'><input id='gameMode" + e + "' type='checkbox' " + (e ? "" : "checked") + "><span class='slider'></span></label>";
                t += "<div class='settNameSmall' style='margin:0'>" + d.capFirst(s.name) + r + "</div>"
            }
            t += "<div class='settName b' style='margin-top:20px'>Select Classes</div>", t += "<div style='margin-top:5px'>";
            for (e = 0; e < b.classes.length; e++) {
                r = "<label class='switch'><input id='gameClass" + e + "' type='checkbox' checked><span class='slider'></span></label>";
                t += "<div class='settNameSmall' style='margin:0'>" + b.classes[e].name + r + "</div>"
            }
            t += "<div class='settName b' style='margin-top:25px'>Settings</div>";
            for (e = 0; e < n.serverConfig.length; e++) t += (_ = n.serverConfig[e]).bool ? "<div class='settNameSmall' style='margin:0;margin-bottom:5px;'>" + _.name + " <label class='switch'><input type='checkbox' id='customS" + _.varN + "' " + (_.def ? "checked" : "") + "><span class='slider'></span></label></div>" : "<div class='settNameSmall' style='margin-left:0'>" + _.name + "<span class='sliderVal' id='customSet" + e + "'>" + _.def + "</span><div class='slidecontainer'><input type='range' min='" + _.min + "' max='" + (S && S.featured && _.maxF || _.max) + "' step='" + _.step + "' id='customS" + _.varN + "' value='" + _.def + "' oninput='updateSliderLabel(" + e + ",this.value)' class='sliderM'></div></div>";
            return t += "<div class='settNameSmall' style='margin:0'>Private <label class='switch'><input id='makePrivate' type='checkbox'><span class='slider'></span></label></div>", t += "<div id='hostGamePreset' style='text-align:left;margin-top:30px'></div>", t += "<div style='text-align:left;margin-top:30px'>", t += "<div style='color:#919191;margin-bottom:5px' id='hostGameMsg'></div>", t += "<a class='menuLink' onclick='createPrivateRoom()'>Start Game</a>", t += "<span class='presetsButton' style='float:right;background-color:#2196F3;width:120px' onclick='windows[7].genPresets()'>Presets</span><br/>", t += "</div>"
        },
        presetAction: function(t) {
            if (0 == t && "Select" == presetSelect.value) return;
            if (1 == t && "Select" == presetName.value) return;
            let e = getSavedVal("krk_hostPresets");
            e = e ? JSON.parse(e) : {};
            let i = 1 == t ? {} : e[presetSelect.value];
            for (var r, s = 0; s < k.length; s++) k[s], r = document.getElementById("gameMap" + s), 1 == t ? 1 != r.checked && (i["gameMap" + s] = r.checked) : "gameMap" + s in i && (r.checked = i["gameMap" + s]);
            for (s = 0; s < R.length; s++) r = document.getElementById("gameMode" + s), 1 == t ? r.checked != !s && (i["gameMode" + s] = r.checked) : "gameMode" + s in i && (r.checked = i["gameMode" + s]);
            for (s = 0; s < b.classes.length; s++) b.classes[s], r = document.getElementById("gameClass" + s), 1 == t ? 1 != r.checked && (i["gameClass" + s] = r.checked) : "gameClass" + s in i && (r.checked = i["gameClass" + s]);
            for (s = 0; s < n.serverConfig.length; s++) _ = n.serverConfig[s], r = document.getElementById("customS" + _.varN), 1 == t ? r[_.bool ? "checked" : "value"] != _.def && (i[_.varN] = r[_.bool ? "checked" : "value"]) : _.varN in i && (!_.bool && (document.getElementById("customSet" + s).innerText = i[_.varN]), r[_.bool ? "checked" : "value"] = i[_.varN]);
            1 == t ? (oe && (i.commMap = oe), ce && (i.hostModURL = ce), "" != (r = document.getElementById("rawMapData")).value && (i.rawMapData = r.value), "" != (r = document.getElementById("hostModURL")).value && (i.hostModURL = r.value), 0 != (r = document.getElementById("makePrivate")).checked && (i.makePrivate = r.checked), e[presetName.value || "Preset1"] = i, saveVal("krk_hostPresets", JSON.stringify(e))) : ("commMap" in i && (document.getElementById("commMap").innerText = oe = i.commMap), "hostModURL" in i && (document.getElementById("hostModURL").innerText = ce = i.hostModURL), "rawMapData" in i && (document.getElementById("rawMapData").value = i.rawMapData), "hostModURL" in i && (document.getElementById("hostModURL").value = i.hostModURL), "makePrivate" in i && (document.getElementById("makePrivate").checked = i.makePrivate)), hostGamePreset.innerHTML = ""
        },
        genPresets: function() {
            let t = getSavedVal("krk_hostPresets");
            t = t ? JSON.parse(t) : {};
            var e = "<div style='margin-top:0px' class='setHed'>Host Presets</div>";
            for (let i in e += "<span class='settNameSmall' style='margin:0;margin-bottom:5px;'>Preset<select class='formInput' id='presetSelect' style='margin-left: 10px'><option selected>Select</option>", t) t[i], e += "<option>" + i + "</option>";
            e += "</select><input id='presetName' type='text' class='formInput' placeholder='Preset name' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false' style='float:right'></span>", e += "<div style='margin:0;margin-top:10px;'><div class='hostPresetBtn' onclick='windows[7].presetAction(0)'>Load</div><div class='hostPresetBtn' onclick='windows[7].presetAction(1)' style='margin-left: 20px'>Save</div></div>", hostGamePreset.innerHTML = e
        }
    }, {
        header: "Select Spray",
        gen: function() {
            for (var t = "", e = 0; e < b.sprays.length; ++e) t += "<div class='selItem' style='margin-top:" + (0 < e ? "10px" : "") + "'><div class='equipBtn' onclick='selectSpray(" + e + ")'><i class='material-icons'>&#xE037</i></div><div class='itemIcon'><img class='itemIconImg' src='./textures/sprays/" + e + ".png'/></div><div class='itemInfo'><div class='itemName'>" + b.sprays[e].name + "</div><div class='itemCat'>Default Spray</div></div></div>";
            return t
        }
    }, {
        header: "Custom Maps",
        mapsLoaded: function(t, e) {
            if (yourMaps)
                if (t && t.length)
                    if (e) mapsList.innerHTML = e;
                    else {
                        var i = $t(t, "map");
                        yourMaps.innerHTML = i
                    }
            else yourMaps.innerHTML = "No Maps found"
        },
        gen: function() {
            var t = S ? "<div style='margin-top:30px;font-size:24px;margin-bottom:10px' class='setHed'>Your Maps</div><div style='color:rgba(0,0,0,0.3)' id='yourMaps'>Loading...</div><div style='margin-top:30px;margin-bottom:10px' class='setHed'>Publish Map</div><div style='color:rgba(0,0,0,0.4);font-size:18px'><input onclick='selectMapThumb()' type='button' id='thumbBtn' style='cursor:pointer' value='Select' /><input id='mapThumb' type='file' accept='image/*' style='width:1px;visibility:hidden;' onchange='updateMapThumb()'><span style='color:rgba(0,0,0,0.4);margin-left:10px' id='mapThumbName'>No Thumbnail</span></div><input id='mapDataNew' type='text' placeholder='Paste Map Data' class='mapInput' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false'/><div id='mapUpResp' style='color:rgba(0,0,0,0.3);margin-top:8px;margin-bottom:5px'></div><div class='mapLoadButton' style='margin-top:6px' onclick='uploadCustomMap()'>Publish/Update</div>" : "<div style='color:rgba(0,0,0,0.3);margin-top:20px'><a href='javascript:;' onclick='showWindow(5);' class='menuLink'>Login</a> to create and upload maps!</div>";
            return x.listMaps(!0, S ? S.id : null, Pe), "<a href='./editor.html' class='menuLink'>Map Editor</a> | <a href='/social.html?p=maps' target='_blank' class='menuLink'>Map List</a><a href='https://discord.gg/Kfypyp5' class='menuLink' style='float:right'>Map Community</a><br/>" + t
        }
    }, {
        header: "Community Maps",
        searchMaps: function() {
            searchResults.innerHTML = "Loading...", x.searchMap(mpSrch.value, Ce)
        },
        searchResp: function(t) {
            var e = "";
            t.length ? (e += "<div style='height:10px'></div>", e += $t(t, "map")) : e = "No maps found!", document.getElementById("searchResults") && (document.getElementById("searchResults").innerHTML = e)
        },
        mapsLoaded: function(t, e) {
            if (mapsList)
                if (t && t.length)
                    if (e) mapsList.innerHTML = e;
                    else {
                        for (var i = "<div style='margin-bottom:-5px;margin-top:-5px;'>Search More Maps</div><input type='text' id='mpSrch' class='smlInput' placeholder='Map Name' /><a class='menuLink' style='margin-left:20px' onclick='windows[10].searchMaps()'>Search</a><div style='color:rgba(0,0,0,0.5);margin-top:5px' id='searchResults'></div>", n = ["<div style='margin-bottom:8px;margin-top:15px;font-size:25px'>Hot</div>", "<div style='margin-top:25px;margin-bottom:8px;font-size:25px'>New Maps</div>", "<div style='margin-top:25px;margin-bottom:8px;font-size:25px'>Your Favorites</div>"], r = 0; r < t.length; ++r) t[r] && (t[r].length && (i += n[r]), i += $t(t[r], "map"));
                        mapsList.innerHTML = i
                    }
            else mapsList.innerHTML = "No Maps found"
        },
        gen: function() {
            return x.listMaps(!1, S ? S.id : null, Pe), "<div style='color:rgba(0,0,0,0.3)' id='mapsList'>Loading...</div>"
        }
    }, {
        header: "Theatre Mode",
        gen: function() {
            return "<div class='setHed' style='margin-top:0'>Settings</div><div class='settName'>Enable Recording<label class='switch'><input type='checkbox' onclick='enableRecord(this.checked)' " + (De ? "checked" : "") + "><span class='slider'></span></label></div><div class='settName'>Record Key<span class='settText floatR' id='cont13' onclick='changeCont(13, true)'>" + d.getKeyName(L.recordKey) + "</span></div><div style='height:20px'></div><a href='./theatre.html' class='menuLink'>Theatre Mode</a>"
        }
    }, {
        header: "Clans",
        clanData: null,
        kickReq: function(t) {
            if (w.send("cln", 5, t), this.clanData && this.clanData.members) {
                for (var e = this.clanData.members.length - 1; 0 <= e; --e) this.clanData.members[e].player_id == t && this.clanData.members.splice(e, 1);
                updateWindow(13)
            }
        },
        sendReq: function(t, e) {
            var i = document.getElementById("clanErr");
            i && (i.style.color = "rgba(0,0,0,0.6)", i.innerHTML = "Loading...");
            var n = (i = document.getElementById("clanInp" + t)) ? i.value : null;
            w.send("cln", t, e || n || 1)
        },
        updReq: function(t, e, i) {
            w.send("clnR", e, i), this.clanData.members && 1 == i && this.clanData.members.push({
                player_name: this.clanData.requests[t].player_name
            }), this.clanData.requests.splice(t, 1), updateWindow(13)
        },
        delReq: function() {
            this.clanData = null, S && (S.clan = null), w.send("cln", 4, 1), showWindow(5)
        },
        resp: function(t, e, i) {
            var n = document.getElementById("clanErr");
            t && n ? (n.style.color = i ? "rgba(0,0,0,0.6)" : "rgba(255,0,0,0.6)", n.innerHTML = t) : e && (S && (S.clan = e.clan_name), this.clanData = e, updateWindow(13))
        },
        gen: function() {
            var t = "",
                e = "";
            if (this.clanData && this.clanData.members) {
                var i = S && this.clanData.clan_playerid == S.id;
                t = "<div class='setHed' style='margin-top:10px'>Members (" + this.clanData.members.length + ")</div>";
                for (var r = 0; r < this.clanData.members.length; ++r) t += "<div class='settName'><a target='_blank'href='/social.html?p=profile&q=" + this.clanData.members[r].player_name + "'>" + this.clanData.members[r].player_name + "</a>" + (i && this.clanData.clan_playerid != this.clanData.members[r].player_id ? "<i style='font-size:40px;float:right;color:rgba(255,0,0,0.6)'  class='material-icons h' onclick='windows[12].kickReq(" + this.clanData.members[r].player_id + ")'>clear</i>" : "") + "</div>"
            }
            if (this.clanData && this.clanData.requests) {
                e = "<div class='setHed' style='margin-top:10px'>Requests</div>";
                for (r = 0; r < this.clanData.requests.length; ++r) e += "<div class='settName'><a  target='_blank' href='/social.html?p=profile&q=" + this.clanData.requests[r].player_name + "'>" + this.clanData.requests[r].player_name + "</a><span style='float:right'><i style='font-size:40px;color:rgba(255,0,0,0.6)'  class='material-icons h' onclick='windows[12].updReq(" + r + "," + this.clanData.requests[r].cr_playerid + ", 0)'>clear</i><i style='font-size:40px;color:rgba(0,255,0,0.6);margin-left:10px' class='material-icons h' onclick='windows[12].updReq(" + r + "," + this.clanData.requests[r].cr_playerid + ", 1)'>done</i></span></div>";
                this.clanData.requests.length || (e += "<div style='color:rgba(0,0,0,0.4)'>No Requests</div>")
            }
            var s = S ? S.clan ? "<div class='setHed' style='margin-top:0px'>[" + S.clan + "] Clan Page<a style='float:right' href='javascript:;' onclick='windows[12].delReq()' class='menuLink'>" + (this.clanData ? S && this.clanData.clan_playerid == S.id ? "Delete" : "Leave" : "") + "</a></div><div id='clanErr' style='margin-top:0px;color:rgba(0,0,0,0.5)'>" + (this.clanData ? "<div class='settName'>Level<span class='floatR'>" + Math.max(1, Math.floor(n.rankVar * Math.sqrt(this.clanData.clan_score || 0))) + "</span></div><div class='settName'>Score<span class='floatR'>" + (this.clanData.clan_score || 0) + "</span></div>" + t + e : "Loading...") + "</div>" : "<div class='setHed' style='margin-top:-5px'>Create Clan</div><input id='clanInp1' type='text' class='smlInput' maxlength='4' placeholder='Clan Name' /><a class='menuLink' style='margin-left:20px' onclick='windows[12].sendReq(1)'>Create</a><div style='margin-top:0px' class='setHed'>Join Clan <a href='./social.html?q=clan' class='menuLink' style='margin-top:10px;display:inline-block'>View Clans</a></div><input id='clanInp2' type='text' class='smlInput' maxlength='4' placeholder='Clan Name' /><a class='menuLink' style='margin-left:20px' onclick='windows[12].sendReq(2)'>Submit</a><div id='clanErr' style='margin-top:10px'></div>" : "<div style='color:rgba(0,0,0,0.3);margin-top:20px'><a href='javascript:;' onclick='showWindow(5);' class='menuLink'>Login</a> to create and join a clan!</div>";
            return S && S.clan && !this.clanData && this.sendReq(3), s
        }
    }, {
        header: "Store",
        gen: function() {
            m.play("store", .4);
            for (var t = "", e = 0; e < b.store.wheels.length; ++e) _ = b.store.wheels[e], (S && 0 == S.following && _.free && S.level >= _.minLvl || !_.free) && (t += "<div><a href='javascript:;' class='menuLink' onclick='prizeWheel(" + e + ")'>" + _.name + " Spin</a> " + (_.lab ? "<span style='color:#fff;margin-left:5px;background-color:" + _.lab.col + ";font-size:15px;padding:3px;padding-left:8px;padding-right:8px'> " + _.lab.nm + " </span>" : "") + "<span style='float:right;color:rgba(0,0,0,0.3)'>" + (_.priceT || _.price) + "<span style='color:rgba(0,0,0,0.6)'> " + (_.priceT ? "" : "KR") + "</span></span></div>");
            var i = "<div style='color:rgba(0,0,0,0.3);font-size:19px;margin-bottom:20px'>By purchasing you agree to the <a href='./docs/terms.txt'>Terms</a></div>";
            for (e = 0; e < b.store.purchases.length; ++e) i += "<div><a href='javascript:;' class='menuLink' onclick='showPurchase(" + e + ")'>" + (_ = b.store.purchases[e]).val + " KR </a><span style='float:right;color:rgba(0,0,0,0.3)'>" + (_.tag ? "<span style='color:#fff;font-size:15px;padding:10px;padding-top:2px;vertical-align:middle;padding-bottom:2px;background-color:" + _.tagCol + "'>" + _.tag + "</span> " : "") + _.price + "<span style='color:rgba(0,0,0,0.6)'> USD</span></span></div>";
            return S ? "<b style='font-size:26px'>Prize Wheels</b><div style='color:rgba(0,0,0,0.3);margin-bottom:10px'>Unlock new weapon skins and items</div>" + t + ("<div style='height:10px;'></div><b style='font-size:26px;margin-bottom:10px'>Purchase KR</b>" + i) + "<div style='float:right;margin-top:10px'>" + S.funds + " KR in account</div>" : "<div style='color:rgba(0,0,0,0.3)'><a href='javascript:;' onclick='showWindow(5);' class='menuLink'>Login</a> to buy and unlock items from the store!</div>"
        }
    }, {
        header: "Select Skin",
        gen: function() {
            var t = "<div class='selItem'><div class='equipBtn' onclick='selectSkin(-1," + Vt + ")'><i class='material-icons'>&#xE037</i></div><div class='itemIcon'><img class='itemIconImg' src=''/></div><div class='itemInfo'><div class='itemName'>Default</div><div class='itemCat'>Default Skin</div></div></div>";
            if (S || b.singlePlayer)
                for (var e = (b.singlePlayer ? Object.keys(b.store.skins).map(t => t = {
                        ind: parseInt(t),
                        cnt: 1
                    }) : S.skins).slice().sort(function(t, e) {
                        return b.store.skins[e.ind] && b.store.skins[t.ind] ? b.store.skins[e.ind].rarity - b.store.skins[t.ind].rarity : 0
                    }), i = 0; i < e.length; ++i)(_ = b.store.skins[e[i].ind]) && !_.type && _.weapon == Vt + 1 && (t += "<div class='selItem' style='margin-top:10px'><div class='equipBtn' onclick='selectSkin(" + e[i].ind + "," + (_.weapon - 1) + ")'><i class='material-icons'>&#xE037</i></div><div class='itemIcon'><img class='itemIconImg' src=''/></div><div class='itemInfo'><div class='itemName' style='color:" + b.store.rarities[_.rarity].color + "'>" + _.name + "<span style='color:rgba(0,0,0,0.3)'> x" + e[i].cnt + "</span></div><div class='itemCat'>by " + (_.creator || "Krunker.io") + "</div></div></div>");
            return t
        }
    }, {
        header: "Select Hat",
        gen: function() {
            return te("selectHat", 1)
        }
    }, {
        header: "Select Back",
        gen: function() {
            return te("selectBack", 2)
        }
    }, {
        header: "Community Mods",
        searchMods: function() {
            searchResults.innerHTML = "Loading...", x.searchMod(moSrch.value, Ce)
        },
        searchResp: function(t) {
            var e = "";
            t.length ? (e += "<div style='height:10px'></div>", e += $t(t, "mod")) : e = "No mods found!", document.getElementById("searchResults") && (document.getElementById("searchResults").innerHTML = e)
        },
        resp: function(t, e) {
            if (modsList)
                if (t && t.length)
                    if (e) modsList.innerHTML = e;
                    else {
                        for (var i = "<div style='margin-bottom:-5px;margin-top:-5px;'>Search</div><input type='text' id='moSrch' class='smlInput' placeholder='Mod Name' /><a class='menuLink' style='margin-left:20px' onclick='windows[17].searchMods()'>Search</a><div style='color:rgba(0,0,0,0.5);margin-top:5px' id='searchResults'></div>", n = ["<div style='margin-bottom:5px;margin-top:15px'>Hot</div>", "<div style='margin-top:20px;margin-bottom:5px'>New Mods</div>", "<div style='margin-top:20px;margin-bottom:5px'>Your Favorites</div>"], r = 0; r < t.length; ++r) t[r] && (t[r].length && (i += n[r]), i += $t(t[r], "mod"));
                        modsList.innerHTML = i
                    }
            else modsList.innerHTML = "No Mods found"
        },
        gen: function() {
            return x.listMods(S ? S.id : null, Re), "<div style='color:rgba(0,0,0,0.3)' id='modsList'>Loading...</div>"
        }
    }, {
        header: "Publish Mod",
        gen: function() {
            return S ? "<div style='margin-top:0px' class='setHed'>Publish Mod</div><div style='color:rgba(0,0,0,0.4);font-size:18px'><input onclick='selectModThumb()' type='button' id='thumbBtn' style='cursor:pointer' value='Select' /><input id='modThumb' type='file' accept='image/*' style='width:1px;visibility:hidden;' onchange='updateModThumb()'><span style='color:rgba(0,0,0,0.4);margin-left:10px' id='modThumbName'>No Thumbnail</span></div><input id='pubModName' type='text' placeholder='Mod Name' class='mapInput' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false'/><input id='pubModURL' type='text' placeholder='Mod URL' class='mapInput' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false'/><div id='modUpResp' style='color:rgba(0,0,0,0.3);margin-top:8px'></div><div class='mapLoadButton' style='margin-top:6px' onclick='uploadCustomMod()'>Publish/Update</div>" : "<div style='color:rgba(0,0,0,0.3);'><a href='javascript:;' onclick='showWindow(5)' class='menuLink'>Login</a> to publish mods!</div>"
        }
    }, {
        header: "Select Secondary",
        gen: function() {
            for (var t = "", e = 0; e < b.weapons.length; ++e)
                if ((_ = b.weapons[e]) && _.secondary) {
                    var i = !_.minRec || S && S.level >= _.minRec || b.singlePlayer;
                    t += "<div class='selItem' style='margin-top:10px'><div class='equipBtn" + (i ? "" : " gr") + "' " + (i ? "onclick='selectSecondary(" + e + ")" : "") + "'><i class='material-icons'>&#xE037</i></div><div class='itemIcon'><img class='itemIconImg' src='./img/prev/" + _.src + ".png'/></div><div class='itemInfo'><div class='itemName'>" + _.name + "</div><div class='itemCat'>" + (_.minRec ? i ? "Unlocked at lvl " + _.minRec : "Req lvl " + _.minRec : "Default") + "</div></div></div>"
                } return t
        }
    }, {
        header: "Advertise",
        gen: function() {
            return "<div class='setHed' style='margin-top:0'>Advertise in Game</div><div style='color:rgba(0,0,0,0.4)'>On krunker.io you have the ability to place advertisements in game.<div style='height:10px'></div> The game features several <b>3d Billboards</b> that yield a very high impression rate & that are <b>not affected by ad blockers</b>.</div><img src='./img/ad_1.png' style='width:100%;margin-top:10px'/><div style='color:rgba(0,0,0,0.4);margin-top:10px'><b>Daily Users:</b> ~ 1,000,000<br/><b>Registered Accounts:</b> ~ 3,000,000<br/><b>Daily Impressions:</b> ~ 4,500,000<br/><b>Peak CCU:</b> ~ 22,000<br/><b>Session Time avg:</b> 14 minutes<br/><div style='height:5px'></div><i style='color:rgba(0,0,0,0.2)'>as of 14/03/2019</i></div><div style='margin-top:10px;color:rgba(0,0,0,0.4)'>For inquiries contact <a>info@yendis.ch</a></div>"
        }
    }, {
        header: "Social",
        gen: function() {
            return "TODO"
        }
    }, {
        header: "Player List",
        gen: function() {
            var t = "<div style='margin-top:0px' class='setHed'><center>" + (b.players.list.length ? "Player List<hr>" : "No players currently...") + "</div>";
            t += "<div style='background-color:gainsboro;border-radius: 12px;'>", M && (t += "<div><span class='settNameSmall'>" + (B ? "<i class='material-icons' style='font-size:25px'>stars</i>" : "") + M.name + (M.clan ? "<span> [" + M.clan + "]</span>" : "") + "</span></div>");
            for (let e of b.players.list.filter(t => !t.isYou)) t += "<div><span class='settNameSmall'>" + (z == e.id ? "<i class='material-icons' style='font-size:25px'>stars</i>" : "") + "<a target='_blank' class='" + (e.isHacker ? "red" : "grey") + "' href='/social.html?p=profile&q=" + e.name + "'>" + e.name + (e.clan ? "<span> [" + e.clan + "]</span>" : "") + "</a></span>" + (B || S && S.developer ? "<span style='float:right'><span class='punishButton' onclick='punishPlayer(\"" + e.id + "\", 0)' style='background-color:#fab640;'>Kick</span><span class='punishButton' onclick='punishPlayer(\"" + e.id + "\", 1)'>Ban</span>" + (S && S.developer ? "<span class='punishButton' onclick='punishPlayer(\"" + e.id + "\", 2)' style='background-color:#E040FB;'>Kill</span>" : "") + "</span>" : "") + "</div>";
            return t += "</div>"
        }
    }];
    for (var ee = 0; ee < windows.length; ++ee) windows[ee].html = "";
    var ie = 0;
    window.updateWindow = function(t, e) {
        "block" == windowHolder.style.display && (ie == t && null != t ? showWindow(t, !0) : e && showWindow(ie, !0))
    }, window.showWindow = function(t, e) {
        window.idleTimer = 0, e || t && ("block" != windowHolder.style.display || t != ie) ? (v.toggleMenu(!0), menuWindow.innerHTML = windows[t - 1].gen ? windows[t - 1].gen() : windows[t - 1].html, ie = t, windowHeader.innerHTML = windows[t - 1].header, v.toggleWindow(!0)) : (v.toggleWindow(!1), L.inputChanger = null)
    }, window.playTick = function() {
        m.play("tick_0", .2)
    }, window.copyInviteLink = function() {
        d.copyToClipboard(`https://${location.host}/?game=${c}`), inviteButton.innerText = "Copied", setTimeout(() => inviteButton.innerText = "Invite", 1250)
    }, window.punishPlayer = function(t, e, i = null) {
        if (2 < e || 0 > e) return;
        let n = b.players.list.find(e => e.id == t),
            r = !window.confirm || confirm("You are about to " + (0 == e ? "kick" : 1 == e ? "ban" : "kill") + " '" + n.name + "'");
        n && r && w.send("pnh", e, n.id)
    };
    var ne, re, se, oe, ae, ce, le = spinWindow,
        pe = le.getContext("2d"),
        he = .95,
        ue = .6,
        de = null,
        fe = !1,
        me = 0,
        ge = 0,
        ve = 0,
        ye = 0,
        xe = 0,
        we = 30,
        be = 300,
        Me = !0,
        Se = 0,
        _e = 0,
        Te = new u.PerspectiveCamera(45, 1, .1, 100),
        Ee = new u.WebGLRenderer({
            precision: "mediump",
            antialias: !1,
            alpha: !0
        });

    function Ae(t, e) {
        if (J) {
            var i = b.store.skins[e];
            i && Oi(null, "<span style='color:#fff'>" + t + "</span> unboxed <span style='color:" + b.store.rarities[i.rarity].color + "'>" + i.name + "</span>", !0)
        }
    }

    function Le(t, e, i, n, r) {
        if (fe = !1, n);
        else {
            if (de = b.store.skins[e], spinItemName.innerHTML = de.name + "<div style='color:rgba(255,255,255,0.5)'>by " + (de.creator || "Krunker.io") + "</div>", ge = 2 * Math.PI * (t / 100 + 13) + Math.PI / 2, S)
                if (r && (S.following = r), S.funds = i, Rt(), spinKR.innerHTML = S.funds + " KR", S.skins.some(t => t.ind === e)) {
                    var s = S.skins.find(t => t.ind === e);
                    s && s.cnt++
                } else S.skins.push({
                    ind: e,
                    cnt: 1
                });
            spinRotation = 0, Se = 0, spinCost.innerHTML = "", (ne = new u.Scene).add(new u.AmbientLight(5197647));
            var o = new u.DirectionalLight(16777215, .5);
            o.position.set(3, 1, 0), ne.add(o);
            var a = de.type ? de : b.store.previews[de.weapon] || {};
            (re = f.genObj3D(0, 1 + (a.yOff || 0), a.xOff || 0)).rotateX(-Math.PI / 7), re.rotateY(Math.PI + .5), re.rotateZ(-.5), f.loadMesh({
                src: b.store.types[de.type || 0] + (de.type ? de.id : de.weapon),
                texSrc: de.tex ? de.tex : de.type ? de.tex ? (1 == de.type ? "hats/hat_" : "body/body_") + de.id + "_" + de.tex : null : "weapons/skins/weapon_" + de.weapon + "_" + de.id,
                movT: de.movT,
                sameGlow: de.sameGlow,
                glowText: !de.type && (de.glow || de.sameGlow),
                emissive: de.glow || de.sameGlow ? 16777215 : null,
                noGreen: !0,
                uv2: !0,
                fillScale: 60,
                centerZ: !0
            }, 0, 0, 0, (de.type ? Math.PI : Math.PI / 2) + (a.xRot || 0), 2.2 * (a.scl || 1), re), ne.add(re), Te.lookAt(ne.position)
        }
    }

    function ke(t, e, i) {
        windows[12].resp(t, e, i)
    }

    function Re(t, e) {
        windows[17].resp(e.data, e.error)
    }

    function Pe(t, e) {
        windows[e.index].mapsLoaded(e.data, e.error)
    }

    function Ce(t, e) {
        windows[e.index].searchResp(e.data)
    }
    Ee.setPixelRatio(.6 * window.devicePixelRatio), Te.position.y = 10, spinItemCanvas.appendChild(Ee.domElement), window.prizeWheel = function(t) {
        (se = b.store.wheels[t]).openURL && window.openURL(n.followURLS[d.randInt(0, n.followURLS.length - 1)]), ve = t, showWindow(0), me = 0, Me = !fe, ge = 0, _e = 0, spinRotation = 0, ye = xe = 0, v.toggleMenuHider(!1), spinItem.style.display = "none", spinItemName.style.display = "none", spinUI.style.display = "block", Te.position.x = be, spinButton.style.opacity = 1, spinText.style.display = "table-cell", spinHeader.innerHTML = "SPIN", spinCost.innerHTML = "-" + se.price + "KR";
        for (var e = "<div style='font-size:50px;color:#fff'>" + se.name.toUpperCase() + "</div>", i = 0; i < b.store.rarities.length; ++i) e += "<div style='margin-top:5px;color:#fff'>" + (_ = b.store.rarities[i]).name + "<span style='color:rgba(255,255,255,0.5)'>&emsp;" + se.rarities[i] + "%</span><div class='colCub' style='background-color:" + _.color + "'></div></div>";
        spinInfo.innerHTML = e, S && (spinKR.innerHTML = S.funds + " KR")
    }, spinButton.onclick = function(t) {
        t.stopPropagation(), t.preventDefault(), window.idleTimer = 0, w && !fe && Me && S && S.funds >= se.price && (fe = !0, Me = !1, w.send("spin", ve), spinHeader.innerHTML = "", spinCost.innerHTML = "Purchasing...", m.play("buy_1", .1))
    }, spinUI.onclick = function() {
        showWindow(0), v.toggleMenuHider(!0), spinUI.style.display = "none", w && w.send("unbx")
    }, window.selectHostMap = function(t, e = null) {
        oe = t, ae = "undefined" == e ? null : e, showWindow(8)
    }, window.selectHostMod = function(t) {
        ce = t, showWindow(8)
    }, window.openHostWindow = function() {
        oe = null, ce = null, ae = null, showWindow(8)
    };
    var Ie, Oe = 1e4,
        De = !("true" != getSavedVal("krk_record"));

    function Be(t, e) {
        try {
            mapUpResp && !e && (mapUpResp.innerHTML = t)
        } catch (e) {}
        try {
            modUpResp && !e && (modUpResp.innerHTML = t)
        } catch (e) {}
    }
    window.enableRecord = function(t) {
        De = t, saveVal("krk_record", t)
    }, enableRecord(De), window.updateMapThumb = function() {
        var t = null;
        try {
            t = document.getElementById("mapThumb").files[0]
        } catch (t) {}
        document.getElementById("mapThumbName").innerHTML = t ? t.name : "Failed"
    }, window.selectMapThumb = function() {
        document.getElementById("mapThumb").click()
    }, window.uploadCustomMap = function() {
        mapUpResp && (mapUpResp.innerHTML = "Loading...");
        var t = null;
        try {
            t = document.getElementById("mapThumb").files[0]
        } catch (e) {}
        if (t) {
            var e = new FileReader;
            e.readAsDataURL(t), e.onload = function() {
                return 40 < d.thumbnailSize(e.result) ? void Be("Failed. 40kb Thumbnail Limit") : void w.send("uploadM", mapDataNew.value, e.result)
            }, e.onerror = function() {
                mapUpResp.innerHTML = "Thumbnail Error"
            }
        } else w.send("uploadM", mapDataNew.value)
    }, window.updateModThumb = function() {
        var t = null;
        try {
            t = document.getElementById("modThumb").files[0]
        } catch (t) {}
        document.getElementById("modThumbName").innerHTML = t ? t.name : "Failed"
    }, window.selectModThumb = function() {
        document.getElementById("modThumb").click()
    }, window.uploadCustomMod = function() {
        modUpResp && (modUpResp.innerHTML = "Loading...");
        var t = null;
        try {
            t = document.getElementById("modThumb").files[0]
        } catch (e) {}
        if (t) {
            var e = new FileReader;
            e.readAsDataURL(t), e.onload = function() {
                return 40 < d.thumbnailSize(e.result) ? void Be("Failed. 40kb Thumbnail Limit") : void w.send("uploadMo", pubModName.value, pubModURL.value, e.result)
            }, e.onerror = function() {
                modUpResp.innerHTML = "Thumbnail Error"
            }
        } else w.send("uploadMo", pubModName.value, pubModURL.value)
    }, zip.workerScriptsPath = "./libs/";
    var ze = new FileReader;

    function Ne(t) {
        this.imgAsDataURL = "", this.process = function(e) {
            if (this.imgAsDataURL = URL.createObjectURL(e), this.imgAsDataURL && t) {
                try {
                    var i = new Image;
                    i.onload = function() {
                        f.updateTexture(t.replace("textures/", "").replace(".png", ""), this)
                    }, i.src = this.imgAsDataURL
                } catch (e) {}
                Ge.close()
            }
        }
    }

    function Ue(t) {
        this.filename = t;
        var e = this;
        this.process = function(t) {
            var i = URL.createObjectURL(t);
            if (i) {
                try {
                    var n = e.filename.split("/")[1];
                    "ambient_1" == n && m.stop("ambient_1"), m.sounds[n] = new Howl({
                        src: [i],
                        format: "mp3"
                    }), m.sounds[n + "3d"] = new Howl({
                        src: [i],
                        format: "mp3"
                    }), "ambient_1" == n && m.play("ambient_1", .12, !0)
                } catch (t) {}
                Ge.close()
            }
        }
    }

    function Fe(t) {
        this.process = function(e) {
            if (t) {
                try {
                    const i = new FileReader;
                    i.addEventListener("loadend", e => {
                        const i = e.srcElement.result;
                        f.updateMesh(t.replace("models/", "").replace(".obj", ""), i)
                    }), i.readAsText(e)
                } catch (t) {}
                Ge.close()
            }
        }
    }
    ze.onload = function(t) {
        var e = t.target.result;
        loadModPack(e)
    };
    var He, je, Ge = new function() {
        this.init = function(t, e) {
            this.numFiles = e, this.progress = 0, this.reader = t
        }, this.close = function() {
            this.reader && (this.progress++, document.getElementById("modLInfo") && (document.getElementById("modLInfo").innerHTML = "extracting " + this.progress + "/" + this.numFiles), this.numFiles === this.progress && (spriteIndex = 0, document.getElementById("modLInfo") && (document.getElementById("modLInfo").innerHTML = "success!"), this.reader.close(), this.reader = void 0))
        }
    };

    function Ve(t, e, i, n) {
        G = e, window.spectating = i, !G && i && (G = 1), oi(), $e(t), v.toggleMenu(!1),
            function() {
                Ti.length = 0, Ci.length = 0, v.toggleGameUI(!0), y.reset(), L.reset(), Ye(!1), b.players.forcePos(), b.players.resetAim(), U.length = 0, window.loading = !1, window.idleTimer = 0, teamName.innerHTML = "", instructions.innerHTML = "CLICK TO PLAY", A = null;
                for (var t = 0; t < playerInfos.children.length; t++) playerInfos.children[t].style.display = "none"
            }(), v.toggleControlUI(L.enabled), b.updateUI(), challIcon.style.display = n ? "inline-block" : "none"
    }

    function We(t, e, i, n, r, s, o, a, c, l) {
        if (a ? a.data && b.customMap(a.data, a.id, a.creator, null, !0) : b.map.setMaps(), z = r, B = r && r == w.socketId, mapVote.innerHTML = "", je = 0, r && a && null != a.id && (mapVote.innerHTML = "<i id='mapVoteD' onclick='voteMap(" + a.id + ",-1)' class='material-icons vote'>thumb_down</i><i id='mapVoteU' onclick='voteMap(" + a.id + ",1)' class='material-icons vote'>thumb_up</i>"), b.applyConfig(s, a && a.featured), b.init(t, e, l), b.setObjective(n), (c = c || {}).dest)
            for (var p = 0; p < c.dest.length; ++p) b.destroyObj(c.dest[p]);
        if (c.flg)
            for (p = 0; p < c.flg.length; ++p) b.updateFlag(...c.flg[p]);
        if (teamScores.style.display = "none", b.mode.teams && i) {
            teamScores.style.display = "inline-block";
            var h = "";
            for (p = 0; p < i.length; ++p) h += "<div class='tScore'><div id='tScoreC" + i[p][0] + "' class='tScoreC'></div><span class='tScoreT' id='tScoreV" + i[p][0] + "'>" + i[p][1] + "</span></div>";
            teamScores.innerHTML = h
        }
        o && "" != o && loadModPack(o, !0);
        var u = 0,
            d = 0;
        for (p = 0; p < b.map.manager.objects.length; ++p) b.map.manager.objects[p].score && (u++, d += b.map.manager.objects[p].scoreP);
        u ? (scoreZoneCount.style.display = "inline-block", scoreZoneCount.innerHTML = "<i class='material-icons' style='color:#fff;font-size:35px'>flag</i> " + d) : scoreZoneCount.style.display = "none", b.config.lives ? (livesCount.style.display = "inline-block", livesCount.innerHTML = "<i class='material-icons' style='color:#fff;font-size:35px'>favorite</i> <span id='livesDisp' style='color:rgba(255,255,255,0.6)'>" + b.config.lives + "</span>") : livesCount.style.display = "none", v.setShowSpect(b.config.allowSpect), q = null, L.reset();
        var m = b.map.maps[t];
        L.yHFGjsjAhr(m.camPos[0], m.camPos[1], m.camPos[2]), L.iSNkSy(0, 0, 0), f.clearSprays(), f.scene.add(L.object), M = null, playerInfos.innerHTML = "", b.mode.objective && 0 < b.map.manager.objectives.length && (playerInfos.innerHTML += "<img id='objectiveIcon' src='./textures/objective_1.png'/>"), killStreakHolder.innerHTML = "", bloodDisplay.style.display = "none", killsVal.innerHTML = 0, j = 0, Tt(), L.masterLock = !1, instructions.innerHTML = "CLICK TO PLAY"
    }

    function Ye(t) {
        window.locked = t, blocker.style.display = t ? "block" : "none"
    }

    function Xe(t, e, i) {
        instructions.innerHTML = "CLICK TO PLAY", victoryText.innerHTML = e ? "VICTORY" : "DEFEAT", victorySub.src = "./img/" + (e ? "sub" : "defeat") + ".png", M && M.active || window.spectating ? (v.showEndScreen(), q = n.endAnim, setTimeout(function() {
            w.connected && (L.disable(), qe(i))
        }, n.endAnim)) : t && (L.disable(), v.showEndScreen(), qe(i))
    }

    function qe(t) {
        if (t && t.length) {
            endTable.style.display = "inline-block";
            for (var e = "<tr><th>Rank</th>", i = b.mode.endStats || n.endStats, r = i.length, s = 1; s < r; ++s) e += "<th>" + d.capFirst(i[s]) + "</th>";
            e += "</tr>";
            var o = 1;
            for (s = 0; s < t.length;) {
                if (_ = b.players.findBySid(t[s])) {
                    e += "<tr style='" + (s + r >= t.length ? "border-bottom:none" : "") + "'><td style='color:#fff'>" + o + ".</td>";
                    for (var a = 1; a < r; ++a) e += "<td " + (1 == a ? "style='color:" + (M && M.sid == _.sid ? "#fff'" : M && M.team && M.team == _.team ? "rgba(255,255,255,0.6)'" : "#eb5656'") : "") + ">" + (ct && 1 == a && I ? d.scrambleS(t[s + a] || 0) : t[s + a] || 0) + (1 == a && _.clan ? "<span style='color:#fff'> [" + _.clan + "]<span>" : "") + "</td>"
                }
                e += "</tr>", o++, s += r
            }
            endTable.innerHTML = e
        } else endTable.style.display = "none"
    }

    function Ze(t, e, i) {
        b.playerSound(t, e, i)
    }
    window.loadUserMod = function(t, e, i) {
        N ? (N = !1, selectHostMod(e)) : (showWindow(4), document.getElementById("modLInfo") && (document.getElementById("modLInfo").innerHTML = "loading..."), loadModPack(e, !0, t, i))
    }, window.loadModURL = function() {
        modURL.value && loadModPack(modURL.value, !0)
    }, window.loadModPack = function(t, e, i, n) {
        if (F) {
            modVote.innerHTML = "", null != i && null != n && (He = 0, modVote.innerHTML = "<i id='modVoteD' onclick='voteMod(" + n + ",-1)' class='material-icons vote'>thumb_down</i><i id='modVoteU' onclick='voteMod(" + n + ",1)' class='material-icons vote'>thumb_up</i></br>" + i + " Mod");
            try {
                t = t.replace("dropbox.com", "dl.dropboxusercontent.com");
                var r = "",
                    s = e ? new zip.HttpReader(t) : new zip.Data64URIReader(t);
                zip.createReader(s, function(t) {
                    t.getEntries(function(e) {
                        if (e.length) {
                            Ge.init(t, e.length);
                            for (var i, n = 0; n < e.length; n++)(i = e[n]).directory ? Ge.close() : "textures" == (r = i.filename.split("/")[0]) ? i.getData(new zip.BlobWriter("image/png"), new Ne(i.filename).process, function() {}) : "sound" == r ? i.getData(new zip.BlobWriter("audio/mp3"), new Ue(i.filename.replace(".mp3", "")).process, function() {}) : "models" == r && i.getData(new zip.BlobWriter("application/x-tgif"), new Fe(i.filename).process, function() {})
                        }
                    })
                }, function() {
                    document.getElementById("modLInfo") && (document.getElementById("modLInfo").innerHTML = "mod error!")
                })
            } catch (e) {
                document.getElementById("modLInfo") && (document.getElementById("modLInfo").innerHTML = "mod error!")
            }
        } else document.getElementById("modLInfo") && (document.getElementById("modLInfo").innerHTML = "mods disabled.")
    }, window.loadMod = function() {
        if (modInput.files && modInput.files[0]) {
            var t = modInput.files[0];
            "zip" == t.name.split(".").pop().toLowerCase() ? (document.getElementById("modLInfo") && (document.getElementById("modLInfo").innerHTML = "loading mod..."), ze.readAsDataURL(t)) : document.getElementById("modLInfo") && (document.getElementById("modLInfo").innerHTML = "invalid mod file!")
        }
    }, window.voteMod = function(t, e) {
        if (S) {
            var i = document.getElementById("modVoteU"),
                n = document.getElementById("modVoteD"),
                r = 0;
            1 == e ? (r = 1, 1 == He && (r = 0)) : -1 == e && (r = -1, -1 == He && (r = 0)), He = r, i.className = 1 == He ? "material-icons vote a" : "material-icons vote", n.className = -1 == He ? "material-icons vote a" : "material-icons vote", w.send("vote", S.id, loginToken, t, r, 1)
        }
    }, window.voteMap = function(t, e) {
        if (S) {
            var i = document.getElementById("mapVoteU"),
                n = document.getElementById("mapVoteD"),
                r = 0;
            1 == e ? (r = 1, 1 == je && (r = 0)) : -1 == e && (r = -1, -1 == je && (r = 0)), je = r, i.className = 1 == je ? "material-icons vote a" : "material-icons vote", n.className = -1 == je ? "material-icons vote a" : "material-icons vote", w.send("vote", S.id, loginToken, t, r)
        }
    };
    var Ke = getSavedVal("sprayindex") || 0;

    function Je(t, e, i, n, r, s, o) {
        f.addSpray(t, e, i, n, r, s, o, b.sprays[e].opacity)
    }

    function Qe(t) {
        0 == t ? m.play("siren_0") : 1 == t && (m.play("nuke_0"), nukeFlash.style.display = "block", nukeFlash.style.opacity = 1, f.shake(1))
    }

    function $e(t, e) {
        e ? endTimer.innerHTML = "Next Round in " + t : (timerVal.innerHTML = t, timerDisplay.style.display = "0:00" == t ? "none" : "inline-block")
    }

    function ti(t) {
        for (var e, i = 0; i < t.length;) {
            if (e = t[i] == w.socketId, (_ = b.players.add(t[i], t[i + 1], t[i + 2], t[i + 3], t[i + 4], t[i + 5], t[i + 6], t[i + 12], t[i + 13], t[i + 14], t[i + 15], e, t[i + 16])).health = null == t[i + 7] ? _.maxHealth : t[i + 7], _.maxHealth = t[i + 8], _.team = t[i + 9], _.level = t[i + 10], _.clan = t[i + 11], e) {
                if (M = _, b.mode.showTeam && (teamName.innerHTML = M.team), M.team) {
                    var n = document.getElementById("tScoreC" + M.team);
                    n && (n.className = "tScoreC you")
                }
            } else playerInfos.innerHTML += "<div id='pInfo" + _.sid + "' class='playerInfo'>" + (_.level ? "<div class='playerRank' id='pInfoR" + _.sid + "'>" + _.level + "</div>" : "") + "<div class='pInfoH' id='pInfoH" + _.sid + "'>" + _.name + (_.clan ? "<span style='color:rgba(255,255,255,0.4)'> [" + _.clan + "]</span>" : "") + "</div><div></div><div class='playerHealth' id='pInfoHB" + _.sid + "'><div class='healthBar" + (G && G == _.team ? "" : "E") + "' id='healthBarE" + _.sid + "'></div></div></div>";
            Ri(_.health, _.sid, null, null), i += 17
        }
    }

    function ei(t) {
        if (w.send("p"), M) {
            if (M.x = t[1], M.y = t[2], M.z = t[3], M.xVel = t[4], M.yVel = t[5], M.zVel = t[6], M.onGround = t[7], M.didJump = t[8], M.onLadder = t[9], M.aimVal = t[10], M.crouchVal = t[11], b.players.swapWeapon(M, 0, !1, t[12]), M.slideTimer = t[13], M.canSlide = t[14], M.onTerrain = t[15], t[16]) {
                var e = V != t[16];
                V = t[16], e && function() {
                    var t = "#9eeb56";
                    150 <= V ? t = "#ff4b42" : 50 <= V && (t = "#ffd542");
                    var e = -1 == V ? "-" : V;
                    pingDisplay.innerHTML = e + "<i class='material-icons' style='color:" + t + "'>signal_cellular_alt</i>", menuPingDisplay.innerHTML = "<i class='material-icons' style='color:" + t + "'>signal_cellular_alt</i> " + e
                }()
            }
            for (var i = 0; i < L.tmpInputs.length;) L.tmpInputs[i][0] <= t[0] ? L.tmpInputs.splice(i, 1) : (M.procInputs(L.tmpInputs[i], b, !0), i++)
        }
    }

    function ii() {
        w.send("po")
    }

    function ni(t) {
        t
    }

    function ri() {
        if (!b.singlePlayer && (M && M.active || spectating))
            for (var t = 0; t < b.players.list.length; ++t)(_ = b.players.list[t]).active && _.objInstances && _ != M && (_.inView = !0, !spectating && !(G && G == _.team) && (b.config.nameTags || b.mode.hideNames || null != b.canSee(M, _.x, _.y, _.z)) && (_.inView = !1), b.players.toggleLOD(_, null == b.canSee(f.camera.getWorldPosition(), _.x, _.y, _.z, 10)))
    }

    function si(t) {
        "wt" == t && (t = "waiting for players"), gameMessage.innerHTML = t || ""
    }

    function oi() {
        for (var t = 0; t < b.players.list.length; ++t) {
            _ = b.players.list[t];
            var e = document.getElementById("healthBarE" + _.sid);
            e && (e.className = "healthBar" + (G && G == _.team ? "" : "E"))
        }
    }

    function ai(t, e) {
        if (_ = b.players.findBySid(t))
            if (_.team = e, _ == M) G = e, b.mode.showTeam && (teamName.innerHTML = G), oi();
            else {
                var i = document.getElementById("healthBarE" + t);
                i && (i.className = "healthBar" + (G && G == _.team ? "" : "E"))
            }
    }

    function ci(t) {
        b.players.hideAll();
        for (var e = 0; e < t.length;)(_ = b.players.findBySid(t[e])) && _ != M && (_.objInstances.visible = !_.lodActive, _.latestData = !0, _.forcePos ? (_.x = t[e + 1], _.y = t[e + 2], _.z = t[e + 3], _.xDire = t[e + 4], _.yDire = t[e + 5], _.interpolate = !1, _.forcePos = !1) : (_.dt = 0, _.x1 = _.x, _.x2 = t[e + 1], _.y1 = _.y, _.y2 = t[e + 2], _.z1 = _.z, _.z2 = t[e + 3], _.xDir1 = _.xDire, _.xDir2 = t[e + 4], _.yDir1 = _.yDire, _.yDir2 = t[e + 5], _.interpolate = !0), _.onGround = t[e + 6], _.crouchVal = t[e + 7], b.players.swapWeapon(_, 0, !1, t[e + 8])), e += 9
    }

    function li(t) {
        b.players.remove(t)
    }

    function pi(t, e, i, r) {
        if (_ = b.players.findBySid(t), T = b.players.findBySid(e), _) {
            if (b.players.kill(_), _.isYou) {
                var s = "";
                if (T) {
                    _ != T && (L.gXsmS(T.x, T.y + T.height - n.cameraHeight, T.z), T.interpolate = !1, T.inView = !0), s = "<img id='kCProfile' src='./textures/classes/icon_" + T.classIndex + ".png' />", s += "<div id='kCName'>" + (T ? ct && I ? d.scrambleS(T.name) : T.name : "You") + (T.clan ? "<span style='color:rgba(255,255,255,0.3)'> [" + T.clan + "]</span>" : "") + "</div>";
                    var o = T.loadout.indexOf(i[0]),
                        a = null == T.skins[o] ? null : T.skins[o];
                    null != a && (a = b.store.skins[a]), s += "<br/><div id='kCInfo' style='color:" + (a ? b.store.rarities[a.rarity].color : "rgba(255,255,255,0.7)") + "'>[" + (a ? a.name : b.weapons[i[0]].name) + "] <span id='kCInfoS'>+" + i[1] + "</span></div>"
                }
                killCard.innerHTML = s, v.toggleGameUI(!1), setTimeout(function() {
                    Tt()
                }, n.deathDelay)
            }
            if (!r && Z) {
                var c = _ == M ? "<span style='color:#fff'>You</span>" : "<span style='color:" + (G && G == _.team ? "#9eeb56" : "#eb5656") + "'>" + (ct && I ? d.scrambleS(_.name) : _.name) + "</span>",
                    l = T == M ? "<span style='color:#fff'>You</span>" : T ? "<span style='color:" + (G && G == T.team ? "#9eeb56" : "#eb5656") + "'>" + (ct && I ? d.scrambleS(T.name) : T.name) + "</span>" : "";
                Oi(null, T ? l + " killed " + c : c + " committed " + n.suicides[d.randInt(0, n.suicides.length - 1)], !0)
            }
        }
    }

    function hi(t, e) {
        if (M) {
            M.streaks[t] = e ? null : b.streaks[t];
            for (var i = "", n = 0; n < b.streaks.length; ++n) M.streaks[n] && (i += "<div class='killStreakItem' style='background-image: url(&quot;./img/streaks/" + n + ".png&quot;)'><span>[" + (n + 1) + "]</span></div>");
            killStreakHolder.innerHTML = i
        }
    }

    function ui(t, e) {
        (_ = b.players.findBySid(t)) && Oi(null, (_ == M ? "<span style='color:#fff'>You're</span>" : "<span style='color:" + (G && G == _.team ? "#9eeb56" : "#eb5656") + "'>" + _.name + "</span> is") + " on a " + e + " Kill Streak", !0)
    }

    function di(t, e, i) {
        (_ = b.players.findBySid(t), T = b.players.findBySid(e), _) && Oi(null, (_ == M ? "<span style='color:#fff'>You</span>" : "<span style='color:" + (G && G == _.team ? "#9eeb56" : "#eb5656") + "'>" + _.name + "</span>") + " " + i + " " + (T == M ? "<span style='color:#fff'>You</span>" : T ? "<span style='color:" + (G && G == T.team ? "#9eeb56" : "#eb5656") + "'>" + T.name + "</span>" : ""), !0)
    }
    window.selectSpray = function(t) {
        saveVal("sprayindex", t), Ke = t, showWindow(3)
    };
    var fi = null,
        mi = 0;

    function gi(t, e) {
        if (fi = t, mi = e, t) {
            for (var i = 1, n = "", r = 0; r < t.length; r += 6) n += "<div class='leaderItem'>", n += "<div class='leaderCounter'>" + i + ".</div>", n += t[r + 5] ? " <i class='material-icons' style='color:#40C4FF;margin-top:4px;font-size:25px'>check_circle</i>" : "", n += "<div class='leaderName" + (M && t[r] == M.sid ? "M" : G && G == t[r + 2] ? "F" : "") + "'>" + (ct ? d.scrambleS(t[r + 1]) : t[r + 1]) + (t[r + 4] ? "<span style='color:#fff'> [" + t[r + 4] + "]</span>" : "") + "</div>", n += "<div class='leaderScore'>" + d.formatNum(t[r + 3]) + "</div>", n += "</div>", i++;
            leaderContainer && (leaderContainer.innerHTML = n), 1 >= i && (leaderContainer.innerHTML = "Empty Lobby"), spectCount.style.display = e ? "inline-block" : "none", spectCount.innerHTML = "<i class='material-icons' style='color:#fff;font-size:35px;margin-right:8px'>visibility</i>" + e
        }
    }

    function vi(t, e, i, r, s, o) {
        if (M && M.active || window.spectating) {
            if (_ = b.players.findBySid(t)) {
                var a = _.y + _.height - n.cameraHeight - _.crouchVal * n.crouchDst,
                    c = d.getDistance3D(_.x, a, _.z, e, i, r),
                    l = d.getDirection(_.z, _.x, r, e),
                    p = d.getDirection(d.getDistance(_.x, _.z, e, r), i, 0, a);
                g.physObj(_.x, a, _.z, l, p, c, 0)
            }
            null != s && null == b.canSee(M, e, i, r) && (g.effect(e, i, r, s, o, 0), M && m.play3Dv("rico_" + d.randInt(1, 2), e, i, r, 55, .55, d.randFloat(.7, 1.1), M))
        }
    }

    function yi(t, e, i, n, r, s, o) {
        var a = b.projectiles.types[s];
        g.physObj(t, e, i, n, r, b.projectiles.types[s].range, null, null, a, o)
    }

    function xi(t) {
        g.disablePhys(t)
    }

    function wi(t, e, i, r) {
        if (M || window.spectating) {
            _ = f.camera.getWorldPosition();
            var s = 1 - d.getDistance3D(t, e, i, _.x, _.y, _.z) / n.explosionRange;
            0 < s && f.shake(.14 * s), m.play3D("explosion", t, e, i, 1, d.randFloat(.9, 1.1)), g.ExplosionManager.explodeAt(t, e, i, .08 * r)
        }
    }

    function bi(t, e) {
        var i = document.getElementById("tScoreV" + t);
        i && (i.innerHTML = e)
    }

    function Mi(t) {
        j += t, y.animateText(scoreText, "+" + j, 100, .38, 1100, 100, 0, function() {
            j = 0
        }), M.score += t
    }

    function Si() {
        y.animateText(scoreText, "Checkpoint!", 50, .38, 1100, 100, 0, null)
    }

    function _i(t) {
        (_ = document.getElementById("livesDisp")) && (_.innerHTML = t)
    }
    var Ti = [];

    function Ei(t, e, i) {
        Li(t), e && m.play("headshot_0"), killsVal.innerHTML = i
    }

    function Ai() {
        Li(["Assist", n.assistScore])
    }

    function Li(t) {
        if (t) {
            for (var e = 0 == Ti.length, i = 0; i < t.length; ++i) "" == t[i] ? i++ : Ti.push(t[i]);
            e && function t(e) {
                0 < Ti.length && y.animateText(chalName, "<span class='cTxt'>" + Ti[0] + "</span><div id='chalScore'>+" + Ti[1] + "</div>", 130, .4, n.medalAnim, 100, e, function() {
                    Ti.splice(0, 2), t(0)
                })
            }(n.medalDelay)
        }
    }
    var ki = 0;

    function Ri(t, e, i, r) {
        if ((M || spectating) && (_ = null == e || null == e ? M : b.players.findBySid(e))) {
            _.health = t, _.health > _.maxHealth && (_.maxHealth = _.health);
            var s = t / _.maxHealth * 100;
            if (_ == M) healthValue.innerHTML = t + " <span id='maxHP'>|" + _.maxHealth + "</span>", healthBarH.style.width = s + "%", healthBarH.style.backgroundColor = 35 >= s ? "#eb5656" : "#9eeb56", bloodDisplay.style.display = 90 >= s ? "block" : "none", bloodDisplay.style.opacity = 1 - s / 90, t < ki && (null != i && null != i && function(t, e) {
                for (var i = null, r = 0; r < Ci.length; ++r)
                    if (!Ci[r].life) {
                        i = Ci[r];
                        break
                    } i || (i = {}, Ci.push(i)), i.life = n.hitLife, i.x = t, i.z = e
            }(i, r), m.play("impact_0", .8)), ki = t;
            else document.getElementById("healthBarE" + e).style.width = s + "%"
        }
    }
    var Pi, Ci = [];

    function Ii() {
        m.play("hit_0", 3.1), y.animateDiv(hitmarker, 350, 100, 105)
    }

    function Oi(t, e, i) {
        if (i || K)
            for (ct && I && (e = I.clean(e), t = d.scrambleS(t)), chatList.innerHTML += i ? "<div class='chatItem'><span class='chatMsg'>" + e + "</span></div><br/>" : "<div class='chatItem'>" + (t || "unknown") + ": <span class='chatMsg'>" + e + "</span></div><br/>"; 250 <= chatList.scrollHeight;) chatList.removeChild(chatList.childNodes[0])
    }

    function Di() {
        W = Date.now(), Y = W - X, Y = Math.min(Y, n.dltMx), X = W,
            function() {
                var t, e = "#9eeb56";
                let i = performance.now();
                for (; 0 < Q.length && Q[0] <= i - 1e3;) Q.shift();
                Q.push(i), 30 > (t = Q.length) ? e = "#ff4b42" : 50 > t && (e = "#ffd542"), fpsDisplay.innerHTML = menuFPSDisplay.innerHTML = "<span style='color:" + e + "'>" + t + "</span> FPS"
            }(), TWEEN.update(), 0 < q && (0 >= (q -= Y) && (q = 0)), m.rate = b.config.deltaMlt, null != q && (Y *= q / n.endAnim, m.rate = b.config.deltaMlt * (q / n.endAnim)), M || window.spectating || (H += 1e-4 * Y, H %= 2 * Math.PI, L.iSNkSy(H, 0, 0)), Wt && 0 < classPreviewCanvas.offsetWidth && 0 < classPreviewCanvas.offsetHeight && (b.players.playerStep(Yt, .015 * Y, !0), Yt.idleAnim += n.idleAnimS * Y, b.players.updateMesh(Yt, !0), Zt.aspect = Xt / qt, Zt.updateProjectionMatrix(), Kt.setSize(Xt, qt), Kt.setPixelRatio(window.devicePixelRatio * Et.resolution.val), Kt.render(Wt, Zt)),
            function(t) {
                if ("block" == spinUI.style.display && (le.width = le.clientWidth, le.height = le.clientHeight, spinItemCanvas.style.width = 2.1 * le.clientWidth + "px", spinItemCanvas.style.height = 2.1 * le.clientWidth + "px", Ee.setSize(2.1 * le.clientWidth, 2.1 * le.clientWidth), 0 < le.width)) {
                    1 > me && 1 <= (me += .008 * t) && (me = 1), ye < xe && ((ye += .4 * t) >= xe && (ye = xe), spinItem.style.display = "block", spinItemName.style.display = "inline-block"), spinRotation != ge && (spinRotation += .024 * (ge - spinRotation), 0 >= (_e -= .024 * (ge - spinRotation)) && (_e += Math.PI / 1.5, m.play("tick_0", .2)), .002 >= ge - spinRotation && (spinRotation = ge, xe = 100 - se.rarities[de.rarity], m.play("reward", .3), w && w.send("unbx"), 1 <= de.rarity && m.play("cheer_0", .1)));
                    var e = 1 - (xe ? ye / xe : 0);
                    pe.translate(2, 2);
                    var i = le.width / 2 * he * me;
                    spinButton.style.opacity = e;
                    var n = .3 * i * (1 - e);
                    spinButton.style.width = 2 * i * ue * .8 + n + "px", spinButton.style.height = 2 * i * ue * .8 + n + "px", spinText.style.fontSize = 2 * i * ue * .15 + n + "px", spinCost.style.fontSize = 2 * i * ue * .08 + n + "px", pe.fillStyle = "#fff", pe.beginPath(), pe.arc(le.width / 2, le.height / 2, i, 0, 2 * Math.PI), pe.closePath(), pe.fill();
                    var r = 0;
                    if (pe.save(), pe.translate(le.width / 2, le.height / 2), xe) {
                        for (var s = 0, o = 0; o < b.store.rarities.length; o++) {
                            if (de.rarity == o) {
                                s += se.rarities[o] / 2;
                                break
                            }
                            s += se.rarities[o]
                        }
                        s /= 100, s = 2 * Math.PI * s * (ye / xe) % (2 * Math.PI), pe.rotate(s - Math.PI * (ye / xe))
                    }
                    for (o = 0; o < b.store.rarities.length; o++) {
                        _ = b.store.rarities[o], pe.fillStyle = _.color, pe.beginPath();
                        var a = se.rarities[o];
                        xe && (de.rarity == o ? a += ye : a -= ye * (se.rarities[o] / xe)), 0 < a && (pe.moveTo(0, 0), pe.arc(0, 0, .95 * i, r, r + 2 * Math.PI * (a / 100), !1), pe.lineTo(0, 0), pe.fill()), r += 2 * Math.PI * (a / 100)
                    }
                    pe.restore(), pe.fillStyle = "#F44336", pe.save(), pe.translate(le.width / 2, le.height / 2), pe.rotate(spinRotation), pe.beginPath();
                    var c = (spinButton.getBoundingClientRect().width / spinButton.offsetWidth - 1) * (i * ue) * .3;
                    if (pe.moveTo(0, (i * ue * -1.2 - c) * e), pe.lineTo(i * ue * e, 0), pe.lineTo(-i * ue * e, 0), pe.closePath(), pe.fill(), pe.restore(), pe.fillStyle = "#fff", pe.beginPath(), pe.arc(le.width / 2, le.height / 2, i * ue, 0, 2 * Math.PI), pe.closePath(), pe.fill(), "block" == spinItem.style.display && ne) {
                        var l = 1 - Math.abs(Te.position.x - we) / (be - we);
                        spinItemName.style.opacity = l, spinItemName.style.marginTop = .6 * i + "px", spinItemName.style.fontSize = i / 6.5 * l + "px", spinItemName.children[0].style.fontSize = i / 12 * l + "px", spinItemName.style.padding = i / 20 * l + "px", spinItemName.style.paddingLeft = i / 2 * l + "px", spinItemName.style.paddingRight = i / 2 * l + "px", Te.position.x != we && (Te.position.x -= .2 * (Te.position.x - we), .05 >= Math.abs(we - Te.position.x) && (Te.position.x = we), Te.lookAt(ne.position)), Se += .0018 * t, re.position.y += .012 * Math.sin(Se), re.rotation.x -= 7e-4 * Math.sin(.85 * Se), Ee.render(ne, Te)
                    }
                }
            }(Y), Bt(), L.update(Y * b.config.deltaMlt), M && M.active && !window.locked ? (b.config.thirdPerson ? f.camera.position.set(n.thirdPX, 2, n.thirdPZ) : f.camera.position.set(0, 0, 0), L.skipScroll = !1, E = [L.getISN(), Y * b.config.deltaMlt, L.xDr, L.yDr, n.movDirs.indexOf(L.moveDir), L.mouseDownL, L.mouseDownR || L.keys[L.aimKey] ? 1 : 0, L.keys[L.jumpKey] ? 1 : 0, L.keys[L.crouchKey] ? 1 : 0, L.keys[L.reloadKey] ? 1 : 0, L.scrollDelta], L.scrollDelta && (L.skipScroll = !0), L.scrollDelta = 0, L.tmpInputs.push(E), function(t) {
                if (De && M && M.active) {
                    for (var e = {
                            time: W,
                            players: [],
                            input: {
                                data: t,
                                classIndex: M.classIndex,
                                swapTime: M.swapTime,
                                reloadTimer: M.reloadTimer,
                                weaponIndex: M.weaponIndex,
                                reloads: M.reloads,
                                ammos: M.ammos,
                                recoilAnim: M.recoilAnim,
                                recoilAnimY: M.recoilAnimY,
                                recoilForce: M.recoilForce,
                                crouchVal: M.crouchVal,
                                didJump: M.didJump,
                                onGround: M.onGround,
                                onLadder: M.onLadder,
                                rampFix: M.rampFix,
                                aimVal: M.aimVal,
                                x: M.x,
                                y: M.y,
                                z: M.z,
                                xVel: M.xVel,
                                yVel: M.yVel,
                                zVel: M.zVel
                            }
                        }, i = 0; i < b.players.list.length; ++i)(_ = b.players.list[i]) != M && _.active && e.players.push([_.sid, _.classIndex, _.weaponIndex, _.xDr, _.yDr, _.crouchVal, _.x, _.y, _.z]);
                    for (Ie.states.push(e), i = Ie.states.length - 1; 0 <= i; --i) W - Ie.states[i].time > Oe && Ie.states.splice(i, 1)
                }
            }(E), M.procInputs(E, b), L.yHFGjsjAhr(M.x, M.y + M.height - n.cameraHeight, M.z), L.iSNkSy(f.shakeX, f.shakeY + M.recoilAnimY * n.recoilMlt + .1 * M.landBobY, 0), v.KEseUy(Math.max(58, M.spread * ut), b.config.thirdPerson && !M.weapon.scope ? 1 : M.aimVal * (M.inspecting ? 0 : 1) * (0 < M.reloadTimer ? 0 : 1)), !b.singlePlayer && function(t) {
                for (var e = U.length ? 1 : 0; e < t.length;)
                    if (2 == e && A && A[2] == t[2] && A[3] == t[3]) U.push("i"), e += 2;
                    else {
                        if (5 == e && A && A[5] == t[5] && A[6] == t[6] && A[7] == t[7] && A[8] == t[8] && A[9] == t[9] && A[10] == t[10]) {
                            U.push("i");
                            break
                        }
                        U.push(t[e]), e++
                    } A = t
            }(E), Howler.pos(M.x, M.y + M.height - n.cameraHeight, M.z), Howler.orientation(Math.sin(L.xDr + Math.PI), L.yDr, Math.cos(L.xDr + Math.PI)), b.singlePlayer && M.y <= b.map.deathY && pi(M.sid)) : window.spectating && (L.freeCam(Y), Howler.pos(L.object.position.x, L.object.position.y, L.object.position.z), Howler.orientation(Math.sin(L.xDr + Math.PI), L.yDr, Math.cos(L.xDr + Math.PI))), b.update(Y, W, M), T = f.camera.getWorldPosition();
        for (var t = 0; t < b.players.list.length; ++t)
            if ((_ = b.players.list[t]).active && !_.isYou && _.objInstances) {
                if (o = document.getElementById("pInfo" + _.sid))
                //CHEAT:Esp toggle
                    if (_.inView || module_esp_toggle) {
                        (c = _.objInstances.position.clone()).y += n.playerHeight + n.nameOffset - _.crouchVal * n.crouchDst, 0 <= _.hatIndex && (c.y += n.nameOffsetHat);
                        var e = 20 * (l = Math.max(.3, 1 - d.getDistance3D(T.x, T.y, T.z, c.x, c.y, c.z) / 600)),
                            i = 1 <= e && f.frustum.containsPoint(c);
                        if (o.style.display = i ? "block" : "none", i) {
                            c.project(f.camera), c.x = (c.x + 1) / 2, c.y = (c.y + 1) / 2;
                            var r = 14 * l,
                                s = 22 * l;
                            o.style.left = 100 * c.x + "%", o.style.marginLeft = -o.offsetWidth / 2 + "px", o.style.top = 100 * (1 - c.y) + "%", o.style.marginTop = -(r + s + (_.level ? 32 * l : e) / 2) + "px", (o = document.getElementById("pInfoH" + _.sid)) && (o.style.fontSize = e + "px"), (o = document.getElementById("pInfoHB" + _.sid)) && (o.style.width = 120 * l + "px", o.style.height = r + "px", o.style.marginTop = s + "px"), _.level && ((o = document.getElementById("pInfoR" + _.sid)) && (o.style.fontSize = 32 * l + "px", o.style.marginRight = 10 * l + "px"))
                        }
                    } else o.style.display = "none"
            } var o;
        if (o = document.getElementById("objectiveIcon")) {
            var a = !0,
                c = b.map.manager.objectives[b.activeObjective];
            for (t = 0; t < b.map.manager.objectives.length; ++t)
                if (_ = b.map.manager.objectives[t], t == b.activeObjective && d.pointInBox3D(T.x, T.y, T.z, _)) {
                    a = !1;
                    break
                } if (c && a) {
                D.set(c.x, c.y + 7, c.z);
                var l, p = 70 * (l = Math.max(.3, 1 - d.getDistance3D(T.x, T.y, T.z, D.x, D.y, D.z) / 600));
                i = 1 <= p && f.frustum.containsPoint(D);
                o.style.display = i ? "inline-block" : "none", i && (D.project(f.camera), D.x = (D.x + 1) / 2, D.y = (D.y + 1) / 2, o.style.left = 100 * D.x + "%", o.style.top = 100 * (1 - D.y) + "%", o.style.width = p + "px", o.style.height = o.style.width, o.style.marginLeft = -p / 2 + "px", o.style.marginTop = -p / 2 + "px")
            } else o.style.display = "none"
        }
        b.updateFlags(M, Y),
            function(t) {
                var e = "";
                if (M && M.active)
                    for (var i = 0; i < Ci.length; ++i) Ci[i].life && (Ci[i].life -= t, 0 >= Ci[i].life && (Ci[i].life = 0), e += "<div class='hitInd' style='transform: translate(0, -50%) rotate(" + (L.xDr + d.getDirection(Ci[i].x, Ci[i].z, M.x, M.z)) + "rad);opacity:" + Ci[i].life / n.hitLife + "'></div>");
                hitHolder.innerHTML = e
            }(Y), y.update(Y), "block" == nukeFlash.style.display && (nukeFlash.style.opacity -= .002 * Y, 0 >= nukeFlash.style.opacity && (nukeFlash.style.opacity = 0, nukeFlash.style.display = "none")), "block" == menuHolder.style.display && n.isProd && !B && (window.idleTimer += Y, window.idleTimer >= n.kickTimer && Ui("Kicked for inactivity")), requestAnimFrame(Di)
    }

    function Bi() {
        !b.singlePlayer && M && M.active && (w.send("i", U), U.length = 0)
    }

    function zi(t) {
        console.trace("Error message", t), instructionHolder.style.display = "block", instructions.innerHTML = "<span style='color: rgba(255, 255, 255, 0.6)'>" + t + "</span><br/><span style='color: rgba(255, 255, 255, 0.6)'>Try seeking a new game by clicking <a href='/'>here</a>.</span><div style='margin-top:10px;font-size:20px;color:rgba(255,255,255,0.4)'>If you have any extensions. Disable them</div>", instructionHolder.style.pointerEvents = "all"
    }

    function Ni(t) {
        Pi = t, w.connected = !1, showWindow(0), L.disable(), v.hideUI(), v.hideDiscon(), zi(t), w.jfieJQbEm && (w.jfieJQbEm.onclose = function() {}), Ui = function() {}
    }

    function Ui(t, e) {
        Pi || b.singlePlayer || (w.jfieJQbEm.onclose = function() {}, w && w.jfieJQbEm && w.jfieJQbEm.close(), !e && (showWindow(0), L.disable(), v.hideUI(), v.hideDiscon(), zi(t || "DISCONNECTED")))
    }

    function Fi(t) {
        var e = "";
        if (t)
            for (var i = 0; i < t.length; ++i) e += "<div class='streamItem'><img class='strmIcn' src='" + t[i].logo + "'/><div class='streamName'><a href='" + t[i].url + "' target='_blank'>" + t[i].name + "</a><div class='strmViews'>" + t[i].view + " viewers</div></div></div>", i != t.length - 1 && (e += "<div class='streamerSeparator'></div>");
        else e = "<span style='color:rgba(244,60,60,0.5)'>No active streams!</span>";
        streamContainer.innerHTML = e
    }

    function Hi(t) {
        b.singlePlayer = !0, w && w.jfieJQbEm && w.jfieJQbEm.close(), w.send = function() {};
        try {
            We(0, null, null, null, null, {
                maps: [0]
            }, 0, {
                data: t
            }, null, !0)
        } catch (t) {}
        s("custMap"), Tt(), window.history.replaceState({}, "Krunker Offline", "offline")
    }

    function ji(t, e) {
        e ? (grecaptcha.render("captchaBtn", {
            sitekey: "6LchqW0UAAAAANOoHruD0Ql5aNJIZld4EwLiaf-W",
            callback: function(e) {
                w.send(at(t), e)
            }
        }), grecaptcha.execute()) : w.send(at(t))
    }

    function Gi() {
        w.send("strm"),
            function() {
                loginToken = getSavedVal("krunker_token");
                var t = getSavedVal("krunker_username");
                loginToken && t && Ct(1, [t, null, loginToken])
            }()
    }
    window.pressButton = function(t) {
        t == L.chatKey && (document.activeElement == chatInput ? ("" != chatInput.value && (w.send("c", chatInput.value), chatInput.value = ""), chatInput.blur()) : chatInput.focus()), M && M.active && (t == L.recordKey && function() {
            if (De && M && M.active && Ie.states.length) {
                for (var t = Object.assign({}, b.map.maps[b.mapIndex]), e = 0; e < t.objects.length; ++e) t.objects[e].id = n.prefabIDS.indexOf(t.objects[e].id), t.objects[e].t = n.textureIDS.indexOf(t.objects[e].t);
                var i = {
                    id: "clip_" + Date.now(),
                    mode: b.modeIndex,
                    map: t,
                    states: []
                };
                for (e = 0; e < Ie.states.length; ++e)
                    if (e) {
                        var r = [];
                        r.push(Ie.states[e].input.data), Ie.states[e].players.length && r.push(Ie.states[e].players), i.states.push(r)
                    } else i.states.push(Ie.states[e]);
                var s = document.createElement("a");
                s.setAttribute("href", "data:text/plain;charset=utf-8," + encodeURIComponent(JSON.stringify(i))), s.setAttribute("download", i.id), s.style.display = "none", document.body.appendChild(s), s.click(), document.body.removeChild(s)
            }
        }(), t == L.sprayKey && w.send("s"), t == L.inspKey && b.players.wInspect(M), 49 <= t && 57 >= t && w.send("k", t - 49))
    }, getSavedVal("consent") || (consentBlock.style.display = "block");
    var Vi = !1;

    function Wi() {
        if (!Vi) {
            Vi = !0;
            var t = getSavedVal("custMap");
            s("custMap"), t ? Hi(t) : a.seek({
                autoChangeGame: !1,
                dataQuery: {
                    version: n.useLooseClient ? void 0 : O
                },
                skipReplaceState: ct
            }).then(t => {
                c = t.gameId, t.host, l = t.port;
                var e = `//${t.host}:${l}/ws?gameId=${t.gameId}&clientKey=${t.clientId}`;
                w.connect(e, function(t) {
                    if (t) {
                        if (console.warn("IO connect error", t), null != Pi) return;
                        Ui()
                    } else {
                        Tt(), aHolder.style.display = null;
                        var e = getSavedVal("mapToLoad");
                        s("mapToLoad"), e && selectHostMap(e);
                        var i = getSavedVal("custToLoad");
                        s("custToLoad"), i && selectHostMap(!1, i)
                    }
                }, {
                    init: We,
                    load: ji,
                    ready: Gi,
                    start: Ve,
                    cust: h,
                    pur: yt,
                    uf: vt,
                    clm: zt,
                    gmsg: si,
                    13: at,
                    pc: Hi,
                    cln: ke,
                    upMp: Be,
                    lock: Ye,
                    spin: Le,
                    unb: Ae,
                    end: Xe,
                    pErr: purchaseError,
                    11: at,
                    error: Ni,
                    strm: Fi,
                    dc: Ui,
                    ts: bi,
                    t: $e,
                    n: Qe,
                    0: ti,
                    1: ci,
                    8: ei,
                    2: li,
                    3: pi,
                    kst: ui,
                    am: Li,
                    ac: di,
                    4: Ii,
                    5: Mi,
                    6: Ei,
                    lv: _i,
                    7: gi,
                    9: vi,
                    10: Ai,
                    h: Ri,
                    s: Ze,
                    sp: Je,
                    ch: Oi,
                    vc: voiceChat,
                    a: It,
                    ua: kt,
                    ex: wi,
                    st: hi,
                    pr: yi,
                    tm: ai,
                    pre: xi,
                    obj: b.setObjective,
                    do: b.destroyObj,
                    ufl: b.updateFlag,
                    pi: ii,
                    pir: ni,
                    12: at,
                    chp: Si
                }), a.fetchGameInfo(t.gameId).then(t => {
                    menuRegionLabel.innerText = n.regionNames[t.region], mainLogo.src = "/img/krunker_logo_0.png"
                }).catch(t => console.error("Failed to fetch game info", t))
            }).catch(t => {
                console.warn("Matchmaker error:", t, t.message, t.response);
                let e = t.message;
                t.response ? "InvalidGameId" == (e = t.response.data.error) ? e = "Game not found." : "GameFull" == e ? e = "Game is full." : console.warn("Unhandled error message", e) : console.warn("No error response", t.response), Ni(e)
            }), window.requestAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(t) {
                window.setTimeout(t, 1e3 / 60)
            }, setInterval(() => {
                window.chH(w)
            }, 1e4), setInterval(Bi, n.clientSendRate), setInterval(ri, n.nameVisRate), X = Date.now(), Di()
        }
    }
    var Yi = ["de-fra", "us-ca-sv", "au-syd", "jb-hnd", "us-fl", "sgp"];
    var Xi, qi, Zi = !1;

    function Ki(t) {
        Zi = !1, clearTimeout(Xi), clearTimeout(qi), document.getElementById("pre-content-container").style.display = "none", document.getElementById("my-content").style.display = "none", t ? w.send("rew") : alert("Disable your ad blocker to receive free Krunkies.")
    }
    window.boltEventHandlers = function() {
        Bolt.on("pre-content-player", "showHiddenContainer", function() {
            Ki(!0)
        })
    }, window.captchaCallback = function() {
        instructions.innerHTML = "CONNECTING...", Wi()
    }, window.debugMatchmaker = function(t, e) {
        return e || (e = c), Promise.all([a.fetchGameInfo(e), a.fetchGameDebugInfo(t, e), a.fetchAllDebugInfo(t)]).then(([t, e, i]) => ({
            gameInfo: t,
            gameDebugInfo: e,
            allDebugInfo: i
        }))
    }
}, function(t, e, i) {
    var n = this && this.__awaiter || function(t, e, i, n) {
        return new(i || (i = Promise))(function(r, s) {
            function o(t) {
                try {
                    c(n.next(t))
                } catch (t) {
                    s(t)
                }
            }

            function a(t) {
                try {
                    c(n.throw(t))
                } catch (t) {
                    s(t)
                }
            }

            function c(t) {
                t.done ? r(t.value) : new i(function(e) {
                    e(t.value)
                }).then(o, a)
            }
            c((n = n.apply(t, e || [])).next())
        })
    };
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    const r = i(77),
        s = i(69);
    class o {
        constructor(t) {
            this.cachePingRegion = !0, this.enableLogging = !!localStorage.getItem("CLIENT_MANAGER_LOGGING"), "localhost" === location.hostname && (location.hostname = "127.0.0.1"), this.domain = t
        }
        get hostname() {
            return location.hostname
        }
        get matchmakerAddress() {
            return this.isLocal ? "127.0.0.1:5050" : `matchmaker.${this.domain}`
        }
        get isLocal() {
            return "localhost" === window.location.hostname || "127.0.0.1" === window.location.hostname || window.location.hostname.startsWith("192.168.")
        }
        seek(t = {
            autoChangeGame: !0
        }) {
            return n(this, void 0, void 0, function*() {
                this.log("Seeking games...");
                let e = t.regionId || (yield this.pingGames()),
                    i = t.gameId || this.parseQuery(),
                    n = yield this.matchmakerSeek(e, i, t.dataQuery || null, t.autoChangeGame);
                return t.skipReplaceState || window.history.replaceState(document.title, document.title, this.generateHref(n.gameId)), n
            })
        }
        pingGames() {
            return n(this, void 0, void 0, function*() {
                return new Promise((t, e) => n(this, void 0, void 0, function*() {
                    let i = localStorage.getItem(o.PING_REGION_CACHE_KEY);
                    if (i) return void t(i);
                    let n = yield this.fetchPingList(), r = 0, a = !1;
                    for (let i in n) {
                        let c = n[i],
                            l = c.endsWith(":443") ? "https:" : "http:";
                        s.default.get(`${l}//${c}/ping`).then(() => {
                            a || o.setDefaultRegion(i), a = !0, t(i)
                        }).catch(() => {
                            ++r >= Object.keys(n).length && e("All pings failed.")
                        })
                    }
                }))
            })
        }
        switchGame(t) {
            window.location.href = this.generateHref(t)
        }
        static setDefaultRegion(t) {
            localStorage.setItem(o.PING_REGION_CACHE_KEY, t)
        }
        parseQuery() {
            this.log("Parsing query...");
            var t = r(location.href, !0).query.game;
            return "string" == typeof t ? t : null
        }
        fetchPingList() {
            return n(this, void 0, void 0, function*() {
                return this.log("Fetching list of servrs to ping..."), yield this.matchmakerRequest("/ping-list", {
                    hostname: this.hostname
                })
            })
        }
        fetchGameList() {
            return n(this, void 0, void 0, function*() {
                return this.log("Fetching game list..."), yield this.matchmakerRequest("/game-list", {
                    hostname: this.hostname
                })
            })
        }
        fetchGameInfo(t) {
            return n(this, void 0, void 0, function*() {
                return this.log(`Fetching game info for ${t}...`), yield this.matchmakerRequest("/game-info", {
                    game: t
                })
            })
        }
        matchmakerSeek(t, e = null, i, r = !0) {
            return n(this, void 0, void 0, function*() {
                this.log(`Seeking matchmaker with region ${t}...`);
                let n = {
                    hostname: this.hostname,
                    region: t,
                    autoChangeGame: r
                };
                return e && (n.game = e), i && (n.dataQuery = JSON.stringify(i)), yield this.matchmakerRequest("/seek-game", n)
            })
        }
        fetchAllDebugInfo(t) {
            return n(this, void 0, void 0, function*() {
                return this.log("Fetching all debug info..."), yield this.matchmakerRequest("/internal/all-debug-info", {
                    key: t
                })
            })
        }
        fetchGameDebugInfo(t, e) {
            return n(this, void 0, void 0, function*() {
                return this.log(`Fetching game debug info for ${e}...`), yield this.matchmakerRequest("/internal/game-debug-info", {
                    key: t,
                    gameId: e
                })
            })
        }
        generateHref(t) {
            return `/?game=${t}`
        }
        matchmakerRequest(t, e = {}) {
            return n(this, void 0, void 0, function*() {
                return this.log(`Executing matchmaker request ${t} with params ${JSON.stringify(e)}...`), (yield s.default.get(`//${this.matchmakerAddress}${t}`, {
                    params: e,
                    responseType: "json"
                })).data
            })
        }
        log(...t) {
            return this.enableLogging ? (console.debug || console.info || console.log)(...t) : void 0
        }
    }
    o.PING_REGION_CACHE_KEY = "sid-utils:ping-region", e.default = o
}, function(t, e, i) {
    (function(e) {
        var n = i(78),
            r = i(79),
            s = /^[A-Za-z][A-Za-z0-9+-.]*:\/\//,
            o = /^([a-z][a-z0-9.+-]*:)?(\/\/)?([\S\s]*)/i,
            a = /^[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+/;

        function c(t) {
            return (t || "").toString().replace(a, "")
        }
        var l = [
                ["#", "hash"],
                ["?", "query"],
                function(t) {
                    return t.replace("\\", "/")
                },
                ["/", "pathname"],
                ["@", "auth", 1],
                [NaN, "host", void 0, 1, 1],
                [/:(\d+)$/, "port", void 0, 1],
                [NaN, "hostname", void 0, 1, 1]
            ],
            p = {
                hash: 1,
                query: 1
            };

        function h(t) {
            var i, n = ("undefined" == typeof window ? void 0 === e ? "undefined" == typeof self ? {} : self : e : window).location || {},
                r = {},
                o = typeof(t = t || n);
            if ("blob:" === t.protocol) r = new d(unescape(t.pathname), {});
            else if ("string" == o)
                for (i in r = new d(t, {}), p) delete r[i];
            else if ("object" == o) {
                for (i in t) i in p || (r[i] = t[i]);
                void 0 === r.slashes && (r.slashes = s.test(t.href))
            }
            return r
        }

        function u(t) {
            t = c(t);
            var e = o.exec(t);
            return {
                protocol: e[1] ? e[1].toLowerCase() : "",
                slashes: !!e[2],
                rest: e[3]
            }
        }

        function d(t, e, i) {
            if (t = c(t), !(this instanceof d)) return new d(t, e, i);
            var s, o, a, p, f, m, g = l.slice(),
                v = typeof e,
                y = this,
                x = 0;
            for ("object" != v && "string" != v && (i = e, e = null), i && "function" != typeof i && (i = r.parse), e = h(e), s = !(o = u(t || "")).protocol && !o.slashes, y.slashes = o.slashes || s && e.slashes, y.protocol = o.protocol || e.protocol || "", t = o.rest, o.slashes || (g[3] = [/(.*)/, "pathname"]); x < g.length; x++) "function" != typeof(p = g[x]) ? (a = p[0], m = p[1], a == a ? "string" == typeof a ? ~(f = t.indexOf(a)) && ("number" == typeof p[2] ? (y[m] = t.slice(0, f), t = t.slice(f + p[2])) : (y[m] = t.slice(f), t = t.slice(0, f))) : (f = a.exec(t)) && (y[m] = f[1], t = t.slice(0, f.index)) : y[m] = t, y[m] = y[m] || s && p[3] && e[m] || "", p[4] && (y[m] = y[m].toLowerCase())) : t = p(t);
            i && (y.query = i(y.query)), s && e.slashes && "/" !== y.pathname.charAt(0) && ("" !== y.pathname || "" !== e.pathname) && (y.pathname = function(t, e) {
                if ("" === t) return e;
                for (var i = (e || "/").split("/").slice(0, -1).concat(t.split("/")), n = i.length, r = i[n - 1], s = !1, o = 0; n--;) "." === i[n] ? i.splice(n, 1) : ".." === i[n] ? (i.splice(n, 1), o++) : o && (0 === n && (s = !0), i.splice(n, 1), o--);
                return s && i.unshift(""), ("." === r || ".." === r) && i.push(""), i.join("/")
            }(y.pathname, e.pathname)), n(y.port, y.protocol) || (y.host = y.hostname, y.port = ""), y.username = y.password = "", y.auth && (p = y.auth.split(":"), y.username = p[0] || "", y.password = p[1] || ""), y.origin = y.protocol && y.host && "file:" !== y.protocol ? y.protocol + "//" + y.host : "null", y.href = y.toString()
        }
        d.prototype = {
            set: function(t, e, i) {
                var s = this;
                switch (t) {
                    case "query":
                        "string" == typeof e && e.length && (e = (i || r.parse)(e)), s[t] = e;
                        break;
                    case "port":
                        s[t] = e, n(e, s.protocol) ? e && (s.host = s.hostname + ":" + e) : (s.host = s.hostname, s[t] = "");
                        break;
                    case "hostname":
                        s[t] = e, s.port && (e += ":" + s.port), s.host = e;
                        break;
                    case "host":
                        s[t] = e, /:\d+$/.test(e) ? (e = e.split(":"), s.port = e.pop(), s.hostname = e.join(":")) : (s.hostname = e, s.port = "");
                        break;
                    case "protocol":
                        s.protocol = e.toLowerCase(), s.slashes = !i;
                        break;
                    case "pathname":
                    case "hash":
                        if (e) {
                            var o = "pathname" === t ? "/" : "#";
                            s[t] = e.charAt(0) === o ? e : o + e
                        } else s[t] = e;
                        break;
                    default:
                        s[t] = e
                }
                for (var a, c = 0; c < l.length; c++)(a = l[c])[4] && (s[a[1]] = s[a[1]].toLowerCase());
                return s.origin = s.protocol && s.host && "file:" !== s.protocol ? s.protocol + "//" + s.host : "null", s.href = s.toString(), s
            },
            toString: function(t) {
                t && "function" == typeof t || (t = r.stringify);
                var e, i = this,
                    n = i.protocol;
                n && ":" !== n.charAt(n.length - 1) && (n += ":");
                var s = n + (i.slashes ? "//" : "");
                return i.username && (s += i.username, i.password && (s += ":" + i.password), s += "@"), s += i.host + i.pathname, (e = "object" == typeof i.query ? t(i.query) : i.query) && (s += "?" === e.charAt(0) ? e : "?" + e), i.hash && (s += i.hash), s
            }
        }, d.extractProtocol = u, d.location = h, d.trimLeft = c, d.qs = r, t.exports = d
    }).call(this, i(25))
}, function(t, e, i) {
    t.exports = function(t, e) {
        return e = e.split(":")[0], !!(t = +t) && ("http" === e || "ws" === e ? 80 !== t : "https" === e || "wss" === e ? 443 !== t : "ftp" === e ? 21 !== t : "gopher" === e ? 70 !== t : "file" !== e && 0 !== t)
    }
}, function(t, e, i) {
    var n, r = Object.prototype.hasOwnProperty;

    function s(t) {
        try {
            return decodeURIComponent(t.replace(/\+/g, " "))
        } catch (t) {
            return null
        }
    }
    e.stringify = function(t, e) {
        e = e || "";
        var i, s, o = [];
        for (s in "string" != typeof e && (e = "?"), t)
            if (r.call(t, s)) {
                if (!(i = t[s]) && (null === i || i === n || isNaN(i)) && (i = ""), s = encodeURIComponent(s), i = encodeURIComponent(i), null === s || null === i) continue;
                o.push(s + "=" + i)
            } return o.length ? e + o.join("&") : ""
    }, e.parse = function(t) {
        for (var e, i = /([^=?&]+)=?([^&]*)/g, n = {}; e = i.exec(t);) {
            var r = s(e[1]),
                o = s(e[2]);
            null === r || null === o || r in n || (n[r] = o)
        }
        return n
    }
}, function(t, e, i) {
    var n = i(23),
        r = i(70),
        s = i(82),
        o = i(60);

    function a(t) {
        var e = new s(t),
            i = r(s.prototype.request, e);
        return n.extend(i, s.prototype, e), n.extend(i, e), i
    }
    var c = a(o);
    c.Axios = s, c.create = function(t) {
        return a(n.merge(o, t))
    }, c.Cancel = i(74), c.CancelToken = i(96), c.isCancel = i(73), c.all = function(t) {
        return Promise.all(t)
    }, c.spread = i(97), t.exports = c, t.exports.default = c
}, function(t, e) {
    function i(t) {
        return !!t.constructor && "function" == typeof t.constructor.isBuffer && t.constructor.isBuffer(t)
    }
    t.exports = function(t) {
        return null != t && (i(t) || function(t) {
            return "function" == typeof t.readFloatLE && "function" == typeof t.slice && i(t.slice(0, 0))
        }(t) || !!t._isBuffer)
    }
}, function(t, e, i) {
    var n = i(60),
        r = i(23),
        s = i(91),
        o = i(92);

    function a(t) {
        this.defaults = t, this.interceptors = {
            request: new s,
            response: new s
        }
    }
    a.prototype.request = function(t) {
        "string" == typeof t && (t = r.merge({
            url: arguments[0]
        }, arguments[1])), (t = r.merge(n, {
            method: "get"
        }, this.defaults, t)).method = t.method.toLowerCase();
        var e = [o, void 0],
            i = Promise.resolve(t);
        for (this.interceptors.request.forEach(function(t) {
                e.unshift(t.fulfilled, t.rejected)
            }), this.interceptors.response.forEach(function(t) {
                e.push(t.fulfilled, t.rejected)
            }); e.length;) i = i.then(e.shift(), e.shift());
        return i
    }, r.forEach(["delete", "get", "head", "options"], function(t) {
        a.prototype[t] = function(e, i) {
            return this.request(r.merge(i || {}, {
                method: t,
                url: e
            }))
        }
    }), r.forEach(["post", "put", "patch"], function(t) {
        a.prototype[t] = function(e, i, n) {
            return this.request(r.merge(n || {}, {
                method: t,
                url: e,
                data: i
            }))
        }
    }), t.exports = a
}, function(t, e, i) {
    var n = i(23);
    t.exports = function(t, e) {
        n.forEach(t, function(i, n) {
            n !== e && n.toUpperCase() === e.toUpperCase() && (t[e] = i, delete t[n])
        })
    }
}, function(t, e, i) {
    var n = i(72);
    t.exports = function(t, e, i) {
        var r = i.config.validateStatus;
        i.status && r && !r(i.status) ? e(n("Request failed with status code " + i.status, i.config, null, i.request, i)) : t(i)
    }
}, function(t, e, i) {
    t.exports = function(t, e, i, n, r) {
        return t.config = e, i && (t.code = i), t.request = n, t.response = r, t
    }
}, function(t, e, i) {
    var n = i(23);

    function r(t) {
        return encodeURIComponent(t).replace(/%40/gi, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]")
    }
    t.exports = function(t, e, i) {
        if (!e) return t;
        var s;
        if (i) s = i(e);
        else if (n.isURLSearchParams(e)) s = e.toString();
        else {
            var o = [];
            n.forEach(e, function(t, e) {
                null == t || (n.isArray(t) ? e += "[]" : t = [t], n.forEach(t, function(t) {
                    n.isDate(t) ? t = t.toISOString() : n.isObject(t) && (t = JSON.stringify(t)), o.push(r(e) + "=" + r(t))
                }))
            }), s = o.join("&")
        }
        return s && (t += (-1 === t.indexOf("?") ? "?" : "&") + s), t
    }
}, function(t, e, i) {
    var n = i(23),
        r = ["age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent"];
    t.exports = function(t) {
        var e, i, s, o = {};
        return t ? (n.forEach(t.split("\n"), function(t) {
            if (s = t.indexOf(":"), e = n.trim(t.substr(0, s)).toLowerCase(), i = n.trim(t.substr(s + 1)), e) {
                if (o[e] && 0 <= r.indexOf(e)) return;
                o[e] = "set-cookie" === e ? (o[e] ? o[e] : []).concat([i]) : o[e] ? o[e] + ", " + i : i
            }
        }), o) : o
    }
}, function(t, e, i) {
    var n = i(23);
    t.exports = n.isStandardBrowserEnv() ? function() {
        function t(t) {
            var e = t;
            return i && (r.setAttribute("href", e), e = r.href), r.setAttribute("href", e), {
                href: r.href,
                protocol: r.protocol ? r.protocol.replace(/:$/, "") : "",
                host: r.host,
                search: r.search ? r.search.replace(/^\?/, "") : "",
                hash: r.hash ? r.hash.replace(/^#/, "") : "",
                hostname: r.hostname,
                port: r.port,
                pathname: "/" === r.pathname.charAt(0) ? r.pathname : "/" + r.pathname
            }
        }
        var e, i = /(msie|trident)/i.test(navigator.userAgent),
            r = document.createElement("a");
        return e = t(window.location.href),
            function(i) {
                var r = n.isString(i) ? t(i) : i;
                return r.protocol === e.protocol && r.host === e.host
            }
    }() : function() {
        return !0
    }
}, function(t, e, i) {
    var n = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";

    function r() {
        this.message = "String contains an invalid character"
    }
    r.prototype = new Error, r.prototype.code = 5, r.prototype.name = "InvalidCharacterError", t.exports = function(t) {
        for (var e, i, s = t + "", o = "", a = 0, c = n; s.charAt(0 | a) || (c = "=", a % 1); o += c.charAt(63 & e >> 8 - a % 1 * 8)) {
            if (255 < (i = s.charCodeAt(a += .75))) throw new r;
            e = e << 8 | i
        }
        return o
    }
}, function(t, e, i) {
    var n = i(23);
    t.exports = n.isStandardBrowserEnv() ? {
        write: function(t, e, i, r, s, o) {
            var a = [];
            a.push(t + "=" + encodeURIComponent(e)), n.isNumber(i) && a.push("expires=" + new Date(i).toGMTString()), n.isString(r) && a.push("path=" + r), n.isString(s) && a.push("domain=" + s), !0 === o && a.push("secure"), document.cookie = a.join("; ")
        },
        read: function(t) {
            var e = document.cookie.match(new RegExp("(^|;\\s*)(" + t + ")=([^;]*)"));
            return e ? decodeURIComponent(e[3]) : null
        },
        remove: function(t) {
            this.write(t, "", Date.now() - 864e5)
        }
    } : {
        write: function() {},
        read: function() {
            return null
        },
        remove: function() {}
    }
}, function(t, e, i) {
    var n = i(23);

    function r() {
        this.handlers = []
    }
    r.prototype.use = function(t, e) {
        return this.handlers.push({
            fulfilled: t,
            rejected: e
        }), this.handlers.length - 1
    }, r.prototype.eject = function(t) {
        this.handlers[t] && (this.handlers[t] = null)
    }, r.prototype.forEach = function(t) {
        n.forEach(this.handlers, function(e) {
            null !== e && t(e)
        })
    }, t.exports = r
}, function(t, e, i) {
    var n = i(23),
        r = i(93),
        s = i(73),
        o = i(60),
        a = i(94),
        c = i(95);

    function l(t) {
        t.cancelToken && t.cancelToken.throwIfRequested()
    }
    t.exports = function(t) {
        return l(t), t.baseURL && !a(t.url) && (t.url = c(t.baseURL, t.url)), t.headers = t.headers || {}, t.data = r(t.data, t.headers, t.transformRequest), t.headers = n.merge(t.headers.common || {}, t.headers[t.method] || {}, t.headers || {}), n.forEach(["delete", "get", "head", "post", "put", "patch", "common"], function(e) {
            delete t.headers[e]
        }), (t.adapter || o.adapter)(t).then(function(e) {
            return l(t), e.data = r(e.data, e.headers, t.transformResponse), e
        }, function(e) {
            return s(e) || (l(t), e && e.response && (e.response.data = r(e.response.data, e.response.headers, t.transformResponse))), Promise.reject(e)
        })
    }
}, function(t, e, i) {
    var n = i(23);
    t.exports = function(t, e, i) {
        return n.forEach(i, function(i) {
            t = i(t, e)
        }), t
    }
}, function(t, e, i) {
    t.exports = function(t) {
        return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(t)
    }
}, function(t, e, i) {
    t.exports = function(t, e) {
        return e ? t.replace(/\/+$/, "") + "/" + e.replace(/^\/+/, "") : t
    }
}, function(t, e, i) {
    var n = i(74);

    function r(t) {
        if ("function" != typeof t) throw new TypeError("executor must be a function.");
        var e;
        this.promise = new Promise(function(t) {
            e = t
        });
        var i = this;
        t(function(t) {
            i.reason || (i.reason = new n(t), e(i.reason))
        })
    }
    r.prototype.throwIfRequested = function() {
        if (this.reason) throw this.reason
    }, r.source = function() {
        var t;
        return {
            token: new r(function(e) {
                t = e
            }),
            cancel: t
        }
    }, t.exports = r
}, function(t, e, i) {
    t.exports = function(t) {
        return function(e) {
            return t.apply(null, e)
        }
    }
}, function(t, e, i) {
    var n = t.exports;
    n.active = !0;
    var r = !0;
    n.toggleMenu = function(t) {
        menuHolder.style.display = t ? "block" : "none", speakerDisplay.style.display = t ? "none" : "block", chatHolder.style.bottom = (t ? 20 : 88) + "px", voiceDisplay.style.bottom = (t ? 18 : 84) + "px", n.toggleMenuHider(t), t && (endUI.style.display = "none", instructionHolder.style.display = "block", "block" != windowHolder.style.display && (baseLinks.style.display = "block")), n.active = !0
    }, n.hideUI = function() {
        n.toggleMenu(!1), inGameUI.style.display = "none", spectateUI.style.display = "none", aimRecticle.style.display = "none", instructionHolder.style.display = "none", baseLinks.style.display = "none", chatHolder.style.bottom = "20px", voiceDisplay.style.bottom = "18px", speakerDisplay.style.right = "20px", purchaseHolder.style.display = "none", consentBlock.style.display = "none", n.active = !1
    }, n.hideDiscon = function() {
        chatHolder.style.display = "none", voiceDisplay.style.display = "none", speakerDisplay.style.display = "none", purchaseHolder.style.display = "none"
    }, n.showEndScreen = function() {
        endTable.style.display = "none", endUI.style.display = null, n.hideUI()
    }, n.toggleWindow = function(t) {
        windowHolder.style.display = t ? "block" : "none", baseLinks.style.display = t ? "none" : "block", instructions.innerHTML = t ? "" : "CLICK TO PLAY"
    }, n.toggleMenuHider = function(t) {
        menuHider.style.display = t ? "block" : "none", uiBase.classList.toggle("onMenu", t), gameNameHolder.style.display = t ? null : "none", spectButton.style.display = r && t ? null : "none", t && (spinUI.style.display = "none")
    }, n.setShowSpect = function(t) {
        r = t, spectButton.style.display = t ? null : "none"
    }, n.showError = function(t) {
        n.toggleMenu(!0), instructions.innerHTML = t
    }, n.toggleGameUI = function(t) {
        var e = t && !window.spectating;
        spectateUI.style.display = window.spectating && t ? "block" : "none", topRight.style.display = t ? "block" : "none", crosshair.style.display = e ? "block" : "none", reloadMsg.style.display = e ? "block" : "none", healthHolder.style.display = e ? "block" : "none", weaponDisplay.style.display = e ? "block" : "none", bottomRight.style.display = e ? "block" : "none", killCardHolder.style.display = t ? "none" : "block", speakerDisplay.style.right = (t ? 380 : 20) + "px", chatHolder.style.bottom = (e ? 88 : 20) + "px", voiceDisplay.style.bottom = (e ? 84 : 18) + "px"
    }, n.toggleControlUI = function(t) {
        window.loading && (t = !1), spectateUI.style.display = window.spectating && t && !n.hideGameUI ? "block" : "none", inGameUI.style.display = t && n.active && !n.hideGameUI ? "block" : "none", aimRecticle.style.display = t && n.active ? "block" : "none", instructionHolder.style.display = !t && n.active ? "block" : "none", aHolder.style.display = t ? "none" : "block", toggleAd(!t), infoHolder.style.display = t ? "none" : null, chatHolder.style.bottom = (t && !window.spectating ? 88 : 20) + "px", voiceDisplay.style.bottom = (t && !window.spectating ? 84 : 18) + "px", speakerDisplay.style.display = t && n.active ? "block" : "none", endUI.style.display && (menuHolder.style.display = t ? "none" : "block", n.toggleMenuHider(!t))
    };
    var s = 0,
        o = 0;
    n.KEseUy = function(t, e) {
        (s != Math.round(t) || o != e.round(1)) && (o = e.round(1), s = Math.round(t), crosshair.style.width = s + "px", crosshair.style.height = s + "px", crosshair.style.opacity = o)
    }
}, function(t, e) {
    t.exports = function() {
        var t;
        this.divs = [], this.update = function(e) {
            for (var i = this.divs.length - 1; 0 <= i; --i)
                if (0 < (t = this.divs[i]).delay) t.delay -= e, 0 >= t.delay && (t.style.display = "inline-block");
                else {
                    if (t.scale > t.minScale && (t.scale -= t.scaleSpeed * e, t.scale <= t.minScale && (t.scale = t.minScale), t.style.fontSize = t.scale + "px"), t.scaleSpd && (t.startS += t.scaleSpd * e, t.style.width = t.startS + "px", t.style.height = t.startS + "px"), t.life -= e, 0 >= t.life) {
                        t.style.display = "none";
                        var n = t.callback;
                        this.divs.splice(i, 1), n && n()
                    }
                    if (t.fade && t.life <= t.fade && (t.style.opacity = t.life / t.fade), t.srcA && t.srcA.cnt && t.maxLife - t.life <= t.srcA.tim) {
                        var r = Math.floor(t.srcA.cnt * ((t.maxLife - t.life) / t.srcA.tim));
                        t.src = "./textures/" + t.srcA.src + "_" + r + ".png"
                    }
                }
        }, this.animateText = function(t, e, i, n, r, s, o, a) {
            0 > this.divs.indexOf(t) && this.divs.push(t), t.delay = o, o || (t.style.display = "inline-block"), t.style.fontSize = i + "px", t.scale = i, t.minScale = n ? .4 * i : i, t.innerHTML = e, t.scaleSpeed = n, t.life = r, t.fade = s, t.style.opacity = 1, t.callback = a
        }, this.animateDiv = function(t, e, i, n, r, s) {
            0 > this.divs.indexOf(t) && this.divs.push(t), t.style.display = "block", t.life = e, t.maxLife = e, t.srcA = s, s && (t.src = "./textures/" + s.src + "_0.png"), t.style.opacity = 1, t.fade = i, n && (t.style.width = n + "px", t.style.height = n + "px", t.startS = n, t.scaleSpd = r)
        }, this.reset = function() {
            for (var t = 0; t < this.divs.length; ++t) this.divs[t].style.display = "none";
            this.divs.length = 0
        }
    }
}, function(t, e, i) {
    const n = i(69),
        r = i(2).apiURL,
        s = {
            listMaps(t, e, i) {
                n.get(r + "/maps", {
                    params: {
                        yourMaps: t,
                        accountId: e
                    }
                }).then(t => {
                    i(null, t.data)
                }).catch(t => {
                    i(t, t.response && t.response.data)
                })
            },
            listMods(t, e) {
                n.get(r + "/mods", {
                    params: {
                        accountId: t
                    }
                }).then(t => {
                    e(null, t.data)
                }).catch(t => {
                    e(t, t.response && t.response.data)
                })
            },
            searchMap(t, e) {
                n.get(r + "/search", {
                    params: {
                        type: "map",
                        val: t
                    }
                }).then(t => {
                    e(null, t.data)
                }).catch(t => {
                    e(t, t.response && t.response.data)
                })
            },
            searchMod(t, e) {
                n.get(r + "/search", {
                    params: {
                        type: "mod",
                        val: t
                    }
                }).then(t => {
                    e(null, t.data)
                }).catch(t => {
                    e(t, t.response && t.response.data)
                })
            }
        };
    t.exports = s
}, function(t, e, i) {
    i(1);
    t.exports = function(t, e, i, n, r, s, o) {
        function a(t, e) {
            if (window.idleTimer = 0, c.keys) {
                if (e && c.keys[t] !== e && null != c.inputChanger) c.moveKeys[c.inputChanger] ? c.moveKeys[c.inputChanger] = t : c[c.inputChanger] = t, saveVal("cont_" + c.inputChanger, t), "recordKey" == c.inputChanger ? showWindow(12, !0) : showWindow(7, !0), c.inputChanger = null;
                else if (!c.enabled) return;
                c.keys[t] !== e && (c.keys[t] = e, t == c.voiceKey ? toggleRecord(e) : 0 <= c.moveKeys.indexOf(t) && c.updateMoveDir(), e && (t == c.swapKeyU ? c.scrollDelta = 1 : t == c.swapKeyD ? c.scrollDelta = -1 : window.pressButton(t)))
            }
        }
        var c = this,
            l = t.renderer.domElement;
        if (this.hasPointerlock = "pointerLockElement" in document || "mozPointerLockElement" in document || "webkitPointerLockElement" in document, this.hasPointerlock) {
            l.requestPointerLock = l.requestPointerLock || l.mozRequestPointerLock || l.webkitRequestPointerLock;
            var p = function() {
                c.enabled = document.pointerLockElement === l || document.mozPointerLockElement === l || document.webkitPointerLockElement === l, (o.connected || r.singlePlayer) && (c.enabled && enterGame(), i.toggleControlUI(c.enabled))
            };
            document.addEventListener("pointerlockchange", p, !1), document.addEventListener("mozpointerlockchange", p, !1), document.addEventListener("webkitpointerlockchange", p, !1)
        }
        this.isn = 0, this.tmpInputs = [], this.getISN = function() {
            return this.isn++
        }, this.masterLock = !0, this.sensMlt = 1, this.sensAimMlt = 1, this.locked = !1, this.enabled = !1, t.camera.rotation.set(0, 0, 0), this.pitchObject = new e.Object3D, this.pitchObject.add(t.camera), this.object = new e.Object3D, this.object.add(this.pitchObject);
        var h = Math.PI / 2;
        l.addEventListener("mousemove", function(e) {
            if (c.enabled && !window.locked) {
                e.preventDefault(), window.idleTimer = 0;
                var i = e.movementX || e.mozMovementX || e.webkitMovementX || 0,
                    n = e.movementY || e.mozMovementY || e.webkitMovementY || 0,
                    r = c.mouseDownR ? c.sensAimMlt : c.sensMlt,
                    o = s.mouseSens * r * (c.target ? s.camChaseSen : 1) * (t.camera.fov / t.fov);
                c.pitchObject.rotation.x -= n * o * (c.invertY ? -1 : 1), c.unlockView || (c.pitchObject.rotation.x = Math.max(-h, Math.min(h, c.pitchObject.rotation.x)));
                var a = Math.abs(c.pitchObject.rotation.x % (2 * Math.PI));
                dirFlip = a > Math.PI / 2 && a < Math.PI + Math.PI / 2 ? -1 : 1, c.object.rotation.y -= i * o * dirFlip, c.yDr = (c.pitchObject.rotation.x % Math.PI2).round(3), c.xDr = (c.object.rotation.y % Math.PI2).round(3)
            }
        }, !1), l.addEventListener("mousedown", function(t) {
            if (!c.masterLock) switch (c.enabled || c.toggle(!0), document.activeElement == chatInput && chatInput.blur(), t.which) {
                case 3:
                    c.mouseDownR = 1;
                    break;
                default:
                    c.mouseDownL = 1
            }
        }, !1), l.addEventListener("mouseup", function(t) {
            if (!c.locked) switch (t.which) {
                case 3:
                    c.mouseDownR = 0;
                    break;
                default:
                    c.mouseDownL = 0
            }
        }, !1);
        var u = function(t) {
            t = window.event || t;
            return c.skipScroll ? c.skipScroll = !1 : c.scrollDelta = -Math.max(-1, Math.min(1, t.wheelDelta || -t.detail)), !1
        };
        l.addEventListener ? (l.addEventListener("mousewheel", u, !1), l.addEventListener("DOMMouseScroll", u, !1)) : myitem.attachEvent("onmousewheel", u), this.xVel = 0, this.yVel = 0, this.zVel = 0;
        var d = new e.Vector3(0, 0, 0);
        this.freeCam = function(e) {
            d.set(0, 0, 0), this.keys[this.moveKeys[0]] && (d.z -= 1), this.keys[this.moveKeys[1]] && (d.z += 1), this.keys[this.moveKeys[2]] && (d.x -= 1), this.keys[this.moveKeys[3]] && (d.x += 1), d.applyQuaternion(t.camera.getWorldQuaternion());
            var i = (this.keys[this.crouchKey] ? .08 : .04) * e;
            c.object.position.add(d.multiplyScalar(i)), t.updateFrustum()
        }, this.update = function(e) {
            if (this.target) {
                var i = n.getAngleDist(this.object.rotation.y, this.target.yD);
                this.object.rotation.y += i * e * s.camChaseTrn, i = n.getAngleDist(c.pitchObject.rotation.x, this.target.xD), this.pitchObject.rotation.x += i * e * s.camChaseTrn, i = n.getDistance3D(this.object.position.x, this.object.position.y, this.object.position.z, this.target.x, this.target.y, this.target.z) * e * s.camChaseSpd;
                var r = n.getDirection(this.object.position.z, this.object.position.x, this.target.z, this.target.x),
                    o = n.getXDir(this.object.position.x, this.object.position.y, this.object.position.z, this.target.x, this.target.y, this.target.z);
                this.object.position.x -= i * Math.sin(r) * Math.cos(o), this.object.position.y += i * Math.sin(o), this.object.position.z -= i * Math.cos(r) * Math.cos(o), t.updateFrustum()
            }
        }, this.gXsmS = function(t, e, i) {
            var r = n.getXDir(this.object.position.x, this.object.position.y, this.object.position.z, t, e, i),
                o = n.getDirection(this.object.position.z, this.object.position.x, i, t);
            this.target = {
                xD: r,
                yD: o,
                x: t + s.camChaseDst * Math.sin(o) * Math.cos(r),
                y: e - s.camChaseDst * Math.sin(r),
                z: i + s.camChaseDst * Math.cos(o) * Math.cos(r)
            }
        }, this.yHFGjsjAhr = function(e, i, n) {
            c.object.position.set(e, i, n), t.camera.updateProjectionMatrix(), t.updateFrustum()
        }, this.iSNkSy = function(e, i, n) {
            t.camera.rotation.y = e, t.camera.rotation.x = i, t.camera.rotation.z = n
        }, this.jumpKey = parseInt(getSavedVal("cont_jumpKey") || 32), this.crouchKey = parseInt(getSavedVal("cont_crouchKey") || 16), this.swapKeyD = parseInt(getSavedVal("cont_swapKeyD") || 81), this.swapKeyU = parseInt(getSavedVal("cont_swapKeyU") || 69), this.reloadKey = parseInt(getSavedVal("cont_reloadKey") || 82), this.sprayKey = parseInt(getSavedVal("cont_sprayKey") || 70), this.inspKey = parseInt(getSavedVal("cont_inspKey") || 88), this.aimKey = parseInt(getSavedVal("cont_aimKey") || 67), this.chatKey = parseInt(getSavedVal("cont_chatKey") || 13), this.voiceKey = parseInt(getSavedVal("cont_voiceKey") || 86), this.recordKey = parseInt(getSavedVal("cont_recordKey") || 84), this.listKey = parseInt(getSavedVal("cont_listKey") || 9), this.moveKeys = [parseInt(getSavedVal("cont_0") || 87), parseInt(getSavedVal("cont_1") || 83), parseInt(getSavedVal("cont_2") || 65), parseInt(getSavedVal("cont_3") || 68)], this.moveDirs = [
            [0, -1],
            [0, 1],
            [-1, 0],
            [1, 0]
        ], this.updateMoveDir = function() {
            for (var t = 0, e = 0, i = 0; i < c.moveKeys.length; ++i) c.keys[c.moveKeys[i]] && (t += c.moveDirs[i][0], e += c.moveDirs[i][1]);
            this.moveDir = 0 == t && 0 == e ? null : Math.atan2(e, t)
        }, window.addEventListener("keydown", function(t) {
            (t.which || t.keyCode) == c.chatKey ? window.pressButton(t.which || t.keyCode) : (t.which || t.keyCode) == c.listKey && "INPUT" != document.activeElement.tagName ? (t.preventDefault(), c.hasPointerlock && c.toggle(!1), showWindow(23)) : document.activeElement != chatInput && (c.enabled && t.preventDefault(), a(t.which || t.keyCode || 0, 1))
        }, !1), window.addEventListener("keyup", function(t) {
            c.enabled && t.preventDefault(), a(t.which || t.keyCode || 0, 0)
        }, !1), this.toggle = function(t) {
            this.locked || this.masterLock || ("block" == windowHolder.style.display ? t && i.toggleWindow(!1) : t ? l.requestPointerLock() : document.exitPointerLock())
        }, this.disable = function() {
            c.toggle(!1), c.locked = !0
        }, this.reset = function() {
            this.mouseDownL = 0, this.mouseDownR = 0, this.keys = {}, this.tmpInputs.length = 0, this.scrollDelta = 0, this.xDr = 0, this.yDr = 0, this.isn = 0, this.moveDir = null, this.skipScroll = !1, this.inputChanger = null, this.target = null, this.locked = !1, c.pitchObject.rotation.x = 0, c.object.rotation.y = 0, t.camera.rotation.set(0, 0, 0)
        }
    }
}, function(t, e) {
    t.exports = function(t, e, i, n) {
        i = i || {}, this.id = t, this.name = e, this.score = i.player_score || 0, this.kills = i.player_kills || 0, this.deaths = i.player_deaths || 0, this.wins = i.player_wins || 0, this.hack = i.player_hack || 0, this.games = i.player_games_played || 0, this.clan = i.player_clanid, this.funds = i.player_funds || 0, this.featured = i.player_featured || 0, this.clan = i.player_clan || null, this.timePlayed = i.player_timeplayed || 0, this.skins = i.skins || [], this.lastReward = i.player_lastreward || 0, this.developer = i.player_developer || 0, this.following = i.player_follow || 0, this.setData = function(t) {
            this.kills = t[1], this.wins = t[2], this.games = t[3], this.deaths = t[4], this.funds = t[5], this.score = t[6], this.updateLevel(), this.clan = t[7], this.timePlayed = t[8], this.featured = t[9], this.skins = t[10], this.lastReward = t[11], this.developer = t[12], this.following = t[13]
        }, this.updateLevel = function() {
            var t = n.rankVar * Math.sqrt(this.score);
            this.level = Math.floor(t), this.levelProg = Math.round(100 * (t - this.level)), this.level = Math.max(1, this.level)
        }, this.updateLevel(), this.getData = function() {
            return [this.id, this.kills, this.wins, this.games, this.deaths, this.funds, this.score, this.clan, this.timePlayed, this.featured, this.skins, this.lastReward, this.developer, this.following]
        }
    }
}, function(t, e, i) {
    const n = i(104).words,
        r = i(105).array;
    t.exports = class {
        constructor(t = {}) {
            Object.assign(this, {
                list: t.emptyList && [] || Array.prototype.concat.apply(n, [r, t.list || []]),
                exclude: t.exclude || [],
                placeHolder: t.placeHolder || "*",
                regex: t.regex || /[^a-zA-Z0-9|\$|\@]|\^/g,
                replaceRegex: t.replaceRegex || /\w/g
            })
        }
        isProfane(t) {
            return 0 < this.list.filter(e => {
                const i = new RegExp(`\\b${e.replace(/(\W)/g,"\\$1")}\\b`, "gi");
                return !this.exclude.includes(e.toLowerCase()) && i.test(t)
            }).length || !1
        }
        replaceWord(t) {
            return t.replace(this.regex, "").replace(this.replaceRegex, this.placeHolder)
        }
        clean(t) {
            return t.split(/\b/).map(t => this.isProfane(t) ? this.replaceWord(t) : t).join("")
        }
        addWords() {
            let t = Array.from(arguments);
            this.list.push(...t), t.map(t => t.toLowerCase()).forEach(t => {
                this.exclude.includes(t) && this.exclude.splice(this.exclude.indexOf(t), 1)
            })
        }
        removeWords() {
            this.exclude.push(...Array.from(arguments).map(t => t.toLowerCase()))
        }
    }
}, function(t) {
    t.exports = {
        words: ["ahole", "anus", "ash0le", "ash0les", "asholes", "ass", "Ass Monkey", "Assface", "assh0le", "assh0lez", "asshole", "assholes", "assholz", "asswipe", "azzhole", "bassterds", "bastard", "bastards", "bastardz", "basterds", "basterdz", "Biatch", "bitch", "bitches", "Blow Job", "boffing", "butthole", "buttwipe", "c0ck", "c0cks", "c0k", "Carpet Muncher", "cawk", "cawks", "Clit", "cnts", "cntz", "cock", "cockhead", "cock-head", "cocks", "CockSucker", "cock-sucker", "crap", "cum", "cunt", "cunts", "cuntz", "dick", "dild0", "dild0s", "dildo", "dildos", "dilld0", "dilld0s", "dominatricks", "dominatrics", "dominatrix", "dyke", "enema", "f u c k", "f u c k e r", "fag", "fag1t", "faget", "fagg1t", "faggit", "faggot", "fagg0t", "fagit", "fags", "fagz", "faig", "faigs", "fart", "flipping the bird", "fuck", "fucker", "fuckin", "fucking", "fucks", "Fudge Packer", "fuk", "Fukah", "Fuken", "fuker", "Fukin", "Fukk", "Fukkah", "Fukken", "Fukker", "Fukkin", "g00k", "God-damned", "h00r", "h0ar", "h0re", "hells", "hoar", "hoor", "hoore", "jackoff", "jap", "japs", "jerk-off", "jisim", "jiss", "jizm", "jizz", "knob", "knobs", "knobz", "kunt", "kunts", "kuntz", "Lezzian", "Lipshits", "Lipshitz", "masochist", "masokist", "massterbait", "masstrbait", "masstrbate", "masterbaiter", "masterbate", "masterbates", "Motha Fucker", "Motha Fuker", "Motha Fukkah", "Motha Fukker", "Mother Fucker", "Mother Fukah", "Mother Fuker", "Mother Fukkah", "Mother Fukker", "mother-fucker", "Mutha Fucker", "Mutha Fukah", "Mutha Fuker", "Mutha Fukkah", "Mutha Fukker", "n1gr", "nastt", "nigger;", "nigur;", "niiger;", "niigr;", "orafis", "orgasim;", "orgasm", "orgasum", "oriface", "orifice", "orifiss", "packi", "packie", "packy", "paki", "pakie", "paky", "pecker", "peeenus", "peeenusss", "peenus", "peinus", "pen1s", "penas", "penis", "penis-breath", "penus", "penuus", "Phuc", "Phuck", "Phuk", "Phuker", "Phukker", "polac", "polack", "polak", "Poonani", "pr1c", "pr1ck", "pr1k", "pusse", "pussee", "pussy", "puuke", "puuker", "queer", "queers", "queerz", "qweers", "qweerz", "qweir", "recktum", "rectum", "retard", "sadist", "scank", "schlong", "screwing", "semen", "sex", "sexy", "Sh!t", "sh1t", "sh1ter", "sh1ts", "sh1tter", "sh1tz", "shit", "shits", "shitter", "Shitty", "Shity", "shitz", "Shyt", "Shyte", "Shytty", "Shyty", "skanck", "skank", "skankee", "skankey", "skanks", "Skanky", "slag", "slut", "sluts", "Slutty", "slutz", "son-of-a-bitch", "tit", "turd", "va1jina", "vag1na", "vagiina", "vagina", "vaj1na", "vajina", "vullva", "vulva", "w0p", "wh00r", "wh0re", "whore", "xrated", "xxx", "b!+ch", "bitch", "blowjob", "clit", "arschloch", "fuck", "shit", "ass", "asshole", "b!tch", "b17ch", "b1tch", "bastard", "bi+ch", "boiolas", "buceta", "c0ck", "cawk", "chink", "cipa", "clits", "cock", "cum", "cunt", "dildo", "dirsa", "ejakulate", "fatass", "fcuk", "fuk", "fux0r", "hoer", "hore", "jism", "kawk", "l3itch", "l3i+ch", "lesbian", "masturbate", "masterbat*", "masterbat3", "motherfucker", "s.o.b.", "mofo", "nazi", "nigga", "nigger", "nutsack", "phuck", "pimpis", "pusse", "pussy", "scrotum", "sh!t", "shemale", "shi+", "sh!+", "slut", "smut", "teets", "tits", "boobs", "b00bs", "teez", "testical", "testicle", "titt", "w00se", "jackoff", "wank", "whoar", "whore", "*damn", "*dyke", "*fuck*", "*shit*", "@$$", "amcik", "andskota", "arse*", "assrammer", "ayir", "bi7ch", "bitch*", "bollock*", "breasts", "butt-pirate", "cabron", "cazzo", "chraa", "chuj", "Cock*", "cunt*", "d4mn", "daygo", "dego", "dick*", "dike*", "dupa", "dziwka", "ejackulate", "Ekrem*", "Ekto", "enculer", "faen", "fag*", "fanculo", "fanny", "feces", "feg", "Felcher", "ficken", "fitt*", "Flikker", "foreskin", "Fotze", "Fu(*", "fuk*", "futkretzn", "gook", "guiena", "h0r", "h4x0r", "hell", "helvete", "hoer*", "honkey", "Huevon", "hui", "injun", "jizz", "kanker*", "kike", "klootzak", "kraut", "knulle", "kuk", "kuksuger", "Kurac", "kurwa", "kusi*", "kyrpa*", "lesbo", "mamhoon", "masturbat*", "merd*", "mibun", "monkleigh", "mouliewop", "muie", "mulkku", "muschi", "nazis", "nepesaurio", "nigger*", "orospu", "paska*", "perse", "picka", "pierdol*", "pillu*", "pimmel", "piss*", "pizda", "poontsee", "poop", "porn", "p0rn", "pr0n", "preteen", "pula", "pule", "puta", "puto", "qahbeh", "queef*", "rautenberg", "schaffer", "scheiss*", "schlampe", "schmuck", "screw", "sh!t*", "sharmuta", "sharmute", "shipal", "shiz", "skribz", "skurwysyn", "sphencter", "spic", "spierdalaj", "splooge", "suka", "b00b*", "testicle*", "titt*", "twat", "vittu", "wank*", "wetback*", "wichser", "wop*", "yed", "zabourah"]
    }
}, function(t, e, i) {
    t.exports = {
        object: i(106),
        array: i(107),
        regex: i(108)
    }
}, function(t, e) {
    t.exports = {
        "4r5e": 1,
        "5h1t": 1,
        "5hit": 1,
        a55: 1,
        anal: 1,
        anus: 1,
        ar5e: 1,
        arrse: 1,
        arse: 1,
        ass: 1,
        "ass-fucker": 1,
        asses: 1,
        assfucker: 1,
        assfukka: 1,
        asshole: 1,
        assholes: 1,
        asswhole: 1,
        a_s_s: 1,
        "b!tch": 1,
        b00bs: 1,
        b17ch: 1,
        b1tch: 1,
        ballbag: 1,
        balls: 1,
        ballsack: 1,
        bastard: 1,
        beastial: 1,
        beastiality: 1,
        bellend: 1,
        bestial: 1,
        bestiality: 1,
        "bi+ch": 1,
        biatch: 1,
        bitch: 1,
        bitcher: 1,
        bitchers: 1,
        bitches: 1,
        bitchin: 1,
        bitching: 1,
        bloody: 1,
        "blow job": 1,
        blowjob: 1,
        blowjobs: 1,
        boiolas: 1,
        bollock: 1,
        bollok: 1,
        boner: 1,
        boob: 1,
        boobs: 1,
        booobs: 1,
        boooobs: 1,
        booooobs: 1,
        booooooobs: 1,
        breasts: 1,
        buceta: 1,
        bugger: 1,
        bum: 1,
        "bunny fucker": 1,
        butt: 1,
        butthole: 1,
        buttmuch: 1,
        buttplug: 1,
        c0ck: 1,
        c0cksucker: 1,
        "carpet muncher": 1,
        cawk: 1,
        chink: 1,
        cipa: 1,
        cl1t: 1,
        clit: 1,
        clitoris: 1,
        clits: 1,
        cnut: 1,
        cock: 1,
        "cock-sucker": 1,
        cockface: 1,
        cockhead: 1,
        cockmunch: 1,
        cockmuncher: 1,
        cocks: 1,
        cocksuck: 1,
        cocksucked: 1,
        cocksucker: 1,
        cocksucking: 1,
        cocksucks: 1,
        cocksuka: 1,
        cocksukka: 1,
        cok: 1,
        cokmuncher: 1,
        coksucka: 1,
        coon: 1,
        cox: 1,
        crap: 1,
        cum: 1,
        cummer: 1,
        cumming: 1,
        cums: 1,
        cumshot: 1,
        cunilingus: 1,
        cunillingus: 1,
        cunnilingus: 1,
        cunt: 1,
        cuntlick: 1,
        cuntlicker: 1,
        cuntlicking: 1,
        cunts: 1,
        cyalis: 1,
        cyberfuc: 1,
        cyberfuck: 1,
        cyberfucked: 1,
        cyberfucker: 1,
        cyberfuckers: 1,
        cyberfucking: 1,
        d1ck: 1,
        damn: 1,
        dick: 1,
        dickhead: 1,
        dildo: 1,
        dildos: 1,
        dink: 1,
        dinks: 1,
        dirsa: 1,
        dlck: 1,
        "dog-fucker": 1,
        doggin: 1,
        dogging: 1,
        donkeyribber: 1,
        doosh: 1,
        duche: 1,
        dyke: 1,
        ejaculate: 1,
        ejaculated: 1,
        ejaculates: 1,
        ejaculating: 1,
        ejaculatings: 1,
        ejaculation: 1,
        ejakulate: 1,
        "f u c k": 1,
        "f u c k e r": 1,
        f4nny: 1,
        fag: 1,
        fagging: 1,
        faggitt: 1,
        faggot: 1,
        faggs: 1,
        fagot: 1,
        fagots: 1,
        fags: 1,
        fanny: 1,
        fannyflaps: 1,
        fannyfucker: 1,
        fanyy: 1,
        fatass: 1,
        fcuk: 1,
        fcuker: 1,
        fcuking: 1,
        feck: 1,
        fecker: 1,
        felching: 1,
        fellate: 1,
        fellatio: 1,
        fingerfuck: 1,
        fingerfucked: 1,
        fingerfucker: 1,
        fingerfuckers: 1,
        fingerfucking: 1,
        fingerfucks: 1,
        fistfuck: 1,
        fistfucked: 1,
        fistfucker: 1,
        fistfuckers: 1,
        fistfucking: 1,
        fistfuckings: 1,
        fistfucks: 1,
        flange: 1,
        fook: 1,
        fooker: 1,
        fuck: 1,
        fucka: 1,
        fucked: 1,
        fucker: 1,
        fuckers: 1,
        fuckhead: 1,
        fuckheads: 1,
        fuckin: 1,
        fucking: 1,
        fuckings: 1,
        fuckingshitmotherfucker: 1,
        fuckme: 1,
        fucks: 1,
        fuckwhit: 1,
        fuckwit: 1,
        "fudge packer": 1,
        fudgepacker: 1,
        fuk: 1,
        fuker: 1,
        fukker: 1,
        fukkin: 1,
        fuks: 1,
        fukwhit: 1,
        fukwit: 1,
        fux: 1,
        fux0r: 1,
        f_u_c_k: 1,
        gangbang: 1,
        gangbanged: 1,
        gangbangs: 1,
        gaylord: 1,
        gaysex: 1,
        goatse: 1,
        God: 1,
        "god-dam": 1,
        "god-damned": 1,
        goddamn: 1,
        goddamned: 1,
        hardcoresex: 1,
        hell: 1,
        heshe: 1,
        hoar: 1,
        hoare: 1,
        hoer: 1,
        homo: 1,
        hore: 1,
        horniest: 1,
        horny: 1,
        hotsex: 1,
        "jack-off": 1,
        jackoff: 1,
        jap: 1,
        "jerk-off": 1,
        jism: 1,
        jiz: 1,
        jizm: 1,
        jizz: 1,
        kawk: 1,
        knob: 1,
        knobead: 1,
        knobed: 1,
        knobend: 1,
        knobhead: 1,
        knobjocky: 1,
        knobjokey: 1,
        kock: 1,
        kondum: 1,
        kondums: 1,
        kum: 1,
        kummer: 1,
        kumming: 1,
        kums: 1,
        kunilingus: 1,
        "l3i+ch": 1,
        l3itch: 1,
        labia: 1,
        lust: 1,
        lusting: 1,
        m0f0: 1,
        m0fo: 1,
        m45terbate: 1,
        ma5terb8: 1,
        ma5terbate: 1,
        masochist: 1,
        "master-bate": 1,
        masterb8: 1,
        "masterbat*": 1,
        masterbat3: 1,
        masterbate: 1,
        masterbation: 1,
        masterbations: 1,
        masturbate: 1,
        "mo-fo": 1,
        mof0: 1,
        mofo: 1,
        mothafuck: 1,
        mothafucka: 1,
        mothafuckas: 1,
        mothafuckaz: 1,
        mothafucked: 1,
        mothafucker: 1,
        mothafuckers: 1,
        mothafuckin: 1,
        mothafucking: 1,
        mothafuckings: 1,
        mothafucks: 1,
        "mother fucker": 1,
        motherfuck: 1,
        motherfucked: 1,
        motherfucker: 1,
        motherfuckers: 1,
        motherfuckin: 1,
        motherfucking: 1,
        motherfuckings: 1,
        motherfuckka: 1,
        motherfucks: 1,
        muff: 1,
        mutha: 1,
        muthafecker: 1,
        muthafuckker: 1,
        muther: 1,
        mutherfucker: 1,
        n1gga: 1,
        n1gger: 1,
        nazi: 1,
        nigg3r: 1,
        nigg4h: 1,
        nigga: 1,
        niggah: 1,
        niggas: 1,
        niggaz: 1,
        nigger: 1,
        niggers: 1,
        nob: 1,
        "nob jokey": 1,
        nobhead: 1,
        nobjocky: 1,
        nobjokey: 1,
        numbnuts: 1,
        nutsack: 1,
        orgasim: 1,
        orgasims: 1,
        orgasm: 1,
        orgasms: 1,
        p0rn: 1,
        pawn: 1,
        pecker: 1,
        penis: 1,
        penisfucker: 1,
        phonesex: 1,
        phuck: 1,
        phuk: 1,
        phuked: 1,
        phuking: 1,
        phukked: 1,
        phukking: 1,
        phuks: 1,
        phuq: 1,
        pigfucker: 1,
        pimpis: 1,
        piss: 1,
        pissed: 1,
        pisser: 1,
        pissers: 1,
        pisses: 1,
        pissflaps: 1,
        pissin: 1,
        pissing: 1,
        pissoff: 1,
        poop: 1,
        porn: 1,
        porno: 1,
        pornography: 1,
        pornos: 1,
        prick: 1,
        pricks: 1,
        pron: 1,
        pube: 1,
        pusse: 1,
        pussi: 1,
        pussies: 1,
        pussy: 1,
        pussys: 1,
        rectum: 1,
        retard: 1,
        rimjaw: 1,
        rimming: 1,
        "s hit": 1,
        "s.o.b.": 1,
        sadist: 1,
        schlong: 1,
        screwing: 1,
        scroat: 1,
        scrote: 1,
        scrotum: 1,
        semen: 1,
        sex: 1,
        "sh!+": 1,
        "sh!t": 1,
        sh1t: 1,
        shag: 1,
        shagger: 1,
        shaggin: 1,
        shagging: 1,
        shemale: 1,
        "shi+": 1,
        shit: 1,
        shitdick: 1,
        shite: 1,
        shited: 1,
        shitey: 1,
        shitfuck: 1,
        shitfull: 1,
        shithead: 1,
        shiting: 1,
        shitings: 1,
        shits: 1,
        shitted: 1,
        shitter: 1,
        shitters: 1,
        shitting: 1,
        shittings: 1,
        shitty: 1,
        skank: 1,
        slut: 1,
        sluts: 1,
        smegma: 1,
        smut: 1,
        snatch: 1,
        "son-of-a-bitch": 1,
        spac: 1,
        spunk: 1,
        s_h_i_t: 1,
        t1tt1e5: 1,
        t1tties: 1,
        teets: 1,
        teez: 1,
        testical: 1,
        testicle: 1,
        tit: 1,
        titfuck: 1,
        tits: 1,
        titt: 1,
        tittie5: 1,
        tittiefucker: 1,
        titties: 1,
        tittyfuck: 1,
        tittywank: 1,
        titwank: 1,
        tosser: 1,
        turd: 1,
        tw4t: 1,
        twat: 1,
        twathead: 1,
        twatty: 1,
        twunt: 1,
        twunter: 1,
        v14gra: 1,
        v1gra: 1,
        vagina: 1,
        viagra: 1,
        vulva: 1,
        w00se: 1,
        wang: 1,
        wank: 1,
        wanker: 1,
        wanky: 1,
        whoar: 1,
        whore: 1,
        willies: 1,
        willy: 1,
        xrated: 1,
        xxx: 1
    }
}, function(t, e) {
    t.exports = ["4r5e", "5h1t", "5hit", "a55", "anal", "anus", "ar5e", "arrse", "arse", "ass", "ass-fucker", "asses", "assfucker", "assfukka", "asshole", "assholes", "asswhole", "a_s_s", "b!tch", "b00bs", "b17ch", "b1tch", "ballbag", "balls", "ballsack", "bastard", "beastial", "beastiality", "bellend", "bestial", "bestiality", "bi+ch", "biatch", "bitch", "bitcher", "bitchers", "bitches", "bitchin", "bitching", "bloody", "blow job", "blowjob", "blowjobs", "boiolas", "bollock", "bollok", "boner", "boob", "boobs", "booobs", "boooobs", "booooobs", "booooooobs", "breasts", "buceta", "bugger", "bum", "bunny fucker", "butt", "butthole", "buttmuch", "buttplug", "c0ck", "c0cksucker", "carpet muncher", "cawk", "chink", "cipa", "cl1t", "clit", "clitoris", "clits", "cnut", "cock", "cock-sucker", "cockface", "cockhead", "cockmunch", "cockmuncher", "cocks", "cocksuck", "cocksucked", "cocksucker", "cocksucking", "cocksucks", "cocksuka", "cocksukka", "cok", "cokmuncher", "coksucka", "coon", "cox", "crap", "cum", "cummer", "cumming", "cums", "cumshot", "cunilingus", "cunillingus", "cunnilingus", "cunt", "cuntlick", "cuntlicker", "cuntlicking", "cunts", "cyalis", "cyberfuc", "cyberfuck", "cyberfucked", "cyberfucker", "cyberfuckers", "cyberfucking", "d1ck", "damn", "dick", "dickhead", "dildo", "dildos", "dink", "dinks", "dirsa", "dlck", "dog-fucker", "doggin", "dogging", "donkeyribber", "doosh", "duche", "dyke", "ejaculate", "ejaculated", "ejaculates", "ejaculating", "ejaculatings", "ejaculation", "ejakulate", "f u c k", "f u c k e r", "f4nny", "fag", "fagging", "faggitt", "faggot", "faggs", "fagot", "fagots", "fags", "fanny", "fannyflaps", "fannyfucker", "fanyy", "fatass", "fcuk", "fcuker", "fcuking", "feck", "fecker", "felching", "fellate", "fellatio", "fingerfuck", "fingerfucked", "fingerfucker", "fingerfuckers", "fingerfucking", "fingerfucks", "fistfuck", "fistfucked", "fistfucker", "fistfuckers", "fistfucking", "fistfuckings", "fistfucks", "flange", "fook", "fooker", "fuck", "fucka", "fucked", "fucker", "fuckers", "fuckhead", "fuckheads", "fuckin", "fucking", "fuckings", "fuckingshitmotherfucker", "fuckme", "fucks", "fuckwhit", "fuckwit", "fudge packer", "fudgepacker", "fuk", "fuker", "fukker", "fukkin", "fuks", "fukwhit", "fukwit", "fux", "fux0r", "f_u_c_k", "gangbang", "gangbanged", "gangbangs", "gaylord", "gaysex", "goatse", "God", "god-dam", "god-damned", "goddamn", "goddamned", "hardcoresex", "hell", "heshe", "hoar", "hoare", "hoer", "homo", "hore", "horniest", "horny", "hotsex", "jack-off", "jackoff", "jap", "jerk-off", "jism", "jiz", "jizm", "jizz", "kawk", "knob", "knobead", "knobed", "knobend", "knobhead", "knobjocky", "knobjokey", "kock", "kondum", "kondums", "kum", "kummer", "kumming", "kums", "kunilingus", "l3i+ch", "l3itch", "labia", "lust", "lusting", "m0f0", "m0fo", "m45terbate", "ma5terb8", "ma5terbate", "masochist", "master-bate", "masterb8", "masterbat*", "masterbat3", "masterbate", "masterbation", "masterbations", "masturbate", "mo-fo", "mof0", "mofo", "mothafuck", "mothafucka", "mothafuckas", "mothafuckaz", "mothafucked", "mothafucker", "mothafuckers", "mothafuckin", "mothafucking", "mothafuckings", "mothafucks", "mother fucker", "motherfuck", "motherfucked", "motherfucker", "motherfuckers", "motherfuckin", "motherfucking", "motherfuckings", "motherfuckka", "motherfucks", "muff", "mutha", "muthafecker", "muthafuckker", "muther", "mutherfucker", "n1gga", "n1gger", "nazi", "nigg3r", "nigg4h", "nigga", "niggah", "niggas", "niggaz", "nigger", "niggers", "nob", "nob jokey", "nobhead", "nobjocky", "nobjokey", "numbnuts", "nutsack", "orgasim", "orgasims", "orgasm", "orgasms", "p0rn", "pawn", "pecker", "penis", "penisfucker", "phonesex", "phuck", "phuk", "phuked", "phuking", "phukked", "phukking", "phuks", "phuq", "pigfucker", "pimpis", "piss", "pissed", "pisser", "pissers", "pisses", "pissflaps", "pissin", "pissing", "pissoff", "poop", "porn", "porno", "pornography", "pornos", "prick", "pricks", "pron", "pube", "pusse", "pussi", "pussies", "pussy", "pussys", "rectum", "retard", "rimjaw", "rimming", "s hit", "s.o.b.", "sadist", "schlong", "screwing", "scroat", "scrote", "scrotum", "semen", "sex", "sh!+", "sh!t", "sh1t", "shag", "shagger", "shaggin", "shagging", "shemale", "shi+", "shit", "shitdick", "shite", "shited", "shitey", "shitfuck", "shitfull", "shithead", "shiting", "shitings", "shits", "shitted", "shitter", "shitters", "shitting", "shittings", "shitty", "skank", "slut", "sluts", "smegma", "smut", "snatch", "son-of-a-bitch", "spac", "spunk", "s_h_i_t", "t1tt1e5", "t1tties", "teets", "teez", "testical", "testicle", "tit", "titfuck", "tits", "titt", "tittie5", "tittiefucker", "titties", "tittyfuck", "tittywank", "titwank", "tosser", "turd", "tw4t", "twat", "twathead", "twatty", "twunt", "twunter", "v14gra", "v1gra", "vagina", "viagra", "vulva", "w00se", "wang", "wank", "wanker", "wanky", "whoar", "whore", "willies", "willy", "xrated", "xxx"]
}, function(t, e) {
    t.exports = /\b(4r5e|5h1t|5hit|a55|anal|anus|ar5e|arrse|arse|ass|ass-fucker|asses|assfucker|assfukka|asshole|assholes|asswhole|a_s_s|b!tch|b00bs|b17ch|b1tch|ballbag|balls|ballsack|bastard|beastial|beastiality|bellend|bestial|bestiality|bi\+ch|biatch|bitch|bitcher|bitchers|bitches|bitchin|bitching|bloody|blow job|blowjob|blowjobs|boiolas|bollock|bollok|boner|boob|boobs|booobs|boooobs|booooobs|booooooobs|breasts|buceta|bugger|bum|bunny fucker|butt|butthole|buttmuch|buttplug|c0ck|c0cksucker|carpet muncher|cawk|chink|cipa|cl1t|clit|clitoris|clits|cnut|cock|cock-sucker|cockface|cockhead|cockmunch|cockmuncher|cocks|cocksuck|cocksucked|cocksucker|cocksucking|cocksucks|cocksuka|cocksukka|cok|cokmuncher|coksucka|coon|cox|crap|cum|cummer|cumming|cums|cumshot|cunilingus|cunillingus|cunnilingus|cunt|cuntlick|cuntlicker|cuntlicking|cunts|cyalis|cyberfuc|cyberfuck|cyberfucked|cyberfucker|cyberfuckers|cyberfucking|d1ck|damn|dick|dickhead|dildo|dildos|dink|dinks|dirsa|dlck|dog-fucker|doggin|dogging|donkeyribber|doosh|duche|dyke|ejaculate|ejaculated|ejaculates|ejaculating|ejaculatings|ejaculation|ejakulate|f u c k|f u c k e r|f4nny|fag|fagging|faggitt|faggot|faggs|fagot|fagots|fags|fanny|fannyflaps|fannyfucker|fanyy|fatass|fcuk|fcuker|fcuking|feck|fecker|felching|fellate|fellatio|fingerfuck|fingerfucked|fingerfucker|fingerfuckers|fingerfucking|fingerfucks|fistfuck|fistfucked|fistfucker|fistfuckers|fistfucking|fistfuckings|fistfucks|flange|fook|fooker|fuck|fucka|fucked|fucker|fuckers|fuckhead|fuckheads|fuckin|fucking|fuckings|fuckingshitmotherfucker|fuckme|fucks|fuckwhit|fuckwit|fudge packer|fudgepacker|fuk|fuker|fukker|fukkin|fuks|fukwhit|fukwit|fux|fux0r|f_u_c_k|gangbang|gangbanged|gangbangs|gaylord|gaysex|goatse|God|god-dam|god-damned|goddamn|goddamned|hardcoresex|hell|heshe|hoar|hoare|hoer|homo|hore|horniest|horny|hotsex|jack-off|jackoff|jap|jerk-off|jism|jiz|jizm|jizz|kawk|knob|knobead|knobed|knobend|knobhead|knobjocky|knobjokey|kock|kondum|kondums|kum|kummer|kumming|kums|kunilingus|l3i\+ch|l3itch|labia|lust|lusting|m0f0|m0fo|m45terbate|ma5terb8|ma5terbate|masochist|master-bate|masterb8|masterbat*|masterbat3|masterbate|masterbation|masterbations|masturbate|mo-fo|mof0|mofo|mothafuck|mothafucka|mothafuckas|mothafuckaz|mothafucked|mothafucker|mothafuckers|mothafuckin|mothafucking|mothafuckings|mothafucks|mother fucker|motherfuck|motherfucked|motherfucker|motherfuckers|motherfuckin|motherfucking|motherfuckings|motherfuckka|motherfucks|muff|mutha|muthafecker|muthafuckker|muther|mutherfucker|n1gga|n1gger|nazi|nigg3r|nigg4h|nigga|niggah|niggas|niggaz|nigger|niggers|nob|nob jokey|nobhead|nobjocky|nobjokey|numbnuts|nutsack|orgasim|orgasims|orgasm|orgasms|p0rn|pawn|pecker|penis|penisfucker|phonesex|phuck|phuk|phuked|phuking|phukked|phukking|phuks|phuq|pigfucker|pimpis|piss|pissed|pisser|pissers|pisses|pissflaps|pissin|pissing|pissoff|poop|porn|porno|pornography|pornos|prick|pricks|pron|pube|pusse|pussi|pussies|pussy|pussys|rectum|retard|rimjaw|rimming|s hit|s.o.b.|sadist|schlong|screwing|scroat|scrote|scrotum|semen|sex|sh!\+|sh!t|sh1t|shag|shagger|shaggin|shagging|shemale|shi\+|shit|shitdick|shite|shited|shitey|shitfuck|shitfull|shithead|shiting|shitings|shits|shitted|shitter|shitters|shitting|shittings|shitty|skank|slut|sluts|smegma|smut|snatch|son-of-a-bitch|spac|spunk|s_h_i_t|t1tt1e5|t1tties|teets|teez|testical|testicle|tit|titfuck|tits|titt|tittie5|tittiefucker|titties|tittyfuck|tittywank|titwank|tosser|turd|tw4t|twat|twathead|twatty|twunt|twunter|v14gra|v1gra|vagina|viagra|vulva|w00se|wang|wank|wanker|wanky|whoar|whore|willies|willy|xrated|xxx)\b/gi
}]);
//# sourceMappingURL=game.DiuuB.js.map